/*
 * Copyright (c) 2019-2021 Xilinx, Inc.
 * Copyright (c) 2022-2023 Advanced Micro Devices, Inc. (AMD)
 *
 * SPDX-License-Identifier: MIT
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
 * of the Software, and to permit persons to whom the Software is furnished to do
 * so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
 * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
 * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
/**************************************************************************\
*//*! \file
** <L5_PRIVATE L5_SOURCE>
** \author gnb/sph
**  \brief Driver Command protocol for the Siena MC firmware
**   \date   2008/04/30
**    \cop  (c) Level 5 Networks Limited.
** </L5_PRIVATE>
*//*
\**************************************************************************/

/*! \cidoxg_firmware_mc_cmd */

/* This file is automatically generated. DO NOT EDIT IT. To make
 * changes, edit the .yml files under doc/mcdi/ and rebuild this file
 * with "make mcdi_headers". */

#ifndef _SIENA_MC_DRIVER_PCOL_PRIVATE_H
#define _SIENA_MC_DRIVER_PCOL_PRIVATE_H


/* PR_METADATA_ITEM_CATEGORY enum: Meta-data item category */
/* enum: A XCLBIN meta-data section */
#define          PR_METADATA_ITEM_CATEGORY_SECTION 0x0
/* enum: The active XCLBIN's UUID (axlf_header::uuid) */
#define          PR_METADATA_ITEM_CATEGORY_UUID 0x1
/* enum: The active XCLBIN's timestamp (axlf_header::m_timeStamp) */
#define          PR_METADATA_ITEM_CATEGORY_TIMESTAMP 0x2
/* enum: The active XCLBIN's signature (the last axlf::m_signature_length bytes
 * of the XCLBIN data)
 */
#define          PR_METADATA_ITEM_CATEGORY_SIGNATURE 0x3

/* PR_METADATA_ITEM_SUBCATEGORY enum: Meta-data item sub-category. For the
 * SECTION category the subcategory matches AXLF section type identifiers (enum
 * axlf_section_kind) and each subcategory contains an array of items as the
 * AXLF container format supports multiple sections of the same type. Other
 * categories (UUID, TIMESTAMP and SIGNATURE) do not currently use
 * subcategories and must be 0 (NONE).
 */
#define          PR_METADATA_ITEM_SUBCATEGORY_NONE 0x0 /* enum */
#define          PR_METADATA_ITEM_SUBCATEGORY_BITSTREAM 0x0 /* enum */
#define          PR_METADATA_ITEM_SUBCATEGORY_CLEARING_BITSTREAM 0x1 /* enum */
#define          PR_METADATA_ITEM_SUBCATEGORY_EMBEDDED_METADATA 0x2 /* enum */
#define          PR_METADATA_ITEM_SUBCATEGORY_FIRMWARE 0x3 /* enum */
#define          PR_METADATA_ITEM_SUBCATEGORY_DEBUG_DATA 0x4 /* enum */
#define          PR_METADATA_ITEM_SUBCATEGORY_SCHED_FIRMWARE 0x5 /* enum */
#define          PR_METADATA_ITEM_SUBCATEGORY_MEM_TOPOLOGY 0x6 /* enum */
#define          PR_METADATA_ITEM_SUBCATEGORY_CONNECTIVITY 0x7 /* enum */
#define          PR_METADATA_ITEM_SUBCATEGORY_IP_LAYOUT 0x8 /* enum */
#define          PR_METADATA_ITEM_SUBCATEGORY_DEBUG_IP_LAYOUT 0x9 /* enum */
#define          PR_METADATA_ITEM_SUBCATEGORY_DESIGN_CHECK_POINT 0xa /* enum */
#define          PR_METADATA_ITEM_SUBCATEGORY_CLOCK_FREQ_TOPOLOGY 0xb /* enum */
#define          PR_METADATA_ITEM_SUBCATEGORY_MCS 0xc /* enum */
#define          PR_METADATA_ITEM_SUBCATEGORY_BMC 0xd /* enum */
#define          PR_METADATA_ITEM_SUBCATEGORY_BUILD_METADATA 0xe /* enum */
#define          PR_METADATA_ITEM_SUBCATEGORY_KEYVALUE_METADATA 0xf /* enum */
#define          PR_METADATA_ITEM_SUBCATEGORY_USER_METADATA 0x10 /* enum */
#define          PR_METADATA_ITEM_SUBCATEGORY_DNA_CERTIFICATE 0x11 /* enum */
#define          PR_METADATA_ITEM_SUBCATEGORY_PDI 0x12 /* enum */
#define          PR_METADATA_ITEM_SUBCATEGORY_BITSTREAM_PARTIAL_PDI 0x13 /* enum */
#define          PR_METADATA_ITEM_SUBCATEGORY_PARTITION_METADATA 0x14 /* enum */
#define          PR_METADATA_ITEM_SUBCATEGORY_EMULATION_DATA 0x15 /* enum */
#define          PR_METADATA_ITEM_SUBCATEGORY_SYSTEM_METADATA 0x16 /* enum */
#define          PR_METADATA_ITEM_SUBCATEGORY_SOFT_KERNEL 0x17 /* enum */
#define          PR_METADATA_ITEM_SUBCATEGORY_ASK_FLASH 0x18 /* enum */
#define          PR_METADATA_ITEM_SUBCATEGORY_AIE_METADATA 0x19 /* enum */

/* DICPU_TEST_MAGIC enum: Packets with a particular Ethertype are treated as
 * "magic packets" which trigger test code when the MAGIC_PKT_EN bit is set in
 * the TEST_CONTROL word. Magic packets are guaranteed to be filterable only by
 * destination MAC filters (without VLANs) as the tests that they trigger may
 * destroy other state normally used by traffic filtering. The test code to run
 * is selected by the source MAC address field; see DICPU_TEST_MAGIC_SRCMAC for
 * details.
 */
/* enum: Ethertype for magic DICPU test packets */
#define          DICPU_TEST_MAGIC_ETHERTYPE 0xc0de

/* DICPU_TEST_ID enum: DICPU test IDs in the second source MAC byte of magic
 * test packets.
 */
/* enum: Basic test of filling all registers with predictable values. Parameter
 * 1 = base, parameter 2 = step. The 48 registers in the dump ($0-$15, and the
 * 64 bytes of PSF as 32 16-bit values) are expected to be set so that register
 * N contains the value base + (N * step).
 */
#define          DICPU_TEST_ID_ALL_REGS_BASIC 0x1
/* enum: Like ALL_REGS_BASIC, but only sets correct values for some registers
 * in the instructions just before the mc_dump, to look for pipeline problems.
 */
#define          DICPU_TEST_ID_ALL_REGS_CHANGES_BEFORE 0x2
/* enum: Like ALL_REGS_BASIC, but modifies some registers in the instructions
 * just after the mc_dump, to look for pipeline problems.
 */
#define          DICPU_TEST_ID_ALL_REGS_CHANGES_AFTER 0x3
/* enum: Performs two dumps of all registers with the same fill pattern as
 * ALL_REGS_BASIC except for $0, modifying registers between the two in a way
 * that should detect instructions being skipped. $0 contains 1 for the first
 * dump and 2 for the second, so that the caller can confirm that they really
 * are two different dumps.
 */
#define          DICPU_TEST_ID_MOST_REGS_TWICE_CHANGES_BETWEEN 0x4
/* enum: Dumps all registers with the same fill pattern as ALL_REGS_BASIC
 * except for $0, with the mc_dump in the first instruction immediately after a
 * branch at the end of a short loop. $0 contains 0 (it is used as the loop
 * counter).
 */
#define          DICPU_TEST_ID_MOST_REGS_IN_BRANCH_SHADOW_1 0x5
/* enum: Dumps all registers with the same fill pattern as ALL_REGS_BASIC
 * except for $0, with the mc_dump in the second instruction immediately after
 * a branch at the end of a short loop. $0 contains 0 (it is used as the loop
 * counter).
 */
#define          DICPU_TEST_ID_MOST_REGS_IN_BRANCH_SHADOW_2 0x6
/* enum: Dumps all registers with the same fill pattern as ALL_REGS_BASIC
 * except for $0, with the mc_dump in the third instruction immediately after a
 * branch at the end of a short loop. $0 contains 0 (it is used as the loop
 * counter).
 */
#define          DICPU_TEST_ID_MOST_REGS_IN_BRANCH_SHADOW_3 0x7

/* SPHINX_QDMA_INTERRUPT_RING_SIZE enum: This should be kept up to date with
 * the `interrupt_ring_size` enum in doc/riverhead/ipc/sphinx_qdma.proto.
 */
#define          SPHINX_QDMA_INTERRUPT_RING_SIZE_4KB 0x0 /* enum */
#define          SPHINX_QDMA_INTERRUPT_RING_SIZE_8KB 0x1 /* enum */
#define          SPHINX_QDMA_INTERRUPT_RING_SIZE_12KB 0x2 /* enum */
#define          SPHINX_QDMA_INTERRUPT_RING_SIZE_16KB 0x3 /* enum */
#define          SPHINX_QDMA_INTERRUPT_RING_SIZE_20KB 0x4 /* enum */
#define          SPHINX_QDMA_INTERRUPT_RING_SIZE_24KB 0x5 /* enum */
#define          SPHINX_QDMA_INTERRUPT_RING_SIZE_28KB 0x6 /* enum */
#define          SPHINX_QDMA_INTERRUPT_RING_SIZE_32KB 0x7 /* enum */

/* SPHINX_QDMA_WRITEBACK_QUEUE_TRIGGER_MODE enum: This should be kept up to
 * date with the `writeback_queue_trigger_mode` enum in
 * doc/riverhead/ipc/sphinx_qdma.proto.
 */
#define          SPHINX_QDMA_WRITEBACK_QUEUE_TRIGGER_MODE_DISABLE 0x0 /* enum */
#define          SPHINX_QDMA_WRITEBACK_QUEUE_TRIGGER_MODE_ANY 0x1 /* enum */
#define          SPHINX_QDMA_WRITEBACK_QUEUE_TRIGGER_MODE_TIMER 0x2 /* enum */
#define          SPHINX_QDMA_WRITEBACK_QUEUE_TRIGGER_MODE_COUNTER 0x3 /* enum */
#define          SPHINX_QDMA_WRITEBACK_QUEUE_TRIGGER_MODE_COMBO 0x4 /* enum */
#define          SPHINX_QDMA_WRITEBACK_QUEUE_TRIGGER_MODE_USER 0x5 /* enum */

/* SPHINX_CAGE_CONTROL_GPIO enum: This should be kept up to date with the
 * `gpio` enum in doc/riverhead/ipc/sphinx_cage_control.proto.
 */
#define          SPHINX_CAGE_CONTROL_GPIO_SFP_RS0 0x0 /* enum */
#define          SPHINX_CAGE_CONTROL_GPIO_QSFP_MODSEL 0x0 /* enum */
#define          SPHINX_CAGE_CONTROL_GPIO_SFP_RS1 0x1 /* enum */
#define          SPHINX_CAGE_CONTROL_GPIO_QSFP_RESET 0x1 /* enum */
#define          SPHINX_CAGE_CONTROL_GPIO_SFP_TX_DISABLE 0x2 /* enum */
#define          SPHINX_CAGE_CONTROL_GPIO_QSFP_LPMODE 0x2 /* enum */
#define          SPHINX_CAGE_CONTROL_GPIO_SFP_MOD_ABS 0x3 /* enum */
#define          SPHINX_CAGE_CONTROL_GPIO_QSFP_MODPRS 0x3 /* enum */
#define          SPHINX_CAGE_CONTROL_GPIO_SFP_RX_LOS 0x4 /* enum */
#define          SPHINX_CAGE_CONTROL_GPIO_QSFP_INT 0x4 /* enum */
#define          SPHINX_CAGE_CONTROL_GPIO_SFP_TX_FAULT 0x5 /* enum */
#define          SPHINX_CAGE_CONTROL_GPIO_OVERCURRENT 0x6 /* enum */
#define          SPHINX_CAGE_CONTROL_GPIO_POWER 0x7 /* enum */

/* SPHINX_SENSOR_STATE enum: This should be kept up to date with the `state`
 * enum in doc/riverhead/ipc/sphinx_sensor.proto.
 */
#define          SPHINX_SENSOR_STATE_OK 0x0 /* enum */
#define          SPHINX_SENSOR_STATE_WARNING 0x1 /* enum */
#define          SPHINX_SENSOR_STATE_CRITICAL 0x2 /* enum */
#define          SPHINX_SENSOR_STATE_FATAL 0x3 /* enum */
#define          SPHINX_SENSOR_STATE_BROKEN 0x4 /* enum */
#define          SPHINX_SENSOR_STATE_NO_READING 0x5 /* enum */
#define          SPHINX_SENSOR_STATE_INIT_FAILED 0x6 /* enum */

/* SPHINX_SENSOR_TYPE enum: This should be kept up to date with the `type` enum
 * in doc/riverhead/ipc/sphinx_sensor.proto.
 */
#define          SPHINX_SENSOR_TYPE_VOLTAGE 0x0 /* enum */
#define          SPHINX_SENSOR_TYPE_CURRENT 0x1 /* enum */
#define          SPHINX_SENSOR_TYPE_POWER 0x2 /* enum */
#define          SPHINX_SENSOR_TYPE_TEMPERATURE 0x3 /* enum */
#define          SPHINX_SENSOR_TYPE_FAN 0x4 /* enum */

/* TLMSS_TELEMETER_TYPE enum: Telemeter block identifier. */
/* enum: Invalid telemeter block. */
#define          TLMSS_TELEMETER_TYPE_INVALID 0x0
/* enum: Telemeters for Keystone-B PCIe block 0. */
#define          TLMSS_TELEMETER_TYPE_PCIE0 0x1
/* enum: Telemeters for Keystone-B PCIe block 1. */
#define          TLMSS_TELEMETER_TYPE_PCIE1 0x2
/* enum: Telemeters for Keystone-B PCIe block 2. */
#define          TLMSS_TELEMETER_TYPE_PCIE2 0x3
/* enum: Telemeters for Keystone-B PCIe block 3. */
#define          TLMSS_TELEMETER_TYPE_PCIE3 0x4
/* enum: Telemeters for the Keystone-B CDX block. */
#define          TLMSS_TELEMETER_TYPE_CDX 0x5
/* enum: Telemeters for the Keystone-B DPU Host block. */
#define          TLMSS_TELEMETER_TYPE_DPU_HOST 0x6
/* enum: Telemeters for the Keystone-B DPU Net block. */
#define          TLMSS_TELEMETER_TYPE_DPU_NET 0x7
/* enum: Telemeters for the Keystone-B DPU Buffer Sub-System block. */
#define          TLMSS_TELEMETER_TYPE_DPU_BUFSS 0x8


/***********************************/
/* MC_CMD_I2C_OP
 * Perform an I2C operation. The available operations map onto the I2C public
 * API
 */
#define MC_CMD_I2C_OP 0xe
#define MC_CMD_I2C_OP_MSGSET 0xe
#undef MC_CMD_0xe_PRIVILEGE_CTG

#define MC_CMD_0xe_PRIVILEGE_CTG SRIOV_CTG_INSECURE

/* MC_CMD_I2C_OP_IN msgrequest */
#define    MC_CMD_I2C_OP_IN_LENMIN 8
#define    MC_CMD_I2C_OP_IN_LENMAX 252
#define    MC_CMD_I2C_OP_IN_LENMAX_MCDI2 1020
#define    MC_CMD_I2C_OP_IN_LEN(num) (4+4*(num))
#define    MC_CMD_I2C_OP_IN_ARGS_NUM(len) (((len)-4)/4)
/* Operation code */
#define       MC_CMD_I2C_OP_IN_OP_OFST 0
#define       MC_CMD_I2C_OP_IN_OP_LEN 4
/* enum: Read one or more registers */
#define          MC_CMD_I2C_READ_REGS 0x1
/* enum: Write one or more registers */
#define          MC_CMD_I2C_WRITE_REGS 0x2
/* enum: Select the I2C */
#define          MC_CMD_I2C_SET_BUS 0x3
/* enum: Get the selected I2C bus number */
#define          MC_CMD_I2C_GET_BUS 0x4
/* enum: Probe a range of addresses */
#define          MC_CMD_I2C_PROBE_BUS 0x5
/* enum: Read one or more registers */
#define          MC_CMD_I2C_READ_REGS_ADDR16 0x6
/* enum: Write one or more registers */
#define          MC_CMD_I2C_WRITE_REGS_ADDR16 0x7
/* enum: Raw read from an I2C slave */
#define          MC_CMD_I2C_RAW_READ 0x8
/* enum: Raw write to an I2C slave */
#define          MC_CMD_I2C_RAW_WRITE 0x9
/* enum: Raw write/read to an I2C slave */
#define          MC_CMD_I2C_RAW_TRANSACTION 0xa
/* operation-specific arguments */
#define       MC_CMD_I2C_OP_IN_ARGS_OFST 4
#define       MC_CMD_I2C_OP_IN_ARGS_LEN 4
#define       MC_CMD_I2C_OP_IN_ARGS_MINNUM 1
#define       MC_CMD_I2C_OP_IN_ARGS_MAXNUM 62
#define       MC_CMD_I2C_OP_IN_ARGS_MAXNUM_MCDI2 254

/* MC_CMD_I2C_READ_REGS_IN msgrequest */
#define    MC_CMD_I2C_READ_REGS_IN_LEN 16
/* Operation code */
#define       MC_CMD_I2C_READ_REGS_IN_OP_OFST 0
#define       MC_CMD_I2C_READ_REGS_IN_OP_LEN 4
/* I2C Bus address */
#define       MC_CMD_I2C_READ_REGS_IN_ADDR_OFST 4
#define       MC_CMD_I2C_READ_REGS_IN_ADDR_LEN 4
/* Register offset */
#define       MC_CMD_I2C_READ_REGS_IN_OFFSET_OFST 8
#define       MC_CMD_I2C_READ_REGS_IN_OFFSET_LEN 4
/* Number of bytes to read */
#define       MC_CMD_I2C_READ_REGS_IN_NUM_OFST 12
#define       MC_CMD_I2C_READ_REGS_IN_NUM_LEN 4

/* MC_CMD_I2C_WRITE_REGS_IN msgrequest */
#define    MC_CMD_I2C_WRITE_REGS_IN_LENMIN 13
#define    MC_CMD_I2C_WRITE_REGS_IN_LENMAX 252
#define    MC_CMD_I2C_WRITE_REGS_IN_LENMAX_MCDI2 1020
#define    MC_CMD_I2C_WRITE_REGS_IN_LEN(num) (12+1*(num))
#define    MC_CMD_I2C_WRITE_REGS_IN_DATA_NUM(len) (((len)-12)/1)
/* Operation code */
#define       MC_CMD_I2C_WRITE_REGS_IN_OP_OFST 0
#define       MC_CMD_I2C_WRITE_REGS_IN_OP_LEN 4
/* I2C Bus address */
#define       MC_CMD_I2C_WRITE_REGS_IN_ADDR_OFST 4
#define       MC_CMD_I2C_WRITE_REGS_IN_ADDR_LEN 4
/* Register offset */
#define       MC_CMD_I2C_WRITE_REGS_IN_OFFSET_OFST 8
#define       MC_CMD_I2C_WRITE_REGS_IN_OFFSET_LEN 4
/* Bytes to write */
#define       MC_CMD_I2C_WRITE_REGS_IN_DATA_OFST 12
#define       MC_CMD_I2C_WRITE_REGS_IN_DATA_LEN 1
#define       MC_CMD_I2C_WRITE_REGS_IN_DATA_MINNUM 1
#define       MC_CMD_I2C_WRITE_REGS_IN_DATA_MAXNUM 240
#define       MC_CMD_I2C_WRITE_REGS_IN_DATA_MAXNUM_MCDI2 1008

/* MC_CMD_I2C_SET_BUS_IN msgrequest */
#define    MC_CMD_I2C_SET_BUS_IN_LEN 8
/* Operation code */
#define       MC_CMD_I2C_SET_BUS_IN_OP_OFST 0
#define       MC_CMD_I2C_SET_BUS_IN_OP_LEN 4
/* I2C Bus to select */
#define       MC_CMD_I2C_SET_BUS_IN_BUS_OFST 4
#define       MC_CMD_I2C_SET_BUS_IN_BUS_LEN 4

/* MC_CMD_I2C_GET_BUS_IN msgrequest */
#define    MC_CMD_I2C_GET_BUS_IN_LEN 4
/* Operation code */
#define       MC_CMD_I2C_GET_BUS_IN_OP_OFST 0
#define       MC_CMD_I2C_GET_BUS_IN_OP_LEN 4

/* MC_CMD_I2C_PROBE_BUS_IN msgrequest */
#define    MC_CMD_I2C_PROBE_BUS_IN_LEN 12
/* Operation code */
#define       MC_CMD_I2C_PROBE_BUS_IN_OP_OFST 0
#define       MC_CMD_I2C_PROBE_BUS_IN_OP_LEN 4
/* Start address. Probing will proceed to MIN(ADDR + 31, 127) */
#define       MC_CMD_I2C_PROBE_BUS_IN_ADDR_OFST 4
#define       MC_CMD_I2C_PROBE_BUS_IN_ADDR_LEN 4
/* The number of I2C addresses to probe, starting with ADDR. */
#define       MC_CMD_I2C_PROBE_BUS_IN_NUM_ADDRS_OFST 8
#define       MC_CMD_I2C_PROBE_BUS_IN_NUM_ADDRS_LEN 4

/* MC_CMD_I2C_RAW_READ_IN msgrequest */
#define    MC_CMD_I2C_RAW_READ_IN_LEN 12
/* Operation code */
#define       MC_CMD_I2C_RAW_READ_IN_OP_OFST 0
#define       MC_CMD_I2C_RAW_READ_IN_OP_LEN 4
/* I2C Bus address */
#define       MC_CMD_I2C_RAW_READ_IN_ADDR_OFST 4
#define       MC_CMD_I2C_RAW_READ_IN_ADDR_LEN 4
/* Number of bytes to read */
#define       MC_CMD_I2C_RAW_READ_IN_NUM_OFST 8
#define       MC_CMD_I2C_RAW_READ_IN_NUM_LEN 4

/* MC_CMD_I2C_RAW_WRITE_IN msgrequest */
#define    MC_CMD_I2C_RAW_WRITE_IN_LENMIN 13
#define    MC_CMD_I2C_RAW_WRITE_IN_LENMAX 252
#define    MC_CMD_I2C_RAW_WRITE_IN_LENMAX_MCDI2 1020
#define    MC_CMD_I2C_RAW_WRITE_IN_LEN(num) (12+1*(num))
#define    MC_CMD_I2C_RAW_WRITE_IN_DATA_NUM(len) (((len)-12)/1)
/* Operation code */
#define       MC_CMD_I2C_RAW_WRITE_IN_OP_OFST 0
#define       MC_CMD_I2C_RAW_WRITE_IN_OP_LEN 4
/* I2C Bus address */
#define       MC_CMD_I2C_RAW_WRITE_IN_ADDR_OFST 4
#define       MC_CMD_I2C_RAW_WRITE_IN_ADDR_LEN 4
/* Number of bytes to write */
#define       MC_CMD_I2C_RAW_WRITE_IN_NUM_OFST 8
#define       MC_CMD_I2C_RAW_WRITE_IN_NUM_LEN 4
/* Bytes to write */
#define       MC_CMD_I2C_RAW_WRITE_IN_DATA_OFST 12
#define       MC_CMD_I2C_RAW_WRITE_IN_DATA_LEN 1
#define       MC_CMD_I2C_RAW_WRITE_IN_DATA_MINNUM 1
#define       MC_CMD_I2C_RAW_WRITE_IN_DATA_MAXNUM 240
#define       MC_CMD_I2C_RAW_WRITE_IN_DATA_MAXNUM_MCDI2 1008

/* MC_CMD_I2C_RAW_TRANSACTION_IN msgrequest */
#define    MC_CMD_I2C_RAW_TRANSACTION_IN_LENMIN 17
#define    MC_CMD_I2C_RAW_TRANSACTION_IN_LENMAX 252
#define    MC_CMD_I2C_RAW_TRANSACTION_IN_LENMAX_MCDI2 1020
#define    MC_CMD_I2C_RAW_TRANSACTION_IN_LEN(num) (16+1*(num))
#define    MC_CMD_I2C_RAW_TRANSACTION_IN_DATA_NUM(len) (((len)-16)/1)
/* Operation code */
#define       MC_CMD_I2C_RAW_TRANSACTION_IN_OP_OFST 0
#define       MC_CMD_I2C_RAW_TRANSACTION_IN_OP_LEN 4
/* I2C Bus address */
#define       MC_CMD_I2C_RAW_TRANSACTION_IN_ADDR_OFST 4
#define       MC_CMD_I2C_RAW_TRANSACTION_IN_ADDR_LEN 4
/* Number of bytes to write */
#define       MC_CMD_I2C_RAW_TRANSACTION_IN_NUM_WRITE_BYTES_OFST 8
#define       MC_CMD_I2C_RAW_TRANSACTION_IN_NUM_WRITE_BYTES_LEN 4
/* Number of bytes to read */
#define       MC_CMD_I2C_RAW_TRANSACTION_IN_NUM_READ_BYTES_OFST 12
#define       MC_CMD_I2C_RAW_TRANSACTION_IN_NUM_READ_BYTES_LEN 4
/* Bytes to write */
#define       MC_CMD_I2C_RAW_TRANSACTION_IN_DATA_OFST 16
#define       MC_CMD_I2C_RAW_TRANSACTION_IN_DATA_LEN 1
#define       MC_CMD_I2C_RAW_TRANSACTION_IN_DATA_MINNUM 1
#define       MC_CMD_I2C_RAW_TRANSACTION_IN_DATA_MAXNUM 236
#define       MC_CMD_I2C_RAW_TRANSACTION_IN_DATA_MAXNUM_MCDI2 1004

/* MC_CMD_I2C_OP_OUT msgresponse */
#define    MC_CMD_I2C_OP_OUT_LENMIN 0
#define    MC_CMD_I2C_OP_OUT_LENMAX 252
#define    MC_CMD_I2C_OP_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_I2C_OP_OUT_LEN(num) (0+4*(num))
#define    MC_CMD_I2C_OP_OUT_RESULT_NUM(len) (((len)-0)/4)
/* generic response */
#define       MC_CMD_I2C_OP_OUT_RESULT_OFST 0
#define       MC_CMD_I2C_OP_OUT_RESULT_LEN 4
#define       MC_CMD_I2C_OP_OUT_RESULT_MINNUM 0
#define       MC_CMD_I2C_OP_OUT_RESULT_MAXNUM 63
#define       MC_CMD_I2C_OP_OUT_RESULT_MAXNUM_MCDI2 255

/* MC_CMD_I2C_READ_REGS_OUT msgresponse */
#define    MC_CMD_I2C_READ_REGS_OUT_LENMIN 1
#define    MC_CMD_I2C_READ_REGS_OUT_LENMAX 252
#define    MC_CMD_I2C_READ_REGS_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_I2C_READ_REGS_OUT_LEN(num) (0+1*(num))
#define    MC_CMD_I2C_READ_REGS_OUT_DATA_NUM(len) (((len)-0)/1)
/* returned data */
#define       MC_CMD_I2C_READ_REGS_OUT_DATA_OFST 0
#define       MC_CMD_I2C_READ_REGS_OUT_DATA_LEN 1
#define       MC_CMD_I2C_READ_REGS_OUT_DATA_MINNUM 1
#define       MC_CMD_I2C_READ_REGS_OUT_DATA_MAXNUM 252
#define       MC_CMD_I2C_READ_REGS_OUT_DATA_MAXNUM_MCDI2 1020

/* MC_CMD_I2C_WRITE_REGS_OUT msgresponse */
#define    MC_CMD_I2C_WRITE_REGS_OUT_LEN 0

/* MC_CMD_I2C_SET_BUS_OUT msgresponse */
#define    MC_CMD_I2C_SET_BUS_OUT_LEN 0

/* MC_CMD_I2C_GET_BUS_OUT msgresponse */
#define    MC_CMD_I2C_GET_BUS_OUT_LEN 4
/* the currently selected bus */
#define       MC_CMD_I2C_GET_BUS_OUT_CURRENT_BUS_OFST 0
#define       MC_CMD_I2C_GET_BUS_OUT_CURRENT_BUS_LEN 4

/* MC_CMD_I2C_PROBE_BUS_OUT msgresponse */
#define    MC_CMD_I2C_PROBE_BUS_OUT_LEN 4
/* bitmap of addresses in the specified ranged that got a response */
#define       MC_CMD_I2C_PROBE_BUS_OUT_DEVICES_OFST 0
#define       MC_CMD_I2C_PROBE_BUS_OUT_DEVICES_LEN 4

/* MC_CMD_I2C_RAW_READ_OUT msgresponse */
#define    MC_CMD_I2C_RAW_READ_OUT_LENMIN 1
#define    MC_CMD_I2C_RAW_READ_OUT_LENMAX 252
#define    MC_CMD_I2C_RAW_READ_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_I2C_RAW_READ_OUT_LEN(num) (0+1*(num))
#define    MC_CMD_I2C_RAW_READ_OUT_DATA_NUM(len) (((len)-0)/1)
/* returned data */
#define       MC_CMD_I2C_RAW_READ_OUT_DATA_OFST 0
#define       MC_CMD_I2C_RAW_READ_OUT_DATA_LEN 1
#define       MC_CMD_I2C_RAW_READ_OUT_DATA_MINNUM 1
#define       MC_CMD_I2C_RAW_READ_OUT_DATA_MAXNUM 252
#define       MC_CMD_I2C_RAW_READ_OUT_DATA_MAXNUM_MCDI2 1020

/* MC_CMD_I2C_RAW_WRITE_OUT msgresponse */
#define    MC_CMD_I2C_RAW_WRITE_OUT_LEN 0

/* MC_CMD_I2C_RAW_TRANSACTION_OUT msgresponse */
#define    MC_CMD_I2C_RAW_TRANSACTION_OUT_LENMIN 1
#define    MC_CMD_I2C_RAW_TRANSACTION_OUT_LENMAX 252
#define    MC_CMD_I2C_RAW_TRANSACTION_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_I2C_RAW_TRANSACTION_OUT_LEN(num) (0+1*(num))
#define    MC_CMD_I2C_RAW_TRANSACTION_OUT_DATA_NUM(len) (((len)-0)/1)
/* returned data */
#define       MC_CMD_I2C_RAW_TRANSACTION_OUT_DATA_OFST 0
#define       MC_CMD_I2C_RAW_TRANSACTION_OUT_DATA_LEN 1
#define       MC_CMD_I2C_RAW_TRANSACTION_OUT_DATA_MINNUM 1
#define       MC_CMD_I2C_RAW_TRANSACTION_OUT_DATA_MAXNUM 252
#define       MC_CMD_I2C_RAW_TRANSACTION_OUT_DATA_MAXNUM_MCDI2 1020


/***********************************/
/* MC_CMD_DBI_READ
 * Read DBI register(s); deprecated; see see MC_CMD_DBI_READX
 */
#define MC_CMD_DBI_READ 0x13
#define MC_CMD_DBI_READ_MSGSET 0x13
#undef MC_CMD_0x13_PRIVILEGE_CTG

#define MC_CMD_0x13_PRIVILEGE_CTG SRIOV_CTG_INSECURE

/* MC_CMD_DBI_READ_IN msgrequest */
#define    MC_CMD_DBI_READ_IN_LENMIN 4
#define    MC_CMD_DBI_READ_IN_LENMAX 252
#define    MC_CMD_DBI_READ_IN_LENMAX_MCDI2 1020
#define    MC_CMD_DBI_READ_IN_LEN(num) (0+4*(num))
#define    MC_CMD_DBI_READ_IN_ADDRESS_NUM(len) (((len)-0)/4)
#define       MC_CMD_DBI_READ_IN_ADDRESS_OFST 0
#define       MC_CMD_DBI_READ_IN_ADDRESS_LEN 4
#define       MC_CMD_DBI_READ_IN_ADDRESS_MINNUM 1
#define       MC_CMD_DBI_READ_IN_ADDRESS_MAXNUM 63
#define       MC_CMD_DBI_READ_IN_ADDRESS_MAXNUM_MCDI2 255

/* MC_CMD_DBI_READ_OUT msgresponse */
#define    MC_CMD_DBI_READ_OUT_LENMIN 4
#define    MC_CMD_DBI_READ_OUT_LENMAX 252
#define    MC_CMD_DBI_READ_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_DBI_READ_OUT_LEN(num) (0+4*(num))
#define    MC_CMD_DBI_READ_OUT_VALUE_NUM(len) (((len)-0)/4)
#define       MC_CMD_DBI_READ_OUT_VALUE_OFST 0
#define       MC_CMD_DBI_READ_OUT_VALUE_LEN 4
#define       MC_CMD_DBI_READ_OUT_VALUE_MINNUM 1
#define       MC_CMD_DBI_READ_OUT_VALUE_MAXNUM 63
#define       MC_CMD_DBI_READ_OUT_VALUE_MAXNUM_MCDI2 255


/***********************************/
/* MC_CMD_NCSI_PROD
 * Trigger an NC-SI event (and possibly an AEN in response)
 */
#define MC_CMD_NCSI_PROD 0x1d
#define MC_CMD_NCSI_PROD_MSGSET 0x1d
#undef MC_CMD_0x1d_PRIVILEGE_CTG

#define MC_CMD_0x1d_PRIVILEGE_CTG SRIOV_CTG_INSECURE

/* MC_CMD_NCSI_PROD_IN msgrequest */
#define    MC_CMD_NCSI_PROD_IN_LEN 4
/* events */
#define       MC_CMD_NCSI_PROD_IN_EVENTS_OFST 0
#define       MC_CMD_NCSI_PROD_IN_EVENTS_LEN 4
/* enum property: bitshift */
/* enum: Link change. */
#define          MC_CMD_NCSI_PROD_LINKCHANGE 0x0
/* enum: Reset. */
#define          MC_CMD_NCSI_PROD_RESET 0x1
/* enum: Driver Attach. */
#define          MC_CMD_NCSI_PROD_DRVATTACH 0x2
/* enum: Send a series of packets to the RMII interface and expect them to be
 * looped back
 */
#define          MC_CMD_NCSI_PROD_RMII_LOOPBACK 0x3
#define        MC_CMD_NCSI_PROD_IN_LINKCHANGE_OFST 0
#define        MC_CMD_NCSI_PROD_IN_LINKCHANGE_LBN 0
#define        MC_CMD_NCSI_PROD_IN_LINKCHANGE_WIDTH 1
#define        MC_CMD_NCSI_PROD_IN_RESET_OFST 0
#define        MC_CMD_NCSI_PROD_IN_RESET_LBN 1
#define        MC_CMD_NCSI_PROD_IN_RESET_WIDTH 1
#define        MC_CMD_NCSI_PROD_IN_DRVATTACH_OFST 0
#define        MC_CMD_NCSI_PROD_IN_DRVATTACH_LBN 2
#define        MC_CMD_NCSI_PROD_IN_DRVATTACH_WIDTH 1
#define        MC_CMD_NCSI_PROD_IN_RMII_LOOPBACK_OFST 0
#define        MC_CMD_NCSI_PROD_IN_RMII_LOOPBACK_LBN 3
#define        MC_CMD_NCSI_PROD_IN_RMII_LOOPBACK_WIDTH 1

/* MC_CMD_NCSI_PROD_OUT msgresponse */
#define    MC_CMD_NCSI_PROD_OUT_LEN 0


/***********************************/
/* MC_CMD_DEVEL
 * Reserved for development.
 */
#define MC_CMD_DEVEL 0x1e
#define MC_CMD_DEVEL_MSGSET 0x1e
#undef MC_CMD_0x1e_PRIVILEGE_CTG

#define MC_CMD_0x1e_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_DEVEL_IN msgrequest */
#define    MC_CMD_DEVEL_IN_LEN 16
#define       MC_CMD_DEVEL_IN_ARG0_OFST 0
#define       MC_CMD_DEVEL_IN_ARG0_LEN 4
#define       MC_CMD_DEVEL_IN_ARG1_OFST 4
#define       MC_CMD_DEVEL_IN_ARG1_LEN 4
#define       MC_CMD_DEVEL_IN_ARG2_OFST 8
#define       MC_CMD_DEVEL_IN_ARG2_LEN 4
#define       MC_CMD_DEVEL_IN_ARG3_OFST 12
#define       MC_CMD_DEVEL_IN_ARG3_LEN 4

/* MC_CMD_DEVEL_OUT msgresponse */
#define    MC_CMD_DEVEL_OUT_LEN 16
#define       MC_CMD_DEVEL_OUT_RET0_OFST 0
#define       MC_CMD_DEVEL_OUT_RET0_LEN 4
#define       MC_CMD_DEVEL_OUT_RET1_OFST 4
#define       MC_CMD_DEVEL_OUT_RET1_LEN 4
#define       MC_CMD_DEVEL_OUT_RET2_OFST 8
#define       MC_CMD_DEVEL_OUT_RET2_LEN 4
#define       MC_CMD_DEVEL_OUT_RET3_OFST 12
#define       MC_CMD_DEVEL_OUT_RET3_LEN 4


/***********************************/
/* MC_CMD_TEST_HACK
 * Change bits of network port state for test purposes in ways that would never
 * be useful in normal operation and so need a special command to change.
 */
#define MC_CMD_TEST_HACK 0x2f
#define MC_CMD_TEST_HACK_MSGSET 0x2f

/* MC_CMD_TEST_HACK_IN msgrequest */
#define    MC_CMD_TEST_HACK_IN_LEN 8
#define       MC_CMD_TEST_HACK_IN_TXPAD_OFST 0
#define       MC_CMD_TEST_HACK_IN_TXPAD_LEN 4
/* enum: Let the MC manage things */
#define          MC_CMD_TEST_HACK_IN_TXPAD_AUTO 0x0
/* enum: Force on */
#define          MC_CMD_TEST_HACK_IN_TXPAD_ON 0x1
/* enum: Force off */
#define          MC_CMD_TEST_HACK_IN_TXPAD_OFF 0x2
/* Takes a value in bits */
#define       MC_CMD_TEST_HACK_IN_IPG_OFST 4
#define       MC_CMD_TEST_HACK_IN_IPG_LEN 4
/* enum: The MC picks the value */
#define          MC_CMD_TEST_HACK_IN_IPG_AUTO 0x0

/* MC_CMD_TEST_HACK_OUT msgresponse */
#define    MC_CMD_TEST_HACK_OUT_LEN 0


/***********************************/
/* MC_CMD_DEBUG_LOG
 * Null request/response command (debug). - sequence number is always zero -
 * only supported on the UART interface (the same set of bytes is delivered as
 * an event over PCI)
 */
#define MC_CMD_DEBUG_LOG 0x40
#define MC_CMD_DEBUG_LOG_MSGSET 0x40

/* MC_CMD_DEBUG_LOG_IN msgrequest */
#define    MC_CMD_DEBUG_LOG_IN_LEN 0

/* MC_CMD_DEBUG_LOG_OUT msgresponse */
#define    MC_CMD_DEBUG_LOG_OUT_LEN 0


/***********************************/
/* MC_CMD_PIC
 * Test communications with the PIC microcontroller
 */
#define MC_CMD_PIC 0x53
#define MC_CMD_PIC_MSGSET 0x53

/* MC_CMD_PIC_IN msgrequest */
#define    MC_CMD_PIC_IN_LEN 4
/* Operation code */
#define       MC_CMD_PIC_IN_OP_OFST 0
#define       MC_CMD_PIC_IN_OP_LEN 4
/* enum: Return the number of PIC devices on NIC */
#define          MC_CMD_PIC_GET_NUM_DEVICES 0x1
/* enum: Read the PIC type and device ID */
#define          MC_CMD_PIC_GET_DEVICE 0x2
/* enum: Read the PIC configuration space */
#define          MC_CMD_PIC_READ_CONFIG 0x3
/* enum: Read the PIC program memory */
#define          MC_CMD_PIC_READ_MEMORY 0x4

/* MC_CMD_PIC_IN_GET_NUM_DEVICES msgrequest */
#define    MC_CMD_PIC_IN_GET_NUM_DEVICES_LEN 0

/* MC_CMD_PIC_IN_GET_DEVICE msgrequest */
#define    MC_CMD_PIC_IN_GET_DEVICE_LEN 8
#define       MC_CMD_PIC_IN_GET_DEVICE_OP_OFST 0
#define       MC_CMD_PIC_IN_GET_DEVICE_OP_LEN 4
/* Instance of the PIC, numbered from 0 */
#define       MC_CMD_PIC_IN_GET_DEVICE_INSTANCE_OFST 4
#define       MC_CMD_PIC_IN_GET_DEVICE_INSTANCE_LEN 4

/* MC_CMD_PIC_IN_READ_CONFIG msgrequest */
#define    MC_CMD_PIC_IN_READ_CONFIG_LEN 12
#define       MC_CMD_PIC_IN_READ_CONFIG_OP_OFST 0
#define       MC_CMD_PIC_IN_READ_CONFIG_OP_LEN 4
/* Instance of the PIC, numbered from 0 */
#define       MC_CMD_PIC_IN_READ_CONFIG_INSTANCE_OFST 4
#define       MC_CMD_PIC_IN_READ_CONFIG_INSTANCE_LEN 4
/* Number of 16bit words of configuration space to read */
#define       MC_CMD_PIC_IN_READ_CONFIG_NUM_WORDS_OFST 8
#define       MC_CMD_PIC_IN_READ_CONFIG_NUM_WORDS_LEN 4

/* MC_CMD_PIC_IN_READ_MEMORY msgrequest */
#define    MC_CMD_PIC_IN_READ_MEMORY_LEN 16
#define       MC_CMD_PIC_IN_READ_MEMORY_OP_OFST 0
#define       MC_CMD_PIC_IN_READ_MEMORY_OP_LEN 4
/* Instance of the PIC, numbered from 0 */
#define       MC_CMD_PIC_IN_READ_MEMORY_INSTANCE_OFST 4
#define       MC_CMD_PIC_IN_READ_MEMORY_INSTANCE_LEN 4
/* 16bit word start address for read */
#define       MC_CMD_PIC_IN_READ_MEMORY_ADDRESS_OFST 8
#define       MC_CMD_PIC_IN_READ_MEMORY_ADDRESS_LEN 4
/* Number of 16bit words of program memory to read */
#define       MC_CMD_PIC_IN_READ_MEMORY_NUM_WORDS_OFST 12
#define       MC_CMD_PIC_IN_READ_MEMORY_NUM_WORDS_LEN 4

/* MC_CMD_PIC_OUT_GET_NUM_DEVICES msgresponse */
#define    MC_CMD_PIC_OUT_GET_NUM_DEVICES_LEN 4
/* Number of PIC device present on NIC */
#define       MC_CMD_PIC_OUT_GET_NUM_DEVICES_NUM_DEVICES_OFST 0
#define       MC_CMD_PIC_OUT_GET_NUM_DEVICES_NUM_DEVICES_LEN 4

/* MC_CMD_PIC_OUT_GET_DEVICE msgresponse */
#define    MC_CMD_PIC_OUT_GET_DEVICE_LEN 8
/* PIC type */
#define       MC_CMD_PIC_OUT_GET_DEVICE_TYPE_OFST 0
#define       MC_CMD_PIC_OUT_GET_DEVICE_TYPE_LEN 4
/* enum: PIC family 16LF150X */
#define          MC_CMD_PIC_OUT_GET_DEVICE_TYPE_16LF150X 0x1
/* PIC device ID */
#define       MC_CMD_PIC_OUT_GET_DEVICE_ID_OFST 4
#define       MC_CMD_PIC_OUT_GET_DEVICE_ID_LEN 4

/* MC_CMD_PIC_OUT_READ_CONFIG msgresponse */
#define    MC_CMD_PIC_OUT_READ_CONFIG_LENMIN 2
#define    MC_CMD_PIC_OUT_READ_CONFIG_LENMAX 252
#define    MC_CMD_PIC_OUT_READ_CONFIG_LENMAX_MCDI2 1020
#define    MC_CMD_PIC_OUT_READ_CONFIG_LEN(num) (0+2*(num))
#define    MC_CMD_PIC_OUT_READ_CONFIG_BUFFER_NUM(len) (((len)-0)/2)
/* PIC configuration space */
#define       MC_CMD_PIC_OUT_READ_CONFIG_BUFFER_OFST 0
#define       MC_CMD_PIC_OUT_READ_CONFIG_BUFFER_LEN 2
#define       MC_CMD_PIC_OUT_READ_CONFIG_BUFFER_MINNUM 1
#define       MC_CMD_PIC_OUT_READ_CONFIG_BUFFER_MAXNUM 126
#define       MC_CMD_PIC_OUT_READ_CONFIG_BUFFER_MAXNUM_MCDI2 510

/* MC_CMD_PIC_OUT_READ_MEMORY msgresponse */
#define    MC_CMD_PIC_OUT_READ_MEMORY_LENMIN 2
#define    MC_CMD_PIC_OUT_READ_MEMORY_LENMAX 252
#define    MC_CMD_PIC_OUT_READ_MEMORY_LENMAX_MCDI2 1020
#define    MC_CMD_PIC_OUT_READ_MEMORY_LEN(num) (0+2*(num))
#define    MC_CMD_PIC_OUT_READ_MEMORY_BUFFER_NUM(len) (((len)-0)/2)
/* PIC program memory */
#define       MC_CMD_PIC_OUT_READ_MEMORY_BUFFER_OFST 0
#define       MC_CMD_PIC_OUT_READ_MEMORY_BUFFER_LEN 2
#define       MC_CMD_PIC_OUT_READ_MEMORY_BUFFER_MINNUM 1
#define       MC_CMD_PIC_OUT_READ_MEMORY_BUFFER_MAXNUM 126
#define       MC_CMD_PIC_OUT_READ_MEMORY_BUFFER_MAXNUM_MCDI2 510


/***********************************/
/* MC_CMD_ROMBIST
 * Multiplexed MCDI call for ROM BIST operations (only valid in boot ROM)
 */
#define MC_CMD_ROMBIST 0x10e
#define MC_CMD_ROMBIST_MSGSET 0x10e
#undef MC_CMD_0x10e_PRIVILEGE_CTG

#define MC_CMD_0x10e_PRIVILEGE_CTG SRIOV_CTG_INSECURE

/* MC_CMD_ROMBIST_IN msgrequest */
#define    MC_CMD_ROMBIST_IN_LENMIN 4
#define    MC_CMD_ROMBIST_IN_LENMAX 252
#define    MC_CMD_ROMBIST_IN_LENMAX_MCDI2 1020
#define    MC_CMD_ROMBIST_IN_LEN(num) (4+4*(num))
#define    MC_CMD_ROMBIST_IN_ROMBIST_ARGS_NUM(len) (((len)-4)/4)
/* identifies the BIST operation */
#define       MC_CMD_ROMBIST_IN_ROMBIST_OP_OFST 0
#define       MC_CMD_ROMBIST_IN_ROMBIST_OP_LEN 4
/* enum: Setup logging */
#define          MC_CMD_ROMBIST_IN_ROMBIST_LOG_SETUP 0x0
/* enum: Read BIST log */
#define          MC_CMD_ROMBIST_IN_ROMBIST_LOG_READ 0x1
/* enum: Setup DUT clocks */
#define          MC_CMD_ROMBIST_IN_ROMBIST_SET_CLOCKS 0x2
/* enum: Tune KR equalization settings for external loopback */
#define          MC_CMD_ROMBIST_IN_ROMBIST_SET_KR_EQ 0x3
/* enum: Tune PCIe equalization settings for external loopback */
#define          MC_CMD_ROMBIST_IN_ROMBIST_SET_PCIE_EQ 0x4
/* enum: Run parametrized BIST test */
#define          MC_CMD_ROMBIST_IN_ROMBIST_RUN 0x5
/* enum: Run canned BIST Test */
#define          MC_CMD_ROMBIST_IN_ROMBIST_RUN_BIST 0x6
/* enum: Run burn-in test */
#define          MC_CMD_ROMBIST_IN_ROMBIST_RUN_BURNIN 0x7
/* arguments specific to the operation */
#define       MC_CMD_ROMBIST_IN_ROMBIST_ARGS_OFST 4
#define       MC_CMD_ROMBIST_IN_ROMBIST_ARGS_LEN 4
#define       MC_CMD_ROMBIST_IN_ROMBIST_ARGS_MINNUM 0
#define       MC_CMD_ROMBIST_IN_ROMBIST_ARGS_MAXNUM 62
#define       MC_CMD_ROMBIST_IN_ROMBIST_ARGS_MAXNUM_MCDI2 254

/* MC_CMD_ROMBIST_OUT msgresponse */
#define    MC_CMD_ROMBIST_OUT_LEN 0

/* MC_CMD_ROMBIST_LOG_SETUP_IN msgrequest: Setup logging */
#define    MC_CMD_ROMBIST_LOG_SETUP_IN_LEN 12
/* identifies the BIST operation */
#define       MC_CMD_ROMBIST_LOG_SETUP_IN_ROMBIST_OP_OFST 0
#define       MC_CMD_ROMBIST_LOG_SETUP_IN_ROMBIST_OP_LEN 4
#define       MC_CMD_ROMBIST_LOG_SETUP_IN_FLAGS_OFST 4
#define       MC_CMD_ROMBIST_LOG_SETUP_IN_FLAGS_LEN 4
#define        MC_CMD_ROMBIST_LOG_SETUP_IN_DMEM_OFST 4
#define        MC_CMD_ROMBIST_LOG_SETUP_IN_DMEM_LBN 0
#define        MC_CMD_ROMBIST_LOG_SETUP_IN_DMEM_WIDTH 1
#define        MC_CMD_ROMBIST_LOG_SETUP_IN_UART_OFST 4
#define        MC_CMD_ROMBIST_LOG_SETUP_IN_UART_LBN 1
#define        MC_CMD_ROMBIST_LOG_SETUP_IN_UART_WIDTH 1
#define        MC_CMD_ROMBIST_LOG_SETUP_IN_CLEAR_OFST 4
#define        MC_CMD_ROMBIST_LOG_SETUP_IN_CLEAR_LBN 2
#define        MC_CMD_ROMBIST_LOG_SETUP_IN_CLEAR_WIDTH 1
/* Log level */
#define       MC_CMD_ROMBIST_LOG_SETUP_IN_LEVEL_OFST 8
#define       MC_CMD_ROMBIST_LOG_SETUP_IN_LEVEL_LEN 4
#define          MC_CMD_ROMBIST_LOG_SETUP_IN_LOG_ERR 0x0 /* enum */
#define          MC_CMD_ROMBIST_LOG_SETUP_IN_LOG_WARN 0x1 /* enum */
#define          MC_CMD_ROMBIST_LOG_SETUP_IN_LOG_INFO 0x2 /* enum */
#define          MC_CMD_ROMBIST_LOG_SETUP_IN_LOG_DBG 0x3 /* enum */

/* MC_CMD_ROMBIST_LOG_SETUP_OUT msgresponse */
#define    MC_CMD_ROMBIST_LOG_SETUP_OUT_LEN 0

/* MC_CMD_ROMBIST_LOG_READ_IN msgrequest: Read BIST log */
#define    MC_CMD_ROMBIST_LOG_READ_IN_LEN 8
/* identifies the BIST operation */
#define       MC_CMD_ROMBIST_LOG_READ_IN_ROMBIST_OP_OFST 0
#define       MC_CMD_ROMBIST_LOG_READ_IN_ROMBIST_OP_LEN 4
/* Offset to start reading from */
#define       MC_CMD_ROMBIST_LOG_READ_IN_OFFSET_OFST 4
#define       MC_CMD_ROMBIST_LOG_READ_IN_OFFSET_LEN 4

/* MC_CMD_ROMBIST_LOG_READ_OUT msgresponse */
#define    MC_CMD_ROMBIST_LOG_READ_OUT_LENMIN 0
#define    MC_CMD_ROMBIST_LOG_READ_OUT_LENMAX 252
#define    MC_CMD_ROMBIST_LOG_READ_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_ROMBIST_LOG_READ_OUT_LEN(num) (0+1*(num))
#define    MC_CMD_ROMBIST_LOG_READ_OUT_DATA_NUM(len) (((len)-0)/1)
/* Log data (zero length, if no more data left) */
#define       MC_CMD_ROMBIST_LOG_READ_OUT_DATA_OFST 0
#define       MC_CMD_ROMBIST_LOG_READ_OUT_DATA_LEN 1
#define       MC_CMD_ROMBIST_LOG_READ_OUT_DATA_MINNUM 0
#define       MC_CMD_ROMBIST_LOG_READ_OUT_DATA_MAXNUM 252
#define       MC_CMD_ROMBIST_LOG_READ_OUT_DATA_MAXNUM_MCDI2 1020

/* MC_CMD_ROMBIST_SET_CLOCKS_IN msgrequest: Set DUT clocks (similar to
 * MC_CMD_SET_CLOCKS but takes selector values, such that non-standard clocks,
 * like XTAL or TCKREFIN can be selected)
 */
#define    MC_CMD_ROMBIST_SET_CLOCKS_IN_LEN 28
/* identifies the BIST operation */
#define       MC_CMD_ROMBIST_SET_CLOCKS_IN_ROMBIST_OP_OFST 0
#define       MC_CMD_ROMBIST_SET_CLOCKS_IN_ROMBIST_OP_LEN 4
/* Requested MC clock selector */
#define       MC_CMD_ROMBIST_SET_CLOCKS_IN_MC_CLK_SEL_OFST 4
#define       MC_CMD_ROMBIST_SET_CLOCKS_IN_MC_CLK_SEL_LEN 4
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_MC_CLOCK_SEL_312 0x0 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_MC_CLOCK_SEL_384 0x1 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_MC_CLOCK_SEL_555 0x2 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_MC_CLOCK_SEL_500 0x3 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_MC_CLOCK_SEL_454 0x4 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_MC_CLOCK_SEL_333 0x5 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_MC_CLOCK_SEL_XTAL 0x6 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_MC_CLOCK_SEL_TEST 0x7 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_MC_CLOCK_SEL_DONT_CHANGE 0xff /* enum */
/* Requested SYS clock selector */
#define       MC_CMD_ROMBIST_SET_CLOCKS_IN_SYS_CLK_SEL_OFST 8
#define       MC_CMD_ROMBIST_SET_CLOCKS_IN_SYS_CLK_SEL_LEN 4
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_SYS_CLOCK_SEL_1000 0x0 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_SYS_CLOCK_SEL_952 0x1 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_SYS_CLOCK_SEL_909 0x2 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_SYS_CLOCK_SEL_869 0x3 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_SYS_CLOCK_SEL_833 0x4 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_SYS_CLOCK_SEL_800 0x5 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_SYS_CLOCK_SEL_769 0x6 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_SYS_CLOCK_SEL_740 0x7 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_SYS_CLOCK_SEL_714 0x8 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_SYS_CLOCK_SEL_666 0x9 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_SYS_CLOCK_SEL_625 0xa /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_SYS_CLOCK_SEL_588 0xb /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_SYS_CLOCK_SEL_555 0xc /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_SYS_CLOCK_SEL_526 0xd /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_SYS_CLOCK_SEL_500 0xe /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_SYS_CLOCK_SEL_454 0xf /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_SYS_CLOCK_SEL_TEST 0x10 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_SYS_CLOCK_SEL_CKREF 0x11 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_SYS_CLOCK_SEL_XTAL 0x12 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_SYS_CLOCK_SEL_DONT_CHANGE 0xff /* enum */
/* Requested RMON clock selector */
#define       MC_CMD_ROMBIST_SET_CLOCKS_IN_RMON_CLK_SEL_OFST 12
#define       MC_CMD_ROMBIST_SET_CLOCKS_IN_RMON_CLK_SEL_LEN 4
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_RMON_CLOCK_SEL_1000 0x0 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_RMON_CLOCK_SEL_952 0x1 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_RMON_CLOCK_SEL_909 0x2 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_RMON_CLOCK_SEL_869 0x3 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_RMON_CLOCK_SEL_833 0x4 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_RMON_CLOCK_SEL_800 0x5 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_RMON_CLOCK_SEL_769 0x6 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_RMON_CLOCK_SEL_740 0x7 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_RMON_CLOCK_SEL_714 0x8 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_RMON_CLOCK_SEL_666 0x9 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_RMON_CLOCK_SEL_625 0xa /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_RMON_CLOCK_SEL_588 0xb /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_RMON_CLOCK_SEL_555 0xc /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_RMON_CLOCK_SEL_526 0xd /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_RMON_CLOCK_SEL_500 0xe /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_RMON_CLOCK_SEL_454 0xf /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_RMON_CLOCK_SEL_TEST 0x10 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_RMON_CLOCK_SEL_CKREF 0x11 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_RMON_CLOCK_SEL_XTAL 0x12 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_RMON_CLOCK_SEL_DONT_CHANGE 0xff /* enum */
/* Requested vswitch clock selector */
#define       MC_CMD_ROMBIST_SET_CLOCKS_IN_VSW_CLK_SEL_OFST 16
#define       MC_CMD_ROMBIST_SET_CLOCKS_IN_VSW_CLK_SEL_LEN 4
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_VSW_CLOCK_SEL_1666 0x0 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_VSW_CLOCK_SEL_1538 0x1 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_VSW_CLOCK_SEL_1428 0x2 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_VSW_CLOCK_SEL_1333 0x3 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_VSW_CLOCK_SEL_1250 0x4 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_VSW_CLOCK_SEL_1176 0x5 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_VSW_CLOCK_SEL_1111 0x6 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_VSW_CLOCK_SEL_1052 0x7 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_VSW_CLOCK_SEL_1000 0x8 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_VSW_CLOCK_SEL_952 0x9 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_VSW_CLOCK_SEL_909 0xa /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_VSW_CLOCK_SEL_869 0xb /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_VSW_CLOCK_SEL_800 0xc /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_VSW_CLOCK_SEL_714 0xd /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_VSW_CLOCK_SEL_666 0xe /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_VSW_CLOCK_SEL_625 0xf /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_VSW_CLOCK_SEL_TEST 0x10 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_VSW_CLOCK_SEL_CKREF 0x11 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_VSW_CLOCK_SEL_XTAL 0x12 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_VSW_CLOCK_SEL_DONT_CHANGE 0xff /* enum */
/* Requested DPCPU clock selector */
#define       MC_CMD_ROMBIST_SET_CLOCKS_IN_DPCPU_CLK_SEL_OFST 20
#define       MC_CMD_ROMBIST_SET_CLOCKS_IN_DPCPU_CLK_SEL_LEN 4
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_DPCPU_CLOCK_SEL_1666 0x0 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_DPCPU_CLOCK_SEL_1538 0x1 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_DPCPU_CLOCK_SEL_1428 0x2 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_DPCPU_CLOCK_SEL_1333 0x3 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_DPCPU_CLOCK_SEL_1250 0x4 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_DPCPU_CLOCK_SEL_1176 0x5 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_DPCPU_CLOCK_SEL_1111 0x6 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_DPCPU_CLOCK_SEL_1052 0x7 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_DPCPU_CLOCK_SEL_1000 0x8 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_DPCPU_CLOCK_SEL_909 0x9 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_DPCPU_CLOCK_SEL_800 0xa /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_DPCPU_CLOCK_SEL_740 0xb /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_DPCPU_CLOCK_SEL_666 0xc /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_DPCPU_CLOCK_SEL_DONT_CHANGE 0xff /* enum */
/* Requested PCS clock selector */
#define       MC_CMD_ROMBIST_SET_CLOCKS_IN_PCS_CLK_SEL_OFST 24
#define       MC_CMD_ROMBIST_SET_CLOCKS_IN_PCS_CLK_SEL_LEN 4
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_PCS_CLOCK_SEL_1333 0x0 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_PCS_CLOCK_SEL_1250 0x1 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_PCS_CLOCK_SEL_1176 0x2 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_PCS_CLOCK_SEL_1111 0x3 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_PCS_CLOCK_SEL_1052 0x4 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_PCS_CLOCK_SEL_1000 0x5 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_PCS_CLOCK_SEL_952 0x6 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_PCS_CLOCK_SEL_909 0x7 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_PCS_CLOCK_SEL_833 0x8 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_PCS_CLOCK_SEL_800 0x9 /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_PCS_CLOCK_SEL_740 0xa /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_PCS_CLOCK_SEL_666 0xb /* enum */
#define          MC_CMD_ROMBIST_SET_CLOCKS_IN_PCS_CLOCK_SEL_DONT_CHANGE 0xff /* enum */

/* MC_CMD_ROMBIST_SET_CLOCKS_OUT msgresponse */
#define    MC_CMD_ROMBIST_SET_CLOCKS_OUT_LEN 0

/* MC_CMD_ROMBIST_SET_KR_EQ_IN msgrequest: Tune KR Serdes lane equalization
 * parameters
 */
#define    MC_CMD_ROMBIST_SET_KR_EQ_IN_LEN 20
/* identifies the BIST operation */
#define       MC_CMD_ROMBIST_SET_KR_EQ_IN_ROMBIST_OP_OFST 0
#define       MC_CMD_ROMBIST_SET_KR_EQ_IN_ROMBIST_OP_LEN 4
/* Serdes bitmask */
#define       MC_CMD_ROMBIST_SET_KR_EQ_IN_SERDES_OFST 4
#define       MC_CMD_ROMBIST_SET_KR_EQ_IN_SERDES_LEN 4
/* Lane bitmask */
#define       MC_CMD_ROMBIST_SET_KR_EQ_IN_LANES_OFST 8
#define       MC_CMD_ROMBIST_SET_KR_EQ_IN_LANES_LEN 4
/* Requested EQ parameter */
#define       MC_CMD_ROMBIST_SET_KR_EQ_IN_EQ_OFST 12
#define       MC_CMD_ROMBIST_SET_KR_EQ_IN_EQ_LEN 4
#define          MC_CMD_ROMBIST_SET_KR_EQ_IN_KR_EQ_VGA 0x0 /* enum */
#define          MC_CMD_ROMBIST_SET_KR_EQ_IN_KR_EQ_CTLE_EQC 0x1 /* enum */
#define          MC_CMD_ROMBIST_SET_KR_EQ_IN_KR_EQ_CTLE_EQRES 0x2 /* enum */
#define          MC_CMD_ROMBIST_SET_KR_EQ_IN_KR_EQ_DFE1 0x3 /* enum */
#define          MC_CMD_ROMBIST_SET_KR_EQ_IN_KR_EQ_DFE2 0x4 /* enum */
#define          MC_CMD_ROMBIST_SET_KR_EQ_IN_KR_EQ_DFE3 0x5 /* enum */
#define          MC_CMD_ROMBIST_SET_KR_EQ_IN_KR_EQ_DFE4 0x6 /* enum */
#define          MC_CMD_ROMBIST_SET_KR_EQ_IN_KR_EQ_DFE5 0x7 /* enum */
#define          MC_CMD_ROMBIST_SET_KR_EQ_IN_KR_EQ_DLEV 0x8 /* enum */
#define          MC_CMD_ROMBIST_SET_KR_EQ_IN_KR_EQ_MARGIN 0x9 /* enum */
#define          MC_CMD_ROMBIST_SET_KR_EQ_IN_KR_EQ_ADV 0xa /* enum */
#define          MC_CMD_ROMBIST_SET_KR_EQ_IN_KR_EQ_DLY 0xb /* enum */
/* Requested EQ parameter value */
#define       MC_CMD_ROMBIST_SET_KR_EQ_IN_VALUE_OFST 16
#define       MC_CMD_ROMBIST_SET_KR_EQ_IN_VALUE_LEN 4

/* MC_CMD_ROMBIST_SET_KR_EQ_OUT msgresponse */
#define    MC_CMD_ROMBIST_SET_KR_EQ_OUT_LEN 0

/* MC_CMD_ROMBIST_SET_PCIE_EQ_IN msgrequest: Tune PCIE Serdes lane equalization
 * parameters
 */
#define    MC_CMD_ROMBIST_SET_PCIE_EQ_IN_LEN 16
/* identifies the BIST operation */
#define       MC_CMD_ROMBIST_SET_PCIE_EQ_IN_ROMBIST_OP_OFST 0
#define       MC_CMD_ROMBIST_SET_PCIE_EQ_IN_ROMBIST_OP_LEN 4
/* Lane bitmask */
#define       MC_CMD_ROMBIST_SET_PCIE_EQ_IN_LANES_OFST 4
#define       MC_CMD_ROMBIST_SET_PCIE_EQ_IN_LANES_LEN 4
/* Requested EQ parameter */
#define       MC_CMD_ROMBIST_SET_PCIE_EQ_IN_EQ_OFST 8
#define       MC_CMD_ROMBIST_SET_PCIE_EQ_IN_EQ_LEN 4
#define          MC_CMD_ROMBIST_SET_PCIE_EQ_IN_PCIE_EQ_CTLE_EQC 0x0 /* enum */
#define          MC_CMD_ROMBIST_SET_PCIE_EQ_IN_PCIE_EQ_CTLE_EQRES 0x1 /* enum */
#define          MC_CMD_ROMBIST_SET_PCIE_EQ_IN_PCIE_EQ_DFE_EN 0x2 /* enum */
#define          MC_CMD_ROMBIST_SET_PCIE_EQ_IN_PCIE_EQ_DFE_MAN 0x3 /* enum */
#define          MC_CMD_ROMBIST_SET_PCIE_EQ_IN_PCIE_EQ_DFE1 0x4 /* enum */
#define          MC_CMD_ROMBIST_SET_PCIE_EQ_IN_PCIE_EQ_DFE2 0x5 /* enum */
#define          MC_CMD_ROMBIST_SET_PCIE_EQ_IN_PCIE_EQ_DFE3 0x6 /* enum */
#define          MC_CMD_ROMBIST_SET_PCIE_EQ_IN_PCIE_EQ_DLEV 0x7 /* enum */
#define          MC_CMD_ROMBIST_SET_PCIE_EQ_IN_PCIE_EQ_SHP 0x8 /* enum */
#define          MC_CMD_ROMBIST_SET_PCIE_EQ_IN_PCIE_EQ_EMP 0x9 /* enum */
#define          MC_CMD_ROMBIST_SET_PCIE_EQ_IN_PCIE_EQ_AMP 0xa /* enum */
/* Requested EQ parameter value */
#define       MC_CMD_ROMBIST_SET_PCIE_EQ_IN_VALUE_OFST 12
#define       MC_CMD_ROMBIST_SET_PCIE_EQ_IN_VALUE_LEN 4

/* MC_CMD_ROMBIST_SET_PCIE_EQ_OUT msgresponse */
#define    MC_CMD_ROMBIST_SET_PCIE_EQ_OUT_LEN 0

/* MC_CMD_ROMBIST_RUN_IN msgrequest: Run parametrized ROM BIST test */
#define    MC_CMD_ROMBIST_RUN_IN_LEN 52
/* identifies the BIST operation */
#define       MC_CMD_ROMBIST_RUN_IN_ROMBIST_OP_OFST 0
#define       MC_CMD_ROMBIST_RUN_IN_ROMBIST_OP_LEN 4
/* Test components to run (in parallel) */
#define       MC_CMD_ROMBIST_RUN_IN_FLAGS_OFST 4
#define       MC_CMD_ROMBIST_RUN_IN_FLAGS_LEN 4
#define        MC_CMD_ROMBIST_RUN_IN_RUN_DP_TO_RX_OFST 4
#define        MC_CMD_ROMBIST_RUN_IN_RUN_DP_TO_RX_LBN 0
#define        MC_CMD_ROMBIST_RUN_IN_RUN_DP_TO_RX_WIDTH 1
#define        MC_CMD_ROMBIST_RUN_IN_RUN_DP_TO_NP_OFST 4
#define        MC_CMD_ROMBIST_RUN_IN_RUN_DP_TO_NP_LBN 1
#define        MC_CMD_ROMBIST_RUN_IN_RUN_DP_TO_NP_WIDTH 1
#define        MC_CMD_ROMBIST_RUN_IN_RUN_PCIE_TLP_OFST 4
#define        MC_CMD_ROMBIST_RUN_IN_RUN_PCIE_TLP_LBN 2
#define        MC_CMD_ROMBIST_RUN_IN_RUN_PCIE_TLP_WIDTH 1
#define        MC_CMD_ROMBIST_RUN_IN_RUN_PCIE_SD_BIST_OFST 4
#define        MC_CMD_ROMBIST_RUN_IN_RUN_PCIE_SD_BIST_LBN 3
#define        MC_CMD_ROMBIST_RUN_IN_RUN_PCIE_SD_BIST_WIDTH 1
#define        MC_CMD_ROMBIST_RUN_IN_RUN_KR_SD_BIST_OFST 4
#define        MC_CMD_ROMBIST_RUN_IN_RUN_KR_SD_BIST_LBN 4
#define        MC_CMD_ROMBIST_RUN_IN_RUN_KR_SD_BIST_WIDTH 1
#define        MC_CMD_ROMBIST_RUN_IN_RUN_NCSI_OFST 4
#define        MC_CMD_ROMBIST_RUN_IN_RUN_NCSI_LBN 5
#define        MC_CMD_ROMBIST_RUN_IN_RUN_NCSI_WIDTH 1
#define        MC_CMD_ROMBIST_RUN_IN_RUN_MEMTEST_OFST 4
#define        MC_CMD_ROMBIST_RUN_IN_RUN_MEMTEST_LBN 6
#define        MC_CMD_ROMBIST_RUN_IN_RUN_MEMTEST_WIDTH 1
#define        MC_CMD_ROMBIST_RUN_IN_RUN_SPI_OFST 4
#define        MC_CMD_ROMBIST_RUN_IN_RUN_SPI_LBN 7
#define        MC_CMD_ROMBIST_RUN_IN_RUN_SPI_WIDTH 1
#define        MC_CMD_ROMBIST_RUN_IN_RUN_BURNIN_OFST 4
#define        MC_CMD_ROMBIST_RUN_IN_RUN_BURNIN_LBN 8
#define        MC_CMD_ROMBIST_RUN_IN_RUN_BURNIN_WIDTH 1
#define        MC_CMD_ROMBIST_RUN_IN_RUN_LUE_OFST 4
#define        MC_CMD_ROMBIST_RUN_IN_RUN_LUE_LBN 9
#define        MC_CMD_ROMBIST_RUN_IN_RUN_LUE_WIDTH 1
/* Port speed for each of the network ports (for datapath test) */
#define       MC_CMD_ROMBIST_RUN_IN_PORT_SPEED_OFST 8
#define       MC_CMD_ROMBIST_RUN_IN_PORT_SPEED_LEN 1
#define       MC_CMD_ROMBIST_RUN_IN_PORT_SPEED_NUM 4
/* enum: Do not use port */
#define          MC_CMD_ROMBIST_RUN_IN_PORT_SPEED_NONE 0x0
#define          MC_CMD_ROMBIST_RUN_IN_PORT_SPEED_1G 0x1 /* enum */
#define          MC_CMD_ROMBIST_RUN_IN_PORT_SPEED_10G 0x2 /* enum */
#define          MC_CMD_ROMBIST_RUN_IN_PORT_SPEED_40G 0x3 /* enum */
#define          MC_CMD_ROMBIST_RUN_IN_PORT_SPEED_25G 0x4 /* enum */
#define          MC_CMD_ROMBIST_RUN_IN_PORT_SPEED_50G 0x5 /* enum */
#define          MC_CMD_ROMBIST_RUN_IN_PORT_SPEED_100G 0x6 /* enum */
/* enum: Flag OR'd with speed to request use of low latency PCS (only valid for
 * 10G/25G)
 */
#define          MC_CMD_ROMBIST_RUN_IN_PORT_SPEED_LOW_LATENCY 0x80
/* KR Serdes instance for each of the network ports (for datapath test) */
#define       MC_CMD_ROMBIST_RUN_IN_PORT_SERDES_OFST 12
#define       MC_CMD_ROMBIST_RUN_IN_PORT_SERDES_LEN 1
#define       MC_CMD_ROMBIST_RUN_IN_PORT_SERDES_NUM 4
/* KR Serdes lane bitmask for each of the network ports (for datapath test) */
#define       MC_CMD_ROMBIST_RUN_IN_PORT_LANES_OFST 16
#define       MC_CMD_ROMBIST_RUN_IN_PORT_LANES_LEN 1
#define       MC_CMD_ROMBIST_RUN_IN_PORT_LANES_NUM 4
/* Loopback point for each of the network ports (for datapath test) */
#define       MC_CMD_ROMBIST_RUN_IN_PORT_LOOPBACK_OFST 20
#define       MC_CMD_ROMBIST_RUN_IN_PORT_LOOPBACK_LEN 1
#define       MC_CMD_ROMBIST_RUN_IN_PORT_LOOPBACK_NUM 4
/* enum: Datapath at the Up/Down converter */
#define          MC_CMD_ROMBIST_RUN_IN_PORT_LB_DATA 0x0
/* enum: MAC at S/X/C/GMII interface */
#define          MC_CMD_ROMBIST_RUN_IN_PORT_LB_XGMII 0x1
/* enum: Post-PCS at PMA interface */
#define          MC_CMD_ROMBIST_RUN_IN_PORT_LB_PMA 0x2
/* enum: Serdes at serializer output */
#define          MC_CMD_ROMBIST_RUN_IN_PORT_LB_SD_FAR 0x3
/* enum: Off-chip */
#define          MC_CMD_ROMBIST_RUN_IN_PORT_LB_EXT 0x4
/* PCIe speed for TLP loopback test and Serdes internal BIST */
#define       MC_CMD_ROMBIST_RUN_IN_PCIE_SPEED_OFST 24
#define       MC_CMD_ROMBIST_RUN_IN_PCIE_SPEED_LEN 4
#define          MC_CMD_ROMBIST_RUN_IN_PCIE_SPEED_GEN1 0x1 /* enum */
#define          MC_CMD_ROMBIST_RUN_IN_PCIE_SPEED_GEN2 0x2 /* enum */
#define          MC_CMD_ROMBIST_RUN_IN_PCIE_SPEED_GEN3 0x3 /* enum */
/* PCIe loopback point for TLP loopback test or Serdes internal BIST If both
 * are run in parallel, TLP loopback is forced to PIPE and Serdes internal BIST
 * is set from this field (serial or external)
 */
#define       MC_CMD_ROMBIST_RUN_IN_PCIE_LOOPBACK_OFST 28
#define       MC_CMD_ROMBIST_RUN_IN_PCIE_LOOPBACK_LEN 4
/* enum: PCIe core at PIPE iterface */
#define          MC_CMD_ROMBIST_RUN_IN_PCIE_LB_PIPE 0x0
/* enum: PCIe serdes at serializer output */
#define          MC_CMD_ROMBIST_RUN_IN_PCIE_LB_NES 0x1
/* enum: Off-chip */
#define          MC_CMD_ROMBIST_RUN_IN_PCIE_LB_EXT 0x2
/* NCSI loopback point for NCSI loopback test */
#define       MC_CMD_ROMBIST_RUN_IN_NCSI_LOOPBACK_OFST 32
#define       MC_CMD_ROMBIST_RUN_IN_NCSI_LOOPBACK_LEN 4
/* enum: Internal */
#define          MC_CMD_ROMBIST_RUN_IN_NCSI_LB_INT 0x0
/* enum: Off-chip */
#define          MC_CMD_ROMBIST_RUN_IN_NCSI_LB_EXT 0x1
/* Packet count for datapath test */
#define       MC_CMD_ROMBIST_RUN_IN_PACKET_COUNT_OFST 36
#define       MC_CMD_ROMBIST_RUN_IN_PACKET_COUNT_LEN 4
/* Packet count for datapath test (-1 = mixed) */
#define       MC_CMD_ROMBIST_RUN_IN_PACKET_SIZE_OFST 40
#define       MC_CMD_ROMBIST_RUN_IN_PACKET_SIZE_LEN 4
/* PRBS pattern for KR Serdes BIST */
#define       MC_CMD_ROMBIST_RUN_IN_PORT_PATTERN_OFST 44
#define       MC_CMD_ROMBIST_RUN_IN_PORT_PATTERN_LEN 4
#define          MC_CMD_ROMBIST_RUN_IN_KR_PAT_PRBS_7 0x0 /* enum */
#define          MC_CMD_ROMBIST_RUN_IN_KR_PAT_PRBS_9 0x1 /* enum */
#define          MC_CMD_ROMBIST_RUN_IN_KR_PAT_PRBS_11 0x2 /* enum */
#define          MC_CMD_ROMBIST_RUN_IN_KR_PAT_PRBS_15 0x3 /* enum */
#define          MC_CMD_ROMBIST_RUN_IN_KR_PAT_PRBS_23 0x4 /* enum */
#define          MC_CMD_ROMBIST_RUN_IN_KR_PAT_PRBS_31 0x5 /* enum */
/* PRBS pattern for PCIE Serdes BIST */
#define       MC_CMD_ROMBIST_RUN_IN_PCIE_PATTERN_OFST 48
#define       MC_CMD_ROMBIST_RUN_IN_PCIE_PATTERN_LEN 4
#define          MC_CMD_ROMBIST_RUN_IN_PCIE_PAT_PRBS_7 0x0 /* enum */
#define          MC_CMD_ROMBIST_RUN_IN_PCIE_PAT_PRBS_31 0x1 /* enum */

/* MC_CMD_ROMBIST_RUN_OUT msgresponse */
#define    MC_CMD_ROMBIST_RUN_OUT_LEN 0

/* MC_CMD_ROMBIST_RUN_BIST_IN msgrequest: Run canned ROM BIST test */
#define    MC_CMD_ROMBIST_RUN_BIST_IN_LEN 8
/* identifies the BIST operation */
#define       MC_CMD_ROMBIST_RUN_BIST_IN_ROMBIST_OP_OFST 0
#define       MC_CMD_ROMBIST_RUN_BIST_IN_ROMBIST_OP_LEN 4
/* Loopback mode for KR and PCIE (0 - external, 1 - internal) */
#define       MC_CMD_ROMBIST_RUN_BIST_IN_LOOPBACK_OFST 4
#define       MC_CMD_ROMBIST_RUN_BIST_IN_LOOPBACK_LEN 4

/* MC_CMD_ROMBIST_RUN_BIST_OUT msgresponse */
#define    MC_CMD_ROMBIST_RUN_BIST_OUT_LEN 0

/* MC_CMD_ROMBIST_RUN_BURNIN_IN msgrequest: Run canned ROM burn-in test */
#define    MC_CMD_ROMBIST_RUN_BURNIN_IN_LEN 4
/* identifies the BIST operation */
#define       MC_CMD_ROMBIST_RUN_BURNIN_IN_ROMBIST_OP_OFST 0
#define       MC_CMD_ROMBIST_RUN_BURNIN_IN_ROMBIST_OP_LEN 4

/* MC_CMD_ROMBIST_RUN_BURNIN_OUT msgresponse */
#define    MC_CMD_ROMBIST_RUN_BURNIN_OUT_LEN 0


/***********************************/
/* MC_CMD_SPHINX
 * Reserved for SPHINX development.
 */
#define MC_CMD_SPHINX 0x136
#define MC_CMD_SPHINX_MSGSET 0x136
#undef MC_CMD_0x136_PRIVILEGE_CTG

#define MC_CMD_0x136_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_SPHINX_IN msgrequest */
#define    MC_CMD_SPHINX_IN_LEN 4
#define       MC_CMD_SPHINX_IN_OP_OFST 0
#define       MC_CMD_SPHINX_IN_OP_LEN 4
/* enum: Cage control testing */
#define          MC_CMD_SPHINX_IN_CAGE_CONTROL 0x0

/* MC_CMD_SPHINX_OUT msgresponse */
#define    MC_CMD_SPHINX_OUT_LEN 0


/***********************************/
/* MC_CMD_SENSOR_CTRL
 * Control of sensor operations
 */
#define MC_CMD_SENSOR_CTRL 0x13a
#define MC_CMD_SENSOR_CTRL_MSGSET 0x13a
#undef MC_CMD_0x13a_PRIVILEGE_CTG

#define MC_CMD_0x13a_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_SENSOR_CTRL_IN msgrequest */
#define    MC_CMD_SENSOR_CTRL_IN_LEN 4
#define       MC_CMD_SENSOR_CTRL_IN_FLAGS_OFST 0
#define       MC_CMD_SENSOR_CTRL_IN_FLAGS_LEN 4
#define        MC_CMD_SENSOR_CTRL_IN_ENGINEERING_ENABLE_OFST 0
#define        MC_CMD_SENSOR_CTRL_IN_ENGINEERING_ENABLE_LBN 0
#define        MC_CMD_SENSOR_CTRL_IN_ENGINEERING_ENABLE_WIDTH 1

/* MC_CMD_SENSOR_CTRL_OUT msgrequest */
#define    MC_CMD_SENSOR_CTRL_OUT_LEN 0

/* MC_CMD_DEVEL_DUMP_VI_ENTRY structuredef */
#define    MC_CMD_DEVEL_DUMP_VI_ENTRY_LEN 28
/* Type of entry */
#define       MC_CMD_DEVEL_DUMP_VI_ENTRY_TYPE_OFST 0
#define       MC_CMD_DEVEL_DUMP_VI_ENTRY_TYPE_LEN 4
#define          MC_CMD_DEVEL_DUMP_VI_ENTRY_QDMA_SW_C2H 0x0 /* enum */
#define          MC_CMD_DEVEL_DUMP_VI_ENTRY_QDMA_SW_H2C 0x1 /* enum */
#define          MC_CMD_DEVEL_DUMP_VI_ENTRY_QDMA_HW_C2H 0x2 /* enum */
#define          MC_CMD_DEVEL_DUMP_VI_ENTRY_QDMA_HW_H2C 0x3 /* enum */
#define          MC_CMD_DEVEL_DUMP_VI_ENTRY_QDMA_CR_C2H 0x4 /* enum */
#define          MC_CMD_DEVEL_DUMP_VI_ENTRY_QDMA_CR_H2C 0x5 /* enum */
/* enum: First QDMA writeback/completion queue. Used for ef100, C2H VDPA and
 * plain virtio.
 */
#define          MC_CMD_DEVEL_DUMP_VI_ENTRY_QDMA_WRB 0x6
#define          MC_CMD_DEVEL_DUMP_VI_ENTRY_QDMA_PFTCH 0x7 /* enum */
#define          MC_CMD_DEVEL_DUMP_VI_ENTRY_DMAC_H2C_QTBL 0x100 /* enum */
#define          MC_CMD_DEVEL_DUMP_VI_ENTRY_DMAC_C2H_QTBL 0x101 /* enum */
#define          MC_CMD_DEVEL_DUMP_VI_ENTRY_DMAC_H2C_VIO 0x10a /* enum */
#define       MC_CMD_DEVEL_DUMP_VI_ENTRY_TYPE_LBN 0
#define       MC_CMD_DEVEL_DUMP_VI_ENTRY_TYPE_WIDTH 32
/* Internal QDMA/dmac queue number for this entry */
#define       MC_CMD_DEVEL_DUMP_VI_ENTRY_QUEUE_NUMBER_OFST 4
#define       MC_CMD_DEVEL_DUMP_VI_ENTRY_QUEUE_NUMBER_LEN 4
#define       MC_CMD_DEVEL_DUMP_VI_ENTRY_QUEUE_NUMBER_LBN 32
#define       MC_CMD_DEVEL_DUMP_VI_ENTRY_QUEUE_NUMBER_WIDTH 32
/* Size of entry data */
#define       MC_CMD_DEVEL_DUMP_VI_ENTRY_SIZE_OFST 8
#define       MC_CMD_DEVEL_DUMP_VI_ENTRY_SIZE_LEN 4
#define       MC_CMD_DEVEL_DUMP_VI_ENTRY_SIZE_LBN 64
#define       MC_CMD_DEVEL_DUMP_VI_ENTRY_SIZE_WIDTH 32
/* Offset of entry data from start of MCDI message response payload */
#define       MC_CMD_DEVEL_DUMP_VI_ENTRY_OFFSET_OFST 12
#define       MC_CMD_DEVEL_DUMP_VI_ENTRY_OFFSET_LEN 4
#define       MC_CMD_DEVEL_DUMP_VI_ENTRY_OFFSET_LBN 96
#define       MC_CMD_DEVEL_DUMP_VI_ENTRY_OFFSET_WIDTH 32
/* Absolute VI of the entry, or 0xffffffff if not available/applicable */
#define       MC_CMD_DEVEL_DUMP_VI_ENTRY_ABS_VI_OFST 16
#define       MC_CMD_DEVEL_DUMP_VI_ENTRY_ABS_VI_LEN 4
#define          MC_CMD_DEVEL_DUMP_VI_ENTRY_NO_ABS_VI 0xffffffff /* enum */
#define       MC_CMD_DEVEL_DUMP_VI_ENTRY_ABS_VI_LBN 128
#define       MC_CMD_DEVEL_DUMP_VI_ENTRY_ABS_VI_WIDTH 32
/* Reserved */
#define       MC_CMD_DEVEL_DUMP_VI_ENTRY_RESERVED_OFST 20
#define       MC_CMD_DEVEL_DUMP_VI_ENTRY_RESERVED_LEN 8
#define       MC_CMD_DEVEL_DUMP_VI_ENTRY_RESERVED_LO_OFST 20
#define       MC_CMD_DEVEL_DUMP_VI_ENTRY_RESERVED_LO_LEN 4
#define       MC_CMD_DEVEL_DUMP_VI_ENTRY_RESERVED_LO_LBN 160
#define       MC_CMD_DEVEL_DUMP_VI_ENTRY_RESERVED_LO_WIDTH 32
#define       MC_CMD_DEVEL_DUMP_VI_ENTRY_RESERVED_HI_OFST 24
#define       MC_CMD_DEVEL_DUMP_VI_ENTRY_RESERVED_HI_LEN 4
#define       MC_CMD_DEVEL_DUMP_VI_ENTRY_RESERVED_HI_LBN 192
#define       MC_CMD_DEVEL_DUMP_VI_ENTRY_RESERVED_HI_WIDTH 32
#define       MC_CMD_DEVEL_DUMP_VI_ENTRY_RESERVED_LBN 160
#define       MC_CMD_DEVEL_DUMP_VI_ENTRY_RESERVED_WIDTH 64


/***********************************/
/* MC_CMD_DEVEL_DUMP_VI
 * Dump various parts of the hardware's state for a VI.
 */
#define MC_CMD_DEVEL_DUMP_VI 0x1b5
#define MC_CMD_DEVEL_DUMP_VI_MSGSET 0x1b5
#undef MC_CMD_0x1b5_PRIVILEGE_CTG

#define MC_CMD_0x1b5_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_DEVEL_DUMP_VI_IN msgrequest */
#define    MC_CMD_DEVEL_DUMP_VI_IN_LEN 4
/* Absolute queue id of queue to dump state for */
#define       MC_CMD_DEVEL_DUMP_VI_IN_QID_OFST 0
#define       MC_CMD_DEVEL_DUMP_VI_IN_QID_LEN 4

/* MC_CMD_DEVEL_DUMP_VI_IN_V2 msgrequest */
#define    MC_CMD_DEVEL_DUMP_VI_IN_V2_LEN 20
/* Which queue to dump. The meaning of this field depends on ADDRESS_MODE. */
#define       MC_CMD_DEVEL_DUMP_VI_IN_V2_ID_OFST 0
#define       MC_CMD_DEVEL_DUMP_VI_IN_V2_ID_LEN 4
/* Method of referring to the queue to dump */
#define       MC_CMD_DEVEL_DUMP_VI_IN_V2_ADDRESS_MODE_OFST 4
#define       MC_CMD_DEVEL_DUMP_VI_IN_V2_ADDRESS_MODE_LEN 4
/* enum: First field refers to queue number as understood by QDMA/DMAC hardware
 */
#define          MC_CMD_DEVEL_DUMP_VI_IN_V2_QUEUE_NUMBER 0x0
/* enum: First field refers to absolute VI number */
#define          MC_CMD_DEVEL_DUMP_VI_IN_V2_ABS_VI 0x1
/* enum: First field refers to function-relative VI number on the command's
 * function
 */
#define          MC_CMD_DEVEL_DUMP_VI_IN_V2_REL_VI 0x2
/* enum: First field refers to function-relative VI number on a specified
 * function
 */
#define          MC_CMD_DEVEL_DUMP_VI_IN_V2_REL_VI_PROXY 0x3
/* Type of VI. Not needed if ADDRESS_MODE is QUEUE_NUMBER. */
#define       MC_CMD_DEVEL_DUMP_VI_IN_V2_VI_TYPE_OFST 8
#define       MC_CMD_DEVEL_DUMP_VI_IN_V2_VI_TYPE_LEN 4
/* enum: Return only entries used for ef100 queues (a single hardware queue) */
#define          MC_CMD_DEVEL_DUMP_VI_IN_V2_EF100 0x0
/* enum: Return entries used for virtio (Potentially two hardware queues,
 * depending on hardware implementation)
 */
#define          MC_CMD_DEVEL_DUMP_VI_IN_V2_VIRTIO 0x1
/* Only if ADDRESS_MODE is REL_VI_PROXY. Interface of function the queue is on.
 */
#define       MC_CMD_DEVEL_DUMP_VI_IN_V2_PCIE_INTERFACE_OFST 12
#define       MC_CMD_DEVEL_DUMP_VI_IN_V2_PCIE_INTERFACE_LEN 4
/*            Enum values, see field(s): */
/*               PCIE_INTERFACE */
/* Only if ADDRESS_MODE is REL_VI_PROXY. PF number of the function the queue is
 * on.
 */
#define       MC_CMD_DEVEL_DUMP_VI_IN_V2_PF_OFST 16
#define       MC_CMD_DEVEL_DUMP_VI_IN_V2_PF_LEN 2
/* Only if ADDRESS_MODE is REL_VI_PROXY. VF number of the function the queue is
 * on.
 */
#define       MC_CMD_DEVEL_DUMP_VI_IN_V2_VF_OFST 18
#define       MC_CMD_DEVEL_DUMP_VI_IN_V2_VF_LEN 2
/* enum: The function is on a PF, not a VF. */
#define          MC_CMD_DEVEL_DUMP_VI_IN_V2_VF_NULL 0xffff

/* MC_CMD_DEVEL_DUMP_VI_OUT msgresponse */
#define    MC_CMD_DEVEL_DUMP_VI_OUT_LENMIN 4
#define    MC_CMD_DEVEL_DUMP_VI_OUT_LENMAX 252
#define    MC_CMD_DEVEL_DUMP_VI_OUT_LENMAX_MCDI2 1012
#define    MC_CMD_DEVEL_DUMP_VI_OUT_LEN(num) (0+1*(num))
#define    MC_CMD_DEVEL_DUMP_VI_OUT_DATA_NUM(len) (((len)-0)/1)
/* Number of dump entries returned */
#define       MC_CMD_DEVEL_DUMP_VI_OUT_NUM_ENTRIES_OFST 0
#define       MC_CMD_DEVEL_DUMP_VI_OUT_NUM_ENTRIES_LEN 4
#define        MC_CMD_DEVEL_DUMP_VI_OUT_DATA_OFST 0
#define        MC_CMD_DEVEL_DUMP_VI_OUT_DATA_LBN 0
#define        MC_CMD_DEVEL_DUMP_VI_OUT_DATA_WIDTH 8
#define        MC_CMD_DEVEL_DUMP_VI_OUT_DATA_MINNUM 0
#define        MC_CMD_DEVEL_DUMP_VI_OUT_DATA_MAXNUM 252
#define        MC_CMD_DEVEL_DUMP_VI_OUT_DATA_MAXNUM_MCDI2 1020
/* Array of MC_CMD_DEVEL_DUMP_VI_ENTRY structures of length NUM_ENTRIES */
#define       MC_CMD_DEVEL_DUMP_VI_OUT_ENTRIES_OFST 4
#define       MC_CMD_DEVEL_DUMP_VI_OUT_ENTRIES_LEN 28
#define       MC_CMD_DEVEL_DUMP_VI_OUT_ENTRIES_MINNUM 0
#define       MC_CMD_DEVEL_DUMP_VI_OUT_ENTRIES_MAXNUM 8
#define       MC_CMD_DEVEL_DUMP_VI_OUT_ENTRIES_MAXNUM_MCDI2 36

/* MC_CMD_DEVEL_DUMP_REGS_ENTRY structuredef */
#define    MC_CMD_DEVEL_DUMP_REGS_ENTRY_LEN 16
/* What register this is */
#define       MC_CMD_DEVEL_DUMP_REGS_ENTRY_REG_OFST 0
#define       MC_CMD_DEVEL_DUMP_REGS_ENTRY_REG_LEN 4
/* enum: Catchall for registers that aren't in this enum. Nothing should be in
 * this long-term
 */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_UNKNOWN 0xffffffff
/* enum: S2IC Converter Debug Packet Counter register. Informs number of
 * packets passed through Converter.
 */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_H2C_S2IC_DBG_PKT_CNT 0x0
/* enum: IC2S Converter Debug Packet Counter register. Informs number of
 * packets passed through Converter.
 */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_C2H_IC2S_DBG_PKT_CNT 0x1
/* enum: Event Controller Tx path Debug register. Count of Moderator Tx events,
 * not incl D2C, VirtIO, Dproxy.
 */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_EVC_TX_DEBUG 0x2
/* enum: Event Controller Rx path Debug register. Count of Moderator Rx events.
 */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_EVC_RX_DEBUG 0x3
/* enum: Event Controller Debug register. Count of Total EVC events. */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_EVC_TOTAL_DEBUG 0x4
/* enum: Same info as EVC_RX_DEBUG; collected at different location in design
 */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_EVC_RX_EF100_DEBUG 0x5
/* enum: Same info as EVC_TX_DEBUG; collected at different location in design
 */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_EVC_TX_EF100_DEBUG 0x6
/* enum: Event Controller Debug register. Count of Tx VirtIO events. */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_EVC_TX_VIRTIO_DEBUG 0x7
/* enum: Event Controller Debug register. Count of Tx Descriptor Proxy events.
 */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_EVC_TX_DPRXY_DEBUG 0x8
/* enum: Event Controller Debug register. Count of Tx VirtQ Descriptor Proxy
 * events.
 */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_EVC_TX_VIRTQ_DPRXY_DEBUG 0x9
/* enum: Event Controller Debug register. Count of Tx Descriptor-to-Completion
 * events.
 */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_EVC_TX_D2C_DEBUG 0xa
/* enum: Event Controller Debug register. Count of Tx VirtIO Descriptor-to-
 * Completion events.
 */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_EVC_TX_VIRTQ_D2C_DEBUG 0xb
/* enum: Event Controller Debug register. Count of Tx Timestamp events. */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_EVC_TX_TSTAMP_DEBUG 0xc
/* enum: Event Controller Debug register. Count of Rx EvQ Timeout events. */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_EVC_RX_EVQ_TIMEOUT_DEBUG 0xd
/* enum: Event Controller Debug register. Count of MC events. */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_EVC_MC_DEBUG 0xe
/* enum: Event Controller Debug register. Count of EQDMA VirtIO Control events.
 */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_EVC_EQDMA_VIO_CTL_DEBUG 0xf
/* enum: Counter of QDMA Dropped C2H packets. */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_DMAC_C2H_DROP_CTR_REG 0x10
/* enum: Number of packets received by hub c host fifo. */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_SSS_C_H_PACKETS_IN_TBL 0x11
/* enum: Number of packets sent by hub c host fifo. */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_SSS_C_H_PACKETS_OUT_TBL 0x12
/* enum: Number of packets received by hub c plugin fifo. */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_SSS_C_P_PACKETS_IN_TBL 0x13
/* enum: Number of packets received by hub b host fifo. */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_SSS_B_H_PACKETS_IN_TBL 0x14
/* enum: Number of packets received by hub b net fifo. */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_SSS_B_N_PACKETS_IN_TBL 0x15
/* enum: Number of packets received by hub b host fifo. */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_SSS_B_PH_PACKETS_IN_TBL 0x16
/* enum: Number of packets received by hub b net fifo. */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_SSS_B_PN_PACKETS_IN_TBL 0x17
/* enum: Number of packets sent by hub b net fifo. */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_SSS_B_PACKETS_OUT_TBL 0x18
/* enum: Number of packets received by hub c net fifo. */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_SSS_C_N_PACKETS_IN_TBL 0x19
/* enum: Number of packets sent by hub c net fifo. */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_SSS_C_N_PACKETS_OUT_TBL 0x1a
/* enum: Number of packets received by hub ha fifo. */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_SSS_HA_PACKETS_IN_TBL 0x1b
/* enum: Number of packets received by hub ha host shadow fifo. */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_SSS_HA_PH_PACKETS_IN_TBL 0x1c
/* enum: Number of packets received by hub ha fifo. */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_SSS_HA_PACKETS_OUT_TBL 0x1d
/* enum: Number of packets received by hub d fifo. */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_SSS_D_PACKETS_IN_TBL 0x1e
/* enum: Number of packets received by hub d plugin fifo. */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_SSS_D_P_PACKETS_IN_TBL 0x1f
/* enum: Number of packets received by hub d plugin fifo. */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_SSS_D_O_PACKETS_IN_TBL 0x20
/* enum: Number of packets sent to dmac from hub d. */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_SSS_D_PACKETS_OUT_TBL 0x21
/* enum: Number of packets received by hub na fifo. */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_SSS_NA_PACKETS_IN_TBL 0x22
/* enum: Number of packets dropped by hub na fifo. */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_SSS_NA_PACKETS_DROPPED_TBL 0x23
/* enum: Number of packets sent by hub na fifo. */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_SSS_NA_PACKETS_OUT_TBL 0x24
/* enum: Number of packets received by rp hub fifo. */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_SSS_RP_PACKETS_IN_TBL 0x25
/* enum: Number of packets sent by rp hub fifo. */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_SSS_RP_PACKETS_OUT_TBL 0x26
/* enum: Information about the most recent drop */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_QDMA_C2H_DROP_STATUS_REG 0x27
/* enum: Virt IO alert register for virtIO related errors and fatals */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_DMAC_ALERT2_REG 0x28
/* enum: VirtualIO TSO alert register for GSO related errors and fatals */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_DMAC_ALERT3_REG 0x29
/* enum: Collection of fatal stickies */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_DMAC_ERR_STICKY_REG 0x2a
/* enum: Stats for credits given to QDMA for H2C */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_DMAC_H2C_CRDT_CTR_REG 0x2b
/* enum: Counter of all packets delivered to C2H. Includes MC as well. */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_DMAC_C2H_PKTCNT_REG 0x2c
/* enum: S2IC Converter Status register */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_H2C_S2IC_STATUS 0x2d
/* enum: Event Controller Debug FIFO status register. Empty status of various
 * FIFOs in the EVC and egress interface of EVC.
 */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_EVC_DBG_FIFO_STAT 0x2e
/* enum: Counter of QDMA C2H events dropped. */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_DMAC_C2H_DROP_CTR1_REG 0x2f
/* enum: Counter of QDMA Dropped C2H packets. */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_DMAC_C2H_DROP_CTR2_REG 0x30
/* enum: Number of packets received by hub c net 2 host fifo. */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_SSS_C_H2_PACKETS_IN_TBL 0x31
/* enum: Number of packets received by hub net b fifo. */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_HUB_NB_SSS_B_H_PACKETS_IN_TBL 0x32
/* enum: Number of packets sent by hub net b fifo. */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_HUB_NB_SSS_B_PACKETS_OUT_TBL 0x33
/* enum: Number of packets received by rp2 hub fifo. */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_RE2_SSS_RP_PACKETS_IN_TBL 0x34
/* enum: Number of packets sent by rp2 hub fifo. */
#define          MC_CMD_DEVEL_DUMP_REGS_ENTRY_RE2_SSS_RP_PACKETS_OUT_TBL 0x35
#define       MC_CMD_DEVEL_DUMP_REGS_ENTRY_REG_LBN 0
#define       MC_CMD_DEVEL_DUMP_REGS_ENTRY_REG_WIDTH 32
/* If REG is a table, the table row. */
#define       MC_CMD_DEVEL_DUMP_REGS_ENTRY_ROW_OFST 4
#define       MC_CMD_DEVEL_DUMP_REGS_ENTRY_ROW_LEN 4
#define       MC_CMD_DEVEL_DUMP_REGS_ENTRY_ROW_LBN 32
#define       MC_CMD_DEVEL_DUMP_REGS_ENTRY_ROW_WIDTH 32
/* Address of the register (as seen by the MC) */
#define       MC_CMD_DEVEL_DUMP_REGS_ENTRY_ADDRESS_OFST 8
#define       MC_CMD_DEVEL_DUMP_REGS_ENTRY_ADDRESS_LEN 4
#define       MC_CMD_DEVEL_DUMP_REGS_ENTRY_ADDRESS_LBN 64
#define       MC_CMD_DEVEL_DUMP_REGS_ENTRY_ADDRESS_WIDTH 32
/* Value of the register */
#define       MC_CMD_DEVEL_DUMP_REGS_ENTRY_VALUE_OFST 12
#define       MC_CMD_DEVEL_DUMP_REGS_ENTRY_VALUE_LEN 4
#define       MC_CMD_DEVEL_DUMP_REGS_ENTRY_VALUE_LBN 96
#define       MC_CMD_DEVEL_DUMP_REGS_ENTRY_VALUE_WIDTH 32


/***********************************/
/* MC_CMD_DEVEL_DUMP_REGS
 * Dump an assortment of hopefully useful debug registers
 */
#define MC_CMD_DEVEL_DUMP_REGS 0x1b6
#define MC_CMD_DEVEL_DUMP_REGS_MSGSET 0x1b6
#undef MC_CMD_0x1b6_PRIVILEGE_CTG

#define MC_CMD_0x1b6_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_DEVEL_DUMP_REGS_IN msgrequest */
#define    MC_CMD_DEVEL_DUMP_REGS_IN_LEN 4
/* Which page of registers to retrieve. Page 0 always exists, later pages may
 * also exist if there are too many registers to fit in a single mcdi response.
 * NUM_PAGES in the response will tell you how many there are.
 */
#define       MC_CMD_DEVEL_DUMP_REGS_IN_PAGE_OFST 0
#define       MC_CMD_DEVEL_DUMP_REGS_IN_PAGE_LEN 4

/* MC_CMD_DEVEL_DUMP_REGS_OUT msgresponse */
#define    MC_CMD_DEVEL_DUMP_REGS_OUT_LENMIN 8
#define    MC_CMD_DEVEL_DUMP_REGS_OUT_LENMAX 248
#define    MC_CMD_DEVEL_DUMP_REGS_OUT_LENMAX_MCDI2 1016
#define    MC_CMD_DEVEL_DUMP_REGS_OUT_LEN(num) (8+16*(num))
#define    MC_CMD_DEVEL_DUMP_REGS_OUT_REGS_NUM(len) (((len)-8)/16)
/* Number of registers dumped in this response */
#define       MC_CMD_DEVEL_DUMP_REGS_OUT_NUM_REGS_OFST 0
#define       MC_CMD_DEVEL_DUMP_REGS_OUT_NUM_REGS_LEN 4
/* How many pages of registers are available to extract */
#define       MC_CMD_DEVEL_DUMP_REGS_OUT_NUM_PAGES_OFST 4
#define       MC_CMD_DEVEL_DUMP_REGS_OUT_NUM_PAGES_LEN 4
/* Array of MC_CMD_DEVEL_DUMP_REGS_ENTRY structs, one for each register */
#define       MC_CMD_DEVEL_DUMP_REGS_OUT_REGS_OFST 8
#define       MC_CMD_DEVEL_DUMP_REGS_OUT_REGS_LEN 16
#define       MC_CMD_DEVEL_DUMP_REGS_OUT_REGS_MINNUM 0
#define       MC_CMD_DEVEL_DUMP_REGS_OUT_REGS_MAXNUM 15
#define       MC_CMD_DEVEL_DUMP_REGS_OUT_REGS_MAXNUM_MCDI2 63

/* MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY structuredef: This structure is an alias
 * of MC_CMD_DEVEL_DUMP_REGS_ENTRY for backwards compatibility. Deprecated;
 * prefer MC_CMD_DEVEL_DUMP_REGS_ENTRY.
 */
#define    MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_LEN 16
/* What register this is */
#define       MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_REG_OFST 0
#define       MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_REG_LEN 4
/* enum: Catchall for registers that aren't in this enum. Nothing should be in
 * this long-term
 */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_UNKNOWN 0xffffffff
/* enum: S2IC Converter Debug Packet Counter register. Informs number of
 * packets passed through Converter.
 */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_H2C_S2IC_DBG_PKT_CNT 0x0
/* enum: IC2S Converter Debug Packet Counter register. Informs number of
 * packets passed through Converter.
 */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_C2H_IC2S_DBG_PKT_CNT 0x1
/* enum: Event Controller Tx path Debug register. Count of Moderator Tx events,
 * not incl D2C, VirtIO, Dproxy.
 */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_EVC_TX_DEBUG 0x2
/* enum: Event Controller Rx path Debug register. Count of Moderator Rx events.
 */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_EVC_RX_DEBUG 0x3
/* enum: Event Controller Debug register. Count of Total EVC events. */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_EVC_TOTAL_DEBUG 0x4
/* enum: Same info as EVC_RX_DEBUG; collected at different location in design
 */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_EVC_RX_EF100_DEBUG 0x5
/* enum: Same info as EVC_TX_DEBUG; collected at different location in design
 */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_EVC_TX_EF100_DEBUG 0x6
/* enum: Event Controller Debug register. Count of Tx VirtIO events. */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_EVC_TX_VIRTIO_DEBUG 0x7
/* enum: Event Controller Debug register. Count of Tx Descriptor Proxy events.
 */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_EVC_TX_DPRXY_DEBUG 0x8
/* enum: Event Controller Debug register. Count of Tx VirtQ Descriptor Proxy
 * events.
 */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_EVC_TX_VIRTQ_DPRXY_DEBUG 0x9
/* enum: Event Controller Debug register. Count of Tx Descriptor-to-Completion
 * events.
 */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_EVC_TX_D2C_DEBUG 0xa
/* enum: Event Controller Debug register. Count of Tx VirtIO Descriptor-to-
 * Completion events.
 */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_EVC_TX_VIRTQ_D2C_DEBUG 0xb
/* enum: Event Controller Debug register. Count of Tx Timestamp events. */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_EVC_TX_TSTAMP_DEBUG 0xc
/* enum: Event Controller Debug register. Count of Rx EvQ Timeout events. */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_EVC_RX_EVQ_TIMEOUT_DEBUG 0xd
/* enum: Event Controller Debug register. Count of MC events. */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_EVC_MC_DEBUG 0xe
/* enum: Event Controller Debug register. Count of EQDMA VirtIO Control events.
 */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_EVC_EQDMA_VIO_CTL_DEBUG 0xf
/* enum: Counter of QDMA Dropped C2H packets. */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_DMAC_C2H_DROP_CTR_REG 0x10
/* enum: Number of packets received by hub c host fifo. */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_SSS_C_H_PACKETS_IN_TBL 0x11
/* enum: Number of packets sent by hub c host fifo. */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_SSS_C_H_PACKETS_OUT_TBL 0x12
/* enum: Number of packets received by hub c plugin fifo. */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_SSS_C_P_PACKETS_IN_TBL 0x13
/* enum: Number of packets received by hub b host fifo. */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_SSS_B_H_PACKETS_IN_TBL 0x14
/* enum: Number of packets received by hub b net fifo. */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_SSS_B_N_PACKETS_IN_TBL 0x15
/* enum: Number of packets received by hub b host fifo. */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_SSS_B_PH_PACKETS_IN_TBL 0x16
/* enum: Number of packets received by hub b net fifo. */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_SSS_B_PN_PACKETS_IN_TBL 0x17
/* enum: Number of packets sent by hub b net fifo. */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_SSS_B_PACKETS_OUT_TBL 0x18
/* enum: Number of packets received by hub c net fifo. */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_SSS_C_N_PACKETS_IN_TBL 0x19
/* enum: Number of packets sent by hub c net fifo. */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_SSS_C_N_PACKETS_OUT_TBL 0x1a
/* enum: Number of packets received by hub ha fifo. */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_SSS_HA_PACKETS_IN_TBL 0x1b
/* enum: Number of packets received by hub ha host shadow fifo. */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_SSS_HA_PH_PACKETS_IN_TBL 0x1c
/* enum: Number of packets received by hub ha fifo. */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_SSS_HA_PACKETS_OUT_TBL 0x1d
/* enum: Number of packets received by hub d fifo. */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_SSS_D_PACKETS_IN_TBL 0x1e
/* enum: Number of packets received by hub d plugin fifo. */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_SSS_D_P_PACKETS_IN_TBL 0x1f
/* enum: Number of packets received by hub d plugin fifo. */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_SSS_D_O_PACKETS_IN_TBL 0x20
/* enum: Number of packets sent to dmac from hub d. */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_SSS_D_PACKETS_OUT_TBL 0x21
/* enum: Number of packets received by hub na fifo. */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_SSS_NA_PACKETS_IN_TBL 0x22
/* enum: Number of packets dropped by hub na fifo. */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_SSS_NA_PACKETS_DROPPED_TBL 0x23
/* enum: Number of packets sent by hub na fifo. */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_SSS_NA_PACKETS_OUT_TBL 0x24
/* enum: Number of packets received by rp hub fifo. */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_SSS_RP_PACKETS_IN_TBL 0x25
/* enum: Number of packets sent by rp hub fifo. */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_SSS_RP_PACKETS_OUT_TBL 0x26
/* enum: Information about the most recent drop */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_QDMA_C2H_DROP_STATUS_REG 0x27
/* enum: Virt IO alert register for virtIO related errors and fatals */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_DMAC_ALERT2_REG 0x28
/* enum: VirtualIO TSO alert register for GSO related errors and fatals */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_DMAC_ALERT3_REG 0x29
/* enum: Collection of fatal stickies */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_DMAC_ERR_STICKY_REG 0x2a
/* enum: Stats for credits given to QDMA for H2C */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_DMAC_H2C_CRDT_CTR_REG 0x2b
/* enum: Counter of all packets delivered to C2H. Includes MC as well. */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_DMAC_C2H_PKTCNT_REG 0x2c
/* enum: S2IC Converter Status register */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_H2C_S2IC_STATUS 0x2d
/* enum: Event Controller Debug FIFO status register. Empty status of various
 * FIFOs in the EVC and egress interface of EVC.
 */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_EVC_DBG_FIFO_STAT 0x2e
/* enum: Counter of QDMA C2H events dropped. */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_DMAC_C2H_DROP_CTR1_REG 0x2f
/* enum: Counter of QDMA Dropped C2H packets. */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_DMAC_C2H_DROP_CTR2_REG 0x30
/* enum: Number of packets received by hub c net 2 host fifo. */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_SSS_C_H2_PACKETS_IN_TBL 0x31
/* enum: Number of packets received by hub net b fifo. */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_HUB_NB_SSS_B_H_PACKETS_IN_TBL 0x32
/* enum: Number of packets sent by hub net b fifo. */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_HUB_NB_SSS_B_PACKETS_OUT_TBL 0x33
/* enum: Number of packets received by rp2 hub fifo. */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_RE2_SSS_RP_PACKETS_IN_TBL 0x34
/* enum: Number of packets sent by rp2 hub fifo. */
#define          MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_RE2_SSS_RP_PACKETS_OUT_TBL 0x35
#define       MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_REG_LBN 0
#define       MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_REG_WIDTH 32
/* If REG is a table, the table row. */
#define       MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_ROW_OFST 4
#define       MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_ROW_LEN 4
#define       MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_ROW_LBN 32
#define       MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_ROW_WIDTH 32
/* Address of the register (as seen by the MC) */
#define       MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_ADDRESS_OFST 8
#define       MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_ADDRESS_LEN 4
#define       MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_ADDRESS_LBN 64
#define       MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_ADDRESS_WIDTH 32
/* Value of the register */
#define       MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_VALUE_OFST 12
#define       MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_VALUE_LEN 4
#define       MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_VALUE_LBN 96
#define       MC_CMD_DEVEL_DUMP_RHEAD_REGS_ENTRY_VALUE_WIDTH 32


/***********************************/
/* MC_CMD_DEVEL_DUMP_RHEAD_REGS
 * This command is an alias of MC_CMD_DEVEL_DUMP_REGS for backwards
 * compatibility. Deprecated; prefer MC_CMD_DEVEL_DUMP_REGS.
 */
#define MC_CMD_DEVEL_DUMP_RHEAD_REGS 0x1b6
#define MC_CMD_DEVEL_DUMP_RHEAD_REGS_MSGSET 0x1b6
/*      MC_CMD_0x1b6_PRIVILEGE_CTG SRIOV_CTG_GENERAL */

/* MC_CMD_DEVEL_DUMP_RHEAD_REGS_IN msgrequest */
#define    MC_CMD_DEVEL_DUMP_RHEAD_REGS_IN_LEN 4
/* Which page of registers to retrieve. Page 0 always exists, later pages may
 * also exist if there are too many registers to fit in a single mcdi response.
 * NUM_PAGES in the response will tell you how many there are.
 */
#define       MC_CMD_DEVEL_DUMP_RHEAD_REGS_IN_PAGE_OFST 0
#define       MC_CMD_DEVEL_DUMP_RHEAD_REGS_IN_PAGE_LEN 4

/* MC_CMD_DEVEL_DUMP_RHEAD_REGS_OUT msgresponse */
#define    MC_CMD_DEVEL_DUMP_RHEAD_REGS_OUT_LENMIN 8
#define    MC_CMD_DEVEL_DUMP_RHEAD_REGS_OUT_LENMAX 248
#define    MC_CMD_DEVEL_DUMP_RHEAD_REGS_OUT_LENMAX_MCDI2 1016
#define    MC_CMD_DEVEL_DUMP_RHEAD_REGS_OUT_LEN(num) (8+16*(num))
#define    MC_CMD_DEVEL_DUMP_RHEAD_REGS_OUT_REGS_NUM(len) (((len)-8)/16)
/* Number of registers dumped in this response */
#define       MC_CMD_DEVEL_DUMP_RHEAD_REGS_OUT_NUM_REGS_OFST 0
#define       MC_CMD_DEVEL_DUMP_RHEAD_REGS_OUT_NUM_REGS_LEN 4
/* How many pages of registers are available to extract */
#define       MC_CMD_DEVEL_DUMP_RHEAD_REGS_OUT_NUM_PAGES_OFST 4
#define       MC_CMD_DEVEL_DUMP_RHEAD_REGS_OUT_NUM_PAGES_LEN 4
/* Array of MC_CMD_DEVEL_DUMP_REGS_ENTRY structs, one for each register */
#define       MC_CMD_DEVEL_DUMP_RHEAD_REGS_OUT_REGS_OFST 8
#define       MC_CMD_DEVEL_DUMP_RHEAD_REGS_OUT_REGS_LEN 16
#define       MC_CMD_DEVEL_DUMP_RHEAD_REGS_OUT_REGS_MINNUM 0
#define       MC_CMD_DEVEL_DUMP_RHEAD_REGS_OUT_REGS_MAXNUM 15
#define       MC_CMD_DEVEL_DUMP_RHEAD_REGS_OUT_REGS_MAXNUM_MCDI2 63


/***********************************/
/* MC_CMD_DEVEL_CLIENT_PRIVILEGE_MODIFY
 * Grant or revoke privileges from a set of clients (see MC_CMD_CLIENT_ALLOC).
 * If the requestor has GRP_ADMIN privilege then CLIENT_ID may be any value,
 * otherwise CLIENT_ID must be a descendant of the requestor or the requestor
 * itself. Attempting to grant privileges not possessed by the requestor will
 * fail, however it is allowed to construct a situation where a client has a
 * privilege not posessed by its direct parent. Removing privileges from a
 * client will not affect any activities previously performed by that client,
 * for example if a client has set promiscuous mode and then GRP_PROMISCUOUS is
 * revoked, the client will be able to remain in promiscuous mode indefinitely
 * (but will not be able to reenter if it drops promiscuous mode). It is
 * possible for an admin client to use this command to remove GRP_ADMIN from
 * all clients, including itself. If this happens, the NIC must be rebooted to
 * recover. See XN-200265-TC for background and the client hierarchy.
 */
#define MC_CMD_DEVEL_CLIENT_PRIVILEGE_MODIFY 0x1bd
#define MC_CMD_DEVEL_CLIENT_PRIVILEGE_MODIFY_MSGSET 0x1bd
#undef MC_CMD_0x1bd_PRIVILEGE_CTG

#define MC_CMD_0x1bd_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_DEVEL_CLIENT_PRIVILEGE_MODIFY_IN msgrequest */
#define    MC_CMD_DEVEL_CLIENT_PRIVILEGE_MODIFY_IN_LEN 24
/* The ID of the client to modify. The special value MC_CMD_CLIENT_ID_SELF is
 * equivalent to the requestor's client ID.
 */
#define       MC_CMD_DEVEL_CLIENT_PRIVILEGE_MODIFY_IN_CLIENT_ID_OFST 0
#define       MC_CMD_DEVEL_CLIENT_PRIVILEGE_MODIFY_IN_CLIENT_ID_LEN 4
/* Flags specifying the set of clients to be modified. */
#define       MC_CMD_DEVEL_CLIENT_PRIVILEGE_MODIFY_IN_SCOPE_OFST 4
#define       MC_CMD_DEVEL_CLIENT_PRIVILEGE_MODIFY_IN_SCOPE_LEN 4
#define        MC_CMD_DEVEL_CLIENT_PRIVILEGE_MODIFY_IN_SCOPE_CLIENT_OFST 4
#define        MC_CMD_DEVEL_CLIENT_PRIVILEGE_MODIFY_IN_SCOPE_CLIENT_LBN 0
#define        MC_CMD_DEVEL_CLIENT_PRIVILEGE_MODIFY_IN_SCOPE_CLIENT_WIDTH 1
#define        MC_CMD_DEVEL_CLIENT_PRIVILEGE_MODIFY_IN_SCOPE_DESCENDANTS_OFST 4
#define        MC_CMD_DEVEL_CLIENT_PRIVILEGE_MODIFY_IN_SCOPE_DESCENDANTS_LBN 1
#define        MC_CMD_DEVEL_CLIENT_PRIVILEGE_MODIFY_IN_SCOPE_DESCENDANTS_WIDTH 1
/* Set of privilege bits to be revoked from the scoped set of clients. For
 * privilege definitions refer to the command MC_CMD_PRIVILEGE_MASK. Bits which
 * are neither cleared nor set remain unmodified.
 */
#define       MC_CMD_DEVEL_CLIENT_PRIVILEGE_MODIFY_IN_CLEAR_MASK_OFST 8
#define       MC_CMD_DEVEL_CLIENT_PRIVILEGE_MODIFY_IN_CLEAR_MASK_LEN 8
#define       MC_CMD_DEVEL_CLIENT_PRIVILEGE_MODIFY_IN_CLEAR_MASK_LO_OFST 8
#define       MC_CMD_DEVEL_CLIENT_PRIVILEGE_MODIFY_IN_CLEAR_MASK_LO_LEN 4
#define       MC_CMD_DEVEL_CLIENT_PRIVILEGE_MODIFY_IN_CLEAR_MASK_LO_LBN 64
#define       MC_CMD_DEVEL_CLIENT_PRIVILEGE_MODIFY_IN_CLEAR_MASK_LO_WIDTH 32
#define       MC_CMD_DEVEL_CLIENT_PRIVILEGE_MODIFY_IN_CLEAR_MASK_HI_OFST 12
#define       MC_CMD_DEVEL_CLIENT_PRIVILEGE_MODIFY_IN_CLEAR_MASK_HI_LEN 4
#define       MC_CMD_DEVEL_CLIENT_PRIVILEGE_MODIFY_IN_CLEAR_MASK_HI_LBN 96
#define       MC_CMD_DEVEL_CLIENT_PRIVILEGE_MODIFY_IN_CLEAR_MASK_HI_WIDTH 32
/* Set of privileges to be granted to the scoped set of clients. For privilege
 * definitions refer to the command MC_CMD_PRIVILEGE_MASK. Bits which are
 * neither cleared nor set remain unmodified.
 */
#define       MC_CMD_DEVEL_CLIENT_PRIVILEGE_MODIFY_IN_SET_MASK_OFST 16
#define       MC_CMD_DEVEL_CLIENT_PRIVILEGE_MODIFY_IN_SET_MASK_LEN 8
#define       MC_CMD_DEVEL_CLIENT_PRIVILEGE_MODIFY_IN_SET_MASK_LO_OFST 16
#define       MC_CMD_DEVEL_CLIENT_PRIVILEGE_MODIFY_IN_SET_MASK_LO_LEN 4
#define       MC_CMD_DEVEL_CLIENT_PRIVILEGE_MODIFY_IN_SET_MASK_LO_LBN 128
#define       MC_CMD_DEVEL_CLIENT_PRIVILEGE_MODIFY_IN_SET_MASK_LO_WIDTH 32
#define       MC_CMD_DEVEL_CLIENT_PRIVILEGE_MODIFY_IN_SET_MASK_HI_OFST 20
#define       MC_CMD_DEVEL_CLIENT_PRIVILEGE_MODIFY_IN_SET_MASK_HI_LEN 4
#define       MC_CMD_DEVEL_CLIENT_PRIVILEGE_MODIFY_IN_SET_MASK_HI_LBN 160
#define       MC_CMD_DEVEL_CLIENT_PRIVILEGE_MODIFY_IN_SET_MASK_HI_WIDTH 32

/* MC_CMD_DEVEL_CLIENT_PRIVILEGE_MODIFY_OUT msgresponse */
#define    MC_CMD_DEVEL_CLIENT_PRIVILEGE_MODIFY_OUT_LEN 0


/***********************************/
/* MC_CMD_PLUGIN_ADMIN
 * Perform administrative state actions on an extension.
 */
#define MC_CMD_PLUGIN_ADMIN 0x1c2
#define MC_CMD_PLUGIN_ADMIN_MSGSET 0x1c2
#undef MC_CMD_0x1c2_PRIVILEGE_CTG

#define MC_CMD_0x1c2_PRIVILEGE_CTG SRIOV_CTG_ADMIN

/* MC_CMD_PLUGIN_ADMIN_IN msgrequest */
#define    MC_CMD_PLUGIN_ADMIN_IN_LEN 8
/* Handle returned by MC_CMD_PLUGIN_ALLOC_OUT */
#define       MC_CMD_PLUGIN_ADMIN_IN_HANDLE_OFST 0
#define       MC_CMD_PLUGIN_ADMIN_IN_HANDLE_LEN 4
/* Modification to make to the extension. */
#define       MC_CMD_PLUGIN_ADMIN_IN_ACTION_OFST 4
#define       MC_CMD_PLUGIN_ADMIN_IN_ACTION_LEN 1
/* enum: Disable access to this extension. All existing handles to the
 * extension are invalidated (all commands except MC_CMD_PLUGIN_FREE will
 * return an error), except the handle which called this command. The handle
 * which called this command is implicitly converted to a FLAG_INFO_ONLY
 * handle, if it wasn't already. All assigned privileges for accessing this
 * extension (see MC_CMD_PLUGIN_GET_META_GLOBAL / PRIVILEGE_BIT) are
 * cleared/revoked. The extension's finaliser is run.
 */
#define          MC_CMD_PLUGIN_ADMIN_IN_DISABLE 0x0
/* enum: Allow access to this extension. This will only allow ADMIN clients
 * access. Use MC_CMD_CLIENT_PRIVILEGE_MODIFY with
 * MC_CMD_PLUGIN_GET_META_GLOBAL / PRIVILEGE_BIT to grant access to others.
 */
#define          MC_CMD_PLUGIN_ADMIN_IN_ENABLE 0x1
/* Reserved. */
#define       MC_CMD_PLUGIN_ADMIN_IN_RESERVED_OFST 5
#define       MC_CMD_PLUGIN_ADMIN_IN_RESERVED_LEN 3

/* MC_CMD_PLUGIN_ADMIN_OUT msgresponse */
#define    MC_CMD_PLUGIN_ADMIN_OUT_LEN 0


/***********************************/
/* MC_CMD_DEVEL_SET_FUNCTION_PERSONALITY
 * Set the BAR decode personality of a function. Lasts until MC reboot.
 * (Temporary MCDI, will most likely be replaced by something which can also
 * set device id and persist changes).
 */
#define MC_CMD_DEVEL_SET_FUNCTION_PERSONALITY 0x171
#define MC_CMD_DEVEL_SET_FUNCTION_PERSONALITY_MSGSET 0x171
#undef MC_CMD_0x171_PRIVILEGE_CTG

#define MC_CMD_0x171_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_DEVEL_SET_FUNCTION_PERSONALITY_IN msgrequest */
#define    MC_CMD_DEVEL_SET_FUNCTION_PERSONALITY_IN_LEN 14
/* Version of this DEVEL API. Must be 0. */
#define       MC_CMD_DEVEL_SET_FUNCTION_PERSONALITY_IN_VERSION_OFST 0
#define       MC_CMD_DEVEL_SET_FUNCTION_PERSONALITY_IN_VERSION_LEN 4
/* PCIe interface of the function to set personality of (typically will be the
 * host or the embedded ARM).
 */
#define       MC_CMD_DEVEL_SET_FUNCTION_PERSONALITY_IN_PCIE_INTERFACE_OFST 4
#define       MC_CMD_DEVEL_SET_FUNCTION_PERSONALITY_IN_PCIE_INTERFACE_LEN 4
/*            Enum values, see field(s): */
/*               PCIE_INTERFACE */
/* PF number of the function to set personality of. */
#define       MC_CMD_DEVEL_SET_FUNCTION_PERSONALITY_IN_TARGET_PF_OFST 8
#define       MC_CMD_DEVEL_SET_FUNCTION_PERSONALITY_IN_TARGET_PF_LEN 2
/* enum: Use the same PF as the calling function */
#define          MC_CMD_DEVEL_SET_FUNCTION_PERSONALITY_IN_CURRENT_PF 0xffff
/* The VF number of the function to set personality of. If VF_NULL is passed
 * in, configure the PF, not a VF.
 */
#define       MC_CMD_DEVEL_SET_FUNCTION_PERSONALITY_IN_TARGET_VF_OFST 10
#define       MC_CMD_DEVEL_SET_FUNCTION_PERSONALITY_IN_TARGET_VF_LEN 2
/* enum: Configure the PF. */
#define          MC_CMD_DEVEL_SET_FUNCTION_PERSONALITY_IN_VF_NULL 0xffff
/* The personality to set. The meanings of the personalities are defined in
 * SF-120734-TC with more information in SF-122717-TC.
 */
#define       MC_CMD_DEVEL_SET_FUNCTION_PERSONALITY_IN_PERSONALITY_OFST 12
#define       MC_CMD_DEVEL_SET_FUNCTION_PERSONALITY_IN_PERSONALITY_LEN 2
/*            Enum values, see field(s): */
/*               FUNCTION_PERSONALITY/ID */

/* MC_CMD_DEVEL_SET_FUNCTION_PERSONALITY_OUT msgresponse */
#define    MC_CMD_DEVEL_SET_FUNCTION_PERSONALITY_OUT_LEN 0


/***********************************/
/* MC_CMD_MAE_COUNTER_LIST_ALLOC
 * Allocate a list of match-action-engine counters
 */
#define MC_CMD_MAE_COUNTER_LIST_ALLOC 0x145
#define MC_CMD_MAE_COUNTER_LIST_ALLOC_MSGSET 0x145
#undef MC_CMD_0x145_PRIVILEGE_CTG

#define MC_CMD_0x145_PRIVILEGE_CTG SRIOV_CTG_MAE

/* MC_CMD_MAE_COUNTER_LIST_ALLOC_IN msgrequest */
#define    MC_CMD_MAE_COUNTER_LIST_ALLOC_IN_LENMIN 8
#define    MC_CMD_MAE_COUNTER_LIST_ALLOC_IN_LENMAX 252
#define    MC_CMD_MAE_COUNTER_LIST_ALLOC_IN_LENMAX_MCDI2 1020
#define    MC_CMD_MAE_COUNTER_LIST_ALLOC_IN_LEN(num) (4+4*(num))
#define    MC_CMD_MAE_COUNTER_LIST_ALLOC_IN_COUNTER_IDS_NUM(len) (((len)-4)/4)
/* Number of elements in the COUNTER_IDS field. */
#define       MC_CMD_MAE_COUNTER_LIST_ALLOC_IN_COUNTER_ID_COUNT_OFST 0
#define       MC_CMD_MAE_COUNTER_LIST_ALLOC_IN_COUNTER_ID_COUNT_LEN 4
/* An array containing the IDs for the counters that should comprise this
 * counter list.
 */
#define       MC_CMD_MAE_COUNTER_LIST_ALLOC_IN_COUNTER_IDS_OFST 4
#define       MC_CMD_MAE_COUNTER_LIST_ALLOC_IN_COUNTER_IDS_LEN 4
#define       MC_CMD_MAE_COUNTER_LIST_ALLOC_IN_COUNTER_IDS_MINNUM 1
#define       MC_CMD_MAE_COUNTER_LIST_ALLOC_IN_COUNTER_IDS_MAXNUM 62
#define       MC_CMD_MAE_COUNTER_LIST_ALLOC_IN_COUNTER_IDS_MAXNUM_MCDI2 254

/* MC_CMD_MAE_COUNTER_LIST_ALLOC_OUT msgresponse */
#define    MC_CMD_MAE_COUNTER_LIST_ALLOC_OUT_LEN 4
#define       MC_CMD_MAE_COUNTER_LIST_ALLOC_OUT_COUNTER_LIST_ID_OFST 0
#define       MC_CMD_MAE_COUNTER_LIST_ALLOC_OUT_COUNTER_LIST_ID_LEN 4
/* enum: A counter ID that is guaranteed never to represent a real counter */
#define          MC_CMD_MAE_COUNTER_LIST_ALLOC_OUT_COUNTER_LIST_ID_NULL 0xffffffff
/*            Other enum values, see field(s): */
/*               MAE_COUNTER_ID */


/***********************************/
/* MC_CMD_MAE_COUNTER_LIST_FREE
 * Free match-action-engine counter lists
 */
#define MC_CMD_MAE_COUNTER_LIST_FREE 0x146
#define MC_CMD_MAE_COUNTER_LIST_FREE_MSGSET 0x146
#undef MC_CMD_0x146_PRIVILEGE_CTG

#define MC_CMD_0x146_PRIVILEGE_CTG SRIOV_CTG_MAE

/* MC_CMD_MAE_COUNTER_LIST_FREE_IN msgrequest */
#define    MC_CMD_MAE_COUNTER_LIST_FREE_IN_LENMIN 4
#define    MC_CMD_MAE_COUNTER_LIST_FREE_IN_LENMAX 128
#define    MC_CMD_MAE_COUNTER_LIST_FREE_IN_LENMAX_MCDI2 128
#define    MC_CMD_MAE_COUNTER_LIST_FREE_IN_LEN(num) (0+4*(num))
#define    MC_CMD_MAE_COUNTER_LIST_FREE_IN_FREE_COUNTER_LIST_ID_NUM(len) (((len)-0)/4)
/* Same semantics as MC_CMD_MAE_COUNTER_FREE */
#define       MC_CMD_MAE_COUNTER_LIST_FREE_IN_FREE_COUNTER_LIST_ID_OFST 0
#define       MC_CMD_MAE_COUNTER_LIST_FREE_IN_FREE_COUNTER_LIST_ID_LEN 4
#define       MC_CMD_MAE_COUNTER_LIST_FREE_IN_FREE_COUNTER_LIST_ID_MINNUM 1
#define       MC_CMD_MAE_COUNTER_LIST_FREE_IN_FREE_COUNTER_LIST_ID_MAXNUM 32
#define       MC_CMD_MAE_COUNTER_LIST_FREE_IN_FREE_COUNTER_LIST_ID_MAXNUM_MCDI2 32

/* MC_CMD_MAE_COUNTER_LIST_FREE_OUT msgresponse */
#define    MC_CMD_MAE_COUNTER_LIST_FREE_OUT_LENMIN 4
#define    MC_CMD_MAE_COUNTER_LIST_FREE_OUT_LENMAX 128
#define    MC_CMD_MAE_COUNTER_LIST_FREE_OUT_LENMAX_MCDI2 128
#define    MC_CMD_MAE_COUNTER_LIST_FREE_OUT_LEN(num) (0+4*(num))
#define    MC_CMD_MAE_COUNTER_LIST_FREE_OUT_FREED_COUNTER_LIST_ID_NUM(len) (((len)-0)/4)
/* Same semantics as MC_CMD_MAE_COUNTER_FREE */
#define       MC_CMD_MAE_COUNTER_LIST_FREE_OUT_FREED_COUNTER_LIST_ID_OFST 0
#define       MC_CMD_MAE_COUNTER_LIST_FREE_OUT_FREED_COUNTER_LIST_ID_LEN 4
#define       MC_CMD_MAE_COUNTER_LIST_FREE_OUT_FREED_COUNTER_LIST_ID_MINNUM 1
#define       MC_CMD_MAE_COUNTER_LIST_FREE_OUT_FREED_COUNTER_LIST_ID_MAXNUM 32
#define       MC_CMD_MAE_COUNTER_LIST_FREE_OUT_FREED_COUNTER_LIST_ID_MAXNUM_MCDI2 32


/***********************************/
/* MC_CMD_MAE_OR_CLASS_REG
 * Register an outer rule class. For rule allocation to succeed, the rule's
 * class must be supported and allocated (rule allocation includes an implicit
 * attempt to allocate the rule's class, which will fail if the class is not
 * supported), there must be sufficient rule resources, and rule's actions must
 * be supported (which a driver can determine ahead of time). Where rule
 * allocation is only permitted to fail to due lack of rule resources, drivers
 * register the relevent rule resource, guaranteeing that it is supported and
 * remains allocated until unregistered by the driver. The class to be
 * registered is identified by the priority and fields mask/value pairs of an
 * outer rule, those being the properties of an outer rule that can affect the
 * mapping from outer rule to outer rule class. See SF-122526-TC-A for further
 * details.
 */
#define MC_CMD_MAE_OR_CLASS_REG 0x156
#define MC_CMD_MAE_OR_CLASS_REG_MSGSET 0x156
#undef MC_CMD_0x156_PRIVILEGE_CTG

#define MC_CMD_0x156_PRIVILEGE_CTG SRIOV_CTG_MAE

/* MC_CMD_MAE_OR_CLASS_REG_IN msgrequest */
#define    MC_CMD_MAE_OR_CLASS_REG_IN_LENMIN 4
#define    MC_CMD_MAE_OR_CLASS_REG_IN_LENMAX 252
#define    MC_CMD_MAE_OR_CLASS_REG_IN_LENMAX_MCDI2 1020
#define    MC_CMD_MAE_OR_CLASS_REG_IN_LEN(num) (4+1*(num))
#define    MC_CMD_MAE_OR_CLASS_REG_IN_FIELDS_NUM(len) (((len)-4)/1)
#define       MC_CMD_MAE_OR_CLASS_REG_IN_PRIO_OFST 0
#define       MC_CMD_MAE_OR_CLASS_REG_IN_PRIO_LEN 4
/* Structure of the format MAE_ENC_FIELD_PAIRS */
#define       MC_CMD_MAE_OR_CLASS_REG_IN_FIELDS_OFST 4
#define       MC_CMD_MAE_OR_CLASS_REG_IN_FIELDS_LEN 1
#define       MC_CMD_MAE_OR_CLASS_REG_IN_FIELDS_MINNUM 0
#define       MC_CMD_MAE_OR_CLASS_REG_IN_FIELDS_MAXNUM 248
#define       MC_CMD_MAE_OR_CLASS_REG_IN_FIELDS_MAXNUM_MCDI2 1016

/* MC_CMD_MAE_OR_CLASS_REG_OUT msgresponse */
#define    MC_CMD_MAE_OR_CLASS_REG_OUT_LEN 4
#define       MC_CMD_MAE_OR_CLASS_REG_OUT_ORC_HANDLE_OFST 0
#define       MC_CMD_MAE_OR_CLASS_REG_OUT_ORC_HANDLE_LEN 4
/* enum: An outer rule class handle that is guaranteed never to represent an
 * outer rule class
 */
#define          MC_CMD_MAE_OR_CLASS_REG_OUT_OUTER_RULE_CLASS_HANDLE_NULL 0xffffffff


/***********************************/
/* MC_CMD_MAE_OR_CLASS_UNREG
 */
#define MC_CMD_MAE_OR_CLASS_UNREG 0x157
#define MC_CMD_MAE_OR_CLASS_UNREG_MSGSET 0x157
#undef MC_CMD_0x157_PRIVILEGE_CTG

#define MC_CMD_0x157_PRIVILEGE_CTG SRIOV_CTG_MAE

/* MC_CMD_MAE_OR_CLASS_UNREG_IN msgrequest */
#define    MC_CMD_MAE_OR_CLASS_UNREG_IN_LENMIN 4
#define    MC_CMD_MAE_OR_CLASS_UNREG_IN_LENMAX 128
#define    MC_CMD_MAE_OR_CLASS_UNREG_IN_LENMAX_MCDI2 128
#define    MC_CMD_MAE_OR_CLASS_UNREG_IN_LEN(num) (0+4*(num))
#define    MC_CMD_MAE_OR_CLASS_UNREG_IN_ORC_HANDLE_NUM(len) (((len)-0)/4)
/* Same semantics as MC_CMD_MAE_COUNTER_FREE */
#define       MC_CMD_MAE_OR_CLASS_UNREG_IN_ORC_HANDLE_OFST 0
#define       MC_CMD_MAE_OR_CLASS_UNREG_IN_ORC_HANDLE_LEN 4
#define       MC_CMD_MAE_OR_CLASS_UNREG_IN_ORC_HANDLE_MINNUM 1
#define       MC_CMD_MAE_OR_CLASS_UNREG_IN_ORC_HANDLE_MAXNUM 32
#define       MC_CMD_MAE_OR_CLASS_UNREG_IN_ORC_HANDLE_MAXNUM_MCDI2 32

/* MC_CMD_MAE_OR_CLASS_UNREG_OUT msgresponse */
#define    MC_CMD_MAE_OR_CLASS_UNREG_OUT_LENMIN 4
#define    MC_CMD_MAE_OR_CLASS_UNREG_OUT_LENMAX 128
#define    MC_CMD_MAE_OR_CLASS_UNREG_OUT_LENMAX_MCDI2 128
#define    MC_CMD_MAE_OR_CLASS_UNREG_OUT_LEN(num) (0+4*(num))
#define    MC_CMD_MAE_OR_CLASS_UNREG_OUT_UNREGD_ORC_HANDLE_NUM(len) (((len)-0)/4)
/* Same semantics as MC_CMD_MAE_COUNTER_FREE */
#define       MC_CMD_MAE_OR_CLASS_UNREG_OUT_UNREGD_ORC_HANDLE_OFST 0
#define       MC_CMD_MAE_OR_CLASS_UNREG_OUT_UNREGD_ORC_HANDLE_LEN 4
#define       MC_CMD_MAE_OR_CLASS_UNREG_OUT_UNREGD_ORC_HANDLE_MINNUM 1
#define       MC_CMD_MAE_OR_CLASS_UNREG_OUT_UNREGD_ORC_HANDLE_MAXNUM 32
#define       MC_CMD_MAE_OR_CLASS_UNREG_OUT_UNREGD_ORC_HANDLE_MAXNUM_MCDI2 32


/***********************************/
/* MC_CMD_MAE_AR_CLASS_REG
 * Same semantics as MC_CMD_MAE_OR_CLASS_REG
 */
#define MC_CMD_MAE_AR_CLASS_REG 0x158
#define MC_CMD_MAE_AR_CLASS_REG_MSGSET 0x158
#undef MC_CMD_0x158_PRIVILEGE_CTG

#define MC_CMD_0x158_PRIVILEGE_CTG SRIOV_CTG_MAE

/* MC_CMD_MAE_AR_CLASS_REG_IN msgrequest */
#define    MC_CMD_MAE_AR_CLASS_REG_IN_LENMIN 4
#define    MC_CMD_MAE_AR_CLASS_REG_IN_LENMAX 252
#define    MC_CMD_MAE_AR_CLASS_REG_IN_LENMAX_MCDI2 1020
#define    MC_CMD_MAE_AR_CLASS_REG_IN_LEN(num) (4+1*(num))
#define    MC_CMD_MAE_AR_CLASS_REG_IN_FIELDS_NUM(len) (((len)-4)/1)
#define       MC_CMD_MAE_AR_CLASS_REG_IN_PRIO_OFST 0
#define       MC_CMD_MAE_AR_CLASS_REG_IN_PRIO_LEN 4
/* Structure of the format MAE_FIELD_MASK_VALUE_PAIRS */
#define       MC_CMD_MAE_AR_CLASS_REG_IN_FIELDS_OFST 4
#define       MC_CMD_MAE_AR_CLASS_REG_IN_FIELDS_LEN 1
#define       MC_CMD_MAE_AR_CLASS_REG_IN_FIELDS_MINNUM 0
#define       MC_CMD_MAE_AR_CLASS_REG_IN_FIELDS_MAXNUM 248
#define       MC_CMD_MAE_AR_CLASS_REG_IN_FIELDS_MAXNUM_MCDI2 1016

/* MC_CMD_MAE_AR_CLASS_REG_OUT msgresponse */
#define    MC_CMD_MAE_AR_CLASS_REG_OUT_LEN 4
#define       MC_CMD_MAE_AR_CLASS_REG_OUT_ARC_HANDLE_OFST 0
#define       MC_CMD_MAE_AR_CLASS_REG_OUT_ARC_HANDLE_LEN 4
/* enum: An action rule class handle that is guaranteed never to represent an
 * action rule class
 */
#define          MC_CMD_MAE_AR_CLASS_REG_OUT_ACTION_RULE_CLASS_HANDLE_NULL 0xffffffff


/***********************************/
/* MC_CMD_MAE_AR_CLASS_UNREG
 */
#define MC_CMD_MAE_AR_CLASS_UNREG 0x159
#define MC_CMD_MAE_AR_CLASS_UNREG_MSGSET 0x159
#undef MC_CMD_0x159_PRIVILEGE_CTG

#define MC_CMD_0x159_PRIVILEGE_CTG SRIOV_CTG_MAE

/* MC_CMD_MAE_AR_CLASS_UNREG_IN msgrequest */
#define    MC_CMD_MAE_AR_CLASS_UNREG_IN_LENMIN 4
#define    MC_CMD_MAE_AR_CLASS_UNREG_IN_LENMAX 128
#define    MC_CMD_MAE_AR_CLASS_UNREG_IN_LENMAX_MCDI2 128
#define    MC_CMD_MAE_AR_CLASS_UNREG_IN_LEN(num) (0+4*(num))
#define    MC_CMD_MAE_AR_CLASS_UNREG_IN_ARC_HANDLE_NUM(len) (((len)-0)/4)
/* Same semantics as MC_CMD_MAE_COUNTER_FREE */
#define       MC_CMD_MAE_AR_CLASS_UNREG_IN_ARC_HANDLE_OFST 0
#define       MC_CMD_MAE_AR_CLASS_UNREG_IN_ARC_HANDLE_LEN 4
#define       MC_CMD_MAE_AR_CLASS_UNREG_IN_ARC_HANDLE_MINNUM 1
#define       MC_CMD_MAE_AR_CLASS_UNREG_IN_ARC_HANDLE_MAXNUM 32
#define       MC_CMD_MAE_AR_CLASS_UNREG_IN_ARC_HANDLE_MAXNUM_MCDI2 32

/* MC_CMD_MAE_AR_CLASS_UNREG_OUT msgresponse */
#define    MC_CMD_MAE_AR_CLASS_UNREG_OUT_LENMIN 4
#define    MC_CMD_MAE_AR_CLASS_UNREG_OUT_LENMAX 128
#define    MC_CMD_MAE_AR_CLASS_UNREG_OUT_LENMAX_MCDI2 128
#define    MC_CMD_MAE_AR_CLASS_UNREG_OUT_LEN(num) (0+4*(num))
#define    MC_CMD_MAE_AR_CLASS_UNREG_OUT_UNREGD_ARC_HANDLE_NUM(len) (((len)-0)/4)
/* Same semantics as MC_CMD_MAE_COUNTER_FREE */
#define       MC_CMD_MAE_AR_CLASS_UNREG_OUT_UNREGD_ARC_HANDLE_OFST 0
#define       MC_CMD_MAE_AR_CLASS_UNREG_OUT_UNREGD_ARC_HANDLE_LEN 4
#define       MC_CMD_MAE_AR_CLASS_UNREG_OUT_UNREGD_ARC_HANDLE_MINNUM 1
#define       MC_CMD_MAE_AR_CLASS_UNREG_OUT_UNREGD_ARC_HANDLE_MAXNUM 32
#define       MC_CMD_MAE_AR_CLASS_UNREG_OUT_UNREGD_ARC_HANDLE_MAXNUM_MCDI2 32


/***********************************/
/* MC_CMD_MAE_MPORT_REUUID
 * Replace the UUID for an existing m-port.
 */
#define MC_CMD_MAE_MPORT_REUUID 0x170
#define MC_CMD_MAE_MPORT_REUUID_MSGSET 0x170
#undef MC_CMD_0x170_PRIVILEGE_CTG

#define MC_CMD_0x170_PRIVILEGE_CTG SRIOV_CTG_MAE

/* MC_CMD_MAE_MPORT_REUUID_IN msgrequest */
#define    MC_CMD_MAE_MPORT_REUUID_IN_LEN 20
/* MPORT_ID as returned by MC_CMD_MAE_MPORT_ALLOC. */
#define       MC_CMD_MAE_MPORT_REUUID_IN_MPORT_ID_OFST 0
#define       MC_CMD_MAE_MPORT_REUUID_IN_MPORT_ID_LEN 4
/* 128-bit value for use by the driver. */
#define       MC_CMD_MAE_MPORT_REUUID_IN_UUID_OFST 4
#define       MC_CMD_MAE_MPORT_REUUID_IN_UUID_LEN 16

/* MC_CMD_MAE_MPORT_REUUID_OUT msgresponse */
#define    MC_CMD_MAE_MPORT_REUUID_OUT_LEN 0


/***********************************/
/* MC_CMD_MAE_TRACK_CONNECTION
 * Insert an entry into the connection tracking table. The lookup sequence is
 * described in SF-122976-TC.
 */
#define MC_CMD_MAE_TRACK_CONNECTION 0x17a
#define MC_CMD_MAE_TRACK_CONNECTION_MSGSET 0x17a
#undef MC_CMD_0x17a_PRIVILEGE_CTG

#define MC_CMD_0x17a_PRIVILEGE_CTG SRIOV_CTG_MAE

/* MC_CMD_MAE_TRACK_CONNECTION_IN msgrequest */
#define    MC_CMD_MAE_TRACK_CONNECTION_IN_LEN 54
/* See following fields. All other bits must be set to zero. */
#define       MC_CMD_MAE_TRACK_CONNECTION_IN_FLAGS_OFST 0
#define       MC_CMD_MAE_TRACK_CONNECTION_IN_FLAGS_LEN 2
#define        MC_CMD_MAE_TRACK_CONNECTION_IN_IS_IPV6_OFST 0
#define        MC_CMD_MAE_TRACK_CONNECTION_IN_IS_IPV6_LBN 0
#define        MC_CMD_MAE_TRACK_CONNECTION_IN_IS_IPV6_WIDTH 1
#define        MC_CMD_MAE_TRACK_CONNECTION_IN_IS_UDP_OFST 0
#define        MC_CMD_MAE_TRACK_CONNECTION_IN_IS_UDP_LBN 1
#define        MC_CMD_MAE_TRACK_CONNECTION_IN_IS_UDP_WIDTH 1
#define        MC_CMD_MAE_TRACK_CONNECTION_IN_NAT_DIR_IS_DST_OFST 0
#define        MC_CMD_MAE_TRACK_CONNECTION_IN_NAT_DIR_IS_DST_LBN 2
#define        MC_CMD_MAE_TRACK_CONNECTION_IN_NAT_DIR_IS_DST_WIDTH 1
#define        MC_CMD_MAE_TRACK_CONNECTION_IN_PRIVATE_FLAGS_OFST 0
#define        MC_CMD_MAE_TRACK_CONNECTION_IN_PRIVATE_FLAGS_LBN 8
#define        MC_CMD_MAE_TRACK_CONNECTION_IN_PRIVATE_FLAGS_WIDTH 8
/* Domain as given when CT was requested. Analogous to ct_zone software field.
 */
#define       MC_CMD_MAE_TRACK_CONNECTION_IN_DOMAIN_OFST 2
#define       MC_CMD_MAE_TRACK_CONNECTION_IN_DOMAIN_LEN 2
/* Source IP address to match, as bytes in network order. IPv4 should be in
 * first 4 bytes with other bytes zero.
 */
#define       MC_CMD_MAE_TRACK_CONNECTION_IN_SRC_ADDR_OFST 4
#define       MC_CMD_MAE_TRACK_CONNECTION_IN_SRC_ADDR_LEN 16
/* Destination IP address to match, as bytes in network order. IPv4 should be
 * in first 4 bytes with other bytes zero.
 */
#define       MC_CMD_MAE_TRACK_CONNECTION_IN_DST_ADDR_OFST 20
#define       MC_CMD_MAE_TRACK_CONNECTION_IN_DST_ADDR_LEN 16
/* Source TCP or UDP port to match as bytes in network order. */
#define       MC_CMD_MAE_TRACK_CONNECTION_IN_SRC_PORT_OFST 36
#define       MC_CMD_MAE_TRACK_CONNECTION_IN_SRC_PORT_LEN 2
/* Destination TCP or UDP port to match as bytes in network order. */
#define       MC_CMD_MAE_TRACK_CONNECTION_IN_DST_PORT_OFST 38
#define       MC_CMD_MAE_TRACK_CONNECTION_IN_DST_PORT_LEN 2
#define       MC_CMD_MAE_TRACK_CONNECTION_IN_NETWORK_OFST 40
#define       MC_CMD_MAE_TRACK_CONNECTION_IN_NETWORK_LEN 4
#define        MC_CMD_MAE_TRACK_CONNECTION_IN_VNI_OR_VLANS_OR_ZERO_OFST 40
#define        MC_CMD_MAE_TRACK_CONNECTION_IN_VNI_OR_VLANS_OR_ZERO_LBN 0
#define        MC_CMD_MAE_TRACK_CONNECTION_IN_VNI_OR_VLANS_OR_ZERO_WIDTH 24
#define        MC_CMD_MAE_TRACK_CONNECTION_IN_CT_VNI_MODE_OFST 40
#define        MC_CMD_MAE_TRACK_CONNECTION_IN_CT_VNI_MODE_LBN 24
#define        MC_CMD_MAE_TRACK_CONNECTION_IN_CT_VNI_MODE_WIDTH 2
/*             Enum values, see field(s): */
/*                MAE_CT_VNI_MODE */
/* Mark output, will be given to following ACTION_RULE lookup. */
#define       MC_CMD_MAE_TRACK_CONNECTION_IN_CT_MARK_OFST 44
#define       MC_CMD_MAE_TRACK_CONNECTION_IN_CT_MARK_LEN 4
/* If subsequent ACTION_RULE hit enables NAT, this IP will be used. */
#define       MC_CMD_MAE_TRACK_CONNECTION_IN_NAT_IP_OFST 48
#define       MC_CMD_MAE_TRACK_CONNECTION_IN_NAT_IP_LEN 4
/* If subsequent ACTION_RULE hit enables NAT, this port will be used. */
#define       MC_CMD_MAE_TRACK_CONNECTION_IN_NAT_PORT_OFST 52
#define       MC_CMD_MAE_TRACK_CONNECTION_IN_NAT_PORT_LEN 2

/* MC_CMD_MAE_TRACK_CONNECTION_OUT msgresponse */
#define    MC_CMD_MAE_TRACK_CONNECTION_OUT_LEN 4
/* ID to use for deletion. */
#define       MC_CMD_MAE_TRACK_CONNECTION_OUT_CONN_ID_OFST 0
#define       MC_CMD_MAE_TRACK_CONNECTION_OUT_CONN_ID_LEN 4
/* enum: A connection ID that is guaranteed never to represent a connection. */
#define          MC_CMD_MAE_TRACK_CONNECTION_OUT_CONN_ID_NULL 0xffffffff


/***********************************/
/* MC_CMD_MAE_FORGET_CONNECTION
 */
#define MC_CMD_MAE_FORGET_CONNECTION 0x17b
#define MC_CMD_MAE_FORGET_CONNECTION_MSGSET 0x17b
#undef MC_CMD_0x17b_PRIVILEGE_CTG

#define MC_CMD_0x17b_PRIVILEGE_CTG SRIOV_CTG_MAE

/* MC_CMD_MAE_FORGET_CONNECTION_IN msgrequest */
#define    MC_CMD_MAE_FORGET_CONNECTION_IN_LENMIN 4
#define    MC_CMD_MAE_FORGET_CONNECTION_IN_LENMAX 128
#define    MC_CMD_MAE_FORGET_CONNECTION_IN_LENMAX_MCDI2 128
#define    MC_CMD_MAE_FORGET_CONNECTION_IN_LEN(num) (0+4*(num))
#define    MC_CMD_MAE_FORGET_CONNECTION_IN_CONN_ID_NUM(len) (((len)-0)/4)
/* Same semantics as MC_CMD_MAE_COUNTER_FREE */
#define       MC_CMD_MAE_FORGET_CONNECTION_IN_CONN_ID_OFST 0
#define       MC_CMD_MAE_FORGET_CONNECTION_IN_CONN_ID_LEN 4
#define       MC_CMD_MAE_FORGET_CONNECTION_IN_CONN_ID_MINNUM 1
#define       MC_CMD_MAE_FORGET_CONNECTION_IN_CONN_ID_MAXNUM 32
#define       MC_CMD_MAE_FORGET_CONNECTION_IN_CONN_ID_MAXNUM_MCDI2 32

/* MC_CMD_MAE_FORGET_CONNECTION_OUT msgresponse */
#define    MC_CMD_MAE_FORGET_CONNECTION_OUT_LENMIN 4
#define    MC_CMD_MAE_FORGET_CONNECTION_OUT_LENMAX 128
#define    MC_CMD_MAE_FORGET_CONNECTION_OUT_LENMAX_MCDI2 128
#define    MC_CMD_MAE_FORGET_CONNECTION_OUT_LEN(num) (0+4*(num))
#define    MC_CMD_MAE_FORGET_CONNECTION_OUT_REMOVED_CONN_ID_NUM(len) (((len)-0)/4)
/* Same semantics as MC_CMD_MAE_COUNTER_FREE */
#define       MC_CMD_MAE_FORGET_CONNECTION_OUT_REMOVED_CONN_ID_OFST 0
#define       MC_CMD_MAE_FORGET_CONNECTION_OUT_REMOVED_CONN_ID_LEN 4
#define       MC_CMD_MAE_FORGET_CONNECTION_OUT_REMOVED_CONN_ID_MINNUM 1
#define       MC_CMD_MAE_FORGET_CONNECTION_OUT_REMOVED_CONN_ID_MAXNUM 32
#define       MC_CMD_MAE_FORGET_CONNECTION_OUT_REMOVED_CONN_ID_MAXNUM_MCDI2 32


/***********************************/
/* MC_CMD_PR_OPEN
 * Open a session to manage a programmable region. Session handles can be
 * explicitly closed with MC_CMD_PR_CLOSE, or implicitly via
 * MC_CMD_ENTITY_RESET or a PCIe Function Level Reset. Although this command is
 * available to all callers that are a member of the GENERAL privilege group,
 * an additional privilege check may be performed against the target region.
 * Returns ENODEV if the region doesn't exist; EPERM if the caller has
 * insufficient privilege to open the region; EBUSY is the region is currently
 * busy; ENOSPC if the caller has too many open programmable region sessions.
 */
#define MC_CMD_PR_OPEN 0x1a2
#define MC_CMD_PR_OPEN_MSGSET 0x1a2
#undef MC_CMD_0x1a2_PRIVILEGE_CTG

#define MC_CMD_0x1a2_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_PR_OPEN_IN msgrequest */
#define    MC_CMD_PR_OPEN_IN_LEN 4
/* The programmable region to open. */
#define       MC_CMD_PR_OPEN_IN_REGION_ID_OFST 0
#define       MC_CMD_PR_OPEN_IN_REGION_ID_LEN 4

/* MC_CMD_PR_OPEN_OUT msgresponse */
#define    MC_CMD_PR_OPEN_OUT_LEN 4
/* Session handle for operations on the contents of the programmable region.
 * Handles should be considered opaque, although a value of 0xFFFFFFFF is
 * guaranteed never to be a valid handle.
 */
#define       MC_CMD_PR_OPEN_OUT_HANDLE_OFST 0
#define       MC_CMD_PR_OPEN_OUT_HANDLE_LEN 4
/* enum: Invalid programmable region session handle */
#define          MC_CMD_PR_OPEN_OUT_HANDLE_NULL 0xffffffff


/***********************************/
/* MC_CMD_PR_CLOSE
 * Close a session created with MC_CMD_PR_OPEN. Returns ENOENT if the session
 * handle doesn't exist.
 */
#define MC_CMD_PR_CLOSE 0x1a3
#define MC_CMD_PR_CLOSE_MSGSET 0x1a3
#undef MC_CMD_0x1a3_PRIVILEGE_CTG

#define MC_CMD_0x1a3_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_PR_CLOSE_IN msgrequest */
#define    MC_CMD_PR_CLOSE_IN_LEN 4
/* Session handle from MC_CMD_PR_OPEN_OUT */
#define       MC_CMD_PR_CLOSE_IN_HANDLE_OFST 0
#define       MC_CMD_PR_CLOSE_IN_HANDLE_LEN 4

/* MC_CMD_PR_CLOSE_OUT msgresponse */
#define    MC_CMD_PR_CLOSE_OUT_LEN 0


/***********************************/
/* MC_CMD_PR_TRANSFER_BEGIN
 * Starts transfer of a XCLBIN to the target region associated with a session,
 * setting the target region's data transfer offset to 0. Although this command
 * is available to all callers that are a member of the GENERAL privilege group
 * an extra privilege check may be performed against the target region in
 * addition to the check performed by MC_CMD_PR_OPEN. Returns ENOENT if the
 * session handle doesn't exist; EPERM if the caller has insufficient privilege
 * to update the target region; EBUSY if the target region is currently busy;
 * ESTALE if the target region has been updated since the session was opened.
 * The caller should close this handle and open a new session to retry its
 * transfer; EINVAL if length is too small, e.g. smaller than the AXLF/XCLBIN2
 * header; ENOMEM if length too large, e.g. larger than the resources available
 * to buffer the transfer.
 */
#define MC_CMD_PR_TRANSFER_BEGIN 0x1a4
#define MC_CMD_PR_TRANSFER_BEGIN_MSGSET 0x1a4
#undef MC_CMD_0x1a4_PRIVILEGE_CTG

#define MC_CMD_0x1a4_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_PR_TRANSFER_BEGIN_IN msgrequest */
#define    MC_CMD_PR_TRANSFER_BEGIN_IN_LEN 16
/* Session handle from MC_CMD_PR_OPEN_OUT */
#define       MC_CMD_PR_TRANSFER_BEGIN_IN_HANDLE_OFST 0
#define       MC_CMD_PR_TRANSFER_BEGIN_IN_HANDLE_LEN 4
/* Reserved, must be zero. */
#define       MC_CMD_PR_TRANSFER_BEGIN_IN_RESERVED_OFST 4
#define       MC_CMD_PR_TRANSFER_BEGIN_IN_RESERVED_LEN 4
/* The length (in bytes) of the XCLBIN data to be transferred. */
#define       MC_CMD_PR_TRANSFER_BEGIN_IN_LENGTH_OFST 8
#define       MC_CMD_PR_TRANSFER_BEGIN_IN_LENGTH_LEN 8
#define       MC_CMD_PR_TRANSFER_BEGIN_IN_LENGTH_LO_OFST 8
#define       MC_CMD_PR_TRANSFER_BEGIN_IN_LENGTH_LO_LEN 4
#define       MC_CMD_PR_TRANSFER_BEGIN_IN_LENGTH_LO_LBN 64
#define       MC_CMD_PR_TRANSFER_BEGIN_IN_LENGTH_LO_WIDTH 32
#define       MC_CMD_PR_TRANSFER_BEGIN_IN_LENGTH_HI_OFST 12
#define       MC_CMD_PR_TRANSFER_BEGIN_IN_LENGTH_HI_LEN 4
#define       MC_CMD_PR_TRANSFER_BEGIN_IN_LENGTH_HI_LBN 96
#define       MC_CMD_PR_TRANSFER_BEGIN_IN_LENGTH_HI_WIDTH 32

/* MC_CMD_PR_TRANSFER_BEGIN_OUT msgresponse */
#define    MC_CMD_PR_TRANSFER_BEGIN_OUT_LEN 0


/***********************************/
/* MC_CMD_PR_TRANSFER_WRITE
 * Transfer a chunk of a XCLBIN data to the target region of a session,
 * advancing the current data transfer offset. Chunks are transferred in a
 * streaming like way and it is the responsibility of the caller to ensure all
 * chunks are transferred in order and with no duplicates. Requires a transfer
 * to have been started with MC_CMD_PR_TRANSFER_BEGIN. Returns ENOENT if the
 * session handle doesn't exist; EACCESS if the session does not have an in-
 * progress transfer; ESTALE if session's transfer has been cancelled, e.g.
 * another session has started a transfer; ERANGE if the chunk exceeds the
 * total transfer length specified in MC_CMD_PR_TRANSFER_BEGIN_IN.
 */
#define MC_CMD_PR_TRANSFER_WRITE 0x1a5
#define MC_CMD_PR_TRANSFER_WRITE_MSGSET 0x1a5
#undef MC_CMD_0x1a5_PRIVILEGE_CTG

#define MC_CMD_0x1a5_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_PR_TRANSFER_WRITE_IN msgrequest */
#define    MC_CMD_PR_TRANSFER_WRITE_IN_LENMIN 5
#define    MC_CMD_PR_TRANSFER_WRITE_IN_LENMAX 252
#define    MC_CMD_PR_TRANSFER_WRITE_IN_LENMAX_MCDI2 1020
#define    MC_CMD_PR_TRANSFER_WRITE_IN_LEN(num) (4+1*(num))
#define    MC_CMD_PR_TRANSFER_WRITE_IN_DATA_NUM(len) (((len)-4)/1)
/* Session handle from MC_CMD_PR_OPEN_OUT */
#define       MC_CMD_PR_TRANSFER_WRITE_IN_HANDLE_OFST 0
#define       MC_CMD_PR_TRANSFER_WRITE_IN_HANDLE_LEN 4
/* Chunk of data to write */
#define       MC_CMD_PR_TRANSFER_WRITE_IN_DATA_OFST 4
#define       MC_CMD_PR_TRANSFER_WRITE_IN_DATA_LEN 1
#define       MC_CMD_PR_TRANSFER_WRITE_IN_DATA_MINNUM 1
#define       MC_CMD_PR_TRANSFER_WRITE_IN_DATA_MAXNUM 248
#define       MC_CMD_PR_TRANSFER_WRITE_IN_DATA_MAXNUM_MCDI2 1016

/* MC_CMD_PR_TRANSFER_WRITE_OUT msgresponse */
#define    MC_CMD_PR_TRANSFER_WRITE_OUT_LEN 0


/***********************************/
/* MC_CMD_PR_TRANSFER_END
 * End the transfer of a XCLBIN to the target region of a session. A success
 * result indicates the firmware started the update process. If the XCLBIN data
 * is accepted, and programming has started, all other sessions for the same
 * target region will be marked stale. The caller can use MC_CMD_PR_STATUS_GET
 * to determine the overall result of the update. Requires a transfer to have
 * been started with MC_CMD_PR_TRANSFER_BEGIN. Returns ENOENT if the session
 * handle doesn't exist; EACCESS if the session does not have an in-progress
 * transfer; ESTALE if session's transfer has been cancelled, e.g. another
 * session has started a transfer.
 */
#define MC_CMD_PR_TRANSFER_END 0x1a6
#define MC_CMD_PR_TRANSFER_END_MSGSET 0x1a6
#undef MC_CMD_0x1a6_PRIVILEGE_CTG

#define MC_CMD_0x1a6_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_PR_TRANSFER_END_IN msgrequest */
#define    MC_CMD_PR_TRANSFER_END_IN_LEN 4
/* Session handle from MC_CMD_PR_OPEN_OUT */
#define       MC_CMD_PR_TRANSFER_END_IN_HANDLE_OFST 0
#define       MC_CMD_PR_TRANSFER_END_IN_HANDLE_LEN 4

/* MC_CMD_PR_TRANSFER_END_OUT msgresponse */
#define    MC_CMD_PR_TRANSFER_END_OUT_LEN 0


/***********************************/
/* MC_CMD_PR_STATUS_GET
 * Query the current update status of the target region of a session. Returns
 * ENOENT if the session handle doesn't exist; ESTALE if the target region has
 * been updated by another session since the session was opened.
 */
#define MC_CMD_PR_STATUS_GET 0x1a7
#define MC_CMD_PR_STATUS_GET_MSGSET 0x1a7
#undef MC_CMD_0x1a7_PRIVILEGE_CTG

#define MC_CMD_0x1a7_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_PR_STATUS_GET_IN msgrequest */
#define    MC_CMD_PR_STATUS_GET_IN_LEN 4
/* Session handle from MC_CMD_PR_OPEN_OUT */
#define       MC_CMD_PR_STATUS_GET_IN_HANDLE_OFST 0
#define       MC_CMD_PR_STATUS_GET_IN_HANDLE_LEN 4

/* MC_CMD_PR_STATUS_GET_OUT msgresponse */
#define    MC_CMD_PR_STATUS_GET_OUT_LENMIN 9
#define    MC_CMD_PR_STATUS_GET_OUT_LENMAX 252
#define    MC_CMD_PR_STATUS_GET_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_PR_STATUS_GET_OUT_LEN(num) (8+1*(num))
#define    MC_CMD_PR_STATUS_GET_OUT_DESCRIPTION_NUM(len) (((len)-8)/1)
/* The state of the last update attempt triggered by MC_CMD_PR_TRANSFER_END */
#define       MC_CMD_PR_STATUS_GET_OUT_STATUS_OFST 0
#define       MC_CMD_PR_STATUS_GET_OUT_STATUS_LEN 4
/* enum: Update in progress */
#define          MC_CMD_PR_STATUS_GET_OUT_STATUS_PENDING 0x0
/* enum: Update successful, or no update attempted since device boot */
#define          MC_CMD_PR_STATUS_GET_OUT_STATUS_SUCCESS 0x1
/* enum: Update failed */
#define          MC_CMD_PR_STATUS_GET_OUT_STATUS_ERROR 0x2
/* Code providing more information about the state of the update process. */
#define       MC_CMD_PR_STATUS_GET_OUT_RESULT_OFST 4
#define       MC_CMD_PR_STATUS_GET_OUT_RESULT_LEN 4
/* enum: Operation successful */
#define          MC_CMD_PR_STATUS_GET_OUT_RESULT_SUCCESS 0x0
/* enum: xclbin package was not built for this platform */
#define          MC_CMD_PR_STATUS_GET_OUT_RESULT_XCLBIN_UUID_MISMATCH 0x1
/* enum: Provided xclbin package contains no bitstream */
#define          MC_CMD_PR_STATUS_GET_OUT_RESULT_XCLBIN_NO_BITSTREAM 0x2
/* enum: Provided xclbin package contains clock error */
#define          MC_CMD_PR_STATUS_GET_OUT_RESULT_XCLBIN_CLK_ERROR 0x3
/* enum: Load attempt unexpectedly rejected - bitstream may be corrupt */
#define          MC_CMD_PR_STATUS_GET_OUT_RESULT_BITSTREAM_ERROR 0x4
/* enum: Clock programming failed */
#define          MC_CMD_PR_STATUS_GET_OUT_RESULT_CLK_PROG_FAIL 0x5
/* enum: Shell DDR failed to calibrate */
#define          MC_CMD_PR_STATUS_GET_OUT_RESULT_DDR_CAL_FAIL 0x6
/* enum: ICAP was unavailable before programming */
#define          MC_CMD_PR_STATUS_GET_OUT_RESULT_ICAP_BUSY 0x7
/* enum: ICAP failed to terminate programming */
#define          MC_CMD_PR_STATUS_GET_OUT_RESULT_ICAP_FAIL 0x8
/* enum: Clock scaling operation failed */
#define          MC_CMD_PR_STATUS_GET_OUT_RESULT_CLK_SCALE_FAIL 0x9
/* enum: Clock measurement operation failed */
#define          MC_CMD_PR_STATUS_GET_OUT_RESULT_CLK_MON_FAIL 0xa
/* enum: Firewall tripped */
#define          MC_CMD_PR_STATUS_GET_OUT_RESULT_FIREWALL_TRIPPED 0xb
/* enum: XCLBIN package parse error */
#define          MC_CMD_PR_STATUS_GET_OUT_RESULT_XCLBIN_PARSER_FAIL 0xc
/* enum: Extension metadata load error */
#define          MC_CMD_PR_STATUS_GET_OUT_RESULT_METADATA_LOAD_ERROR 0xd
/* Result description (NUL-terminated ASCII string) */
#define       MC_CMD_PR_STATUS_GET_OUT_DESCRIPTION_OFST 8
#define       MC_CMD_PR_STATUS_GET_OUT_DESCRIPTION_LEN 1
#define       MC_CMD_PR_STATUS_GET_OUT_DESCRIPTION_MINNUM 1
#define       MC_CMD_PR_STATUS_GET_OUT_DESCRIPTION_MAXNUM 244
#define       MC_CMD_PR_STATUS_GET_OUT_DESCRIPTION_MAXNUM_MCDI2 1012


/***********************************/
/* MC_CMD_PR_METADATA_INFO
 * Query information (length and name) about the meta-data describing the
 * active contents of the target region of a session. Returns ENOENT if the
 * session handle doesn't exist; ESTALE if the target region has been updated
 * by another session since the session was opened; ENODEV if the meta-data
 * item doesn't exist.
 */
#define MC_CMD_PR_METADATA_INFO 0x1a8
#define MC_CMD_PR_METADATA_INFO_MSGSET 0x1a8
#undef MC_CMD_0x1a8_PRIVILEGE_CTG

#define MC_CMD_0x1a8_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_PR_METADATA_INFO_IN msgrequest */
#define    MC_CMD_PR_METADATA_INFO_IN_LEN 16
/* Session handle from MC_CMD_PR_OPEN_OUT */
#define       MC_CMD_PR_METADATA_INFO_IN_HANDLE_OFST 0
#define       MC_CMD_PR_METADATA_INFO_IN_HANDLE_LEN 4
/* Item category */
#define       MC_CMD_PR_METADATA_INFO_IN_CATEGORY_OFST 4
#define       MC_CMD_PR_METADATA_INFO_IN_CATEGORY_LEN 4
/*            Enum values, see field(s): */
/*               PR_METADATA_ITEM_CATEGORY */
/* Item sub-category */
#define       MC_CMD_PR_METADATA_INFO_IN_SUBCATEGORY_OFST 8
#define       MC_CMD_PR_METADATA_INFO_IN_SUBCATEGORY_LEN 4
/*            Enum values, see field(s): */
/*               PR_METADATA_ITEM_SUBCATEGORY */
/* Item index */
#define       MC_CMD_PR_METADATA_INFO_IN_INDEX_OFST 12
#define       MC_CMD_PR_METADATA_INFO_IN_INDEX_LEN 4

/* MC_CMD_PR_METADATA_INFO_OUT msgresponse */
#define    MC_CMD_PR_METADATA_INFO_OUT_LEN 136
/* Length (in bytes) of the meta-data item */
#define       MC_CMD_PR_METADATA_INFO_OUT_ITEM_LENGTH_OFST 0
#define       MC_CMD_PR_METADATA_INFO_OUT_ITEM_LENGTH_LEN 8
#define       MC_CMD_PR_METADATA_INFO_OUT_ITEM_LENGTH_LO_OFST 0
#define       MC_CMD_PR_METADATA_INFO_OUT_ITEM_LENGTH_LO_LEN 4
#define       MC_CMD_PR_METADATA_INFO_OUT_ITEM_LENGTH_LO_LBN 0
#define       MC_CMD_PR_METADATA_INFO_OUT_ITEM_LENGTH_LO_WIDTH 32
#define       MC_CMD_PR_METADATA_INFO_OUT_ITEM_LENGTH_HI_OFST 4
#define       MC_CMD_PR_METADATA_INFO_OUT_ITEM_LENGTH_HI_LEN 4
#define       MC_CMD_PR_METADATA_INFO_OUT_ITEM_LENGTH_HI_LBN 32
#define       MC_CMD_PR_METADATA_INFO_OUT_ITEM_LENGTH_HI_WIDTH 32
/* Meta-data item name (NUL-terminated ASCII string). For the SECTION category
 * the name is AXLF section name (axlf_section_header::m_sectionName). The
 * items of the categories (UUID, TIMESTAMP and SIGNATURE) are unnamed items
 * and return an empty string (NAME[0] == '\0').
 */
#define       MC_CMD_PR_METADATA_INFO_OUT_ITEM_NAME_OFST 8
#define       MC_CMD_PR_METADATA_INFO_OUT_ITEM_NAME_LEN 1
#define       MC_CMD_PR_METADATA_INFO_OUT_ITEM_NAME_NUM 128


/***********************************/
/* MC_CMD_PR_METADATA_READ
 * Read a chunk of the meta-data describing the active contents of the target
 * region of a session. Returns ENOENT if the session handle doesn't exist;
 * ESTALE if the target region has been updated by another session since the
 * session was opened; ENODEV if the meta-data item doesn't exist; ERANGE if
 * the offset is outside the valid range for the meta-data item, e.g. offset >=
 * item_length.
 */
#define MC_CMD_PR_METADATA_READ 0x1a9
#define MC_CMD_PR_METADATA_READ_MSGSET 0x1a9
#undef MC_CMD_0x1a9_PRIVILEGE_CTG

#define MC_CMD_0x1a9_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_PR_METADATA_READ_IN msgrequest */
#define    MC_CMD_PR_METADATA_READ_IN_LEN 26
/* Session handle from MC_CMD_PR_OPEN_OUT */
#define       MC_CMD_PR_METADATA_READ_IN_HANDLE_OFST 0
#define       MC_CMD_PR_METADATA_READ_IN_HANDLE_LEN 4
/* Item category */
#define       MC_CMD_PR_METADATA_READ_IN_CATEGORY_OFST 4
#define       MC_CMD_PR_METADATA_READ_IN_CATEGORY_LEN 4
/*            Enum values, see field(s): */
/*               PR_METADATA_ITEM_CATEGORY */
/* Item sub-category */
#define       MC_CMD_PR_METADATA_READ_IN_SUBCATEGORY_OFST 8
#define       MC_CMD_PR_METADATA_READ_IN_SUBCATEGORY_LEN 4
/*            Enum values, see field(s): */
/*               PR_METADATA_ITEM_SUBCATEGORY */
/* Item index */
#define       MC_CMD_PR_METADATA_READ_IN_INDEX_OFST 12
#define       MC_CMD_PR_METADATA_READ_IN_INDEX_LEN 4
/* Byte offset within meta-data chunk */
#define       MC_CMD_PR_METADATA_READ_IN_OFFSET_OFST 16
#define       MC_CMD_PR_METADATA_READ_IN_OFFSET_LEN 8
#define       MC_CMD_PR_METADATA_READ_IN_OFFSET_LO_OFST 16
#define       MC_CMD_PR_METADATA_READ_IN_OFFSET_LO_LEN 4
#define       MC_CMD_PR_METADATA_READ_IN_OFFSET_LO_LBN 128
#define       MC_CMD_PR_METADATA_READ_IN_OFFSET_LO_WIDTH 32
#define       MC_CMD_PR_METADATA_READ_IN_OFFSET_HI_OFST 20
#define       MC_CMD_PR_METADATA_READ_IN_OFFSET_HI_LEN 4
#define       MC_CMD_PR_METADATA_READ_IN_OFFSET_HI_LBN 160
#define       MC_CMD_PR_METADATA_READ_IN_OFFSET_HI_WIDTH 32
/* Maximum length (in bytes) to read */
#define       MC_CMD_PR_METADATA_READ_IN_MAX_LENGTH_OFST 24
#define       MC_CMD_PR_METADATA_READ_IN_MAX_LENGTH_LEN 2

/* MC_CMD_PR_METADATA_READ_OUT msgresponse */
#define    MC_CMD_PR_METADATA_READ_OUT_LENMIN 1
#define    MC_CMD_PR_METADATA_READ_OUT_LENMAX 252
#define    MC_CMD_PR_METADATA_READ_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_PR_METADATA_READ_OUT_LEN(num) (0+1*(num))
#define    MC_CMD_PR_METADATA_READ_OUT_DATA_NUM(len) (((len)-0)/1)
/* Chunk of meta-data */
#define       MC_CMD_PR_METADATA_READ_OUT_DATA_OFST 0
#define       MC_CMD_PR_METADATA_READ_OUT_DATA_LEN 1
#define       MC_CMD_PR_METADATA_READ_OUT_DATA_MINNUM 1
#define       MC_CMD_PR_METADATA_READ_OUT_DATA_MAXNUM 252
#define       MC_CMD_PR_METADATA_READ_OUT_DATA_MAXNUM_MCDI2 1020

/* PR_FREQ_INFO structuredef: Information about a single programmable region
 * clock
 */
#define    PR_FREQ_INFO_LEN 140
/* Clock frequency (in Hz) */
#define       PR_FREQ_INFO_FREQ_HZ_OFST 0
#define       PR_FREQ_INFO_FREQ_HZ_LEN 8
#define       PR_FREQ_INFO_FREQ_HZ_LO_OFST 0
#define       PR_FREQ_INFO_FREQ_HZ_LO_LEN 4
#define       PR_FREQ_INFO_FREQ_HZ_LO_LBN 0
#define       PR_FREQ_INFO_FREQ_HZ_LO_WIDTH 32
#define       PR_FREQ_INFO_FREQ_HZ_HI_OFST 4
#define       PR_FREQ_INFO_FREQ_HZ_HI_LEN 4
#define       PR_FREQ_INFO_FREQ_HZ_HI_LBN 32
#define       PR_FREQ_INFO_FREQ_HZ_HI_WIDTH 32
#define       PR_FREQ_INFO_FREQ_HZ_LBN 0
#define       PR_FREQ_INFO_FREQ_HZ_WIDTH 64
/* Clock type, a programmable region may have multiple clocks of the same type.
 * (matches enum CLOCK_TYPE)
 */
#define       PR_FREQ_INFO_TYPE_OFST 8
#define       PR_FREQ_INFO_TYPE_LEN 2
/* enum: Unused/reserved. */
#define          PR_FREQ_INFO_CLOCK_TYPE_UNUSED 0x0
/* enum: Data clock. */
#define          PR_FREQ_INFO_CLOCK_TYPE_DATA 0x1
/* enum: Kernel clock. */
#define          PR_FREQ_INFO_CLOCK_TYPE_KERNEL 0x2
/* enum: System clock. */
#define          PR_FREQ_INFO_CLOCK_TYPE_SYSTEM 0x3
#define       PR_FREQ_INFO_TYPE_LBN 64
#define       PR_FREQ_INFO_TYPE_WIDTH 16
/* Assorted flags */
#define       PR_FREQ_INFO_FLAGS_OFST 10
#define       PR_FREQ_INFO_FLAGS_LEN 2
#define        PR_FREQ_INFO_SETTABLE_OFST 10
#define        PR_FREQ_INFO_SETTABLE_LBN 0
#define        PR_FREQ_INFO_SETTABLE_WIDTH 1
#define       PR_FREQ_INFO_FLAGS_LBN 80
#define       PR_FREQ_INFO_FLAGS_WIDTH 16
/* Clock name (NUL-terminated ASCII string) */
#define       PR_FREQ_INFO_NAME_OFST 12
#define       PR_FREQ_INFO_NAME_LEN 1
#define       PR_FREQ_INFO_NAME_NUM 128
#define       PR_FREQ_INFO_NAME_LBN 96
#define       PR_FREQ_INFO_NAME_WIDTH 8


/***********************************/
/* MC_CMD_PR_FREQ_GET
 * Query the current clock frequencies of the target region of a session. If
 * the target region is 'empty' then an empty response should be returned.
 * Returns ENOENT if the session handle doesn't exist; ESTALE if the target
 * region has been updated by another session since the session was opened.
 */
#define MC_CMD_PR_FREQ_GET 0x1aa
#define MC_CMD_PR_FREQ_GET_MSGSET 0x1aa
#undef MC_CMD_0x1aa_PRIVILEGE_CTG

#define MC_CMD_0x1aa_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_PR_FREQ_GET_IN msgrequest */
#define    MC_CMD_PR_FREQ_GET_IN_LEN 4
/* Session handle from MC_CMD_PR_OPEN_OUT */
#define       MC_CMD_PR_FREQ_GET_IN_HANDLE_OFST 0
#define       MC_CMD_PR_FREQ_GET_IN_HANDLE_LEN 4

/* MC_CMD_PR_FREQ_GET_OUT msgresponse */
#define    MC_CMD_PR_FREQ_GET_OUT_LENMIN 0
#define    MC_CMD_PR_FREQ_GET_OUT_LENMAX 140
#define    MC_CMD_PR_FREQ_GET_OUT_LENMAX_MCDI2 980
#define    MC_CMD_PR_FREQ_GET_OUT_LEN(num) (0+140*(num))
#define    MC_CMD_PR_FREQ_GET_OUT_INFOS_NUM(len) (((len)-0)/140)
/* An array of PR_FREQ_INFO structures. */
#define       MC_CMD_PR_FREQ_GET_OUT_INFOS_OFST 0
#define       MC_CMD_PR_FREQ_GET_OUT_INFOS_LEN 140


/***********************************/
/* MC_CMD_PR_FREQ_SET
 * Set the desired clock frequencies of the target region of a session. The
 * FREQ_HZ array must contain the same number of entries as the output to
 * MC_CMD_PR_FREQ_GET. Callers should expect that the resulting frequencies may
 * not precisely match the input and can use MC_CMD_PR_FREQ_GET to determine
 * the actual frequencies selected. The algorithm for selecting the resulting
 * clock settings is a firmware implementation detail based on the capabilities
 * of the device and the target region. It is expected that the firmware will
 * not exceed the desired frequency for any clock; will successfully apply a
 * frequency value obtained from MC_CMD_PR_FREQ_GET without further adjustment;
 * and if an error is returned no changes will have been applied to any of the
 * clocks. Although this command is available to all callers that are a member
 * of the GENERAL privilege group an extra privilege check may be performed
 * against the target region in addition to tbe check performed by
 * MC_CMD_PR_OPEN. Returns ENOENT if the session handle doesn't exist; ESTALE
 * if the target region has been updated by another session since the session
 * was opened; EINVAL if the target region is 'empty' or the wrong number of
 * desired clock frequencies was specified in the input; ERANGE if one or more
 * desired clock frequencies were not achievable.
 */
#define MC_CMD_PR_FREQ_SET 0x1ab
#define MC_CMD_PR_FREQ_SET_MSGSET 0x1ab
#undef MC_CMD_0x1ab_PRIVILEGE_CTG

#define MC_CMD_0x1ab_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_PR_FREQ_SET_IN msgrequest */
#define    MC_CMD_PR_FREQ_SET_IN_LENMIN 16
#define    MC_CMD_PR_FREQ_SET_IN_LENMAX 248
#define    MC_CMD_PR_FREQ_SET_IN_LENMAX_MCDI2 1016
#define    MC_CMD_PR_FREQ_SET_IN_LEN(num) (8+8*(num))
#define    MC_CMD_PR_FREQ_SET_IN_FREQ_HZ_NUM(len) (((len)-8)/8)
/* Session handle from MC_CMD_PR_OPEN_OUT */
#define       MC_CMD_PR_FREQ_SET_IN_HANDLE_OFST 0
#define       MC_CMD_PR_FREQ_SET_IN_HANDLE_LEN 4
/* Reserved, must be zero. */
#define       MC_CMD_PR_FREQ_SET_IN_RESERVED_OFST 4
#define       MC_CMD_PR_FREQ_SET_IN_RESERVED_LEN 4
/* Desired frequency for each clock */
#define       MC_CMD_PR_FREQ_SET_IN_FREQ_HZ_OFST 8
#define       MC_CMD_PR_FREQ_SET_IN_FREQ_HZ_LEN 8
#define       MC_CMD_PR_FREQ_SET_IN_FREQ_HZ_LO_OFST 8
#define       MC_CMD_PR_FREQ_SET_IN_FREQ_HZ_LO_LEN 4
#define       MC_CMD_PR_FREQ_SET_IN_FREQ_HZ_LO_LBN 64
#define       MC_CMD_PR_FREQ_SET_IN_FREQ_HZ_LO_WIDTH 32
#define       MC_CMD_PR_FREQ_SET_IN_FREQ_HZ_HI_OFST 12
#define       MC_CMD_PR_FREQ_SET_IN_FREQ_HZ_HI_LEN 4
#define       MC_CMD_PR_FREQ_SET_IN_FREQ_HZ_HI_LBN 96
#define       MC_CMD_PR_FREQ_SET_IN_FREQ_HZ_HI_WIDTH 32
#define       MC_CMD_PR_FREQ_SET_IN_FREQ_HZ_MINNUM 1
#define       MC_CMD_PR_FREQ_SET_IN_FREQ_HZ_MAXNUM 30
#define       MC_CMD_PR_FREQ_SET_IN_FREQ_HZ_MAXNUM_MCDI2 126
/* enum: Leave the clock frequency unchanged. */
#define          MC_CMD_PR_FREQ_SET_IN_FREQ_HZ_DONT_CHANGE 0x0

/* MC_CMD_PR_FREQ_SET_OUT msgresponse */
#define    MC_CMD_PR_FREQ_SET_OUT_LEN 0


/***********************************/
/* MC_CMD_TABLE_STCAM_MASK_ALLOC
 * Allocate a mask for use with an STCAM table. May return EINVAL for unknown
 * table ID or bad MASK_WIDTH, ENOSPC if no masks are available, or EPERM if
 * the operation is not permitted.
 */
#define MC_CMD_TABLE_STCAM_MASK_ALLOC 0x1cb
#define MC_CMD_TABLE_STCAM_MASK_ALLOC_MSGSET 0x1cb
#undef MC_CMD_0x1cb_PRIVILEGE_CTG

#define MC_CMD_0x1cb_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_TABLE_STCAM_MASK_ALLOC_IN msgrequest */
#define    MC_CMD_TABLE_STCAM_MASK_ALLOC_IN_LENMIN 12
#define    MC_CMD_TABLE_STCAM_MASK_ALLOC_IN_LENMAX 252
#define    MC_CMD_TABLE_STCAM_MASK_ALLOC_IN_LENMAX_MCDI2 1020
#define    MC_CMD_TABLE_STCAM_MASK_ALLOC_IN_LEN(num) (8+4*(num))
#define    MC_CMD_TABLE_STCAM_MASK_ALLOC_IN_MASK_DATA_NUM(len) (((len)-8)/4)
/* Table identifier. */
#define       MC_CMD_TABLE_STCAM_MASK_ALLOC_IN_TABLE_ID_OFST 0
#define       MC_CMD_TABLE_STCAM_MASK_ALLOC_IN_TABLE_ID_LEN 4
/*            Enum values, see field(s): */
/*               TABLE_ID */
/* Mask width in bits (must match table). */
#define       MC_CMD_TABLE_STCAM_MASK_ALLOC_IN_MASK_WIDTH_OFST 4
#define       MC_CMD_TABLE_STCAM_MASK_ALLOC_IN_MASK_WIDTH_LEN 2
/* (32-bit alignment padding - set to 0) */
#define       MC_CMD_TABLE_STCAM_MASK_ALLOC_IN_RESERVED_OFST 6
#define       MC_CMD_TABLE_STCAM_MASK_ALLOC_IN_RESERVED_LEN 2
/* Mask value (sized by rounding up MASK_WIDTH). */
#define       MC_CMD_TABLE_STCAM_MASK_ALLOC_IN_MASK_DATA_OFST 8
#define       MC_CMD_TABLE_STCAM_MASK_ALLOC_IN_MASK_DATA_LEN 4
#define       MC_CMD_TABLE_STCAM_MASK_ALLOC_IN_MASK_DATA_MINNUM 1
#define       MC_CMD_TABLE_STCAM_MASK_ALLOC_IN_MASK_DATA_MAXNUM 61
#define       MC_CMD_TABLE_STCAM_MASK_ALLOC_IN_MASK_DATA_MAXNUM_MCDI2 253

/* MC_CMD_TABLE_STCAM_MASK_ALLOC_OUT msgresponse */
#define    MC_CMD_TABLE_STCAM_MASK_ALLOC_OUT_LEN 4
/* Allocated mask ID. */
#define       MC_CMD_TABLE_STCAM_MASK_ALLOC_OUT_MASK_ID_OFST 0
#define       MC_CMD_TABLE_STCAM_MASK_ALLOC_OUT_MASK_ID_LEN 2
/* (32-bit alignment padding) */
#define       MC_CMD_TABLE_STCAM_MASK_ALLOC_OUT_RESERVED_OFST 2
#define       MC_CMD_TABLE_STCAM_MASK_ALLOC_OUT_RESERVED_LEN 2


/***********************************/
/* MC_CMD_TABLE_STCAM_MASK_FREE
 * Free a previously allocated STCAM mask. May return EINVAL for unknown table
 * ID, ENOENT if the mask ID has not been allocated for this table, or EPERM if
 * the operation is not permitted.
 */
#define MC_CMD_TABLE_STCAM_MASK_FREE 0x1cc
#define MC_CMD_TABLE_STCAM_MASK_FREE_MSGSET 0x1cc
#undef MC_CMD_0x1cc_PRIVILEGE_CTG

#define MC_CMD_0x1cc_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_TABLE_STCAM_MASK_FREE_IN msgrequest */
#define    MC_CMD_TABLE_STCAM_MASK_FREE_IN_LEN 8
/* Table identifier. */
#define       MC_CMD_TABLE_STCAM_MASK_FREE_IN_TABLE_ID_OFST 0
#define       MC_CMD_TABLE_STCAM_MASK_FREE_IN_TABLE_ID_LEN 4
/*            Enum values, see field(s): */
/*               TABLE_ID */
/* Previously allocated mask ID. */
#define       MC_CMD_TABLE_STCAM_MASK_FREE_IN_MASK_ID_OFST 4
#define       MC_CMD_TABLE_STCAM_MASK_FREE_IN_MASK_ID_LEN 2
/* (32-bit alignment padding - set to 0) */
#define       MC_CMD_TABLE_STCAM_MASK_FREE_IN_RESERVED_OFST 6
#define       MC_CMD_TABLE_STCAM_MASK_FREE_IN_RESERVED_LEN 2

/* MC_CMD_TABLE_STCAM_MASK_FREE_OUT msgresponse */
#define    MC_CMD_TABLE_STCAM_MASK_FREE_OUT_LEN 0


/***********************************/
/* MC_CMD_TABLE_DUMP
 * Dump a table by iterating over the table in full, either copying entries to
 * a DMA buffer, or returning them in the command response.
 *
 * Typically multiple requests will be required to return the whole table.
 * Table generation counts are returned to enable the caller to detect table
 * modifications during and between requests (hence potential inconsistencies).
 *
 * If using a transport which does not support DMA, performance will be limited
 * and very many requests may be required to complete a potentially large table
 * such as conntrack. It is the callers responsibility to avoid this.
 *
 * It is assumed the caller will have previously called MC_CMD_TABLE_DESCRIPTOR
 * in order to be able to interpret the table data, which will be a sequence of
 * records as follows: N x 32' KEY [N=1 for direct tables] N x 32' MASK [if
 * TCAM or STCAM] 32' PRIORITY [if TCAM or STCAM] N x 32' RESPONSE Note that
 * for STCAMs with ALLOC_MASK=1, the full mask will be returned rather than the
 * mask ID.
 *
 * See 'XN-200845-TC - Datapath rule tables dump tools' for more details.
 */
#define MC_CMD_TABLE_DUMP 0x1d4
#define MC_CMD_TABLE_DUMP_MSGSET 0x1d4
#undef MC_CMD_0x1d4_PRIVILEGE_CTG

#define MC_CMD_0x1d4_PRIVILEGE_CTG SRIOV_CTG_ADMIN

/* MC_CMD_TABLE_DUMP_IN msgrequest */
#define    MC_CMD_TABLE_DUMP_IN_LEN 24
/* Unique ID for table, of type TABLE_ID. */
#define       MC_CMD_TABLE_DUMP_IN_TABLE_ID_OFST 0
#define       MC_CMD_TABLE_DUMP_IN_TABLE_ID_LEN 4
/*            Enum values, see field(s): */
/*               TABLE_ID */
/* Position in table to start reading from. This is an opaque type, which will
 * be set to zero for the first request, or a non-zero value returned by the
 * previous MC_CMD_TABLE_DUMP response in the case that further
 * MC_CMD_TABLE_DUMP requests were needed to complete the table dump.
 */
#define       MC_CMD_TABLE_DUMP_IN_POSITION_OFST 4
#define       MC_CMD_TABLE_DUMP_IN_POSITION_LEN 4
/* The address of a buffer in host memory into which the table entries will be
 * DMAed, or 0 if table entries are to be returned in the response.
 */
#define       MC_CMD_TABLE_DUMP_IN_DMA_ADDR_OFST 8
#define       MC_CMD_TABLE_DUMP_IN_DMA_ADDR_LEN 8
#define       MC_CMD_TABLE_DUMP_IN_DMA_ADDR_LO_OFST 8
#define       MC_CMD_TABLE_DUMP_IN_DMA_ADDR_LO_LEN 4
#define       MC_CMD_TABLE_DUMP_IN_DMA_ADDR_LO_LBN 64
#define       MC_CMD_TABLE_DUMP_IN_DMA_ADDR_LO_WIDTH 32
#define       MC_CMD_TABLE_DUMP_IN_DMA_ADDR_HI_OFST 12
#define       MC_CMD_TABLE_DUMP_IN_DMA_ADDR_HI_LEN 4
#define       MC_CMD_TABLE_DUMP_IN_DMA_ADDR_HI_LBN 96
#define       MC_CMD_TABLE_DUMP_IN_DMA_ADDR_HI_WIDTH 32
/* Length of the DMA buffer in bytes, or 0 if table entries are to be returned
 * in the response.
 */
#define       MC_CMD_TABLE_DUMP_IN_DMA_LEN_OFST 16
#define       MC_CMD_TABLE_DUMP_IN_DMA_LEN_LEN 8
#define       MC_CMD_TABLE_DUMP_IN_DMA_LEN_LO_OFST 16
#define       MC_CMD_TABLE_DUMP_IN_DMA_LEN_LO_LEN 4
#define       MC_CMD_TABLE_DUMP_IN_DMA_LEN_LO_LBN 128
#define       MC_CMD_TABLE_DUMP_IN_DMA_LEN_LO_WIDTH 32
#define       MC_CMD_TABLE_DUMP_IN_DMA_LEN_HI_OFST 20
#define       MC_CMD_TABLE_DUMP_IN_DMA_LEN_HI_LEN 4
#define       MC_CMD_TABLE_DUMP_IN_DMA_LEN_HI_LBN 160
#define       MC_CMD_TABLE_DUMP_IN_DMA_LEN_HI_WIDTH 32

/* MC_CMD_TABLE_DUMP_OUT msgresponse */
#define    MC_CMD_TABLE_DUMP_OUT_LENMIN 16
#define    MC_CMD_TABLE_DUMP_OUT_LENMAX 252
#define    MC_CMD_TABLE_DUMP_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_TABLE_DUMP_OUT_LEN(num) (16+4*(num))
#define    MC_CMD_TABLE_DUMP_OUT_TABLE_DATA_NUM(len) (((len)-16)/4)
/* Length of table data returned in bytes. This will be set for either data
 * returned by DMA, or in the TABLE_DATA field of the response.
 */
#define       MC_CMD_TABLE_DUMP_OUT_TABLE_DATA_LEN_OFST 0
#define       MC_CMD_TABLE_DUMP_OUT_TABLE_DATA_LEN_LEN 4
/* Position in table reached after request has been serviced. This is an opaque
 * type, which will be zero if the table dump is complete, or non-zero if
 * further MC_CMD_TABLE_DUMP requests are needed. In this case, the value of
 * position should be supplied to the next request.
 */
#define       MC_CMD_TABLE_DUMP_OUT_POSITION_OFST 4
#define       MC_CMD_TABLE_DUMP_OUT_POSITION_LEN 4
/* Table modification count at the time the request started. */
#define       MC_CMD_TABLE_DUMP_OUT_GENERATION_START_OFST 8
#define       MC_CMD_TABLE_DUMP_OUT_GENERATION_START_LEN 4
/* Table modification count at the time the request ended. */
#define       MC_CMD_TABLE_DUMP_OUT_GENERATION_END_OFST 12
#define       MC_CMD_TABLE_DUMP_OUT_GENERATION_END_LEN 4
/* If not using DMA, the table data records. */
#define       MC_CMD_TABLE_DUMP_OUT_TABLE_DATA_OFST 16
#define       MC_CMD_TABLE_DUMP_OUT_TABLE_DATA_LEN 4
#define       MC_CMD_TABLE_DUMP_OUT_TABLE_DATA_MINNUM 0
#define       MC_CMD_TABLE_DUMP_OUT_TABLE_DATA_MAXNUM 59
#define       MC_CMD_TABLE_DUMP_OUT_TABLE_DATA_MAXNUM_MCDI2 251


/***********************************/
/* MC_CMD_DEVEL_RDMA_RSVD_00
 */
#define MC_CMD_DEVEL_RDMA_RSVD_00 0x180
#define MC_CMD_DEVEL_RDMA_RSVD_00_MSGSET 0x180
#undef MC_CMD_0x180_PRIVILEGE_CTG

#define MC_CMD_0x180_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_DEVEL_RDMA_RSVD_00_IN msgrequest */
#define    MC_CMD_DEVEL_RDMA_RSVD_00_IN_LEN 0

/* MC_CMD_DEVEL_RDMA_RSVD_00_OUT msgresponse */
#define    MC_CMD_DEVEL_RDMA_RSVD_00_OUT_LEN 0


/***********************************/
/* MC_CMD_DEVEL_RDMA_RSVD_01
 */
#define MC_CMD_DEVEL_RDMA_RSVD_01 0x181
#define MC_CMD_DEVEL_RDMA_RSVD_01_MSGSET 0x181
#undef MC_CMD_0x181_PRIVILEGE_CTG

#define MC_CMD_0x181_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_DEVEL_RDMA_RSVD_01_IN msgrequest */
#define    MC_CMD_DEVEL_RDMA_RSVD_01_IN_LEN 0

/* MC_CMD_DEVEL_RDMA_RSVD_01_OUT msgresponse */
#define    MC_CMD_DEVEL_RDMA_RSVD_01_OUT_LEN 0


/***********************************/
/* MC_CMD_DEVEL_RDMA_RSVD_02
 */
#define MC_CMD_DEVEL_RDMA_RSVD_02 0x182
#define MC_CMD_DEVEL_RDMA_RSVD_02_MSGSET 0x182
#undef MC_CMD_0x182_PRIVILEGE_CTG

#define MC_CMD_0x182_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_DEVEL_RDMA_RSVD_02_IN msgrequest */
#define    MC_CMD_DEVEL_RDMA_RSVD_02_IN_LEN 0

/* MC_CMD_DEVEL_RDMA_RSVD_02_OUT msgresponse */
#define    MC_CMD_DEVEL_RDMA_RSVD_02_OUT_LEN 0


/***********************************/
/* MC_CMD_DEVEL_RDMA_RSVD_03
 */
#define MC_CMD_DEVEL_RDMA_RSVD_03 0x183
#define MC_CMD_DEVEL_RDMA_RSVD_03_MSGSET 0x183
#undef MC_CMD_0x183_PRIVILEGE_CTG

#define MC_CMD_0x183_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_DEVEL_RDMA_RSVD_03_IN msgrequest */
#define    MC_CMD_DEVEL_RDMA_RSVD_03_IN_LEN 0

/* MC_CMD_DEVEL_RDMA_RSVD_03_OUT msgresponse */
#define    MC_CMD_DEVEL_RDMA_RSVD_03_OUT_LEN 0


/***********************************/
/* MC_CMD_DEVEL_RDMA_RSVD_04
 */
#define MC_CMD_DEVEL_RDMA_RSVD_04 0x184
#define MC_CMD_DEVEL_RDMA_RSVD_04_MSGSET 0x184
#undef MC_CMD_0x184_PRIVILEGE_CTG

#define MC_CMD_0x184_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_DEVEL_RDMA_RSVD_04_IN msgrequest */
#define    MC_CMD_DEVEL_RDMA_RSVD_04_IN_LEN 0

/* MC_CMD_DEVEL_RDMA_RSVD_04_OUT msgresponse */
#define    MC_CMD_DEVEL_RDMA_RSVD_04_OUT_LEN 0


/***********************************/
/* MC_CMD_DEVEL_RDMA_RSVD_05
 */
#define MC_CMD_DEVEL_RDMA_RSVD_05 0x185
#define MC_CMD_DEVEL_RDMA_RSVD_05_MSGSET 0x185
#undef MC_CMD_0x185_PRIVILEGE_CTG

#define MC_CMD_0x185_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_DEVEL_RDMA_RSVD_05_IN msgrequest */
#define    MC_CMD_DEVEL_RDMA_RSVD_05_IN_LEN 0

/* MC_CMD_DEVEL_RDMA_RSVD_05_OUT msgresponse */
#define    MC_CMD_DEVEL_RDMA_RSVD_05_OUT_LEN 0


/***********************************/
/* MC_CMD_DEVEL_RDMA_RSVD_06
 */
#define MC_CMD_DEVEL_RDMA_RSVD_06 0x186
#define MC_CMD_DEVEL_RDMA_RSVD_06_MSGSET 0x186
#undef MC_CMD_0x186_PRIVILEGE_CTG

#define MC_CMD_0x186_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_DEVEL_RDMA_RSVD_06_IN msgrequest */
#define    MC_CMD_DEVEL_RDMA_RSVD_06_IN_LEN 0

/* MC_CMD_DEVEL_RDMA_RSVD_06_OUT msgresponse */
#define    MC_CMD_DEVEL_RDMA_RSVD_06_OUT_LEN 0


/***********************************/
/* MC_CMD_DEVEL_RDMA_RSVD_07
 */
#define MC_CMD_DEVEL_RDMA_RSVD_07 0x187
#define MC_CMD_DEVEL_RDMA_RSVD_07_MSGSET 0x187
#undef MC_CMD_0x187_PRIVILEGE_CTG

#define MC_CMD_0x187_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_DEVEL_RDMA_RSVD_07_IN msgrequest */
#define    MC_CMD_DEVEL_RDMA_RSVD_07_IN_LEN 0

/* MC_CMD_DEVEL_RDMA_RSVD_07_OUT msgresponse */
#define    MC_CMD_DEVEL_RDMA_RSVD_07_OUT_LEN 0


/***********************************/
/* MC_CMD_DEVEL_RDMA_RSVD_08
 */
#define MC_CMD_DEVEL_RDMA_RSVD_08 0x188
#define MC_CMD_DEVEL_RDMA_RSVD_08_MSGSET 0x188
#undef MC_CMD_0x188_PRIVILEGE_CTG

#define MC_CMD_0x188_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_DEVEL_RDMA_RSVD_08_IN msgrequest */
#define    MC_CMD_DEVEL_RDMA_RSVD_08_IN_LEN 0

/* MC_CMD_DEVEL_RDMA_RSVD_08_OUT msgresponse */
#define    MC_CMD_DEVEL_RDMA_RSVD_08_OUT_LEN 0


/***********************************/
/* MC_CMD_DEVEL_RDMA_RSVD_09
 */
#define MC_CMD_DEVEL_RDMA_RSVD_09 0x189
#define MC_CMD_DEVEL_RDMA_RSVD_09_MSGSET 0x189
#undef MC_CMD_0x189_PRIVILEGE_CTG

#define MC_CMD_0x189_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_DEVEL_RDMA_RSVD_09_IN msgrequest */
#define    MC_CMD_DEVEL_RDMA_RSVD_09_IN_LEN 0

/* MC_CMD_DEVEL_RDMA_RSVD_09_OUT msgresponse */
#define    MC_CMD_DEVEL_RDMA_RSVD_09_OUT_LEN 0


/***********************************/
/* MC_CMD_DEVEL_RDMA_RSVD_0A
 */
#define MC_CMD_DEVEL_RDMA_RSVD_0A 0x18a
#define MC_CMD_DEVEL_RDMA_RSVD_0A_MSGSET 0x18a
#undef MC_CMD_0x18a_PRIVILEGE_CTG

#define MC_CMD_0x18a_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_DEVEL_RDMA_RSVD_0a_IN msgrequest */
#define    MC_CMD_DEVEL_RDMA_RSVD_0a_IN_LEN 0

/* MC_CMD_DEVEL_RDMA_RSVD_0a_OUT msgresponse */
#define    MC_CMD_DEVEL_RDMA_RSVD_0a_OUT_LEN 0


/***********************************/
/* MC_CMD_DEVEL_RDMA_RSVD_0B
 */
#define MC_CMD_DEVEL_RDMA_RSVD_0B 0x18b
#define MC_CMD_DEVEL_RDMA_RSVD_0B_MSGSET 0x18b
#undef MC_CMD_0x18b_PRIVILEGE_CTG

#define MC_CMD_0x18b_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_DEVEL_RDMA_RSVD_0b_IN msgrequest */
#define    MC_CMD_DEVEL_RDMA_RSVD_0b_IN_LEN 0

/* MC_CMD_DEVEL_RDMA_RSVD_0b_OUT msgresponse */
#define    MC_CMD_DEVEL_RDMA_RSVD_0b_OUT_LEN 0


/***********************************/
/* MC_CMD_DEVEL_RDMA_RSVD_0C
 */
#define MC_CMD_DEVEL_RDMA_RSVD_0C 0x18c
#define MC_CMD_DEVEL_RDMA_RSVD_0C_MSGSET 0x18c
#undef MC_CMD_0x18c_PRIVILEGE_CTG

#define MC_CMD_0x18c_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_DEVEL_RDMA_RSVD_0c_IN msgrequest */
#define    MC_CMD_DEVEL_RDMA_RSVD_0c_IN_LEN 0

/* MC_CMD_DEVEL_RDMA_RSVD_0c_OUT msgresponse */
#define    MC_CMD_DEVEL_RDMA_RSVD_0c_OUT_LEN 0


/***********************************/
/* MC_CMD_DEVEL_RDMA_RSVD_0D
 */
#define MC_CMD_DEVEL_RDMA_RSVD_0D 0x18d
#define MC_CMD_DEVEL_RDMA_RSVD_0D_MSGSET 0x18d
#undef MC_CMD_0x18d_PRIVILEGE_CTG

#define MC_CMD_0x18d_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_DEVEL_RDMA_RSVD_0d_IN msgrequest */
#define    MC_CMD_DEVEL_RDMA_RSVD_0d_IN_LEN 0

/* MC_CMD_DEVEL_RDMA_RSVD_0d_OUT msgresponse */
#define    MC_CMD_DEVEL_RDMA_RSVD_0d_OUT_LEN 0


/***********************************/
/* MC_CMD_DEVEL_RDMA_RSVD_0E
 */
#define MC_CMD_DEVEL_RDMA_RSVD_0E 0x18e
#define MC_CMD_DEVEL_RDMA_RSVD_0E_MSGSET 0x18e
#undef MC_CMD_0x18e_PRIVILEGE_CTG

#define MC_CMD_0x18e_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_DEVEL_RDMA_RSVD_0e_IN msgrequest */
#define    MC_CMD_DEVEL_RDMA_RSVD_0e_IN_LEN 0

/* MC_CMD_DEVEL_RDMA_RSVD_0e_OUT msgresponse */
#define    MC_CMD_DEVEL_RDMA_RSVD_0e_OUT_LEN 0


/***********************************/
/* MC_CMD_DEVEL_RDMA_RSVD_0F
 */
#define MC_CMD_DEVEL_RDMA_RSVD_0F 0x18f
#define MC_CMD_DEVEL_RDMA_RSVD_0F_MSGSET 0x18f
#undef MC_CMD_0x18f_PRIVILEGE_CTG

#define MC_CMD_0x18f_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_DEVEL_RDMA_RSVD_0f_IN msgrequest */
#define    MC_CMD_DEVEL_RDMA_RSVD_0f_IN_LEN 0

/* MC_CMD_DEVEL_RDMA_RSVD_0f_OUT msgresponse */
#define    MC_CMD_DEVEL_RDMA_RSVD_0f_OUT_LEN 0


/***********************************/
/* MC_CMD_DEVEL_RDMA_RSVD_10
 */
#define MC_CMD_DEVEL_RDMA_RSVD_10 0x190
#define MC_CMD_DEVEL_RDMA_RSVD_10_MSGSET 0x190
#undef MC_CMD_0x190_PRIVILEGE_CTG

#define MC_CMD_0x190_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_DEVEL_RDMA_RSVD_10_IN msgrequest */
#define    MC_CMD_DEVEL_RDMA_RSVD_10_IN_LEN 0

/* MC_CMD_DEVEL_RDMA_RSVD_10_OUT msgresponse */
#define    MC_CMD_DEVEL_RDMA_RSVD_10_OUT_LEN 0


/***********************************/
/* MC_CMD_DEVEL_RDMA_RSVD_11
 */
#define MC_CMD_DEVEL_RDMA_RSVD_11 0x191
#define MC_CMD_DEVEL_RDMA_RSVD_11_MSGSET 0x191
#undef MC_CMD_0x191_PRIVILEGE_CTG

#define MC_CMD_0x191_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_DEVEL_RDMA_RSVD_11_IN msgrequest */
#define    MC_CMD_DEVEL_RDMA_RSVD_11_IN_LEN 0

/* MC_CMD_DEVEL_RDMA_RSVD_11_OUT msgresponse */
#define    MC_CMD_DEVEL_RDMA_RSVD_11_OUT_LEN 0


/***********************************/
/* MC_CMD_DEVEL_RDMA_RSVD_12
 */
#define MC_CMD_DEVEL_RDMA_RSVD_12 0x192
#define MC_CMD_DEVEL_RDMA_RSVD_12_MSGSET 0x192
#undef MC_CMD_0x192_PRIVILEGE_CTG

#define MC_CMD_0x192_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_DEVEL_RDMA_RSVD_12_IN msgrequest */
#define    MC_CMD_DEVEL_RDMA_RSVD_12_IN_LEN 0

/* MC_CMD_DEVEL_RDMA_RSVD_12_OUT msgresponse */
#define    MC_CMD_DEVEL_RDMA_RSVD_12_OUT_LEN 0


/***********************************/
/* MC_CMD_DEVEL_RDMA_RSVD_13
 */
#define MC_CMD_DEVEL_RDMA_RSVD_13 0x193
#define MC_CMD_DEVEL_RDMA_RSVD_13_MSGSET 0x193
#undef MC_CMD_0x193_PRIVILEGE_CTG

#define MC_CMD_0x193_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_DEVEL_RDMA_RSVD_13_IN msgrequest */
#define    MC_CMD_DEVEL_RDMA_RSVD_13_IN_LEN 0

/* MC_CMD_DEVEL_RDMA_RSVD_13_OUT msgresponse */
#define    MC_CMD_DEVEL_RDMA_RSVD_13_OUT_LEN 0


/***********************************/
/* MC_CMD_DEVEL_RDMA_RSVD_14
 */
#define MC_CMD_DEVEL_RDMA_RSVD_14 0x194
#define MC_CMD_DEVEL_RDMA_RSVD_14_MSGSET 0x194
#undef MC_CMD_0x194_PRIVILEGE_CTG

#define MC_CMD_0x194_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_DEVEL_RDMA_RSVD_14_IN msgrequest */
#define    MC_CMD_DEVEL_RDMA_RSVD_14_IN_LEN 0

/* MC_CMD_DEVEL_RDMA_RSVD_14_OUT msgresponse */
#define    MC_CMD_DEVEL_RDMA_RSVD_14_OUT_LEN 0


/***********************************/
/* MC_CMD_DEVEL_RDMA_RSVD_15
 */
#define MC_CMD_DEVEL_RDMA_RSVD_15 0x195
#define MC_CMD_DEVEL_RDMA_RSVD_15_MSGSET 0x195
#undef MC_CMD_0x195_PRIVILEGE_CTG

#define MC_CMD_0x195_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_DEVEL_RDMA_RSVD_15_IN msgrequest */
#define    MC_CMD_DEVEL_RDMA_RSVD_15_IN_LEN 0

/* MC_CMD_DEVEL_RDMA_RSVD_15_OUT msgresponse */
#define    MC_CMD_DEVEL_RDMA_RSVD_15_OUT_LEN 0


/***********************************/
/* MC_CMD_DEVEL_RDMA_RSVD_16
 */
#define MC_CMD_DEVEL_RDMA_RSVD_16 0x196
#define MC_CMD_DEVEL_RDMA_RSVD_16_MSGSET 0x196
#undef MC_CMD_0x196_PRIVILEGE_CTG

#define MC_CMD_0x196_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_DEVEL_RDMA_RSVD_16_IN msgrequest */
#define    MC_CMD_DEVEL_RDMA_RSVD_16_IN_LEN 0

/* MC_CMD_DEVEL_RDMA_RSVD_16_OUT msgresponse */
#define    MC_CMD_DEVEL_RDMA_RSVD_16_OUT_LEN 0


/***********************************/
/* MC_CMD_DEVEL_RDMA_RSVD_17
 */
#define MC_CMD_DEVEL_RDMA_RSVD_17 0x197
#define MC_CMD_DEVEL_RDMA_RSVD_17_MSGSET 0x197
#undef MC_CMD_0x197_PRIVILEGE_CTG

#define MC_CMD_0x197_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_DEVEL_RDMA_RSVD_17_IN msgrequest */
#define    MC_CMD_DEVEL_RDMA_RSVD_17_IN_LEN 0

/* MC_CMD_DEVEL_RDMA_RSVD_17_OUT msgresponse */
#define    MC_CMD_DEVEL_RDMA_RSVD_17_OUT_LEN 0


/***********************************/
/* MC_CMD_DEVEL_RDMA_RSVD_18
 */
#define MC_CMD_DEVEL_RDMA_RSVD_18 0x198
#define MC_CMD_DEVEL_RDMA_RSVD_18_MSGSET 0x198
#undef MC_CMD_0x198_PRIVILEGE_CTG

#define MC_CMD_0x198_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_DEVEL_RDMA_RSVD_18_IN msgrequest */
#define    MC_CMD_DEVEL_RDMA_RSVD_18_IN_LEN 0

/* MC_CMD_DEVEL_RDMA_RSVD_18_OUT msgresponse */
#define    MC_CMD_DEVEL_RDMA_RSVD_18_OUT_LEN 0


/***********************************/
/* MC_CMD_DEVEL_RDMA_RSVD_19
 */
#define MC_CMD_DEVEL_RDMA_RSVD_19 0x199
#define MC_CMD_DEVEL_RDMA_RSVD_19_MSGSET 0x199
#undef MC_CMD_0x199_PRIVILEGE_CTG

#define MC_CMD_0x199_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_DEVEL_RDMA_RSVD_19_IN msgrequest */
#define    MC_CMD_DEVEL_RDMA_RSVD_19_IN_LEN 0

/* MC_CMD_DEVEL_RDMA_RSVD_19_OUT msgresponse */
#define    MC_CMD_DEVEL_RDMA_RSVD_19_OUT_LEN 0


/***********************************/
/* MC_CMD_DEVEL_RDMA_RSVD_1A
 */
#define MC_CMD_DEVEL_RDMA_RSVD_1A 0x19a
#define MC_CMD_DEVEL_RDMA_RSVD_1A_MSGSET 0x19a
#undef MC_CMD_0x19a_PRIVILEGE_CTG

#define MC_CMD_0x19a_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_DEVEL_RDMA_RSVD_1a_IN msgrequest */
#define    MC_CMD_DEVEL_RDMA_RSVD_1a_IN_LEN 0

/* MC_CMD_DEVEL_RDMA_RSVD_1a_OUT msgresponse */
#define    MC_CMD_DEVEL_RDMA_RSVD_1a_OUT_LEN 0


/***********************************/
/* MC_CMD_DEVEL_RDMA_RSVD_1B
 */
#define MC_CMD_DEVEL_RDMA_RSVD_1B 0x19b
#define MC_CMD_DEVEL_RDMA_RSVD_1B_MSGSET 0x19b
#undef MC_CMD_0x19b_PRIVILEGE_CTG

#define MC_CMD_0x19b_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_DEVEL_RDMA_RSVD_1b_IN msgrequest */
#define    MC_CMD_DEVEL_RDMA_RSVD_1b_IN_LEN 0

/* MC_CMD_DEVEL_RDMA_RSVD_1b_OUT msgresponse */
#define    MC_CMD_DEVEL_RDMA_RSVD_1b_OUT_LEN 0


/***********************************/
/* MC_CMD_DEVEL_RDMA_RSVD_1C
 */
#define MC_CMD_DEVEL_RDMA_RSVD_1C 0x19c
#define MC_CMD_DEVEL_RDMA_RSVD_1C_MSGSET 0x19c
#undef MC_CMD_0x19c_PRIVILEGE_CTG

#define MC_CMD_0x19c_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_DEVEL_RDMA_RSVD_1c_IN msgrequest */
#define    MC_CMD_DEVEL_RDMA_RSVD_1c_IN_LEN 0

/* MC_CMD_DEVEL_RDMA_RSVD_1c_OUT msgresponse */
#define    MC_CMD_DEVEL_RDMA_RSVD_1c_OUT_LEN 0


/***********************************/
/* MC_CMD_DEVEL_RDMA_RSVD_1D
 */
#define MC_CMD_DEVEL_RDMA_RSVD_1D 0x19d
#define MC_CMD_DEVEL_RDMA_RSVD_1D_MSGSET 0x19d
#undef MC_CMD_0x19d_PRIVILEGE_CTG

#define MC_CMD_0x19d_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_DEVEL_RDMA_RSVD_1d_IN msgrequest */
#define    MC_CMD_DEVEL_RDMA_RSVD_1d_IN_LEN 0

/* MC_CMD_DEVEL_RDMA_RSVD_1d_OUT msgresponse */
#define    MC_CMD_DEVEL_RDMA_RSVD_1d_OUT_LEN 0


/***********************************/
/* MC_CMD_DEVEL_RDMA_RSVD_1E
 */
#define MC_CMD_DEVEL_RDMA_RSVD_1E 0x19e
#define MC_CMD_DEVEL_RDMA_RSVD_1E_MSGSET 0x19e
#undef MC_CMD_0x19e_PRIVILEGE_CTG

#define MC_CMD_0x19e_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_DEVEL_RDMA_RSVD_1e_IN msgrequest */
#define    MC_CMD_DEVEL_RDMA_RSVD_1e_IN_LEN 0

/* MC_CMD_DEVEL_RDMA_RSVD_1e_OUT msgresponse */
#define    MC_CMD_DEVEL_RDMA_RSVD_1e_OUT_LEN 0


/***********************************/
/* MC_CMD_DEVEL_RDMA_RSVD_1F
 */
#define MC_CMD_DEVEL_RDMA_RSVD_1F 0x19f
#define MC_CMD_DEVEL_RDMA_RSVD_1F_MSGSET 0x19f
#undef MC_CMD_0x19f_PRIVILEGE_CTG

#define MC_CMD_0x19f_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_DEVEL_RDMA_RSVD_1f_IN msgrequest */
#define    MC_CMD_DEVEL_RDMA_RSVD_1f_IN_LEN 0

/* MC_CMD_DEVEL_RDMA_RSVD_1f_OUT msgresponse */
#define    MC_CMD_DEVEL_RDMA_RSVD_1f_OUT_LEN 0


/***********************************/
/* MC_CMD_RHEAD_PKTGEN_ON
 * Riverhead Packet Generator control
 */
#define MC_CMD_RHEAD_PKTGEN_ON 0x161
#define MC_CMD_RHEAD_PKTGEN_ON_MSGSET 0x161
#undef MC_CMD_0x161_PRIVILEGE_CTG

#define MC_CMD_0x161_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_RHEAD_PKTGEN_ON_IN msgrequest */
#define    MC_CMD_RHEAD_PKTGEN_ON_IN_LEN 24
/* Test packet frame length in bytes e.g. 1500 */
#define       MC_CMD_RHEAD_PKTGEN_ON_IN_FRAME_LEN_OFST 0
#define       MC_CMD_RHEAD_PKTGEN_ON_IN_FRAME_LEN_LEN 4
/* Destination MAC address for test packets */
#define       MC_CMD_RHEAD_PKTGEN_ON_IN_DST_ETHER_ADDR_OFST 4
#define       MC_CMD_RHEAD_PKTGEN_ON_IN_DST_ETHER_ADDR_LEN 6
/* Source MAC address for test packets */
#define       MC_CMD_RHEAD_PKTGEN_ON_IN_SRC_ETHER_ADDR_OFST 10
#define       MC_CMD_RHEAD_PKTGEN_ON_IN_SRC_ETHER_ADDR_LEN 6
/* Destination IPv4 address for test packets */
#define       MC_CMD_RHEAD_PKTGEN_ON_IN_DST_IPV4_ADDR_OFST 16
#define       MC_CMD_RHEAD_PKTGEN_ON_IN_DST_IPV4_ADDR_LEN 4
/* Source IPv4 address for test packets */
#define       MC_CMD_RHEAD_PKTGEN_ON_IN_SRC_IPV4_ADDR_OFST 20
#define       MC_CMD_RHEAD_PKTGEN_ON_IN_SRC_IPV4_ADDR_LEN 4

/* MC_CMD_RHEAD_PKTGEN_ON_OUT msgresponse */
#define    MC_CMD_RHEAD_PKTGEN_ON_OUT_LEN 0


/***********************************/
/* MC_CMD_RHEAD_PKTGEN_OFF
 * Riverhead Packet Generator control
 */
#define MC_CMD_RHEAD_PKTGEN_OFF 0x162
#define MC_CMD_RHEAD_PKTGEN_OFF_MSGSET 0x162
#undef MC_CMD_0x162_PRIVILEGE_CTG

#define MC_CMD_0x162_PRIVILEGE_CTG SRIOV_CTG_GENERAL

/* MC_CMD_RHEAD_PKTGEN_OFF_IN msgrequest */
#define    MC_CMD_RHEAD_PKTGEN_OFF_IN_LEN 0

/* MC_CMD_RHEAD_PKTGEN_OFF_OUT msgresponse */
#define    MC_CMD_RHEAD_PKTGEN_OFF_OUT_LEN 0

/* PORT_CONFIG_ENTRY structuredef */
#define    PORT_CONFIG_ENTRY_LEN 16
/* External port number (label) */
#define       PORT_CONFIG_ENTRY_EXT_NUMBER_OFST 0
#define       PORT_CONFIG_ENTRY_EXT_NUMBER_LEN 1
#define       PORT_CONFIG_ENTRY_EXT_NUMBER_LBN 0
#define       PORT_CONFIG_ENTRY_EXT_NUMBER_WIDTH 8
/* Port core location */
#define       PORT_CONFIG_ENTRY_CORE_OFST 1
#define       PORT_CONFIG_ENTRY_CORE_LEN 1
#define          PORT_CONFIG_ENTRY_STANDALONE 0x0 /* enum */
#define          PORT_CONFIG_ENTRY_MASTER 0x1 /* enum */
#define          PORT_CONFIG_ENTRY_SLAVE 0x2 /* enum */
#define       PORT_CONFIG_ENTRY_CORE_LBN 8
#define       PORT_CONFIG_ENTRY_CORE_WIDTH 8
/* Internal number (HW resource) relative to the core */
#define       PORT_CONFIG_ENTRY_INT_NUMBER_OFST 2
#define       PORT_CONFIG_ENTRY_INT_NUMBER_LEN 1
#define       PORT_CONFIG_ENTRY_INT_NUMBER_LBN 16
#define       PORT_CONFIG_ENTRY_INT_NUMBER_WIDTH 8
/* Instance of KR Serdes quad used by the port */
#define       PORT_CONFIG_ENTRY_SERDES_OFST 3
#define       PORT_CONFIG_ENTRY_SERDES_LEN 1
#define       PORT_CONFIG_ENTRY_SERDES_LBN 24
#define       PORT_CONFIG_ENTRY_SERDES_WIDTH 8
/* Bitmask of KR lanes used by the port (relative to serdes) */
#define       PORT_CONFIG_ENTRY_LANES_OFST 4
#define       PORT_CONFIG_ENTRY_LANES_LEN 4
#define       PORT_CONFIG_ENTRY_LANES_LBN 32
#define       PORT_CONFIG_ENTRY_LANES_WIDTH 32
/* Standard port capabilities (MC_CMD_PHY_CAP_*) */
#define       PORT_CONFIG_ENTRY_SUPPORTED_CAPS_OFST 8
#define       PORT_CONFIG_ENTRY_SUPPORTED_CAPS_LEN 4
#define       PORT_CONFIG_ENTRY_SUPPORTED_CAPS_LBN 64
#define       PORT_CONFIG_ENTRY_SUPPORTED_CAPS_WIDTH 32
#define       PORT_CONFIG_ENTRY_RXDP_OFST 12
#define       PORT_CONFIG_ENTRY_RXDP_LEN 1
/* enum: Not mapped to datapath (unconfigured) */
#define          PORT_CONFIG_ENTRY_DATAPATH_NONE 0x0
/* enum: Primary datapath is DP0 */
#define          PORT_CONFIG_ENTRY_DATAPATH_0 0x1
/* enum: Primary datapath is DP1 */
#define          PORT_CONFIG_ENTRY_DATAPATH_1 0x2
/* enum: Flag indicating striping over the other (secondary) DP */
#define          PORT_CONFIG_ENTRY_DATAPATH_STRIPING 0x4
#define       PORT_CONFIG_ENTRY_RXDP_LBN 96
#define       PORT_CONFIG_ENTRY_RXDP_WIDTH 8
#define       PORT_CONFIG_ENTRY_TXDP_OFST 13
#define       PORT_CONFIG_ENTRY_TXDP_LEN 1
/*            Enum values, see field(s): */
/*               PORT_CONFIG_ENTRY/RXDP */
#define       PORT_CONFIG_ENTRY_TXDP_LBN 104
#define       PORT_CONFIG_ENTRY_TXDP_WIDTH 8
/* Extra fixed/internal features of the port HW */
#define       PORT_CONFIG_ENTRY_FEATURES_OFST 14
#define       PORT_CONFIG_ENTRY_FEATURES_LEN 1
#define        PORT_CONFIG_ENTRY_LOW_LATENCY_PCS_OFST 14
#define        PORT_CONFIG_ENTRY_LOW_LATENCY_PCS_LBN 0
#define        PORT_CONFIG_ENTRY_LOW_LATENCY_PCS_WIDTH 1
#define       PORT_CONFIG_ENTRY_FEATURES_LBN 112
#define       PORT_CONFIG_ENTRY_FEATURES_WIDTH 8
/* Reserved (align to 16 bytes) */
#define       PORT_CONFIG_ENTRY_RSVD2_OFST 15
#define       PORT_CONFIG_ENTRY_RSVD2_LEN 1
#define       PORT_CONFIG_ENTRY_RSVD2_LBN 120
#define       PORT_CONFIG_ENTRY_RSVD2_WIDTH 8

/* PORT_CONFIG_SHORT_ENTRY structuredef */
#define    PORT_CONFIG_SHORT_ENTRY_LEN 8
#define       PORT_CONFIG_SHORT_ENTRY_EXT_NUMBER_OFST 0
#define       PORT_CONFIG_SHORT_ENTRY_EXT_NUMBER_LEN 1
/* enum: Entry unused */
#define          PORT_CONFIG_SHORT_ENTRY_INVALID 0xff
#define       PORT_CONFIG_SHORT_ENTRY_EXT_NUMBER_LBN 0
#define       PORT_CONFIG_SHORT_ENTRY_EXT_NUMBER_WIDTH 8
#define       PORT_CONFIG_SHORT_ENTRY_RXDP_OFST 1
#define       PORT_CONFIG_SHORT_ENTRY_RXDP_LEN 1
/*            Enum values, see field(s): */
/*               PORT_CONFIG_ENTRY/RXDP */
#define       PORT_CONFIG_SHORT_ENTRY_RXDP_LBN 8
#define       PORT_CONFIG_SHORT_ENTRY_RXDP_WIDTH 8
#define       PORT_CONFIG_SHORT_ENTRY_TXDP_OFST 2
#define       PORT_CONFIG_SHORT_ENTRY_TXDP_LEN 1
/*            Enum values, see field(s): */
/*               PORT_CONFIG_ENTRY/RXDP */
#define       PORT_CONFIG_SHORT_ENTRY_TXDP_LBN 16
#define       PORT_CONFIG_SHORT_ENTRY_TXDP_WIDTH 8
/* Extra fixed/internal features of the port HW */
#define       PORT_CONFIG_SHORT_ENTRY_FEATURES_OFST 3
#define       PORT_CONFIG_SHORT_ENTRY_FEATURES_LEN 1
#define        PORT_CONFIG_SHORT_ENTRY_LOW_LATENCY_PCS_OFST 3
#define        PORT_CONFIG_SHORT_ENTRY_LOW_LATENCY_PCS_LBN 0
#define        PORT_CONFIG_SHORT_ENTRY_LOW_LATENCY_PCS_WIDTH 1
#define       PORT_CONFIG_SHORT_ENTRY_FEATURES_LBN 24
#define       PORT_CONFIG_SHORT_ENTRY_FEATURES_WIDTH 8
/* Standard port capabilities (MC_CMD_PHY_CAP_*) */
#define       PORT_CONFIG_SHORT_ENTRY_SUPPORTED_CAPS_OFST 4
#define       PORT_CONFIG_SHORT_ENTRY_SUPPORTED_CAPS_LEN 4
#define       PORT_CONFIG_SHORT_ENTRY_SUPPORTED_CAPS_LBN 32
#define       PORT_CONFIG_SHORT_ENTRY_SUPPORTED_CAPS_WIDTH 32

/* PORT_MODE_ENTRY structuredef */
#define    PORT_MODE_ENTRY_LEN 32
/* Port information for all 4 ports, laid out as PORT_CONFIG_SHORT_ENTRY */
#define       PORT_MODE_ENTRY_PORT_ENTRIES_OFST 0
#define       PORT_MODE_ENTRY_PORT_ENTRIES_LEN 8
#define       PORT_MODE_ENTRY_PORT_ENTRIES_LO_OFST 0
#define       PORT_MODE_ENTRY_PORT_ENTRIES_LO_LEN 4
#define       PORT_MODE_ENTRY_PORT_ENTRIES_LO_LBN 0
#define       PORT_MODE_ENTRY_PORT_ENTRIES_LO_WIDTH 32
#define       PORT_MODE_ENTRY_PORT_ENTRIES_HI_OFST 4
#define       PORT_MODE_ENTRY_PORT_ENTRIES_HI_LEN 4
#define       PORT_MODE_ENTRY_PORT_ENTRIES_HI_LBN 32
#define       PORT_MODE_ENTRY_PORT_ENTRIES_HI_WIDTH 32
#define       PORT_MODE_ENTRY_PORT_ENTRIES_NUM 4
#define       PORT_MODE_ENTRY_PORT_ENTRIES_LBN 0
#define       PORT_MODE_ENTRY_PORT_ENTRIES_WIDTH 64

/* LOGICAL_PORT_ENTRY structuredef */
#define    LOGICAL_PORT_ENTRY_LEN 4
/* Logical port number */
#define       LOGICAL_PORT_ENTRY_LOGICAL_NUMBER_OFST 0
#define       LOGICAL_PORT_ENTRY_LOGICAL_NUMBER_LEN 1
#define       LOGICAL_PORT_ENTRY_LOGICAL_NUMBER_LBN 0
#define       LOGICAL_PORT_ENTRY_LOGICAL_NUMBER_WIDTH 8
/* Port core location */
#define       LOGICAL_PORT_ENTRY_CORE_OFST 1
#define       LOGICAL_PORT_ENTRY_CORE_LEN 1
#define          LOGICAL_PORT_ENTRY_STANDALONE 0x0 /* enum */
#define          LOGICAL_PORT_ENTRY_MASTER 0x1 /* enum */
#define          LOGICAL_PORT_ENTRY_SLAVE 0x2 /* enum */
#define       LOGICAL_PORT_ENTRY_CORE_LBN 8
#define       LOGICAL_PORT_ENTRY_CORE_WIDTH 8
/* Internal number (HW resource) relative to the core */
#define       LOGICAL_PORT_ENTRY_INT_NUMBER_OFST 2
#define       LOGICAL_PORT_ENTRY_INT_NUMBER_LEN 1
#define       LOGICAL_PORT_ENTRY_INT_NUMBER_LBN 16
#define       LOGICAL_PORT_ENTRY_INT_NUMBER_WIDTH 8
/* Reserved (align to 32 bits) */
#define       LOGICAL_PORT_ENTRY_RSVD_OFST 3
#define       LOGICAL_PORT_ENTRY_RSVD_LEN 1
#define       LOGICAL_PORT_ENTRY_RSVD_LBN 24
#define       LOGICAL_PORT_ENTRY_RSVD_WIDTH 8

/* PHYSICAL_PORT_ENTRY structuredef */
#define    PHYSICAL_PORT_ENTRY_LEN 32
/* Physical port number */
#define       PHYSICAL_PORT_ENTRY_PHYSICAL_NUMBER_OFST 0
#define       PHYSICAL_PORT_ENTRY_PHYSICAL_NUMBER_LEN 1
#define       PHYSICAL_PORT_ENTRY_PHYSICAL_NUMBER_LBN 0
#define       PHYSICAL_PORT_ENTRY_PHYSICAL_NUMBER_WIDTH 8
/* Port core location */
#define       PHYSICAL_PORT_ENTRY_CORE_OFST 1
#define       PHYSICAL_PORT_ENTRY_CORE_LEN 1
#define          PHYSICAL_PORT_ENTRY_STANDALONE 0x0 /* enum */
#define          PHYSICAL_PORT_ENTRY_MASTER 0x1 /* enum */
#define          PHYSICAL_PORT_ENTRY_SLAVE 0x2 /* enum */
#define       PHYSICAL_PORT_ENTRY_CORE_LBN 8
#define       PHYSICAL_PORT_ENTRY_CORE_WIDTH 8
/* Human-readable port label */
#define       PHYSICAL_PORT_ENTRY_NAME_OFST 2
#define       PHYSICAL_PORT_ENTRY_NAME_LEN 20
#define       PHYSICAL_PORT_ENTRY_NAME_LBN 16
#define       PHYSICAL_PORT_ENTRY_NAME_WIDTH 160
/* Instance of KR Serdes quad used by the port */
#define       PHYSICAL_PORT_ENTRY_SERDES_OFST 22
#define       PHYSICAL_PORT_ENTRY_SERDES_LEN 1
#define       PHYSICAL_PORT_ENTRY_SERDES_LBN 176
#define       PHYSICAL_PORT_ENTRY_SERDES_WIDTH 8
/* Bitmask of KR lanes used by the port (relative to serdes) */
#define       PHYSICAL_PORT_ENTRY_LANES_OFST 23
#define       PHYSICAL_PORT_ENTRY_LANES_LEN 1
#define       PHYSICAL_PORT_ENTRY_LANES_LBN 184
#define       PHYSICAL_PORT_ENTRY_LANES_WIDTH 8
/* Supported port speeds (MC_CMD_PHY_CAP_*) */
#define       PHYSICAL_PORT_ENTRY_SPEEDS_OFST 24
#define       PHYSICAL_PORT_ENTRY_SPEEDS_LEN 4
#define       PHYSICAL_PORT_ENTRY_SPEEDS_LBN 192
#define       PHYSICAL_PORT_ENTRY_SPEEDS_WIDTH 32
/* Port features */
#define       PHYSICAL_PORT_ENTRY_FEATURES_OFST 28
#define       PHYSICAL_PORT_ENTRY_FEATURES_LEN 4
#define        PHYSICAL_PORT_ENTRY_LOW_LATENCY_OFST 28
#define        PHYSICAL_PORT_ENTRY_LOW_LATENCY_LBN 0
#define        PHYSICAL_PORT_ENTRY_LOW_LATENCY_WIDTH 1
#define       PHYSICAL_PORT_ENTRY_FEATURES_LBN 224
#define       PHYSICAL_PORT_ENTRY_FEATURES_WIDTH 32

/* PORT_MAPPING_ENTRY structuredef */
#define    PORT_MAPPING_ENTRY_LEN 4
/* Logical port number */
#define       PORT_MAPPING_ENTRY_LOGICAL_NUMBER_OFST 0
#define       PORT_MAPPING_ENTRY_LOGICAL_NUMBER_LEN 1
#define       PORT_MAPPING_ENTRY_LOGICAL_NUMBER_LBN 0
#define       PORT_MAPPING_ENTRY_LOGICAL_NUMBER_WIDTH 8
/* Physical port number */
#define       PORT_MAPPING_ENTRY_PHYSICAL_NUMBER_OFST 1
#define       PORT_MAPPING_ENTRY_PHYSICAL_NUMBER_LEN 1
#define          PORT_MAPPING_ENTRY_PHYSICAL_PORT_NONE 0xff /* enum */
#define       PORT_MAPPING_ENTRY_PHYSICAL_NUMBER_LBN 8
#define       PORT_MAPPING_ENTRY_PHYSICAL_NUMBER_WIDTH 8
#define       PORT_MAPPING_ENTRY_RXDP_OFST 2
#define       PORT_MAPPING_ENTRY_RXDP_LEN 1
/*            Enum values, see field(s): */
/*               PORT_CONFIG_ENTRY/RXDP */
#define       PORT_MAPPING_ENTRY_RXDP_LBN 16
#define       PORT_MAPPING_ENTRY_RXDP_WIDTH 8
#define       PORT_MAPPING_ENTRY_TXDP_OFST 3
#define       PORT_MAPPING_ENTRY_TXDP_LEN 1
/*            Enum values, see field(s): */
/*               PORT_CONFIG_ENTRY/RXDP */
#define       PORT_MAPPING_ENTRY_TXDP_LBN 24
#define       PORT_MAPPING_ENTRY_TXDP_WIDTH 8

/* RXDI_TEST_CONTROL structuredef: Assignment of the global TEST_CONTROL word
 * in the RX DICPU DMEM map for the testfw_tsa_features test firmware, for
 * directed Medford2 DICPU TSA feature tests.
 */
#define    RXDI_TEST_CONTROL_LEN 2
/* Enable recognition of magic packets to trigger special directed tests. */
#define       RXDI_TEST_CONTROL_MAGIC_PKT_EN_LBN 15
#define       RXDI_TEST_CONTROL_MAGIC_PKT_EN_WIDTH 1

/* TXDI_TEST_CONTROL structuredef: Assignment of the global TEST_CONTROL word
 * in the TX DICPU DMEM map for the testfw_tsa_features test firmware, for
 * directed Medford2 DICPU TSA feature tests.
 */
#define    TXDI_TEST_CONTROL_LEN 2
/* Enable recognition of magic packets to trigger special directed tests. */
#define       TXDI_TEST_CONTROL_MAGIC_PKT_EN_LBN 15
#define       TXDI_TEST_CONTROL_MAGIC_PKT_EN_WIDTH 1

/* DICPU_TEST_MAGIC_SRCMAC structuredef: The specific test case is selected
 * using the source MAC address field, which should be of the form
 * 02:nn:xx:xx:yy:yy, where nn is the test ID, and xx:xx and yy:yy are little-
 * endian 16-bit parameters, param1 and param2. (The packet will be handled as
 * a normal packet if the first byte is not 0x02.)
 */
#define    DICPU_TEST_MAGIC_SRCMAC_LEN 6
/* First byte must be 0x02. */
#define       DICPU_TEST_MAGIC_SRCMAC_FIXED_BYTE_OFST 0
#define       DICPU_TEST_MAGIC_SRCMAC_FIXED_BYTE_LEN 1
#define          DICPU_TEST_MAGIC_SRCMAC_FIXED_BYTE_VALUE 0x2 /* enum */
#define       DICPU_TEST_MAGIC_SRCMAC_FIXED_BYTE_LBN 0
#define       DICPU_TEST_MAGIC_SRCMAC_FIXED_BYTE_WIDTH 8
/* Second byte is test ID; see DICPU_TEST_ID for test descriptions. */
#define       DICPU_TEST_MAGIC_SRCMAC_TEST_ID_OFST 1
#define       DICPU_TEST_MAGIC_SRCMAC_TEST_ID_LEN 1
#define       DICPU_TEST_MAGIC_SRCMAC_TEST_ID_LBN 8
#define       DICPU_TEST_MAGIC_SRCMAC_TEST_ID_WIDTH 8
/* Third byte is low 8 bits of 16-bit parameter 1. */
#define       DICPU_TEST_MAGIC_SRCMAC_PARAM1_LO_OFST 2
#define       DICPU_TEST_MAGIC_SRCMAC_PARAM1_LO_LEN 1
#define       DICPU_TEST_MAGIC_SRCMAC_PARAM1_LO_LBN 16
#define       DICPU_TEST_MAGIC_SRCMAC_PARAM1_LO_WIDTH 8
/* Fourth byte is high 8 bits of 16-bit parameter 1. */
#define       DICPU_TEST_MAGIC_SRCMAC_PARAM1_HI_OFST 3
#define       DICPU_TEST_MAGIC_SRCMAC_PARAM1_HI_LEN 1
#define       DICPU_TEST_MAGIC_SRCMAC_PARAM1_HI_LBN 24
#define       DICPU_TEST_MAGIC_SRCMAC_PARAM1_HI_WIDTH 8
/* Fifth byte is low 8 bits of 16-bit parameter 2. */
#define       DICPU_TEST_MAGIC_SRCMAC_PARAM2_LO_OFST 4
#define       DICPU_TEST_MAGIC_SRCMAC_PARAM2_LO_LEN 1
#define       DICPU_TEST_MAGIC_SRCMAC_PARAM2_LO_LBN 32
#define       DICPU_TEST_MAGIC_SRCMAC_PARAM2_LO_WIDTH 8
/* Sixth byte is high 8 bits of 16-bit parameter 2. */
#define       DICPU_TEST_MAGIC_SRCMAC_PARAM2_HI_OFST 5
#define       DICPU_TEST_MAGIC_SRCMAC_PARAM2_HI_LEN 1
#define       DICPU_TEST_MAGIC_SRCMAC_PARAM2_HI_LBN 40
#define       DICPU_TEST_MAGIC_SRCMAC_PARAM2_HI_WIDTH 8

/* TSA_SAMPLE_DUMP structuredef: Offsets and lengths of the interesting parts
 * of RF dump data for TSA rules which have the SAMPLE action bit set. The
 * remaining parts of the data are not interesting except for special directed
 * tests. Some packet headers e.g. source MAC address are not made available
 * for SAMPLE rules due to firmware implementation details of register usage
 * (but the directed tests should prove that all registers are dumped correctly
 * such that a future implementation could work differently if required). All
 * fields should be treated as a sequence of bytes in network order. Fields not
 * used by a particular packet type are expected to contain 0.
 */
#define    TSA_SAMPLE_DUMP_LEN 96
/* remote (i.e. source for RX, dest for TX) TCP/UDP port */
#define       TSA_SAMPLE_DUMP_REMOTE_PORT_OFST 38
#define       TSA_SAMPLE_DUMP_REMOTE_PORT_LEN 2
#define       TSA_SAMPLE_DUMP_REMOTE_PORT_LBN 304
#define       TSA_SAMPLE_DUMP_REMOTE_PORT_WIDTH 16
/* local (i.e. dest for RX, source for TX) MAC address */
#define       TSA_SAMPLE_DUMP_LOCAL_MAC_OFST 40
#define       TSA_SAMPLE_DUMP_LOCAL_MAC_LEN 6
#define       TSA_SAMPLE_DUMP_LOCAL_MAC_LBN 320
#define       TSA_SAMPLE_DUMP_LOCAL_MAC_WIDTH 48
/* local (i.e. dest for RX, source for TX) TCP/UDP port */
#define       TSA_SAMPLE_DUMP_LOCAL_PORT_OFST 46
#define       TSA_SAMPLE_DUMP_LOCAL_PORT_LEN 2
#define       TSA_SAMPLE_DUMP_LOCAL_PORT_LBN 368
#define       TSA_SAMPLE_DUMP_LOCAL_PORT_WIDTH 16
/* Ethertype */
#define       TSA_SAMPLE_DUMP_ETHER_TYPE_OFST 48
#define       TSA_SAMPLE_DUMP_ETHER_TYPE_LEN 2
#define       TSA_SAMPLE_DUMP_ETHER_TYPE_LBN 384
#define       TSA_SAMPLE_DUMP_ETHER_TYPE_WIDTH 16
/* Inner VLAN (12-bit tag only; top 4 bits will always be 0 here) */
#define       TSA_SAMPLE_DUMP_INNER_VLAN_OFST 50
#define       TSA_SAMPLE_DUMP_INNER_VLAN_LEN 2
#define       TSA_SAMPLE_DUMP_INNER_VLAN_LBN 400
#define       TSA_SAMPLE_DUMP_INNER_VLAN_WIDTH 16
/* Outer VLAN (12-bit tag only; top 4 bits will always be 0 here) */
#define       TSA_SAMPLE_DUMP_OUTER_VLAN_OFST 52
#define       TSA_SAMPLE_DUMP_OUTER_VLAN_LEN 2
#define       TSA_SAMPLE_DUMP_OUTER_VLAN_LBN 416
#define       TSA_SAMPLE_DUMP_OUTER_VLAN_WIDTH 16
/* IP protocol */
#define       TSA_SAMPLE_DUMP_IP_PROTOCOL_OFST 54
#define       TSA_SAMPLE_DUMP_IP_PROTOCOL_LEN 1
#define       TSA_SAMPLE_DUMP_IP_PROTOCOL_LBN 432
#define       TSA_SAMPLE_DUMP_IP_PROTOCOL_WIDTH 8
/* Physical port number */
#define       TSA_SAMPLE_DUMP_PHYSICAL_PORT_OFST 56
#define       TSA_SAMPLE_DUMP_PHYSICAL_PORT_LEN 1
#define       TSA_SAMPLE_DUMP_PHYSICAL_PORT_LBN 448
#define       TSA_SAMPLE_DUMP_PHYSICAL_PORT_WIDTH 8
/* remote (i.e. source for RX, dest for TX) IP address; last 12 bytes are 0 for
 * IPv4
 */
#define       TSA_SAMPLE_DUMP_REMOTE_IP_OFST 64
#define       TSA_SAMPLE_DUMP_REMOTE_IP_LEN 16
#define       TSA_SAMPLE_DUMP_REMOTE_IP_LBN 512
#define       TSA_SAMPLE_DUMP_REMOTE_IP_WIDTH 128
/* local (i.e. dest for RX, source for TX) IP address; last 12 bytes are 0 for
 * IPv4
 */
#define       TSA_SAMPLE_DUMP_LOCAL_IP_OFST 80
#define       TSA_SAMPLE_DUMP_LOCAL_IP_LEN 16
#define       TSA_SAMPLE_DUMP_LOCAL_IP_LBN 640
#define       TSA_SAMPLE_DUMP_LOCAL_IP_WIDTH 128

/* VERSION structuredef: A 4-part semantic version (see https://semver.org/ for
 * details).
 */
#define    VERSION_LEN 16
#define       VERSION_MAJOR_OFST 0
#define       VERSION_MAJOR_LEN 4
#define       VERSION_MAJOR_LBN 0
#define       VERSION_MAJOR_WIDTH 32
#define       VERSION_MINOR_OFST 4
#define       VERSION_MINOR_LEN 4
#define       VERSION_MINOR_LBN 32
#define       VERSION_MINOR_WIDTH 32
#define       VERSION_PATCH_OFST 8
#define       VERSION_PATCH_LEN 4
#define       VERSION_PATCH_LBN 64
#define       VERSION_PATCH_WIDTH 32
/* An additional version field that is not part of the standard semver scheme.
 * Can be used for build information.
 */
#define       VERSION_BUILD_OFST 12
#define       VERSION_BUILD_LEN 4
#define       VERSION_BUILD_LBN 96
#define       VERSION_BUILD_WIDTH 32

/* SPHINX_SENSOR_LIMITS structuredef: This should be kept up to date with the
 * `limits` message in doc/riverhead/ipc/sphinx_sensor.proto.
 */
#define    SPHINX_SENSOR_LIMITS_LEN 24
#define       SPHINX_SENSOR_LIMITS_LO_WARNING_OFST 0
#define       SPHINX_SENSOR_LIMITS_LO_WARNING_LEN 4
#define       SPHINX_SENSOR_LIMITS_LO_WARNING_LBN 0
#define       SPHINX_SENSOR_LIMITS_LO_WARNING_WIDTH 32
#define       SPHINX_SENSOR_LIMITS_LO_CRITICAL_OFST 4
#define       SPHINX_SENSOR_LIMITS_LO_CRITICAL_LEN 4
#define       SPHINX_SENSOR_LIMITS_LO_CRITICAL_LBN 32
#define       SPHINX_SENSOR_LIMITS_LO_CRITICAL_WIDTH 32
#define       SPHINX_SENSOR_LIMITS_LO_FATAL_OFST 8
#define       SPHINX_SENSOR_LIMITS_LO_FATAL_LEN 4
#define       SPHINX_SENSOR_LIMITS_LO_FATAL_LBN 64
#define       SPHINX_SENSOR_LIMITS_LO_FATAL_WIDTH 32
#define       SPHINX_SENSOR_LIMITS_HI_WARNING_OFST 12
#define       SPHINX_SENSOR_LIMITS_HI_WARNING_LEN 4
#define       SPHINX_SENSOR_LIMITS_HI_WARNING_LBN 96
#define       SPHINX_SENSOR_LIMITS_HI_WARNING_WIDTH 32
#define       SPHINX_SENSOR_LIMITS_HI_CRITICAL_OFST 16
#define       SPHINX_SENSOR_LIMITS_HI_CRITICAL_LEN 4
#define       SPHINX_SENSOR_LIMITS_HI_CRITICAL_LBN 128
#define       SPHINX_SENSOR_LIMITS_HI_CRITICAL_WIDTH 32
#define       SPHINX_SENSOR_LIMITS_HI_FATAL_OFST 20
#define       SPHINX_SENSOR_LIMITS_HI_FATAL_LEN 4
#define       SPHINX_SENSOR_LIMITS_HI_FATAL_LBN 160
#define       SPHINX_SENSOR_LIMITS_HI_FATAL_WIDTH 32

/* SPHINX_SENSOR_READING structuredef: This should be kept up to date with the
 * `reading` message in doc/riverhead/ipc/sphinx_sensor.proto.
 */
#define    SPHINX_SENSOR_READING_LEN 12
#define       SPHINX_SENSOR_READING_HANDLE_OFST 0
#define       SPHINX_SENSOR_READING_HANDLE_LEN 4
#define       SPHINX_SENSOR_READING_HANDLE_LBN 0
#define       SPHINX_SENSOR_READING_HANDLE_WIDTH 32
#define       SPHINX_SENSOR_READING_VALUE_OFST 4
#define       SPHINX_SENSOR_READING_VALUE_LEN 4
#define       SPHINX_SENSOR_READING_VALUE_LBN 32
#define       SPHINX_SENSOR_READING_VALUE_WIDTH 32
/* SPHINX_SENSOR_STATE enum */
#define       SPHINX_SENSOR_READING_STATE_OFST 8
#define       SPHINX_SENSOR_READING_STATE_LEN 4
#define       SPHINX_SENSOR_READING_STATE_LBN 64
#define       SPHINX_SENSOR_READING_STATE_WIDTH 32

/* EFTEST_SCHED_CREDIT_CHECK_ERROR structuredef */
#define    EFTEST_SCHED_CREDIT_CHECK_ERROR_LEN 8
/* Node type with bad credit count */
#define       EFTEST_SCHED_CREDIT_CHECK_ERROR_NODE_TYPE_OFST 0
#define       EFTEST_SCHED_CREDIT_CHECK_ERROR_NODE_TYPE_LEN 1
/* enum: Dest node */
#define          EFTEST_SCHED_CREDIT_CHECK_ERROR_DEST 0x0
/* enum: Source node */
#define          EFTEST_SCHED_CREDIT_CHECK_ERROR_SOURCE 0x1
#define       EFTEST_SCHED_CREDIT_CHECK_ERROR_NODE_TYPE_LBN 0
#define       EFTEST_SCHED_CREDIT_CHECK_ERROR_NODE_TYPE_WIDTH 8
/* Level of node in scheduler hierarchy */
#define       EFTEST_SCHED_CREDIT_CHECK_ERROR_NODE_LEVEL_OFST 1
#define       EFTEST_SCHED_CREDIT_CHECK_ERROR_NODE_LEVEL_LEN 1
#define       EFTEST_SCHED_CREDIT_CHECK_ERROR_NODE_LEVEL_LBN 8
#define       EFTEST_SCHED_CREDIT_CHECK_ERROR_NODE_LEVEL_WIDTH 8
/* Node index */
#define       EFTEST_SCHED_CREDIT_CHECK_ERROR_NODE_INDEX_OFST 2
#define       EFTEST_SCHED_CREDIT_CHECK_ERROR_NODE_INDEX_LEN 2
#define       EFTEST_SCHED_CREDIT_CHECK_ERROR_NODE_INDEX_LBN 16
#define       EFTEST_SCHED_CREDIT_CHECK_ERROR_NODE_INDEX_WIDTH 16
/* The actual credit value the node had */
#define       EFTEST_SCHED_CREDIT_CHECK_ERROR_CREDIT_VALUE_OFST 4
#define       EFTEST_SCHED_CREDIT_CHECK_ERROR_CREDIT_VALUE_LEN 4
#define       EFTEST_SCHED_CREDIT_CHECK_ERROR_CREDIT_VALUE_LBN 32
#define       EFTEST_SCHED_CREDIT_CHECK_ERROR_CREDIT_VALUE_WIDTH 32

/* EFTEST_RHL_BARRIERS_TEST_ACTION structuredef: A command used as part of the
 * RHL barriers test.
 */
#define    EFTEST_RHL_BARRIERS_TEST_ACTION_LEN 16
#define       EFTEST_RHL_BARRIERS_TEST_ACTION_TYPE_OFST 0
#define       EFTEST_RHL_BARRIERS_TEST_ACTION_TYPE_LEN 4
#define          EFTEST_RHL_BARRIERS_TEST_ACTION_COMMAND 0x1 /* enum */
#define          EFTEST_RHL_BARRIERS_TEST_ACTION_BARRIER 0x2 /* enum */
#define          EFTEST_RHL_BARRIERS_TEST_ACTION_SLEEP 0x3 /* enum */
#define       EFTEST_RHL_BARRIERS_TEST_ACTION_TYPE_LBN 0
#define       EFTEST_RHL_BARRIERS_TEST_ACTION_TYPE_WIDTH 32
#define       EFTEST_RHL_BARRIERS_TEST_ACTION_COMMAND_DELAY_US_OFST 4
#define       EFTEST_RHL_BARRIERS_TEST_ACTION_COMMAND_DELAY_US_LEN 4
#define       EFTEST_RHL_BARRIERS_TEST_ACTION_COMMAND_DELAY_US_LBN 32
#define       EFTEST_RHL_BARRIERS_TEST_ACTION_COMMAND_DELAY_US_WIDTH 32
#define       EFTEST_RHL_BARRIERS_TEST_ACTION_COMMAND_TAGS_OFST 8
#define       EFTEST_RHL_BARRIERS_TEST_ACTION_COMMAND_TAGS_LEN 4
#define       EFTEST_RHL_BARRIERS_TEST_ACTION_COMMAND_TAGS_LBN 64
#define       EFTEST_RHL_BARRIERS_TEST_ACTION_COMMAND_TAGS_WIDTH 32
#define       EFTEST_RHL_BARRIERS_TEST_ACTION_BARRIER_TAGS_OFST 4
#define       EFTEST_RHL_BARRIERS_TEST_ACTION_BARRIER_TAGS_LEN 4
#define       EFTEST_RHL_BARRIERS_TEST_ACTION_BARRIER_TAGS_LBN 32
#define       EFTEST_RHL_BARRIERS_TEST_ACTION_BARRIER_TAGS_WIDTH 32
#define       EFTEST_RHL_BARRIERS_TEST_ACTION_SLEEP_DELAY_US_OFST 4
#define       EFTEST_RHL_BARRIERS_TEST_ACTION_SLEEP_DELAY_US_LEN 4
#define       EFTEST_RHL_BARRIERS_TEST_ACTION_SLEEP_DELAY_US_LBN 32
#define       EFTEST_RHL_BARRIERS_TEST_ACTION_SLEEP_DELAY_US_WIDTH 32
#define       EFTEST_RHL_BARRIERS_TEST_ACTION_RESERVED_OFST 4
#define       EFTEST_RHL_BARRIERS_TEST_ACTION_RESERVED_LEN 12
#define       EFTEST_RHL_BARRIERS_TEST_ACTION_RESERVED_LBN 32
#define       EFTEST_RHL_BARRIERS_TEST_ACTION_RESERVED_WIDTH 96

/* TEST_FEATURES_LAYOUT structuredef: Defines the actual layout of fields in
 * the data returned by MC_CMD_GET_TEST_FEATURES which are treated as opaque in
 * the public YML. NOTE that MC_CMD_GET_TEST_FEATURES is available in
 * production firmware, so this structure must NOT contain any information that
 * has security or confidentiality implications.
 */
#define    TEST_FEATURES_LAYOUT_LEN 4
/* The basic DUT type */
#define       TEST_FEATURES_LAYOUT_DUT_TYPE_OFST 0
#define       TEST_FEATURES_LAYOUT_DUT_TYPE_LEN 1
/* enum: the DUT is real hardware (ASIC or Softnic FPGA image) */
#define          TEST_FEATURES_LAYOUT_DUT_TYPE_HW 0x0
/* enum: the DUT is a pure C model */
#define          TEST_FEATURES_LAYOUT_DUT_TYPE_CMOD 0x1
/* enum: the DUT is an RTL cosimulation with a C model CPU */
#define          TEST_FEATURES_LAYOUT_DUT_TYPE_COSIM_CCPU 0x2
/* enum: the DUT is an RTL cosimulation including the CPU */
#define          TEST_FEATURES_LAYOUT_DUT_TYPE_COSIM_RTLCPU 0x3
/* enum: the DUT is a palladium emulator */
#define          TEST_FEATURES_LAYOUT_DUT_TYPE_PALLADIUM 0x4
#define       TEST_FEATURES_LAYOUT_DUT_TYPE_LBN 0
#define       TEST_FEATURES_LAYOUT_DUT_TYPE_WIDTH 8
/* Currently unused, listed to make the structure up to a full DWORD */
#define       TEST_FEATURES_LAYOUT_RESERVED_OFST 1
#define       TEST_FEATURES_LAYOUT_RESERVED_LEN 3
#define       TEST_FEATURES_LAYOUT_RESERVED_LBN 8
#define       TEST_FEATURES_LAYOUT_RESERVED_WIDTH 24

/* DPU_SSS_ROUTE structuredef: Define the initial route of a packet when the
 * SSS is in DPU mode.
 */
#define    DPU_SSS_ROUTE_LEN 3
/* Selects FIFO in hub NA. */
#define       DPU_SSS_ROUTE_HUB_NA_FIFO_OFST 0
#define       DPU_SSS_ROUTE_HUB_NA_FIFO_LEN 1
#define       DPU_SSS_ROUTE_HUB_NA_FIFO_LBN 0
#define       DPU_SSS_ROUTE_HUB_NA_FIFO_WIDTH 8
/* Selects DPU Buffer Pool ID. */
#define       DPU_SSS_ROUTE_BUF_POOL_ID_OFST 1
#define       DPU_SSS_ROUTE_BUF_POOL_ID_LEN 1
#define       DPU_SSS_ROUTE_BUF_POOL_ID_LBN 8
#define       DPU_SSS_ROUTE_BUF_POOL_ID_WIDTH 8
/* Rx Notification Channel ID on which the notification of the packet shall be
 * sent by DPU.
 */
#define       DPU_SSS_ROUTE_NOTIFICATION_CHANNEL_ID_OFST 2
#define       DPU_SSS_ROUTE_NOTIFICATION_CHANNEL_ID_LEN 1
#define       DPU_SSS_ROUTE_NOTIFICATION_CHANNEL_ID_LBN 16
#define       DPU_SSS_ROUTE_NOTIFICATION_CHANNEL_ID_WIDTH 8

/* HNIC_SSS_ROUTE structuredef: Define the initial route of a packet when the
 * SSS is in HNIC mode.
 */
#define    HNIC_SSS_ROUTE_LEN 4
/* Selects FIFO in hub NA. */
#define       HNIC_SSS_ROUTE_HUB_NA_FIFO_OFST 0
#define       HNIC_SSS_ROUTE_HUB_NA_FIFO_LEN 1
#define       HNIC_SSS_ROUTE_HUB_NA_FIFO_LBN 0
#define       HNIC_SSS_ROUTE_HUB_NA_FIFO_WIDTH 8
/* Selects FIFO in other hubs (see SF-120734). */
#define       HNIC_SSS_ROUTE_CH_VC_OFST 1
#define       HNIC_SSS_ROUTE_CH_VC_LEN 1
#define       HNIC_SSS_ROUTE_CH_VC_LBN 8
#define       HNIC_SSS_ROUTE_CH_VC_WIDTH 8
/* Sets path through slice (see SF-120734). */
#define       HNIC_SSS_ROUTE_CH_ROUTE_OFST 2
#define       HNIC_SSS_ROUTE_CH_ROUTE_LEN 2
#define       HNIC_SSS_ROUTE_CH_ROUTE_LBN 16
#define       HNIC_SSS_ROUTE_CH_ROUTE_WIDTH 16

/* BUFSS_MEM_HEADER structuredef: Descriptor for a single consumer of bufss
 * memory.
 */
#define    BUFSS_MEM_HEADER_LEN 8
/* Type of memory consumer. */
#define       BUFSS_MEM_HEADER_KIND_OFST 0
#define       BUFSS_MEM_HEADER_KIND_LEN 1
/* enum: The total amount of memory in the device. Not modifiable. */
#define          BUFSS_MEM_HEADER_TOTAL 0x0
/* enum: The 'reservation' value for a single DPU bufss general pool. This is
 * the amount of memory accessible only to this pool and nobody else, and is
 * thus guaranteed to be available to that pool.
 */
#define          BUFSS_MEM_HEADER_GENERAL_RESERVATION 0x1
/* enum: The 'limit' value for a single DPU bufss general pool. This is the
 * maximum amount of memory that that pool may use, and comes from the pool's
 * reservation plus whatever space it may (competitively) take from the
 * GENERAL_SHARED allocation.
 */
#define          BUFSS_MEM_HEADER_GENERAL_LIMIT 0x2
/* enum: Memory available to all DPU bufss general pools once they have
 * exhausted their individual reservation.
 */
#define          BUFSS_MEM_HEADER_GENERAL_SHARED 0x3
/* enum: Memory allocation to packets arriving from the network. Note that this
 * is defined by hub NA scheduler dests, not by the bufss netrx pool ID. There
 * is a configurable mapping between the two and hence multiple pool IDs may
 * share a memory allocation. In Keystone B hub NA dests are the same as DPU rx
 * notify channels - there isn't a configurable mapping there.
 */
#define          BUFSS_MEM_HEADER_NETRX_DEST 0x4
/* enum: Memory used as FIFO temporary buffering for data being given to the
 * DPU on U2D data channels. Used to ensure that all the input data required by
 * a command is available internally in the DPU before the command is actually
 * issued to the offload pipelines.
 */
#define          BUFSS_MEM_HEADER_VFIFO 0x5
/* enum: Miscellaneous space allocations used for purposes which are not
 * directly observable by users of the DPU. On Keystone B hardware this is
 * temporary buffering for data destined for the conduit or D2U data channels.
 */
#define          BUFSS_MEM_HEADER_HIDDEN 0x6
/* enum: Any other space which is not classified in any other way and is not
 * available for use.
 */
#define          BUFSS_MEM_HEADER_RESERVED 0x7
#define       BUFSS_MEM_HEADER_KIND_LBN 0
#define       BUFSS_MEM_HEADER_KIND_WIDTH 8
/* Reserved for future use - there are currently no flags defined. */
#define       BUFSS_MEM_HEADER_FLAGS_OFST 1
#define       BUFSS_MEM_HEADER_FLAGS_LEN 1
#define       BUFSS_MEM_HEADER_FLAGS_LBN 8
#define       BUFSS_MEM_HEADER_FLAGS_WIDTH 8
/* Member of KIND being described here, i.e. KIND,INDEX uniquely describe a
 * single memory consumer.
 */
#define       BUFSS_MEM_HEADER_INDEX_OFST 2
#define       BUFSS_MEM_HEADER_INDEX_LEN 2
#define       BUFSS_MEM_HEADER_INDEX_LBN 16
#define       BUFSS_MEM_HEADER_INDEX_WIDTH 16
/* Current amount of memory allocated to this consumer, in units of BLOCK_BYTES
 * (from MC_CMD_EFTEST_DPU_BUFSS_QUERY_MEM_OUT).
 */
#define       BUFSS_MEM_HEADER_CURRENT_OFST 4
#define       BUFSS_MEM_HEADER_CURRENT_LEN 4
#define       BUFSS_MEM_HEADER_CURRENT_LBN 32
#define       BUFSS_MEM_HEADER_CURRENT_WIDTH 32

/* BUFSS_MEM_INFO structuredef: Usage information for a single consumer of
 * bufss memory. Extends BUFSS_MEM_HEADER (the header fields are used by both
 * 'get' and 'set' ops).
 */
#define    BUFSS_MEM_INFO_LEN 16
/* Type of memory consumer. */
#define       BUFSS_MEM_INFO_KIND_OFST 0
#define       BUFSS_MEM_INFO_KIND_LEN 1
/* enum: The total amount of memory in the device. Not modifiable. */
#define          BUFSS_MEM_INFO_TOTAL 0x0
/* enum: The 'reservation' value for a single DPU bufss general pool. This is
 * the amount of memory accessible only to this pool and nobody else, and is
 * thus guaranteed to be available to that pool.
 */
#define          BUFSS_MEM_INFO_GENERAL_RESERVATION 0x1
/* enum: The 'limit' value for a single DPU bufss general pool. This is the
 * maximum amount of memory that that pool may use, and comes from the pool's
 * reservation plus whatever space it may (competitively) take from the
 * GENERAL_SHARED allocation.
 */
#define          BUFSS_MEM_INFO_GENERAL_LIMIT 0x2
/* enum: Memory available to all DPU bufss general pools once they have
 * exhausted their individual reservation.
 */
#define          BUFSS_MEM_INFO_GENERAL_SHARED 0x3
/* enum: Memory allocation to packets arriving from the network. Note that this
 * is defined by hub NA scheduler dests, not by the bufss netrx pool ID. There
 * is a configurable mapping between the two and hence multiple pool IDs may
 * share a memory allocation. In Keystone B hub NA dests are the same as DPU rx
 * notify channels - there isn't a configurable mapping there.
 */
#define          BUFSS_MEM_INFO_NETRX_DEST 0x4
/* enum: Memory used as FIFO temporary buffering for data being given to the
 * DPU on U2D data channels. Used to ensure that all the input data required by
 * a command is available internally in the DPU before the command is actually
 * issued to the offload pipelines.
 */
#define          BUFSS_MEM_INFO_VFIFO 0x5
/* enum: Miscellaneous space allocations used for purposes which are not
 * directly observable by users of the DPU. On Keystone B hardware this is
 * temporary buffering for data destined for the conduit or D2U data channels.
 */
#define          BUFSS_MEM_INFO_HIDDEN 0x6
/* enum: Any other space which is not classified in any other way and is not
 * available for use.
 */
#define          BUFSS_MEM_INFO_RESERVED 0x7
#define       BUFSS_MEM_INFO_KIND_LBN 0
#define       BUFSS_MEM_INFO_KIND_WIDTH 8
/* Reserved for future use - there are currently no flags defined. */
#define       BUFSS_MEM_INFO_FLAGS_OFST 1
#define       BUFSS_MEM_INFO_FLAGS_LEN 1
#define       BUFSS_MEM_INFO_FLAGS_LBN 8
#define       BUFSS_MEM_INFO_FLAGS_WIDTH 8
/* Member of KIND being described here, i.e. KIND,INDEX uniquely describe a
 * single memory consumer.
 */
#define       BUFSS_MEM_INFO_INDEX_OFST 2
#define       BUFSS_MEM_INFO_INDEX_LEN 2
#define       BUFSS_MEM_INFO_INDEX_LBN 16
#define       BUFSS_MEM_INFO_INDEX_WIDTH 16
/* Current amount of memory allocated to this consumer, in units of BLOCK_BYTES
 * (from MC_CMD_EFTEST_DPU_BUFSS_QUERY_MEM_OUT).
 */
#define       BUFSS_MEM_INFO_CURRENT_OFST 4
#define       BUFSS_MEM_INFO_CURRENT_LEN 4
#define       BUFSS_MEM_INFO_CURRENT_LBN 32
#define       BUFSS_MEM_INFO_CURRENT_WIDTH 32
/* Minimum number of blocks which may be allocated to this consumer using the
 * CONFIG_MEM op.
 */
#define       BUFSS_MEM_INFO_MIN_OFST 8
#define       BUFSS_MEM_INFO_MIN_LEN 4
#define       BUFSS_MEM_INFO_MIN_LBN 64
#define       BUFSS_MEM_INFO_MIN_WIDTH 32
/* Maximum number of blocks which may be allocated to this consumer using the
 * CONFIG_MEM op. If MIN==MAX then this region is of fixed size and is
 * unconfigurable.
 */
#define       BUFSS_MEM_INFO_MAX_OFST 12
#define       BUFSS_MEM_INFO_MAX_LEN 4
#define       BUFSS_MEM_INFO_MAX_LBN 96
#define       BUFSS_MEM_INFO_MAX_WIDTH 32

/* DPU_FATAL_ERRORS structuredef */
#define    DPU_FATAL_ERRORS_LEN 64
/* The structure's version number. */
#define       DPU_FATAL_ERRORS_VERSION_OFST 0
#define       DPU_FATAL_ERRORS_VERSION_LEN 4
/* enum: DPU_FATAL_ERRORS version 1. The last valid field is EP_ERROR. */
#define          DPU_FATAL_ERRORS_VERSION_1 0x1
#define       DPU_FATAL_ERRORS_VERSION_LBN 0
#define       DPU_FATAL_ERRORS_VERSION_WIDTH 32
#define       DPU_FATAL_ERRORS_CP_COMMAND_IF_ERROR_OFST 4
#define       DPU_FATAL_ERRORS_CP_COMMAND_IF_ERROR_LEN 2
#define       DPU_FATAL_ERRORS_CP_COMMAND_IF_ERROR_LBN 32
#define       DPU_FATAL_ERRORS_CP_COMMAND_IF_ERROR_WIDTH 16
#define       DPU_FATAL_ERRORS_CP_UNSUPPORTED_COMMAND_TYPE_ERROR_OFST 6
#define       DPU_FATAL_ERRORS_CP_UNSUPPORTED_COMMAND_TYPE_ERROR_LEN 2
#define       DPU_FATAL_ERRORS_CP_UNSUPPORTED_COMMAND_TYPE_ERROR_LBN 48
#define       DPU_FATAL_ERRORS_CP_UNSUPPORTED_COMMAND_TYPE_ERROR_WIDTH 16
#define       DPU_FATAL_ERRORS_CP_UNSUPPORTED_SUBTYPE_ERROR_OFST 8
#define       DPU_FATAL_ERRORS_CP_UNSUPPORTED_SUBTYPE_ERROR_LEN 2
#define       DPU_FATAL_ERRORS_CP_UNSUPPORTED_SUBTYPE_ERROR_LBN 64
#define       DPU_FATAL_ERRORS_CP_UNSUPPORTED_SUBTYPE_ERROR_WIDTH 16
#define       DPU_FATAL_ERRORS_CP_COMMAND_TO_DATA_MAP_ERROR_OFST 10
#define       DPU_FATAL_ERRORS_CP_COMMAND_TO_DATA_MAP_ERROR_LEN 2
#define       DPU_FATAL_ERRORS_CP_COMMAND_TO_DATA_MAP_ERROR_LBN 80
#define       DPU_FATAL_ERRORS_CP_COMMAND_TO_DATA_MAP_ERROR_WIDTH 16
#define       DPU_FATAL_ERRORS_CP_DATA_CHANNEL_SRC_ERROR_OFST 12
#define       DPU_FATAL_ERRORS_CP_DATA_CHANNEL_SRC_ERROR_LEN 2
#define       DPU_FATAL_ERRORS_CP_DATA_CHANNEL_SRC_ERROR_LBN 96
#define       DPU_FATAL_ERRORS_CP_DATA_CHANNEL_SRC_ERROR_WIDTH 16
#define       DPU_FATAL_ERRORS_CP_DATA_CHANNEL_DEST_ERROR_OFST 14
#define       DPU_FATAL_ERRORS_CP_DATA_CHANNEL_DEST_ERROR_LEN 2
#define       DPU_FATAL_ERRORS_CP_DATA_CHANNEL_DEST_ERROR_LBN 112
#define       DPU_FATAL_ERRORS_CP_DATA_CHANNEL_DEST_ERROR_WIDTH 16
#define       DPU_FATAL_ERRORS_CP_UNSUPPORTED_SRC_TYPE_ERROR_OFST 16
#define       DPU_FATAL_ERRORS_CP_UNSUPPORTED_SRC_TYPE_ERROR_LEN 2
#define       DPU_FATAL_ERRORS_CP_UNSUPPORTED_SRC_TYPE_ERROR_LBN 128
#define       DPU_FATAL_ERRORS_CP_UNSUPPORTED_SRC_TYPE_ERROR_WIDTH 16
#define       DPU_FATAL_ERRORS_CP_UNSUPPORTED_DEST_TYPE_ERROR_OFST 18
#define       DPU_FATAL_ERRORS_CP_UNSUPPORTED_DEST_TYPE_ERROR_LEN 2
#define       DPU_FATAL_ERRORS_CP_UNSUPPORTED_DEST_TYPE_ERROR_LBN 144
#define       DPU_FATAL_ERRORS_CP_UNSUPPORTED_DEST_TYPE_ERROR_WIDTH 16
#define       DPU_FATAL_ERRORS_CP_EXCEEDED_MAX_SRC_DESC_ERROR_OFST 20
#define       DPU_FATAL_ERRORS_CP_EXCEEDED_MAX_SRC_DESC_ERROR_LEN 2
#define       DPU_FATAL_ERRORS_CP_EXCEEDED_MAX_SRC_DESC_ERROR_LBN 160
#define       DPU_FATAL_ERRORS_CP_EXCEEDED_MAX_SRC_DESC_ERROR_WIDTH 16
#define       DPU_FATAL_ERRORS_CP_EXCEEDED_MAX_DEST_DESC_ERROR_OFST 22
#define       DPU_FATAL_ERRORS_CP_EXCEEDED_MAX_DEST_DESC_ERROR_LEN 2
#define       DPU_FATAL_ERRORS_CP_EXCEEDED_MAX_DEST_DESC_ERROR_LBN 176
#define       DPU_FATAL_ERRORS_CP_EXCEEDED_MAX_DEST_DESC_ERROR_WIDTH 16
#define       DPU_FATAL_ERRORS_CP_EXCEEDED_MTU_ERROR_OFST 24
#define       DPU_FATAL_ERRORS_CP_EXCEEDED_MTU_ERROR_LEN 2
#define       DPU_FATAL_ERRORS_CP_EXCEEDED_MTU_ERROR_LBN 192
#define       DPU_FATAL_ERRORS_CP_EXCEEDED_MTU_ERROR_WIDTH 16
#define       DPU_FATAL_ERRORS_CP_EXCEEDED_POOLID_ERROR_OFST 26
#define       DPU_FATAL_ERRORS_CP_EXCEEDED_POOLID_ERROR_LEN 2
#define       DPU_FATAL_ERRORS_CP_EXCEEDED_POOLID_ERROR_LBN 208
#define       DPU_FATAL_ERRORS_CP_EXCEEDED_POOLID_ERROR_WIDTH 16
#define       DPU_FATAL_ERRORS_CP_EXCEEDED_BUFID_ERROR_OFST 28
#define       DPU_FATAL_ERRORS_CP_EXCEEDED_BUFID_ERROR_LEN 2
#define       DPU_FATAL_ERRORS_CP_EXCEEDED_BUFID_ERROR_LBN 224
#define       DPU_FATAL_ERRORS_CP_EXCEEDED_BUFID_ERROR_WIDTH 16
#define       DPU_FATAL_ERRORS_EP_ERROR_OFST 30
#define       DPU_FATAL_ERRORS_EP_ERROR_LEN 2
#define       DPU_FATAL_ERRORS_EP_ERROR_LBN 240
#define       DPU_FATAL_ERRORS_EP_ERROR_WIDTH 16
/* Expand as needed to include additional registers. */
#define       DPU_FATAL_ERRORS_RSVD_OFST 32
#define       DPU_FATAL_ERRORS_RSVD_LEN 32
#define       DPU_FATAL_ERRORS_RSVD_LBN 256
#define       DPU_FATAL_ERRORS_RSVD_WIDTH 256

/* TLMSS_FILTER_SPEC structuredef: Telemeter qualifying event filter
 * specification. Input bus events matching the filter are counted by the
 * telemeter, and can be used to trigger other actions.
 */
#define    TLMSS_FILTER_SPEC_LEN 20
/* Filter configuration bit field, 2 bits per bit of the Telemeter input bus.
 */
#define       TLMSS_FILTER_SPEC_BF_OFST 0
#define       TLMSS_FILTER_SPEC_BF_LEN 12
#define       TLMSS_FILTER_SPEC_BF_LBN 0
#define       TLMSS_FILTER_SPEC_BF_WIDTH 96
/* BF2 change detection match value, used when BF2_MODE is either
 * MATCH_ON_NOT_EQUAL or MATCH_ON_NOT_EQUAL.
 */
#define       TLMSS_FILTER_SPEC_BF2_MATCH_OFST 12
#define       TLMSS_FILTER_SPEC_BF2_MATCH_LEN 6
#define       TLMSS_FILTER_SPEC_BF2_MATCH_LBN 96
#define       TLMSS_FILTER_SPEC_BF2_MATCH_WIDTH 48
/* BF2 change detection match mode. */
#define       TLMSS_FILTER_SPEC_BF2_MODE_OFST 18
#define       TLMSS_FILTER_SPEC_BF2_MODE_LEN 1
/* enum: Match when a field changes. */
#define          TLMSS_FILTER_SPEC_MATCH_CHANGES 0x0
/* enum: Match when a field changes and becomes not equal to a specified value.
 */
#define          TLMSS_FILTER_SPEC_MATCH_ON_NOT_EQUAL 0x1
/* enum: Match when a field changes and becomes equal to a specified value. */
#define          TLMSS_FILTER_SPEC_MATCH_ON_EQUAL 0x2
/* enum: Field change detection is not used. */
#define          TLMSS_FILTER_SPEC_MATCH_NONE 0x3
#define       TLMSS_FILTER_SPEC_BF2_MODE_LBN 144
#define       TLMSS_FILTER_SPEC_BF2_MODE_WIDTH 8
/* Padding. Reserved for future use, set to zero. */
#define       TLMSS_FILTER_SPEC_RESERVED_OFST 19
#define       TLMSS_FILTER_SPEC_RESERVED_LEN 1
#define       TLMSS_FILTER_SPEC_RESERVED_LBN 152
#define       TLMSS_FILTER_SPEC_RESERVED_WIDTH 8

/* TLMSS_FILTER_FIELD_SPEC structuredef: Telemeter filter specification,
 * matching an individual signal or field on a telemeter's input bus. Used by
 * EFTEST_TLMSS_CONFIGURE_FILTER to help build a TLMSS_FILTER_SPEC.
 */
#define    TLMSS_FILTER_FIELD_SPEC_LEN 24
/* Low bit number of input bus field. (0 to 47) */
#define       TLMSS_FILTER_FIELD_SPEC_LBN_OFST 0
#define       TLMSS_FILTER_FIELD_SPEC_LBN_LEN 1
#define       TLMSS_FILTER_FIELD_SPEC_LBN_LBN 0
#define       TLMSS_FILTER_FIELD_SPEC_LBN_WIDTH 8
/* Width of input bus field. (1 to 48 bits, with LBN + WIDTH <= 48) */
#define       TLMSS_FILTER_FIELD_SPEC_WIDTH_OFST 1
#define       TLMSS_FILTER_FIELD_SPEC_WIDTH_LEN 1
#define       TLMSS_FILTER_FIELD_SPEC_WIDTH_LBN 8
#define       TLMSS_FILTER_FIELD_SPEC_WIDTH_WIDTH 8
/* Value to match input bit field. (WIDTH bits in 48 bit field) */
#define       TLMSS_FILTER_FIELD_SPEC_MATCH_VALUE_OFST 2
#define       TLMSS_FILTER_FIELD_SPEC_MATCH_VALUE_LEN 6
#define       TLMSS_FILTER_FIELD_SPEC_MATCH_VALUE_LBN 16
#define       TLMSS_FILTER_FIELD_SPEC_MATCH_VALUE_WIDTH 48
/* Mask to qualify which bits of MATCH_VALUE are matched exactly. (WIDTH bits
 * in 48 bit field)
 */
#define       TLMSS_FILTER_FIELD_SPEC_MATCH_MASK_OFST 8
#define       TLMSS_FILTER_FIELD_SPEC_MATCH_MASK_LEN 6
#define       TLMSS_FILTER_FIELD_SPEC_MATCH_MASK_LBN 64
#define       TLMSS_FILTER_FIELD_SPEC_MATCH_MASK_WIDTH 48
/* Mask to qualify which bits of MATCH_VALUE are watched for changes. (WIDTH
 * bits in 48 bit field)
 */
#define       TLMSS_FILTER_FIELD_SPEC_CHANGE_MASK_OFST 14
#define       TLMSS_FILTER_FIELD_SPEC_CHANGE_MASK_LEN 6
#define       TLMSS_FILTER_FIELD_SPEC_CHANGE_MASK_LBN 112
#define       TLMSS_FILTER_FIELD_SPEC_CHANGE_MASK_WIDTH 48
/* Change match mode. Valid when CHANGE_MASK is non-zero. */
#define       TLMSS_FILTER_FIELD_SPEC_CHANGE_MATCH_MODE_OFST 20
#define       TLMSS_FILTER_FIELD_SPEC_CHANGE_MATCH_MODE_LEN 1
/*            Enum values, see field(s): */
/*               TLMSS_FILTER_SPEC/BF2_MODE */
#define       TLMSS_FILTER_FIELD_SPEC_CHANGE_MATCH_MODE_LBN 160
#define       TLMSS_FILTER_FIELD_SPEC_CHANGE_MATCH_MODE_WIDTH 8
/* Padding. Reserved for future use, set to zero. */
#define       TLMSS_FILTER_FIELD_SPEC_RESERVED_OFST 21
#define       TLMSS_FILTER_FIELD_SPEC_RESERVED_LEN 3
#define       TLMSS_FILTER_FIELD_SPEC_RESERVED_LBN 168
#define       TLMSS_FILTER_FIELD_SPEC_RESERVED_WIDTH 24

/* TLMSS_TELEMETER_STATE structuredef: Telemeter state information, returned by
 * EFTEST_TLMSS_READ.
 */
#define    TLMSS_TELEMETER_STATE_LEN 32
/* Telemeter identifier (0 to 63). */
#define       TLMSS_TELEMETER_STATE_TELEMETER_ID_OFST 0
#define       TLMSS_TELEMETER_STATE_TELEMETER_ID_LEN 1
#define       TLMSS_TELEMETER_STATE_TELEMETER_ID_LBN 0
#define       TLMSS_TELEMETER_STATE_TELEMETER_ID_WIDTH 8
/* When non-zero, this information was read from the telemeter's shadow state.
 * When zero, this information was read from the telemeter's live state.
 */
#define       TLMSS_TELEMETER_STATE_IS_SHADOW_OFST 1
#define       TLMSS_TELEMETER_STATE_IS_SHADOW_LEN 1
#define       TLMSS_TELEMETER_STATE_IS_SHADOW_LBN 8
#define       TLMSS_TELEMETER_STATE_IS_SHADOW_WIDTH 8
/* Padding. Reserved for future use, set to zero. */
#define       TLMSS_TELEMETER_STATE_RESERVED_OFST 2
#define       TLMSS_TELEMETER_STATE_RESERVED_LEN 2
#define       TLMSS_TELEMETER_STATE_RESERVED_LBN 16
#define       TLMSS_TELEMETER_STATE_RESERVED_WIDTH 16
/* Telmeter state. */
#define       TLMSS_TELEMETER_STATE_STATE_OFST 4
#define       TLMSS_TELEMETER_STATE_STATE_LEN 4
#define        TLMSS_TELEMETER_STATE_IS_RUNNING_OFST 4
#define        TLMSS_TELEMETER_STATE_IS_RUNNING_LBN 0
#define        TLMSS_TELEMETER_STATE_IS_RUNNING_WIDTH 1
#define        TLMSS_TELEMETER_STATE_STOP_REASON_OFST 4
#define        TLMSS_TELEMETER_STATE_STOP_REASON_LBN 1
#define        TLMSS_TELEMETER_STATE_STOP_REASON_WIDTH 4
/* enum: Stopped by a qualifying event from another telemeter. */
#define          TLMSS_TELEMETER_STATE_STOP_REASON_QUALIFYING_EVENT 0x3
/* enum: Stopped by a stop event from another telemeter. */
#define          TLMSS_TELEMETER_STATE_STOP_REASON_STOP_EVENT 0x4
/* enum: Stopped by external trigger signal 0. */
#define          TLMSS_TELEMETER_STATE_STOP_REASON_EXTERNAL_TRIGGER_0 0x5
/* enum: Stopped by external trigger signal 1. */
#define          TLMSS_TELEMETER_STATE_STOP_REASON_EXTERNAL_TRIGGER_1 0x6
/* enum: Stopped by external trigger signal 2. */
#define          TLMSS_TELEMETER_STATE_STOP_REASON_EXTERNAL_TRIGGER_2 0x7
/* enum: Stopped by external trigger signal 3. */
#define          TLMSS_TELEMETER_STATE_STOP_REASON_EXTERNAL_TRIGGER_3 0x8
/* enum: Stopped because its ToD duration was reached. */
#define          TLMSS_TELEMETER_STATE_STOP_REASON_TOD 0x9
/* enum: Stopped by error signal on input bus. */
#define          TLMSS_TELEMETER_STATE_STOP_REASON_ERROR 0xa
/* enum: Stopped because counter threshold reached. */
#define          TLMSS_TELEMETER_STATE_STOP_REASON_COUNTER_THRESHOLD 0xb
/* enum: Stopped by manual stop CSR write. */
#define          TLMSS_TELEMETER_STATE_STOP_REASON_MANUAL 0xc
/* enum: Not started since last reset. */
#define          TLMSS_TELEMETER_STATE_STOP_REASON_NEVER_STARTED 0xf
#define        TLMSS_TELEMETER_STATE_IS_VALID_OFST 4
#define        TLMSS_TELEMETER_STATE_IS_VALID_LBN 5
#define        TLMSS_TELEMETER_STATE_IS_VALID_WIDTH 1
#define        TLMSS_TELEMETER_STATE_PHASE_OFST 4
#define        TLMSS_TELEMETER_STATE_PHASE_LBN 6
#define        TLMSS_TELEMETER_STATE_PHASE_WIDTH 4
#define       TLMSS_TELEMETER_STATE_STATE_LBN 32
#define       TLMSS_TELEMETER_STATE_STATE_WIDTH 32
/* Telmeter's counter value. */
#define       TLMSS_TELEMETER_STATE_COUNTER_OFST 8
#define       TLMSS_TELEMETER_STATE_COUNTER_LEN 8
#define       TLMSS_TELEMETER_STATE_COUNTER_LO_OFST 8
#define       TLMSS_TELEMETER_STATE_COUNTER_LO_LEN 4
#define       TLMSS_TELEMETER_STATE_COUNTER_LO_LBN 64
#define       TLMSS_TELEMETER_STATE_COUNTER_LO_WIDTH 32
#define       TLMSS_TELEMETER_STATE_COUNTER_HI_OFST 12
#define       TLMSS_TELEMETER_STATE_COUNTER_HI_LEN 4
#define       TLMSS_TELEMETER_STATE_COUNTER_HI_LBN 96
#define       TLMSS_TELEMETER_STATE_COUNTER_HI_WIDTH 32
#define       TLMSS_TELEMETER_STATE_COUNTER_LBN 64
#define       TLMSS_TELEMETER_STATE_COUNTER_WIDTH 64
/* Time at which the telemeter was last stopped. */
#define       TLMSS_TELEMETER_STATE_STOP_TOD_OFST 16
#define       TLMSS_TELEMETER_STATE_STOP_TOD_LEN 8
#define       TLMSS_TELEMETER_STATE_STOP_TOD_LO_OFST 16
#define       TLMSS_TELEMETER_STATE_STOP_TOD_LO_LEN 4
#define       TLMSS_TELEMETER_STATE_STOP_TOD_LO_LBN 128
#define       TLMSS_TELEMETER_STATE_STOP_TOD_LO_WIDTH 32
#define       TLMSS_TELEMETER_STATE_STOP_TOD_HI_OFST 20
#define       TLMSS_TELEMETER_STATE_STOP_TOD_HI_LEN 4
#define       TLMSS_TELEMETER_STATE_STOP_TOD_HI_LBN 160
#define       TLMSS_TELEMETER_STATE_STOP_TOD_HI_WIDTH 32
#define       TLMSS_TELEMETER_STATE_STOP_TOD_LBN 128
#define       TLMSS_TELEMETER_STATE_STOP_TOD_WIDTH 64
/* Time at which the telemeter was last started. */
#define       TLMSS_TELEMETER_STATE_START_TOD_OFST 24
#define       TLMSS_TELEMETER_STATE_START_TOD_LEN 8
#define       TLMSS_TELEMETER_STATE_START_TOD_LO_OFST 24
#define       TLMSS_TELEMETER_STATE_START_TOD_LO_LEN 4
#define       TLMSS_TELEMETER_STATE_START_TOD_LO_LBN 192
#define       TLMSS_TELEMETER_STATE_START_TOD_LO_WIDTH 32
#define       TLMSS_TELEMETER_STATE_START_TOD_HI_OFST 28
#define       TLMSS_TELEMETER_STATE_START_TOD_HI_LEN 4
#define       TLMSS_TELEMETER_STATE_START_TOD_HI_LBN 224
#define       TLMSS_TELEMETER_STATE_START_TOD_HI_WIDTH 32
#define       TLMSS_TELEMETER_STATE_START_TOD_LBN 192
#define       TLMSS_TELEMETER_STATE_START_TOD_WIDTH 64


/***********************************/
/* MC_CMD_EFTEST_OP
 * Multiplexed MCDI call for eftest operations
 */
#define MC_CMD_EFTEST_OP 0xaf
#define MC_CMD_EFTEST_OP_MSGSET 0xaf

/* MC_CMD_EFTEST_OP_IN msgrequest */
#define    MC_CMD_EFTEST_OP_IN_LENMIN 4
#define    MC_CMD_EFTEST_OP_IN_LENMAX 252
#define    MC_CMD_EFTEST_OP_IN_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_OP_IN_LEN(num) (4+4*(num))
#define    MC_CMD_EFTEST_OP_IN_EFTEST_ARGS_NUM(len) (((len)-4)/4)
/* identifies the test */
#define       MC_CMD_EFTEST_OP_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_OP_IN_EFTEST_ID_LEN 1
/* enum: event generating test */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_EVENT_TEST 0x0
/* enum: sample use of infrastructure */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_SAMPLE 0x1
/* enum: periodic stalling of the rx datapath. */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_RX_STALL 0x2
/* enum: Packet memory operations supporting snapper */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_PM 0x3
/* enum: MC MIPS interrupt tests */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_IRQ_TEST 0x4
/* enum: MC PDMA tests */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_PDMA_TEST 0x5
/* enum: MC EXPROM tests */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_EXPROM 0x6
/* enum: Get the eftest-specific features of the DUT */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_DUT_FEATURES 0x7
/* enum: MC filter tests */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_FILTER 0x8
/* enum: MC MC2MC communications tests */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_MC2MC_TEST 0x9
/* enum: CNTAG functionality tests */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_CNTAG_TEST 0xa
/* enum: Config for Speed, Loopback, Macsec. */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_PORT_SETTINGS 0xb
/* enum: Parser-dispatcher directed tests */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_PD_TEST 0xc
/* enum: LTR tests */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_LTR_TEST 0xd
/* enum: OBFF tests */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_OBFF_TEST 0xe
/* enum: Get the clock ratio (useful for pacer tests) */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_CLOCK_RATIO 0xf
/* enum: PCIE Power Management tests */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_POWER_MGMT 0x10
/* enum: MC PIO buffer tests */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_PIOTEST 0x11
/* enum: CSR access test */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_CSR_ACCESS 0x12
/* enum: MC doorbell stress test */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_MC_DOORBELL_STRESS 0x13
/* enum: MC TLP stress test */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_TLP_STRESS 0x14
/* enum: MC miscellaneous tests */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_KITCHEN_SINK 0x15
/* enum: Packet Edit tests */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_PE 0x16
/* enum: BIU tests */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_BIU_TEST 0x17
/* enum: Buffer table init for bad descriptor tests with ECC enabled */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_BUFTBL_INIT 0x18
/* enum: Stressful pdma tests */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_PDMA_STRESS 0x19
/* enum: Config for LED Mode, Src, Freq. */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_LED_SETTINGS 0x1a
/* enum: ECC AER signaling */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_ECC_AER 0x1b
/* enum: RMON operations */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_RMON 0x1c
/* enum: TX DPCPU test settings */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_TXDPCPU 0x1d
/* enum: ECC test settings */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_ECC_TEST 0x1e
/* enum: RX DPCPU test settings */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_RXDPCPU 0x1f
/* enum: PCIE error monitoring operations */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_PCIE_MONITOR 0x20
/* enum: UART testing */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_UART 0x21
/* enum: SMC tests */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_SMC 0x22
/* enum: Port mode operations */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_PORT_MODE 0x23
/* enum: SPI DMA tests */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_SPI_DMA 0x24
/* enum: Tests for new MIPS instructions */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_MIPS_INSNS 0x25
/* enum: Test support for the EF100 switch */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_EF100_SWITCH 0x26
/* enum: Support for setting up and testing the SFFF */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_SFFF 0x27
/* enum: Tests for the OTP storage */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_OTP_NVRAM 0x28
/* enum: Tests for medford XIP support */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_XIP 0x29
/* enum: Support for setting up VI allocation */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_VI_ALLOC 0x2a
/* enum: Tests for Medford CCOM registers */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_CCOM 0x2b
/* enum: Test support for EVB framework */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_EVB 0x2c
/* enum: Control the network egress port interface flow. */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_EF100_NET_EPI_FLOW_CTL 0x2d
/* enum: Directed test for bug41963 */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_BUG41963 0x2e
/* enum: Control the medford traffic generator */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_HWPKTGEN 0x2f
/* enum: Tests for MC JTAG interface */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_JTAG 0x30
/* enum: Support for setting up and testing the pacer */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_PACER 0x31
/* enum: Stop the DPCPU polling thread. A reboot will be needed to restart it
 */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_STOP_DPCPU_THREAD 0x32
/* enum: Report the expected and actual frequencies for each clock in the
 * system
 */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_CHECK_CLOCKS 0x33
/* enum: CTPIO test support */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_CTPIO 0x34
/* enum: FLR completion nofication via host memory buffers */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_FLR_COMPLETION_NOTIFICATION 0x35
/* enum: Control RXDP firmware which introduces delays */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_SLOW_RXFW 0x36
/* enum: Assorted VDM tests */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_VDM 0x37
/* enum: Medford2 TSA feature tests */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_TSA 0x38
/* enum: FastPD configuration (medford2 only) */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_FASTPD 0x39
/* enum: Test satellite CPU memories */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_MEM_TEST 0x3a
/* enum: Dynamic port configuration operations */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_DYNAMIC_PORT_CONFIG 0x3b
/* enum: Access to the internals of MaxPayload and MaxReadRequest calculation
 */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_MP_MRR 0x3c
/* enum: PTM tests */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_PTM 0x3d
/* enum: EVQ Phase tests */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_EVQ_PHASE 0x3e
/* enum: PTP tests */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_PTP 0x3f
/* enum: Get port errors (NP_ALERT_REG2) (medford2 only) */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_PORT_ERRORS 0x40
/* enum: PCIE HW performance monitors */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_HW_PERF_MON 0x41
/* enum: Control port MACs */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_MAC_CONTROL 0x42
/* enum: CTPIO reconfiguration agitator tests */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_CRAGIT 0x43
/* enum: Probemux tests */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_PBMX 0x44
/* enum: Control TXDP firmware which introduces delays */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_SLOW_TXFW 0x45
/* enum: For now just allows to toggle the error forwarding settings in the
 * PCIe core
 */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_PCIE_TEST 0x46
/* enum: Stress krserdes */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_KRSERDES_STRESS 0x47
/* enum: Manage eftest threads */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_THREAD_MGMT 0x48
/* enum: Test SPHINX endpoints on the Riverhead architecture. */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_SPHINX 0x49
/* enum: NMC filter tests */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_FILTER_RHEAD 0x4a
/* enum: Configure event merging */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_EVENT_MERGE 0x4b
/* enum: Toggle MAC drain */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_MAC_DRAIN 0x4c
/* enum: Alias to EFTEST_MAC_DRAIN */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_MAC_DRAIN_RHEAD 0x4c
/* enum: Configure TX on Rhead */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_CONF_TX 0x4d
/* enum: Alias to EFTEST_CONF_TX */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_CONF_TX_RHEAD 0x4d
/* enum: Riverhead scheduler tests */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_SCHED_RHEAD 0x4e
/* enum: Riverhead packet generator control */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_RHEAD_PKTGEN 0x4f
/* enum: Riverhead rx cache-line padding control */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_RX_END_PADDING 0x50
/* enum: Test Riverhead target handler register */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_TRGT_NW_PFVF2VI_TEST_RHEAD 0x51
/* enum: Configure descriptor cache size on Riverhead */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_DC_SIZE 0x52
/* enum: Exercise the RiverHeadLink */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_RHL 0x53
/* enum: Exercise partial reconfiguration support */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_PR 0x54
/* enum: Test MAE support */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_MAE 0x55
/* enum: Control of FSDB dumping (cosim only) */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_FSDB_CTRL 0x56
/* enum: Allocate and free DDR buffers for use with ADDR_SPC overrides */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_DDR 0x57
/* enum: FPGA voltage operations (get/set) */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_FPGA_CTRL 0x58
/* enum: Stress the MCDI transport */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_MCDI 0x59
/* enum: Test the logging API */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_LOG 0x5a
/* enum: Test the CDX Prototype functionality */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_CDX_OP 0x5b
/* enum: Get board mode */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_BOARD_MODE 0x5c
/* enum: Experimental resource manager test */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_RMDMAX 0x5d
/* enum: Control of CDMA loopback functionality */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_CDMA_LB 0x5e
/* enum: Tests for rhead_rm DMAx APIs */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_RHEAD_RM 0x5f
/* enum: Tests for DMAQ DMAx APIs */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_DMAQX 0x60
/* enum: Sequence of init/fini for dmaq/evq */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_RMQS 0x61
/* enum: Control of HNIC Ready Agitator */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_SSS_AGITATOR_CTL 0x62
/* enum: Fetch the QID of a given relative VI */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_RVIQID 0x63
/* enum: Control of RX packet and event delivery */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_RX_PORT_PCIE_RQ_CTL 0x64
/* enum: Set MMIO-proxy mode for the specified function */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_FUNC_SET_MMIO_PROXY_MODE 0x65
/* enum: Deprecated. Use EFTEST_DPU instead. Configured a single DPU bufSS
 * general pool
 */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_DPU_BUFSS_POOL_CONFIG 0x66
/* enum: Apply configuration changes to the Streaming Subsystem (SSS) */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_CONFIG_SSS 0x67
/* enum: Query and control of the MMIO window into MC memory */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_MC_MEM_WIN 0x68
/* enum: Query QBB settings for Streaming Subsystem (SSS) */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_QBB_SSS 0x69
/* enum: Expand an address space ID into its fields to populate DPU and cDM
 * message load descriptors.
 */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_EXPAND_ADDR_SPC_FIELDS 0x6a
/* enum: Query and control the DPUs and related components */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_DPU 0x6b
/* enum: Apply configurations to DPU net Components */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_DPU_NET 0x6c
/* enum: Read MSI Msg for a CDX device */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_READ_MSI_MSG 0x6d
/* enum: Query and verify reset state for the calling function */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_DMA_MANAGER_RST_IF 0x6e
/* enum: Get address space for a specific address space path. */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_GET_ADDR_SPC_ID_EXT 0x6f
/* enum: Get dpu cmd channels associated to given dest set */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_GET_DEST_SET_DPU_CMD_CHANNELS 0x70
/* enum: Exercise the Telemeter Sub-System (TLMSS) APIs */
#define          MC_CMD_EFTEST_OP_IN_EFTEST_TLMSS 0x71
/* the operation requested (interpretation is test-specific) */
#define       MC_CMD_EFTEST_OP_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_OP_IN_EFTEST_OP_LEN 1
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_OP_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_OP_IN_EFTEST_OP_RSVD_LEN 2
/* arguments specific to the test and operation */
#define       MC_CMD_EFTEST_OP_IN_EFTEST_ARGS_OFST 4
#define       MC_CMD_EFTEST_OP_IN_EFTEST_ARGS_LEN 4
#define       MC_CMD_EFTEST_OP_IN_EFTEST_ARGS_MINNUM 0
#define       MC_CMD_EFTEST_OP_IN_EFTEST_ARGS_MAXNUM 62
#define       MC_CMD_EFTEST_OP_IN_EFTEST_ARGS_MAXNUM_MCDI2 254

/* MC_CMD_EFTEST_OP_OUT msgresponse */
#define    MC_CMD_EFTEST_OP_OUT_LEN 0

/* MC_CMD_EVENT_TEST_MSG_IN msgrequest */
#define    MC_CMD_EVENT_TEST_MSG_IN_LEN 32
/* identifies the test */
#define       MC_CMD_EVENT_TEST_MSG_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EVENT_TEST_MSG_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EVENT_TEST_MSG_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EVENT_TEST_MSG_IN_EFTEST_OP_LEN 1
/* enum: run the basic test */
#define          MC_CMD_EVENT_TEST_MSG_IN_EVENT_TEST_MSG 0x0
/* align the arguments to 32 bits */
#define       MC_CMD_EVENT_TEST_MSG_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EVENT_TEST_MSG_IN_EFTEST_OP_RSVD_LEN 2
/* the event queue to test */
#define       MC_CMD_EVENT_TEST_MSG_IN_EVENT_QUEUE_OFST 4
#define       MC_CMD_EVENT_TEST_MSG_IN_EVENT_QUEUE_LEN 4
/* the bottom 32 bits of the event */
#define       MC_CMD_EVENT_TEST_MSG_IN_EVENT_LO_OFST 8
#define       MC_CMD_EVENT_TEST_MSG_IN_EVENT_LO_LEN 4
/* the bottom 32 bits of the event */
#define       MC_CMD_EVENT_TEST_MSG_IN_EVENT_HI_OFST 12
#define       MC_CMD_EVENT_TEST_MSG_IN_EVENT_HI_LEN 4
#define       MC_CMD_EVENT_TEST_MSG_IN_ITERATIONS_OFST 16
#define       MC_CMD_EVENT_TEST_MSG_IN_ITERATIONS_LEN 4
#define       MC_CMD_EVENT_TEST_MSG_IN_INCREMENT_LO_OFST 20
#define       MC_CMD_EVENT_TEST_MSG_IN_INCREMENT_LO_LEN 4
#define       MC_CMD_EVENT_TEST_MSG_IN_INCREMENT_HI_OFST 24
#define       MC_CMD_EVENT_TEST_MSG_IN_INCREMENT_HI_LEN 4
#define       MC_CMD_EVENT_TEST_MSG_IN_SCHEDULE_PERIOD_OFST 28
#define       MC_CMD_EVENT_TEST_MSG_IN_SCHEDULE_PERIOD_LEN 4

/* MC_CMD_EVENT_TEST_MSG_OUT msgresponse */
#define    MC_CMD_EVENT_TEST_MSG_OUT_LEN 4
/* pointer to thread structure */
#define       MC_CMD_EVENT_TEST_MSG_OUT_THREAD_OFST 0
#define       MC_CMD_EVENT_TEST_MSG_OUT_THREAD_LEN 4

/* MC_CMD_EVENT_TEST_MSG_POLL_IN msgrequest */
#define    MC_CMD_EVENT_TEST_MSG_POLL_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EVENT_TEST_MSG_POLL_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EVENT_TEST_MSG_POLL_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EVENT_TEST_MSG_POLL_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EVENT_TEST_MSG_POLL_IN_EFTEST_OP_LEN 1
/* enum: run the basic test */
#define          MC_CMD_EVENT_TEST_MSG_POLL_IN_EVENT_TEST_MSG_POLL 0x1
/* align the arguments to 32 bits */
#define       MC_CMD_EVENT_TEST_MSG_POLL_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EVENT_TEST_MSG_POLL_IN_EFTEST_OP_RSVD_LEN 2
/* pointer to thread structure to poll */
#define       MC_CMD_EVENT_TEST_MSG_POLL_IN_THREAD_OFST 4
#define       MC_CMD_EVENT_TEST_MSG_POLL_IN_THREAD_LEN 4

/* MC_CMD_EVENT_TEST_MSG_POLL_OUT msgresponse */
#define    MC_CMD_EVENT_TEST_MSG_POLL_OUT_LEN 4
/* count of number of times backpressure occurs */
#define       MC_CMD_EVENT_TEST_MSG_POLL_OUT_BACKPRESSURE_COUNT_OFST 0
#define       MC_CMD_EVENT_TEST_MSG_POLL_OUT_BACKPRESSURE_COUNT_LEN 4

/* MC_CMD_EVENT_TEST_IREG_IN msgrequest */
#define    MC_CMD_EVENT_TEST_IREG_IN_LEN 32
/* identifies the test */
#define       MC_CMD_EVENT_TEST_IREG_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EVENT_TEST_IREG_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EVENT_TEST_IREG_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EVENT_TEST_IREG_IN_EFTEST_OP_LEN 1
/* enum: run the basic test */
#define          MC_CMD_EVENT_TEST_IREG_IN_EVENT_TEST_IREG 0x2
/* align the arguments to 32 bits */
#define       MC_CMD_EVENT_TEST_IREG_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EVENT_TEST_IREG_IN_EFTEST_OP_RSVD_LEN 2
/* the event queue to test */
#define       MC_CMD_EVENT_TEST_IREG_IN_EVENT_QUEUE_OFST 4
#define       MC_CMD_EVENT_TEST_IREG_IN_EVENT_QUEUE_LEN 4
/* the bottom 32 bits of the event */
#define       MC_CMD_EVENT_TEST_IREG_IN_EVENT_LO_OFST 8
#define       MC_CMD_EVENT_TEST_IREG_IN_EVENT_LO_LEN 4
/* the bottom 32 bits of the event */
#define       MC_CMD_EVENT_TEST_IREG_IN_EVENT_HI_OFST 12
#define       MC_CMD_EVENT_TEST_IREG_IN_EVENT_HI_LEN 4
#define       MC_CMD_EVENT_TEST_IREG_IN_ITERATIONS_OFST 16
#define       MC_CMD_EVENT_TEST_IREG_IN_ITERATIONS_LEN 4
#define       MC_CMD_EVENT_TEST_IREG_IN_INCREMENT_LO_OFST 20
#define       MC_CMD_EVENT_TEST_IREG_IN_INCREMENT_LO_LEN 4
#define       MC_CMD_EVENT_TEST_IREG_IN_INCREMENT_HI_OFST 24
#define       MC_CMD_EVENT_TEST_IREG_IN_INCREMENT_HI_LEN 4
#define       MC_CMD_EVENT_TEST_IREG_IN_SCHEDULE_PERIOD_OFST 28
#define       MC_CMD_EVENT_TEST_IREG_IN_SCHEDULE_PERIOD_LEN 4

/* MC_CMD_EVENT_TEST_IREG_OUT msgresponse */
#define    MC_CMD_EVENT_TEST_IREG_OUT_LEN 4
#define       MC_CMD_EVENT_TEST_IREG_OUT_THREAD_OFST 0
#define       MC_CMD_EVENT_TEST_IREG_OUT_THREAD_LEN 4

/* MC_CMD_EVENT_TEST_IREG_POLL_IN msgrequest */
#define    MC_CMD_EVENT_TEST_IREG_POLL_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EVENT_TEST_IREG_POLL_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EVENT_TEST_IREG_POLL_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EVENT_TEST_IREG_POLL_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EVENT_TEST_IREG_POLL_IN_EFTEST_OP_LEN 1
/* enum: run the basic test */
#define          MC_CMD_EVENT_TEST_IREG_POLL_IN_EVENT_TEST_IREG_POLL 0x3
/* align the arguments to 32 bits */
#define       MC_CMD_EVENT_TEST_IREG_POLL_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EVENT_TEST_IREG_POLL_IN_EFTEST_OP_RSVD_LEN 2
/* pointer to thread structure to poll */
#define       MC_CMD_EVENT_TEST_IREG_POLL_IN_THREAD_OFST 4
#define       MC_CMD_EVENT_TEST_IREG_POLL_IN_THREAD_LEN 4

/* MC_CMD_EVENT_IREG_POLL_OUT msgresponse */
#define    MC_CMD_EVENT_IREG_POLL_OUT_LEN 0

/* MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN msgrequest */
#define    MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_LENMIN 8
#define    MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_LENMAX 252
#define    MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_LENMAX_MCDI2 1020
#define    MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_LEN(num) (4+4*(num))
#define    MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_COMMANDS_NUM(len) (((len)-4)/4)
/* identifies the test */
#define       MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_EFTEST_OP_LEN 1
/* enum: run the basic test asynchronously */
#define          MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_ASYNC 0x4
/* enum: run the basic test synchronously */
#define          MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_SYNC 0x6
/* align the arguments to 32 bits */
#define       MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_EFTEST_OP_RSVD_LEN 2
/* list of commands */
#define       MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_COMMANDS_OFST 4
#define       MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_COMMANDS_LEN 4
#define       MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_COMMANDS_MINNUM 1
#define       MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_COMMANDS_MAXNUM 62
#define       MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_COMMANDS_MAXNUM_MCDI2 254
#define        MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_OP_OFST 4
#define        MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_OP_LBN 30
#define        MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_OP_WIDTH 2
/* enum: configuration */
#define          MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_COMMAND_OP_CONFIG 0x0
/* enum: sleep/spin */
#define          MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_COMMAND_OP_DELAY 0x1
/* enum: loop control */
#define          MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_COMMAND_OP_LOOP 0x2
#define        MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_SUBOP_OFST 4
#define        MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_SUBOP_LBN 27
#define        MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_SUBOP_WIDTH 3
/* enum: configure merge parameters */
#define          MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_COMMAND_OP_CONFIG_SUBOP_MERGE_CONFIG 0x0
/* enum: enable merging for evq */
#define          MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_COMMAND_OP_CONFIG_SUBOP_MERGE_ENABLE 0x1
/* enum: disable merging for evq */
#define          MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_COMMAND_OP_CONFIG_SUBOP_MERGE_DISABLE 0x2
/* enum: flush merge block for evq */
#define          MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_COMMAND_OP_CONFIG_SUBOP_MERGE_FLUSH 0x3
/* enum: enable cut through for evq */
#define          MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_COMMAND_OP_CONFIG_SUBOP_CUT_THRU_ENABLE 0x4
/* enum: enable cut through for evq without flushing rxdp */
#define          MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_COMMAND_OP_CONFIG_SUBOP_CUT_THRU_ENABLE_IDLE 0x5
/* enum: disable cut through for evq */
#define          MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_COMMAND_OP_CONFIG_SUBOP_CUT_THRU_DISABLE 0x6
/* enum: store paramter values to be used by a subsequent config op. */
#define          MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_COMMAND_OP_CONFIG_SUBOP_STORE_PARAMS 0x7
/* enum: spin */
#define          MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_COMMAND_OP_DELAY_SUBOP_USPIN 0x0
/* enum: sleep */
#define          MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_COMMAND_OP_DELAY_SUBOP_USLEEP 0x1
/* enum: declare start of loop */
#define          MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_COMMAND_OP_LOOP_SUBOP_START 0x0
/* enum: declare end of loop */
#define          MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_COMMAND_OP_LOOP_SUBOP_END 0x1
#define        MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_MERGE_BLK_OFST 4
#define        MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_MERGE_BLK_LBN 0
#define        MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_MERGE_BLK_WIDTH 2
/* enum: Huntington only */
#define          MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_COMMAND_MERGE_BLK_RX 0x0
/* enum: Medford only */
#define          MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_COMMAND_MERGE_BLK_RX0 0x0
/* enum: Medford only */
#define          MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_COMMAND_MERGE_BLK_RX1 0x3
#define          MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_COMMAND_MERGE_BLK_TX0 0x1 /* enum */
#define          MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_COMMAND_MERGE_BLK_TX1 0x2 /* enum */
#define        MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_MERGE_CONFIG_EN_OFST 4
#define        MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_MERGE_CONFIG_EN_LBN 2
#define        MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_MERGE_CONFIG_EN_WIDTH 1
#define        MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_MERGE_CONFIG_MAX_OFST 4
#define        MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_MERGE_CONFIG_MAX_LBN 3
#define        MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_MERGE_CONFIG_MAX_WIDTH 4
#define        MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_MERGE_CONFIG_TIMER_PRESCALER_OFST 4
#define        MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_MERGE_CONFIG_TIMER_PRESCALER_LBN 7
#define        MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_MERGE_CONFIG_TIMER_PRESCALER_WIDTH 8
#define        MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_MERGE_CONFIG_TIMER_TIMEOUT_OFST 4
#define        MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_MERGE_CONFIG_TIMER_TIMEOUT_LBN 15
#define        MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_MERGE_CONFIG_TIMER_TIMEOUT_WIDTH 10
#define        MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_STORE_PARAMS_PARAMS_OFST 4
#define        MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_STORE_PARAMS_PARAMS_LBN 0
#define        MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_STORE_PARAMS_PARAMS_WIDTH 27
#define        MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_STORE_PARAMS_MERGE_CONFIG_TIMER_QEMPTY_TIMEOUT_OFST 4
#define        MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_STORE_PARAMS_MERGE_CONFIG_TIMER_QEMPTY_TIMEOUT_LBN 0
#define        MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_STORE_PARAMS_MERGE_CONFIG_TIMER_QEMPTY_TIMEOUT_WIDTH 10
#define        MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_EVQ_IDX_OFST 4
#define        MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_EVQ_IDX_LBN 2
#define        MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_EVQ_IDX_WIDTH 11
#define        MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_DELAY_US_OFST 4
#define        MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_DELAY_US_LBN 0
#define        MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_DELAY_US_WIDTH 24
#define        MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_LOOP_ITERATIONS_OFST 4
#define        MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_LOOP_ITERATIONS_LBN 0
#define        MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_IN_LOOP_ITERATIONS_WIDTH 24

/* MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_OUT msgresponse */
#define    MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_OUT_LEN 4
#define       MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_OUT_THREAD_OFST 0
#define       MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_RUN_OUT_THREAD_LEN 4

/* MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_POLL_IN msgrequest */
#define    MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_POLL_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_POLL_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_POLL_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_POLL_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_POLL_IN_EFTEST_OP_LEN 1
/* enum: run the basic test */
#define          MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_POLL_IN_EVENT_TEST_CUT_THRU_MERGE_PARAMS_POLL 0x5
/* align the arguments to 32 bits */
#define       MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_POLL_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_POLL_IN_EFTEST_OP_RSVD_LEN 2
/* pointer to thread structure to poll */
#define       MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_POLL_IN_THREAD_OFST 4
#define       MC_CMD_EVENT_TEST_CUT_THRU_MERGE_PARAMS_POLL_IN_THREAD_LEN 4

/* MC_CMD_EVENT_CUT_THRU_MERGE_PARAMS_POLL_OUT msgresponse */
#define    MC_CMD_EVENT_CUT_THRU_MERGE_PARAMS_POLL_OUT_LEN 0

/* MC_CMD_EVENT_TEST_STRESS_EV_TABLE_IN msgrequest */
#define    MC_CMD_EVENT_TEST_STRESS_EV_TABLE_IN_LEN 20
/* identifies the test */
#define       MC_CMD_EVENT_TEST_STRESS_EV_TABLE_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EVENT_TEST_STRESS_EV_TABLE_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EVENT_TEST_STRESS_EV_TABLE_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EVENT_TEST_STRESS_EV_TABLE_IN_EFTEST_OP_LEN 1
/* enum: run the basic test */
#define          MC_CMD_EVENT_TEST_STRESS_EV_TABLE_IN_EVENT_TEST_STRESS_EV_TABLE 0x7
/* align the arguments to 32 bits */
#define       MC_CMD_EVENT_TEST_STRESS_EV_TABLE_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EVENT_TEST_STRESS_EV_TABLE_IN_EFTEST_OP_RSVD_LEN 2
/* which table to stress */
#define       MC_CMD_EVENT_TEST_STRESS_EV_TABLE_IN_TARGET_TBL_OFST 4
#define       MC_CMD_EVENT_TEST_STRESS_EV_TABLE_IN_TARGET_TBL_LEN 4
/* enum: stress the EV_PTR_TBL table */
#define          MC_CMD_EVENT_TEST_STRESS_EV_TABLE_IN_TARGET_EV_PTR_TBL 0x0
/* enum: stress the EV_TIMER_TBL table */
#define          MC_CMD_EVENT_TEST_STRESS_EV_TABLE_IN_TARGET_EV_TMR_TBL 0x1
/* the event queue to test */
#define       MC_CMD_EVENT_TEST_STRESS_EV_TABLE_IN_EVENT_QUEUE_OFST 8
#define       MC_CMD_EVENT_TEST_STRESS_EV_TABLE_IN_EVENT_QUEUE_LEN 4
/* number of iterations to run */
#define       MC_CMD_EVENT_TEST_STRESS_EV_TABLE_IN_ITERATIONS_OFST 12
#define       MC_CMD_EVENT_TEST_STRESS_EV_TABLE_IN_ITERATIONS_LEN 4
#define       MC_CMD_EVENT_TEST_STRESS_EV_TABLE_IN_SCHEDULE_PERIOD_OFST 16
#define       MC_CMD_EVENT_TEST_STRESS_EV_TABLE_IN_SCHEDULE_PERIOD_LEN 4

/* MC_CMD_EVENT_TEST_STRESS_EV_TABLE_OUT msgresponse */
#define    MC_CMD_EVENT_TEST_STRESS_EV_TABLE_OUT_LEN 4
#define       MC_CMD_EVENT_TEST_STRESS_EV_TABLE_OUT_THREAD_OFST 0
#define       MC_CMD_EVENT_TEST_STRESS_EV_TABLE_OUT_THREAD_LEN 4

/* MC_CMD_EVENT_TEST_STRESS_EV_TABLE_POLL_IN msgrequest */
#define    MC_CMD_EVENT_TEST_STRESS_EV_TABLE_POLL_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EVENT_TEST_STRESS_EV_TABLE_POLL_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EVENT_TEST_STRESS_EV_TABLE_POLL_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EVENT_TEST_STRESS_EV_TABLE_POLL_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EVENT_TEST_STRESS_EV_TABLE_POLL_IN_EFTEST_OP_LEN 1
/* enum: run the basic test */
#define          MC_CMD_EVENT_TEST_STRESS_EV_TABLE_POLL_IN_EVENT_TEST_STRESS_EV_TABLE_POLL 0x8
/* align the arguments to 32 bits */
#define       MC_CMD_EVENT_TEST_STRESS_EV_TABLE_POLL_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EVENT_TEST_STRESS_EV_TABLE_POLL_IN_EFTEST_OP_RSVD_LEN 2
/* pointer to thread structure to poll */
#define       MC_CMD_EVENT_TEST_STRESS_EV_TABLE_POLL_IN_THREAD_OFST 4
#define       MC_CMD_EVENT_TEST_STRESS_EV_TABLE_POLL_IN_THREAD_LEN 4

/* MC_CMD_EVQ_PHASE_GET_EN_IN msgrequest */
#define    MC_CMD_EVQ_PHASE_GET_EN_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EVQ_PHASE_GET_EN_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EVQ_PHASE_GET_EN_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EVQ_PHASE_GET_EN_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EVQ_PHASE_GET_EN_IN_EFTEST_OP_LEN 1
/* enum: Get the state of the EVQ phase feature enable, M2 only */
#define          MC_CMD_EVQ_PHASE_GET_EN_IN_EVQ_PHASE_GET_EN 0x0
/* align the arguments to 32 bits */
#define       MC_CMD_EVQ_PHASE_GET_EN_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EVQ_PHASE_GET_EN_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EVQ_PHASE_GET_EVQ_PHASE_EN_OUT msgrequest: The current setting, 0 for
 * off, 1 for on
 */
#define    MC_CMD_EVQ_PHASE_GET_EVQ_PHASE_EN_OUT_LEN 4
#define       MC_CMD_EVQ_PHASE_GET_EVQ_PHASE_EN_OUT_SETTING_OFST 0
#define       MC_CMD_EVQ_PHASE_GET_EVQ_PHASE_EN_OUT_SETTING_LEN 4

/* MC_CMD_EVQ_PHASE_SET_EN_IN msgrequest */
#define    MC_CMD_EVQ_PHASE_SET_EN_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EVQ_PHASE_SET_EN_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EVQ_PHASE_SET_EN_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EVQ_PHASE_SET_EN_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EVQ_PHASE_SET_EN_IN_EFTEST_OP_LEN 1
/* enum: Set the state of the EVQ phase feature enable to on or off, M2 only */
#define          MC_CMD_EVQ_PHASE_SET_EN_IN_EVQ_PHASE_SET_EN 0x1
/* align the arguments to 32 bits */
#define       MC_CMD_EVQ_PHASE_SET_EN_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EVQ_PHASE_SET_EN_IN_EFTEST_OP_RSVD_LEN 2
/* The desired setting, 0 for off, 1 for on */
#define       MC_CMD_EVQ_PHASE_SET_EN_IN_SETTING_OFST 4
#define       MC_CMD_EVQ_PHASE_SET_EN_IN_SETTING_LEN 4

/* MC_CMD_EVENT_TEST_STRESS_EV_TABLE_POLL_OUT msgresponse */
#define    MC_CMD_EVENT_TEST_STRESS_EV_TABLE_POLL_OUT_LEN 4
/* test run result (0 if ok, non-zero in case of failure) */
#define       MC_CMD_EVENT_TEST_STRESS_EV_TABLE_POLL_OUT_RESULT_OFST 0
#define       MC_CMD_EVENT_TEST_STRESS_EV_TABLE_POLL_OUT_RESULT_LEN 4

/* MC_CMD_INTR_TEST_STRESS_TABLE_IN msgrequest */
#define    MC_CMD_INTR_TEST_STRESS_TABLE_IN_LEN 28
/* identifies the test */
#define       MC_CMD_INTR_TEST_STRESS_TABLE_IN_EFTEST_ID_OFST 0
#define       MC_CMD_INTR_TEST_STRESS_TABLE_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_INTR_TEST_STRESS_TABLE_IN_EFTEST_OP_OFST 1
#define       MC_CMD_INTR_TEST_STRESS_TABLE_IN_EFTEST_OP_LEN 1
/* enum: run the basic test */
#define          MC_CMD_INTR_TEST_STRESS_TABLE_IN_INTR_TEST_STRESS_TABLE 0x9
/* align the arguments to 32 bits */
#define       MC_CMD_INTR_TEST_STRESS_TABLE_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_INTR_TEST_STRESS_TABLE_IN_EFTEST_OP_RSVD_LEN 2
#define       MC_CMD_INTR_TEST_STRESS_TABLE_IN_TARGET_TBL_OFST 4
#define       MC_CMD_INTR_TEST_STRESS_TABLE_IN_TARGET_TBL_LEN 4
#define          MC_CMD_INTR_TEST_STRESS_TABLE_IN_TARGET_TBL_MSIX 0x0 /* enum */
#define          MC_CMD_INTR_TEST_STRESS_TABLE_IN_TARGET_TBL_PF2MSIX 0x1 /* enum */
#define          MC_CMD_INTR_TEST_STRESS_TABLE_IN_TARGET_TBL_VI2FUNC 0x2 /* enum */
#define       MC_CMD_INTR_TEST_STRESS_TABLE_IN_DO_WRITES_OFST 8
#define       MC_CMD_INTR_TEST_STRESS_TABLE_IN_DO_WRITES_LEN 4
/* Area offset within target table */
#define       MC_CMD_INTR_TEST_STRESS_TABLE_IN_OFFSET_OFST 12
#define       MC_CMD_INTR_TEST_STRESS_TABLE_IN_OFFSET_LEN 4
/* Area size */
#define       MC_CMD_INTR_TEST_STRESS_TABLE_IN_SIZE_OFST 16
#define       MC_CMD_INTR_TEST_STRESS_TABLE_IN_SIZE_LEN 4
/* number of iterations to run */
#define       MC_CMD_INTR_TEST_STRESS_TABLE_IN_ITERATIONS_OFST 20
#define       MC_CMD_INTR_TEST_STRESS_TABLE_IN_ITERATIONS_LEN 4
/* number of iteration to reschedule after */
#define       MC_CMD_INTR_TEST_STRESS_TABLE_IN_SCHEDULE_PERIOD_OFST 24
#define       MC_CMD_INTR_TEST_STRESS_TABLE_IN_SCHEDULE_PERIOD_LEN 4

/* MC_CMD_INTR_TEST_STRESS_TABLE_OUT msgresponse */
#define    MC_CMD_INTR_TEST_STRESS_TABLE_OUT_LEN 4
#define       MC_CMD_INTR_TEST_STRESS_TABLE_OUT_THREAD_OFST 0
#define       MC_CMD_INTR_TEST_STRESS_TABLE_OUT_THREAD_LEN 4

/* MC_CMD_INTR_TEST_STRESS_TABLE_POLL_IN msgrequest */
#define    MC_CMD_INTR_TEST_STRESS_TABLE_POLL_IN_LEN 8
/* identifies the test */
#define       MC_CMD_INTR_TEST_STRESS_TABLE_POLL_IN_EFTEST_ID_OFST 0
#define       MC_CMD_INTR_TEST_STRESS_TABLE_POLL_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_INTR_TEST_STRESS_TABLE_POLL_IN_EFTEST_OP_OFST 1
#define       MC_CMD_INTR_TEST_STRESS_TABLE_POLL_IN_EFTEST_OP_LEN 1
/* enum: run the basic test */
#define          MC_CMD_INTR_TEST_STRESS_TABLE_POLL_IN_INTR_TEST_STRESS_TABLE_POLL 0xa
/* align the arguments to 32 bits */
#define       MC_CMD_INTR_TEST_STRESS_TABLE_POLL_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_INTR_TEST_STRESS_TABLE_POLL_IN_EFTEST_OP_RSVD_LEN 2
/* pointer to thread structure to poll */
#define       MC_CMD_INTR_TEST_STRESS_TABLE_POLL_IN_THREAD_OFST 4
#define       MC_CMD_INTR_TEST_STRESS_TABLE_POLL_IN_THREAD_LEN 4

/* MC_CMD_INTR_TEST_STRESS_TABLE_POLL_OUT msgresponse */
#define    MC_CMD_INTR_TEST_STRESS_TABLE_POLL_OUT_LEN 4
/* test run result (0 if ok, non-zero in case of failure) */
#define       MC_CMD_INTR_TEST_STRESS_TABLE_POLL_OUT_RESULT_OFST 0
#define       MC_CMD_INTR_TEST_STRESS_TABLE_POLL_OUT_RESULT_LEN 4

/* MC_CMD_EFTEST_SAMPLE_IN msgrequest */
#define    MC_CMD_EFTEST_SAMPLE_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_SAMPLE_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_SAMPLE_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_SAMPLE_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_SAMPLE_IN_EFTEST_OP_LEN 1
/* enum: Setup. */
#define          MC_CMD_EFTEST_SAMPLE_IN_SAMPLE_SETUP 0x0
/* enum: Work. */
#define          MC_CMD_EFTEST_SAMPLE_IN_SAMPLE_WORK 0x1
/* enum: Poll. */
#define          MC_CMD_EFTEST_SAMPLE_IN_SAMPLE_POLL 0x2
/* enum: Setup. */
#define          MC_CMD_EFTEST_SAMPLE_IN_SAMPLE_PAUSE 0x3
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_SAMPLE_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_SAMPLE_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_SAMPLE_OUT msgresponse */
#define    MC_CMD_EFTEST_SAMPLE_OUT_LEN 0

/* MC_CMD_EFTEST_SAMPLE_SETUP_IN msgrequest */
#define    MC_CMD_EFTEST_SAMPLE_SETUP_IN_LENMIN 8
#define    MC_CMD_EFTEST_SAMPLE_SETUP_IN_LENMAX 252
#define    MC_CMD_EFTEST_SAMPLE_SETUP_IN_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_SAMPLE_SETUP_IN_LEN(num) (4+4*(num))
#define    MC_CMD_EFTEST_SAMPLE_SETUP_IN_ITEMS_NUM(len) (((len)-4)/4)
/* identifies the test */
#define       MC_CMD_EFTEST_SAMPLE_SETUP_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_SAMPLE_SETUP_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_SAMPLE_SETUP_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_SAMPLE_SETUP_IN_EFTEST_OP_LEN 1
/* enum: Setup. */
#define          MC_CMD_EFTEST_SAMPLE_SETUP_IN_SAMPLE_SETUP 0x0
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_SAMPLE_SETUP_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_SAMPLE_SETUP_IN_EFTEST_OP_RSVD_LEN 2
/* 32-bit values */
#define       MC_CMD_EFTEST_SAMPLE_SETUP_IN_ITEMS_OFST 4
#define       MC_CMD_EFTEST_SAMPLE_SETUP_IN_ITEMS_LEN 4
#define       MC_CMD_EFTEST_SAMPLE_SETUP_IN_ITEMS_MINNUM 1
#define       MC_CMD_EFTEST_SAMPLE_SETUP_IN_ITEMS_MAXNUM 62
#define       MC_CMD_EFTEST_SAMPLE_SETUP_IN_ITEMS_MAXNUM_MCDI2 254

/* MC_CMD_EFTEST_SAMPLE_SETUP_OUT msgresponse */
#define    MC_CMD_EFTEST_SAMPLE_SETUP_OUT_LEN 4
/* opaque thread handle */
#define       MC_CMD_EFTEST_SAMPLE_SETUP_OUT_THREAD_OFST 0
#define       MC_CMD_EFTEST_SAMPLE_SETUP_OUT_THREAD_LEN 4

/* MC_CMD_EFTEST_SAMPLE_WORK_IN msgrequest */
#define    MC_CMD_EFTEST_SAMPLE_WORK_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_SAMPLE_WORK_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_SAMPLE_WORK_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_SAMPLE_WORK_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_SAMPLE_WORK_IN_EFTEST_OP_LEN 1
/* enum: Work. */
#define          MC_CMD_EFTEST_SAMPLE_WORK_IN_SAMPLE_WORK 0x1
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_SAMPLE_WORK_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_SAMPLE_WORK_IN_EFTEST_OP_RSVD_LEN 2
/* opaque thread handle */
#define       MC_CMD_EFTEST_SAMPLE_WORK_IN_THREAD_OFST 4
#define       MC_CMD_EFTEST_SAMPLE_WORK_IN_THREAD_LEN 4

/* MC_CMD_EFTEST_SAMPLE_POLL_IN msgrequest */
#define    MC_CMD_EFTEST_SAMPLE_POLL_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_SAMPLE_POLL_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_SAMPLE_POLL_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_SAMPLE_POLL_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_SAMPLE_POLL_IN_EFTEST_OP_LEN 1
/* enum: Poll. */
#define          MC_CMD_EFTEST_SAMPLE_POLL_IN_SAMPLE_POLL 0x2
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_SAMPLE_POLL_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_SAMPLE_POLL_IN_EFTEST_OP_RSVD_LEN 2
/* opaque thread handle */
#define       MC_CMD_EFTEST_SAMPLE_POLL_IN_THREAD_OFST 4
#define       MC_CMD_EFTEST_SAMPLE_POLL_IN_THREAD_LEN 4

/* MC_CMD_EFTEST_SAMPLE_POLL_OUT msgresponse */
#define    MC_CMD_EFTEST_SAMPLE_POLL_OUT_LENMIN 4
#define    MC_CMD_EFTEST_SAMPLE_POLL_OUT_LENMAX 252
#define    MC_CMD_EFTEST_SAMPLE_POLL_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_SAMPLE_POLL_OUT_LEN(num) (4+4*(num))
#define    MC_CMD_EFTEST_SAMPLE_POLL_OUT_ITEMS_NUM(len) (((len)-4)/4)
#define       MC_CMD_EFTEST_SAMPLE_POLL_OUT_STATUS_OFST 0
#define       MC_CMD_EFTEST_SAMPLE_POLL_OUT_STATUS_LEN 4
#define        MC_CMD_EFTEST_SAMPLE_POLL_OUT_BUSY_OFST 0
#define        MC_CMD_EFTEST_SAMPLE_POLL_OUT_BUSY_LBN 31
#define        MC_CMD_EFTEST_SAMPLE_POLL_OUT_BUSY_WIDTH 1
/* 32-bit values */
#define       MC_CMD_EFTEST_SAMPLE_POLL_OUT_ITEMS_OFST 4
#define       MC_CMD_EFTEST_SAMPLE_POLL_OUT_ITEMS_LEN 4
#define       MC_CMD_EFTEST_SAMPLE_POLL_OUT_ITEMS_MINNUM 0
#define       MC_CMD_EFTEST_SAMPLE_POLL_OUT_ITEMS_MAXNUM 62
#define       MC_CMD_EFTEST_SAMPLE_POLL_OUT_ITEMS_MAXNUM_MCDI2 254

/* MC_CMD_EFTEST_SAMPLE_PAUSE_IN msgrequest */
#define    MC_CMD_EFTEST_SAMPLE_PAUSE_IN_LEN 12
/* identifies the test */
#define       MC_CMD_EFTEST_SAMPLE_PAUSE_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_SAMPLE_PAUSE_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_SAMPLE_PAUSE_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_SAMPLE_PAUSE_IN_EFTEST_OP_LEN 1
/* enum: Setup. */
#define          MC_CMD_EFTEST_SAMPLE_PAUSE_IN_SAMPLE_PAUSE 0x3
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_SAMPLE_PAUSE_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_SAMPLE_PAUSE_IN_EFTEST_OP_RSVD_LEN 2
/* timeout value, us */
#define       MC_CMD_EFTEST_SAMPLE_PAUSE_IN_TIMEOUT_US_OFST 4
#define       MC_CMD_EFTEST_SAMPLE_PAUSE_IN_TIMEOUT_US_LEN 4
/* opaque value to return */
#define       MC_CMD_EFTEST_SAMPLE_PAUSE_IN_OPAQUE_OFST 8
#define       MC_CMD_EFTEST_SAMPLE_PAUSE_IN_OPAQUE_LEN 4

/* MC_CMD_EFTEST_SAMPLE_PAUSE_OUT msgresponse */
#define    MC_CMD_EFTEST_SAMPLE_PAUSE_OUT_LEN 4
/* opaque value passed in */
#define       MC_CMD_EFTEST_SAMPLE_PAUSE_OUT_OPAQUE_OFST 0
#define       MC_CMD_EFTEST_SAMPLE_PAUSE_OUT_OPAQUE_LEN 4

/* MC_CMD_RX_STALL_START_IN msgrequest */
#define    MC_CMD_RX_STALL_START_IN_LEN 56
/* identifies the test */
#define       MC_CMD_RX_STALL_START_IN_EFTEST_ID_OFST 0
#define       MC_CMD_RX_STALL_START_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_RX_STALL_START_IN_EFEST_OP_OFST 1
#define       MC_CMD_RX_STALL_START_IN_EFEST_OP_LEN 1
/* enum: Start periodic pausing of RXDP datapath. */
#define          MC_CMD_RX_STALL_START_IN_RXDP 0x0
/* enum: Start periodic pausing of a PM vfifo */
#define          MC_CMD_RX_STALL_START_IN_VFIFO 0x2
/* align the arguments to 32 bits */
#define       MC_CMD_RX_STALL_START_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_RX_STALL_START_IN_EFTEST_OP_RSVD_LEN 2
/* The initial delay before the RX datapath is turned off (in microseconds). */
#define       MC_CMD_RX_STALL_START_IN_INITIAL_DELAY_US_OFST 4
#define       MC_CMD_RX_STALL_START_IN_INITIAL_DELAY_US_LEN 4
/* Periodically disable the RX datapath for this period (in microseconds). */
#define       MC_CMD_RX_STALL_START_IN_OFF_PERIOD_US_OFST 8
#define       MC_CMD_RX_STALL_START_IN_OFF_PERIOD_US_LEN 4
/* Periodically re-enable the RX datapath for this period (in microseconds). */
#define       MC_CMD_RX_STALL_START_IN_ON_PERIOD_US_OFST 12
#define       MC_CMD_RX_STALL_START_IN_ON_PERIOD_US_LEN 4
/* Number of times the RX datapath will be disabled before the test completes.
 */
#define       MC_CMD_RX_STALL_START_IN_DISABLE_COUNT_OFST 16
#define       MC_CMD_RX_STALL_START_IN_DISABLE_COUNT_LEN 4
/* If MC scheduling causes the on/off period to overrun by this value, then
 * STOP_OUT.STATUS will be set to ETIME.
 */
#define       MC_CMD_RX_STALL_START_IN_ERROR_US_OFST 20
#define       MC_CMD_RX_STALL_START_IN_ERROR_US_LEN 4
/* Bottom 32bits of the dma address of a dword in host memory. If the test
 * thread reports an error the status will be DMAd into this address. STOP must
 * still be executed.
 */
#define       MC_CMD_RX_STALL_START_IN_STATUS_ADDR_LO_OFST 24
#define       MC_CMD_RX_STALL_START_IN_STATUS_ADDR_LO_LEN 4
/* Top 32bits of the dma address of a dword in host memory. If the test thread
 * reports an error, then the status will be DMAd into this address. STOP must
 * still be executed.
 */
#define       MC_CMD_RX_STALL_START_IN_STATUS_ADDR_HI_OFST 28
#define       MC_CMD_RX_STALL_START_IN_STATUS_ADDR_HI_LEN 4
/* Mask of vfifos to pause/unpaused. Only appropriate when OP=VFIFO */
#define       MC_CMD_RX_STALL_START_IN_VFIFO_MASK_OFST 32
#define       MC_CMD_RX_STALL_START_IN_VFIFO_MASK_LEN 4
/* Mask of priorities on IPI0 whose vfifos must be paused/unpaused. Only
 * appropriate when OP=VFIFO
 */
#define       MC_CMD_RX_STALL_START_IN_IPI0_PRIO_MASK_OFST 36
#define       MC_CMD_RX_STALL_START_IN_IPI0_PRIO_MASK_LEN 4
/* Mask of priorities on IPI1 whose vfifos must be paused/unpaused. Only
 * appropriate when OP=VFIFO
 */
#define       MC_CMD_RX_STALL_START_IN_IPI1_PRIO_MASK_OFST 40
#define       MC_CMD_RX_STALL_START_IN_IPI1_PRIO_MASK_LEN 4
/* Mask of priorities on IPI2 whose vfifos must be paused/unpaused. Only
 * appropriate when OP=VFIFO
 */
#define       MC_CMD_RX_STALL_START_IN_IPI2_PRIO_MASK_OFST 44
#define       MC_CMD_RX_STALL_START_IN_IPI2_PRIO_MASK_LEN 4
/* Mask of priorities on IPI3 whose vfifos must be paused/unpaused. Only
 * appropriate when OP=VFIFO
 */
#define       MC_CMD_RX_STALL_START_IN_IPI3_PRIO_MASK_OFST 48
#define       MC_CMD_RX_STALL_START_IN_IPI3_PRIO_MASK_LEN 4
/* Mask of priorities on IPI4 whose vfifos must be paused/unpaused. Only
 * appropriate when OP=VFIFO
 */
#define       MC_CMD_RX_STALL_START_IN_IPI4_PRIO_MASK_OFST 52
#define       MC_CMD_RX_STALL_START_IN_IPI4_PRIO_MASK_LEN 4

/* MC_CMD_RX_STALL_START_OUT msgresponse */
#define    MC_CMD_RX_STALL_START_OUT_LEN 4
/* pointer to thread structure */
#define       MC_CMD_RX_STALL_START_OUT_THREAD_OFST 0
#define       MC_CMD_RX_STALL_START_OUT_THREAD_LEN 4

/* MC_CMD_RX_STALL_STOP_IN msgrequest */
#define    MC_CMD_RX_STALL_STOP_IN_LEN 8
/* identifies the test */
#define       MC_CMD_RX_STALL_STOP_IN_EFTEST_ID_OFST 0
#define       MC_CMD_RX_STALL_STOP_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_RX_STALL_STOP_IN_EFTEST_OP_OFST 1
#define       MC_CMD_RX_STALL_STOP_IN_EFTEST_OP_LEN 1
/* enum: Stop periodic pausing of the datapath. */
#define          MC_CMD_RX_STALL_STOP_IN_CMD 0x1
/* align the arguments to 32 bits */
#define       MC_CMD_RX_STALL_STOP_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_RX_STALL_STOP_IN_EFTEST_OP_RSVD_LEN 2
/* pointer to thread structure to stop */
#define       MC_CMD_RX_STALL_STOP_IN_THREAD_OFST 4
#define       MC_CMD_RX_STALL_STOP_IN_THREAD_LEN 4

/* MC_CMD_RX_STALL_STOP_OUT msgresponse */
#define    MC_CMD_RX_STALL_STOP_OUT_LEN 8
/* Return code of test thread. */
#define       MC_CMD_RX_STALL_STOP_OUT_STATUS_OFST 0
#define       MC_CMD_RX_STALL_STOP_OUT_STATUS_LEN 4
/* Number of times the RX datapath was stopped during the test. */
#define       MC_CMD_RX_STALL_STOP_OUT_DISABLE_COUNT_OFST 4
#define       MC_CMD_RX_STALL_STOP_OUT_DISABLE_COUNT_LEN 4

/* MC_CMD_PM_IN msgrequest */
#define    MC_CMD_PM_IN_LEN 40
/* identifies the test */
#define       MC_CMD_PM_IN_EFTEST_ID_OFST 0
#define       MC_CMD_PM_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_PM_IN_EFTEST_OP_OFST 1
#define       MC_CMD_PM_IN_EFTEST_OP_LEN 1
/* enum: Enable the specified vfifo */
#define          MC_CMD_PM_IN_VFIFO_ENABLE 0x0
/* enum: Disable the specified vfifo */
#define          MC_CMD_PM_IN_VFIFO_DISABLE 0x1
/* enum: Reserve PM buffers for snapper vfifo */
#define          MC_CMD_PM_IN_RESERVE_BUFFERS 0x2
/* enum: Set MAKE_VFIFO_EMPTY=1 for the specified vfifo */
#define          MC_CMD_PM_IN_MAKE_VFIFO_EMPTY 0x3
/* enum: Set MAKE_VFIFO_EMPTY=0 for the specified vfifo */
#define          MC_CMD_PM_IN_MAKE_VFIFO_NOT_EMPTY 0x4
#define          MC_CMD_PM_IN_FC 0x5 /* enum */
/* enum: Execute pm.unit.link_unlink test */
#define          MC_CMD_PM_IN_TEST_LISTS 0x6
/* enum: Read config for snapper in a single MCDI op */
#define          MC_CMD_PM_IN_READ_CONFIG 0x7
/* enum: Set IPI timing parameters */
#define          MC_CMD_PM_IN_TIMING 0x8
/* enum: Read egress arbiter state */
#define          MC_CMD_PM_IN_READ_ARBITER_STATE 0x9
/* enum: Read state for snapper in a pair of MCDI ops */
#define          MC_CMD_PM_IN_READ_STATE1 0xa
/* enum: Read state for snapper in a pair of MCDI ops */
#define          MC_CMD_PM_IN_READ_STATE2 0xb
/* enum: Reset the PM, in particular the arbiter counters */
#define          MC_CMD_PM_IN_RESET 0xc
/* enum: Configure cut-thru mode */
#define          MC_CMD_PM_IN_CUT_THRU 0xd
/* align the arguments to 32 bits */
#define       MC_CMD_PM_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_PM_IN_EFTEST_OP_RSVD_LEN 2
/* Index of VFIFO to enable/disable */
#define       MC_CMD_PM_IN_VFIFO_INDEX_OFST 4
#define       MC_CMD_PM_IN_VFIFO_INDEX_LEN 4
/* Total number of PM buffers reserved exclusively for snapper vfifos */
#define       MC_CMD_PM_IN_RESERVED_BUFFER_COUNT_OFST 4
#define       MC_CMD_PM_IN_RESERVED_BUFFER_COUNT_LEN 4
/* Bitmask of priorities that should be split into separate vfifos */
#define       MC_CMD_PM_IN_VFIFO_PRIO_MASK_OFST 4
#define       MC_CMD_PM_IN_VFIFO_PRIO_MASK_LEN 4
/* If non-zero then QBB is enabled, if 2 then pause/discard thresholds are too
 * low
 */
#define       MC_CMD_PM_IN_QBB_ENABLED_OFST 8
#define       MC_CMD_PM_IN_QBB_ENABLED_LEN 4
/* Bitmask of priorities that should cause PFC frames to be transmitted and the
 * TXDP backpressured
 */
#define       MC_CMD_PM_IN_PAUSE_QBB_XOFF_MASK_OFST 12
#define       MC_CMD_PM_IN_PAUSE_QBB_XOFF_MASK_LEN 4
/* If non-zero then legacy XOFF frames may be transmitted and the TXDP
 * backpressured.
 */
#define       MC_CMD_PM_IN_PAUSE_LEGACY_XOFF_OFST 12
#define       MC_CMD_PM_IN_PAUSE_LEGACY_XOFF_LEN 4
/* MM arbiter delay for non-IPI sources. See PM docs. */
#define       MC_CMD_PM_IN_ARBITER_DELAY_OFST 4
#define       MC_CMD_PM_IN_ARBITER_DELAY_LEN 4
/* IPI add buffer threshold. See PM docs. */
#define       MC_CMD_PM_IN_ADD_BUFFER_THRESHOLD_OFST 8
#define       MC_CMD_PM_IN_ADD_BUFFER_THRESHOLD_LEN 4
/* IPI discard threshold. See PM docs. */
#define       MC_CMD_PM_IN_DISCARD_THRESHOLD_OFST 12
#define       MC_CMD_PM_IN_DISCARD_THRESHOLD_LEN 4
/* Minimum private pool allowance in Qbb mode. */
#define       MC_CMD_PM_IN_MIN_PRIVATE_POOL_QBB_OFST 16
#define       MC_CMD_PM_IN_MIN_PRIVATE_POOL_QBB_LEN 4
/* Maximum common pool allowance in Qbb mode. */
#define       MC_CMD_PM_IN_MAX_COMMON_POOL_QBB_OFST 20
#define       MC_CMD_PM_IN_MAX_COMMON_POOL_QBB_LEN 4
/* EPI arbiter priority */
#define       MC_CMD_PM_IN_EPI_PRIORITY_OFST 24
#define       MC_CMD_PM_IN_EPI_PRIORITY_LEN 4
/* Enable IPI backpressure */
#define       MC_CMD_PM_IN_BACKPRESSURE_ENABLE_OFST 28
#define       MC_CMD_PM_IN_BACKPRESSURE_ENABLE_LEN 4
/* Enable cut-thru */
#define       MC_CMD_PM_IN_CUT_THRU_ENABLE_OFST 32
#define       MC_CMD_PM_IN_CUT_THRU_ENABLE_LEN 4
/* Force cut-thru */
#define       MC_CMD_PM_IN_CUT_THRU_OVERRIDE_OFST 36
#define       MC_CMD_PM_IN_CUT_THRU_OVERRIDE_LEN 4

/* MC_CMD_PM_OUT msgresponse */
#define    MC_CMD_PM_OUT_LEN 456
#define       MC_CMD_PM_OUT_IPI_0_PRIO2VFIFO_OFST 0
#define       MC_CMD_PM_OUT_IPI_0_PRIO2VFIFO_LEN 4
#define       MC_CMD_PM_OUT_IPI_0_PRIO2VFIFO_NUM 8
#define       MC_CMD_PM_OUT_IPI_1_PRIO2VFIFO_OFST 32
#define       MC_CMD_PM_OUT_IPI_1_PRIO2VFIFO_LEN 4
#define       MC_CMD_PM_OUT_IPI_1_PRIO2VFIFO_NUM 8
#define       MC_CMD_PM_OUT_IPI_2_PRIO2VFIFO_OFST 64
#define       MC_CMD_PM_OUT_IPI_2_PRIO2VFIFO_LEN 4
#define       MC_CMD_PM_OUT_IPI_2_PRIO2VFIFO_NUM 8
#define       MC_CMD_PM_OUT_IPI_3_PRIO2VFIFO_OFST 96
#define       MC_CMD_PM_OUT_IPI_3_PRIO2VFIFO_LEN 4
#define       MC_CMD_PM_OUT_IPI_3_PRIO2VFIFO_NUM 8
#define       MC_CMD_PM_OUT_IPI_4_PRIO2VFIFO_OFST 128
#define       MC_CMD_PM_OUT_IPI_4_PRIO2VFIFO_LEN 4
#define       MC_CMD_PM_OUT_IPI_4_PRIO2VFIFO_NUM 8
#define       MC_CMD_PM_OUT_MM_MINIMUM_PRIVATE_POOL_OFST 160
#define       MC_CMD_PM_OUT_MM_MINIMUM_PRIVATE_POOL_LEN 4
#define       MC_CMD_PM_OUT_MM_MINIMUM_PRIVATE_POOL_NUM 32
#define       MC_CMD_PM_OUT_MM_MAXIMUM_MEMORY_OFST 288
#define       MC_CMD_PM_OUT_MM_MAXIMUM_MEMORY_LEN 4
#define       MC_CMD_PM_OUT_MM_MAXIMUM_MEMORY_NUM 32
#define       MC_CMD_PM_OUT_IPI_0_ADD_BUFFER_THR_OFST 416
#define       MC_CMD_PM_OUT_IPI_0_ADD_BUFFER_THR_LEN 4
#define       MC_CMD_PM_OUT_IPI_1_ADD_BUFFER_THR_OFST 420
#define       MC_CMD_PM_OUT_IPI_1_ADD_BUFFER_THR_LEN 4
#define       MC_CMD_PM_OUT_IPI_2_ADD_BUFFER_THR_OFST 424
#define       MC_CMD_PM_OUT_IPI_2_ADD_BUFFER_THR_LEN 4
#define       MC_CMD_PM_OUT_IPI_3_ADD_BUFFER_THR_OFST 428
#define       MC_CMD_PM_OUT_IPI_3_ADD_BUFFER_THR_LEN 4
#define       MC_CMD_PM_OUT_IPI_4_ADD_BUFFER_THR_OFST 432
#define       MC_CMD_PM_OUT_IPI_4_ADD_BUFFER_THR_LEN 4
#define       MC_CMD_PM_OUT_IPI_0_PKT_DISCARD_THR_OFST 436
#define       MC_CMD_PM_OUT_IPI_0_PKT_DISCARD_THR_LEN 4
#define       MC_CMD_PM_OUT_IPI_1_PKT_DISCARD_THR_OFST 440
#define       MC_CMD_PM_OUT_IPI_1_PKT_DISCARD_THR_LEN 4
#define       MC_CMD_PM_OUT_IPI_2_PKT_DISCARD_THR_OFST 444
#define       MC_CMD_PM_OUT_IPI_2_PKT_DISCARD_THR_LEN 4
#define       MC_CMD_PM_OUT_IPI_3_PKT_DISCARD_THR_OFST 448
#define       MC_CMD_PM_OUT_IPI_3_PKT_DISCARD_THR_LEN 4
#define       MC_CMD_PM_OUT_IPI_4_PKT_DISCARD_THR_OFST 452
#define       MC_CMD_PM_OUT_IPI_4_PKT_DISCARD_THR_LEN 4

/* MC_CMD_PM_STATE1_OUT msgresponse */
#define    MC_CMD_PM_STATE1_OUT_LEN 640
#define       MC_CMD_PM_STATE1_OUT_VFIFO_INGR_STATE_OFST 0
#define       MC_CMD_PM_STATE1_OUT_VFIFO_INGR_STATE_LEN 4
#define       MC_CMD_PM_STATE1_OUT_VFIFO_INGR_STATE_NUM 32
#define       MC_CMD_PM_STATE1_OUT_VFIFO_EGR_STATE_OFST 128
#define       MC_CMD_PM_STATE1_OUT_VFIFO_EGR_STATE_LEN 4
#define       MC_CMD_PM_STATE1_OUT_VFIFO_EGR_STATE_NUM 32
#define       MC_CMD_PM_STATE1_OUT_FC_VFIFO_WORD_CNTR_OFST 256
#define       MC_CMD_PM_STATE1_OUT_FC_VFIFO_WORD_CNTR_LEN 4
#define       MC_CMD_PM_STATE1_OUT_FC_VFIFO_WORD_CNTR_NUM 32
#define       MC_CMD_PM_STATE1_OUT_FC_VFIFO_PKT_CNTR_OFST 384
#define       MC_CMD_PM_STATE1_OUT_FC_VFIFO_PKT_CNTR_LEN 4
#define       MC_CMD_PM_STATE1_OUT_FC_VFIFO_PKT_CNTR_NUM 32
#define       MC_CMD_PM_STATE1_OUT_FC_VFIFO_ST_PKT_CNTR_OFST 512
#define       MC_CMD_PM_STATE1_OUT_FC_VFIFO_ST_PKT_CNTR_LEN 4
#define       MC_CMD_PM_STATE1_OUT_FC_VFIFO_ST_PKT_CNTR_NUM 32

/* MC_CMD_PM_STATE2_OUT msgresponse */
#define    MC_CMD_PM_STATE2_OUT_LEN 772
#define       MC_CMD_PM_STATE2_OUT_MM_BUFFER_OFST 0
#define       MC_CMD_PM_STATE2_OUT_MM_BUFFER_LEN 4
#define       MC_CMD_PM_STATE2_OUT_MM_BUFFER_NUM 128
#define       MC_CMD_PM_STATE2_OUT_MM_LINKED_LIST_OFST 512
#define       MC_CMD_PM_STATE2_OUT_MM_LINKED_LIST_LEN 4
#define       MC_CMD_PM_STATE2_OUT_MM_LINKED_LIST_NUM 65

/* MC_CMD_IRQ_TEST_IN msgrequest */
#define    MC_CMD_IRQ_TEST_IN_LEN 8
/* identifies the test */
#define       MC_CMD_IRQ_TEST_IN_EFTEST_ID_OFST 0
#define       MC_CMD_IRQ_TEST_IN_EFTEST_ID_LEN 1
/* MC IRQ test-specific operation */
#define       MC_CMD_IRQ_TEST_IN_EFTEST_OP_OFST 1
#define       MC_CMD_IRQ_TEST_IN_EFTEST_OP_LEN 1
/* enum: cop0 read write. */
#define          MC_CMD_IRQ_TEST_IN_COP0_READ_WRITE 0x0
/* enum: Shadow REG select */
#define          MC_CMD_IRQ_TEST_IN_SHADOW_REG_SELECT 0x1
/* enum: Wakeup timer. */
#define          MC_CMD_IRQ_TEST_IN_WAKEUP_TIMER 0x2
/* enum: Timer IRQ. */
#define          MC_CMD_IRQ_TEST_IN_TIMER_IRQ 0x3
/* enum: Timer wait. */
#define          MC_CMD_IRQ_TEST_IN_TIMER_WAIT 0x4
/* enum: IRQ disable. */
#define          MC_CMD_IRQ_TEST_IN_IRQ_DISABLE 0x5
/* enum: IRQ branch. */
#define          MC_CMD_IRQ_TEST_IN_IRQ_BRANCH 0x6
/* enum: IRQ HW MSG. */
#define          MC_CMD_IRQ_TEST_IN_IRQ_HWMSG 0x7
/* enum: IRQ Async run. */
#define          MC_CMD_IRQ_TEST_IN_IRQ_ASYNC_RUN 0x8
/* enum: Illegal access. */
#define          MC_CMD_IRQ_TEST_IN_ILLEGAL_ACCESS 0x9
/* enum: Directed test for BUG60657. */
#define          MC_CMD_IRQ_TEST_IN_BUG60657 0xa
/* align the arguments to 32 bits */
#define       MC_CMD_IRQ_TEST_IN_EFTEST_PAD_OFST 2
#define       MC_CMD_IRQ_TEST_IN_EFTEST_PAD_LEN 2
/* operation-specific argument */
#define       MC_CMD_IRQ_TEST_IN_EFTEST_ARG_OFST 4
#define       MC_CMD_IRQ_TEST_IN_EFTEST_ARG_LEN 4

/* MC_CMD_EXPROM_MSG_IN msgrequest */
#define    MC_CMD_EXPROM_MSG_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EXPROM_MSG_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EXPROM_MSG_IN_EFTEST_ID_LEN 1
/* EXPROM test-specific operation */
#define       MC_CMD_EXPROM_MSG_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EXPROM_MSG_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EXPROM_MSG_IN_OPEN_MSG 0x0 /* enum */
#define          MC_CMD_EXPROM_MSG_IN_CLOSE_MSG 0x1 /* enum */
#define          MC_CMD_EXPROM_MSG_IN_POLL_MSG 0x2 /* enum */
#define          MC_CMD_EXPROM_MSG_IN_SETA_MSG 0x3 /* enum */
#define          MC_CMD_EXPROM_MSG_IN_SETI_MSG 0x4 /* enum */
#define          MC_CMD_EXPROM_MSG_IN_SETP_MSG 0x5 /* enum */
/* align the next field to 32 bits */
#define       MC_CMD_EXPROM_MSG_IN_PAD_OFST 2
#define       MC_CMD_EXPROM_MSG_IN_PAD_LEN 2
/* This is the first parameter */
#define       MC_CMD_EXPROM_MSG_IN_PARAMETER_ONE_OFST 4
#define       MC_CMD_EXPROM_MSG_IN_PARAMETER_ONE_LEN 4

/* MC_CMD_EXPROM_MSG_OUT msgresponse: indexed by enum_packet_test_rc */
#define    MC_CMD_EXPROM_MSG_OUT_LENMIN 4
#define    MC_CMD_EXPROM_MSG_OUT_LENMAX 252
#define    MC_CMD_EXPROM_MSG_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_EXPROM_MSG_OUT_LEN(num) (0+4*(num))
#define    MC_CMD_EXPROM_MSG_OUT_TEST_RESULTS_NUM(len) (((len)-0)/4)
#define       MC_CMD_EXPROM_MSG_OUT_TEST_RESULTS_OFST 0
#define       MC_CMD_EXPROM_MSG_OUT_TEST_RESULTS_LEN 4
#define       MC_CMD_EXPROM_MSG_OUT_TEST_RESULTS_MINNUM 1
#define       MC_CMD_EXPROM_MSG_OUT_TEST_RESULTS_MAXNUM 63
#define       MC_CMD_EXPROM_MSG_OUT_TEST_RESULTS_MAXNUM_MCDI2 255

/* MC_CMD_PDMA_TEST_IN msgrequest */
#define    MC_CMD_PDMA_TEST_IN_LENMIN 8
#define    MC_CMD_PDMA_TEST_IN_LENMAX 252
#define    MC_CMD_PDMA_TEST_IN_LENMAX_MCDI2 1020
#define    MC_CMD_PDMA_TEST_IN_LEN(num) (4+4*(num))
#define    MC_CMD_PDMA_TEST_IN_TEST_VARIANTS_NUM(len) (((len)-4)/4)
/* identifies the test */
#define       MC_CMD_PDMA_TEST_IN_EFTEST_ID_OFST 0
#define       MC_CMD_PDMA_TEST_IN_EFTEST_ID_LEN 1
/* PDMA test-specific operation */
#define       MC_CMD_PDMA_TEST_IN_EFTEST_OP_OFST 1
#define       MC_CMD_PDMA_TEST_IN_EFTEST_OP_LEN 1
#define          MC_CMD_PDMA_TEST_IN_GET_STATE 0x0 /* enum */
#define          MC_CMD_PDMA_TEST_IN_MEMTEST 0x1 /* enum */
#define          MC_CMD_PDMA_TEST_IN_BUFCONF 0x2 /* enum */
#define          MC_CMD_PDMA_TEST_IN_LOOPINIT 0x3 /* enum */
#define          MC_CMD_PDMA_TEST_IN_LOOPBACK 0x4 /* enum */
#define          MC_CMD_PDMA_TEST_IN_LISTEN 0x5 /* enum */
#define          MC_CMD_PDMA_TEST_IN_CLEANUP 0x6 /* enum */
#define          MC_CMD_PDMA_TEST_IN_RECEIVEINIT 0x7 /* enum */
#define          MC_CMD_PDMA_TEST_IN_RECEIVEEXEC 0x8 /* enum */
#define          MC_CMD_PDMA_TEST_IN_TXDRAIN 0x9 /* enum */
#define          MC_CMD_PDMA_TEST_IN_INTERLEAVE 0xa /* enum */
/* align the next field to 32 bits */
#define       MC_CMD_PDMA_TEST_IN_PAD_OFST 2
#define       MC_CMD_PDMA_TEST_IN_PAD_LEN 2
/* indexed by enum pdma_test_variant */
#define       MC_CMD_PDMA_TEST_IN_TEST_VARIANTS_OFST 4
#define       MC_CMD_PDMA_TEST_IN_TEST_VARIANTS_LEN 4
#define       MC_CMD_PDMA_TEST_IN_TEST_VARIANTS_MINNUM 1
#define       MC_CMD_PDMA_TEST_IN_TEST_VARIANTS_MAXNUM 62
#define       MC_CMD_PDMA_TEST_IN_TEST_VARIANTS_MAXNUM_MCDI2 254

/* MC_CMD_PDMA_TEST_OUT msgresponse: indexed by enum_packet_test_rc */
#define    MC_CMD_PDMA_TEST_OUT_LENMIN 4
#define    MC_CMD_PDMA_TEST_OUT_LENMAX 252
#define    MC_CMD_PDMA_TEST_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_PDMA_TEST_OUT_LEN(num) (0+4*(num))
#define    MC_CMD_PDMA_TEST_OUT_TEST_RESULTS_NUM(len) (((len)-0)/4)
#define       MC_CMD_PDMA_TEST_OUT_TEST_RESULTS_OFST 0
#define       MC_CMD_PDMA_TEST_OUT_TEST_RESULTS_LEN 4
#define       MC_CMD_PDMA_TEST_OUT_TEST_RESULTS_MINNUM 1
#define       MC_CMD_PDMA_TEST_OUT_TEST_RESULTS_MAXNUM 63
#define       MC_CMD_PDMA_TEST_OUT_TEST_RESULTS_MAXNUM_MCDI2 255

/* MC_CMD_MACSEC_TEST_IN msgrequest */
#define    MC_CMD_MACSEC_TEST_IN_LENMIN 8
#define    MC_CMD_MACSEC_TEST_IN_LENMAX 252
#define    MC_CMD_MACSEC_TEST_IN_LENMAX_MCDI2 1020
#define    MC_CMD_MACSEC_TEST_IN_LEN(num) (4+4*(num))
#define    MC_CMD_MACSEC_TEST_IN_TEST_VARIANTS_NUM(len) (((len)-4)/4)
/* identifies the test */
#define       MC_CMD_MACSEC_TEST_IN_EFTEST_ID_OFST 0
#define       MC_CMD_MACSEC_TEST_IN_EFTEST_ID_LEN 1
/* MACSEC test-specific operation */
#define       MC_CMD_MACSEC_TEST_IN_EFTEST_OP_OFST 1
#define       MC_CMD_MACSEC_TEST_IN_EFTEST_OP_LEN 1
#define          MC_CMD_MACSEC_TEST_IN_BYPASS_EXTERNAL_TX 0x0 /* enum */
#define          MC_CMD_MACSEC_TEST_IN_BYPASS_INTERNAL_TX 0x1 /* enum */
#define          MC_CMD_MACSEC_TEST_IN_BYPASS_EXTERNAL_RX 0x2 /* enum */
#define          MC_CMD_MACSEC_TEST_IN_BYPASS_INTERNAL_RX 0x3 /* enum */
#define          MC_CMD_MACSEC_TEST_IN_READ_INTERRUPT_BITS 0x4 /* enum */
#define       MC_CMD_MACSEC_TEST_IN_PORT_LBN 16
#define       MC_CMD_MACSEC_TEST_IN_PORT_WIDTH 1
#define       MC_CMD_MACSEC_TEST_IN_ONOFF_LBN 17
#define       MC_CMD_MACSEC_TEST_IN_ONOFF_WIDTH 1
/* align the next field to 32 bits */
#define       MC_CMD_MACSEC_TEST_IN_PAD_LBN 18
#define       MC_CMD_MACSEC_TEST_IN_PAD_WIDTH 14
/* indexed by enum pdma_test_variant */
#define       MC_CMD_MACSEC_TEST_IN_TEST_VARIANTS_OFST 4
#define       MC_CMD_MACSEC_TEST_IN_TEST_VARIANTS_LEN 4
#define       MC_CMD_MACSEC_TEST_IN_TEST_VARIANTS_MINNUM 1
#define       MC_CMD_MACSEC_TEST_IN_TEST_VARIANTS_MAXNUM 62
#define       MC_CMD_MACSEC_TEST_IN_TEST_VARIANTS_MAXNUM_MCDI2 254

/* MC_CMD_MACSEC_TEST_OUT msgresponse: indexed by enum_packet_test_rc */
#define    MC_CMD_MACSEC_TEST_OUT_LENMIN 4
#define    MC_CMD_MACSEC_TEST_OUT_LENMAX 252
#define    MC_CMD_MACSEC_TEST_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_MACSEC_TEST_OUT_LEN(num) (0+4*(num))
#define    MC_CMD_MACSEC_TEST_OUT_TEST_RESULTS_NUM(len) (((len)-0)/4)
#define       MC_CMD_MACSEC_TEST_OUT_TEST_RESULTS_OFST 0
#define       MC_CMD_MACSEC_TEST_OUT_TEST_RESULTS_LEN 4
#define       MC_CMD_MACSEC_TEST_OUT_TEST_RESULTS_MINNUM 1
#define       MC_CMD_MACSEC_TEST_OUT_TEST_RESULTS_MAXNUM 63
#define       MC_CMD_MACSEC_TEST_OUT_TEST_RESULTS_MAXNUM_MCDI2 255

/* MC_CMD_FILTER_ALLOC_IN msgrequest */
#define    MC_CMD_FILTER_ALLOC_IN_LEN 92
/* identifies the test */
#define       MC_CMD_FILTER_ALLOC_IN_EFTEST_ID_OFST 0
#define       MC_CMD_FILTER_ALLOC_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_FILTER_ALLOC_IN_EFEST_OP_OFST 1
#define       MC_CMD_FILTER_ALLOC_IN_EFEST_OP_LEN 1
/* enum: Allocate the first available rule of the specified type */
#define          MC_CMD_FILTER_ALLOC_IN_ALLOC 0x0
/* enum: Allocate a specific rule id if available */
#define          MC_CMD_FILTER_ALLOC_IN_ALLOC_ID 0x1
/* enum: Check whether a rule is allocated */
#define          MC_CMD_FILTER_ALLOC_IN_IS_ALLOCATED 0x2
/* enum: Free an allocation rule */
#define          MC_CMD_FILTER_ALLOC_IN_FREE 0x3
/* enum: Lock all filter rules */
#define          MC_CMD_FILTER_ALLOC_IN_EXCLUSIVE_LOCK 0x4
/* enum: Free exclusive lock */
#define          MC_CMD_FILTER_ALLOC_IN_EXCLUSIVE_FREE 0x5
/* enum: Free all rules allocated by the firmware */
#define          MC_CMD_FILTER_ALLOC_IN__FREE_FW_ALLOCATED 0x6
/* align the arguments to 32 bits */
#define       MC_CMD_FILTER_ALLOC_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_FILTER_ALLOC_IN_EFTEST_OP_RSVD_LEN 2
/* The requested port */
#define       MC_CMD_FILTER_ALLOC_IN_PORT_OFST 4
#define       MC_CMD_FILTER_ALLOC_IN_PORT_LEN 4
/* enum: LAN0 */
#define          MC_CMD_FILTER_ALLOC_IN_PORT0 0x0
/* enum: LAN1 */
#define          MC_CMD_FILTER_ALLOC_IN_PORT1 0x1
/* enum: NCSI */
#define          MC_CMD_FILTER_ALLOC_IN_NCSI 0x2
/* enum: RXDP (for the calling function) */
#define          MC_CMD_FILTER_ALLOC_IN_RXDP 0x3
/* enum: LAN2 (Medford only) */
#define          MC_CMD_FILTER_ALLOC_IN_PORT2 0x4
/* enum: LAN3 (Medford only) */
#define          MC_CMD_FILTER_ALLOC_IN_PORT3 0x5
/* enum: MCTP (Medford only, reserved, purpose TBD) */
#define          MC_CMD_FILTER_ALLOC_IN_MCTP 0x6
/* enum: RXDP0 */
#define          MC_CMD_FILTER_ALLOC_IN_RXDP0 0x7
/* enum: RXDP1 (Medford only) */
#define          MC_CMD_FILTER_ALLOC_IN_RXDP1 0x8
/* The requested rule id (for OP==ALLOC_ID) */
#define       MC_CMD_FILTER_ALLOC_IN_RULE_ID_OFST 8
#define       MC_CMD_FILTER_ALLOC_IN_RULE_ID_LEN 4
/* The filter type (for OP==ALLOC || OP==ALLOC_ID) */
#define       MC_CMD_FILTER_ALLOC_IN_TYPE_OFST 12
#define       MC_CMD_FILTER_ALLOC_IN_TYPE_LEN 4
/* enum: FILTER_TYPE_STRUCTURED */
#define          MC_CMD_FILTER_ALLOC_IN_FILTER_TYPE_STRUCTURED 0x0
/* enum: FILTER_TYPE_MAC_VLAN */
#define          MC_CMD_FILTER_ALLOC_IN_FILTER_TYPE_MAC_VLAN 0x1
/* enum: FILTER_TYPE_MULTICAST_VLAN */
#define          MC_CMD_FILTER_ALLOC_IN_FILTER_TYPE_MULTICAST_VLAN 0x2
/* enum: FILTER_TYPE_PROMISCUOUS */
#define          MC_CMD_FILTER_ALLOC_IN_FILTER_TYPE_PROMISCUOUS 0x10
/* enum: FILTER_TYPE_SRC_MAC */
#define          MC_CMD_FILTER_ALLOC_IN_FILTER_TYPE_SRC_MAC 0x12
/* enum: FILTER_TYPE_DST_MAC */
#define          MC_CMD_FILTER_ALLOC_IN_FILTER_TYPE_DST_MAC 0x13
/* enum: FILTER_TYPE_BROADCAST */
#define          MC_CMD_FILTER_ALLOC_IN_FILTER_TYPE_BROADCAST 0x14
/* enum: FILTER_TYPE_MULTICAST */
#define          MC_CMD_FILTER_ALLOC_IN_FILTER_TYPE_MULTICAST 0x15
/* Destination to which all received packets should be sent (for OP==ALLOC ||
 * OP==ALLOC_ID || OP==EXCLUSIVE_LOCK)
 */
#define       MC_CMD_FILTER_ALLOC_IN_ECHO_PORT_OFST 16
#define       MC_CMD_FILTER_ALLOC_IN_ECHO_PORT_LEN 4
/* enum: source */
#define          MC_CMD_FILTER_ALLOC_IN_SRC 0x10
/* enum: none */
#define          MC_CMD_FILTER_ALLOC_IN_NONE -0x1
/*            Other enum values, see field(s): */
/*               MC_CMD_FILTER_ALLOC_IN/PORT */
/* Destination to which all received packets should be sent (for OP==ALLOC ||
 * OP==ALLOC_ID || OP==EXCLUSIVE_LOCK)
 */
#define       MC_CMD_FILTER_ALLOC_IN_ECHO_MACADDR_OFST 20
#define       MC_CMD_FILTER_ALLOC_IN_ECHO_MACADDR_LEN 6
#define       MC_CMD_FILTER_ALLOC_IN_ECHO_SRC_OFST 26
#define       MC_CMD_FILTER_ALLOC_IN_ECHO_SRC_LEN 1
/* enum: RX0 */
#define          MC_CMD_FILTER_ALLOC_IN_SRC_RX0 0x0
/* enum: RX1 */
#define          MC_CMD_FILTER_ALLOC_IN_SRC_RX1 0x1
/* enum: RX2 */
#define          MC_CMD_FILTER_ALLOC_IN_SRC_RX2 0x2
/* enum: RX3 */
#define          MC_CMD_FILTER_ALLOC_IN_SRC_RX3 0x3
/* enum: RX0_MC (Huntington only) */
#define          MC_CMD_FILTER_ALLOC_IN_SRC_RX0_MC 0x4
/* enum: RX1_MC (Huntington only) */
#define          MC_CMD_FILTER_ALLOC_IN_SRC_RX1_MC 0x5
/* enum: RX2_MC (Huntington only) */
#define          MC_CMD_FILTER_ALLOC_IN_SRC_RX2_MC 0x6
/* enum: RX3_MC (Huntington only) */
#define          MC_CMD_FILTER_ALLOC_IN_SRC_RX3_MC 0x7
/* enum: TX0 */
#define          MC_CMD_FILTER_ALLOC_IN_SRC_TX0 0x8
/* enum: TX1 */
#define          MC_CMD_FILTER_ALLOC_IN_SRC_TX1 0x9
/* enum: TX2 (Huntington only) */
#define          MC_CMD_FILTER_ALLOC_IN_SRC_TX2 0xa
/* enum: TX3 (Huntington only) */
#define          MC_CMD_FILTER_ALLOC_IN_SRC_TX3 0xb
/* enum: MC_VTBL0 (Huntington only) */
#define          MC_CMD_FILTER_ALLOC_IN_SRC_MC_VTBL0 0xe
/* enum: MC_VTBL1 (Huntington only) */
#define          MC_CMD_FILTER_ALLOC_IN_SRC_MC_VTBL1 0xf
/* enum: Leave the value as received */
#define          MC_CMD_FILTER_ALLOC_IN_SRC_SRC 0x10
/* enum: Translate 0/1/2/3 to 4/5/6/7 (Huntington) / 28/29/30/31 (Medford) */
#define          MC_CMD_FILTER_ALLOC_IN_SRC_FWD 0x11
/* enum: TX0_ALT0 (Medford only) */
#define          MC_CMD_FILTER_ALLOC_IN_SRC_TX0_ALT0 0x15
/* enum: TX0_ALT1 (Medford only) */
#define          MC_CMD_FILTER_ALLOC_IN_SRC_TX0_ALT1 0x16
/* enum: TX0_ALT2 (Medford only) */
#define          MC_CMD_FILTER_ALLOC_IN_SRC_TX0_ALT2 0x17
/* enum: TX1_ALT0 (Medford only) */
#define          MC_CMD_FILTER_ALLOC_IN_SRC_TX1_ALT0 0x19
/* enum: TX1_ALT1 (Medford only) */
#define          MC_CMD_FILTER_ALLOC_IN_SRC_TX1_ALT1 0x1a
/* enum: TX1_ALT2 (Medford only) */
#define          MC_CMD_FILTER_ALLOC_IN_SRC_TX1_ALT2 0x1b
/* enum: MC (Medford only) */
#define          MC_CMD_FILTER_ALLOC_IN_SRC_MC 0x1c
/* enum: MC_ALT0 (Medford only) */
#define          MC_CMD_FILTER_ALLOC_IN_SRC_MC_ALT0 0x1d
/* enum: MC_ALT1 (Medford only) */
#define          MC_CMD_FILTER_ALLOC_IN_SRC_MC_ALT1 0x1e
/* enum: MC_ALT2 (Medford only) */
#define          MC_CMD_FILTER_ALLOC_IN_SRC_MC_ALT2 0x1f
/* alignment */
#define       MC_CMD_FILTER_ALLOC_IN_ECHO_MACADDR_RSVD_OFST 27
#define       MC_CMD_FILTER_ALLOC_IN_ECHO_MACADDR_RSVD_LEN 1
/* Number of expected destination mac addresses (for OP==ALLOC || OP==ALLOC_ID
 * || OP==EXCLUSIVE_LOCK)
 */
#define       MC_CMD_FILTER_ALLOC_IN_EXP_DST_MACADDR_COUNT_OFST 28
#define       MC_CMD_FILTER_ALLOC_IN_EXP_DST_MACADDR_COUNT_LEN 4
/* Expected destination mac address 0 (for OP==ALLOC || OP==ALLOC_ID ||
 * OP==EXCLUSIVE_LOCK)
 */
#define       MC_CMD_FILTER_ALLOC_IN_EXP_DST_MACADDR0_OFST 32
#define       MC_CMD_FILTER_ALLOC_IN_EXP_DST_MACADDR0_LEN 6
/* Expected destination mac address 1 (for OP==ALLOC || OP==ALLOC_ID ||
 * OP==EXCLUSIVE_LOCK)
 */
#define       MC_CMD_FILTER_ALLOC_IN_EXP_DST_MACADDR1_OFST 38
#define       MC_CMD_FILTER_ALLOC_IN_EXP_DST_MACADDR1_LEN 6
/* Expected destination mac address 2 (for OP==ALLOC || OP==ALLOC_ID ||
 * OP==EXCLUSIVE_LOCK)
 */
#define       MC_CMD_FILTER_ALLOC_IN_EXP_DST_MACADDR2_OFST 44
#define       MC_CMD_FILTER_ALLOC_IN_EXP_DST_MACADDR2_LEN 6
/* Expected destination mac address 3 (for OP==ALLOC || OP==ALLOC_ID ||
 * OP==EXCLUSIVE_LOCK)
 */
#define       MC_CMD_FILTER_ALLOC_IN_EXP_DST_MACADDR3_OFST 50
#define       MC_CMD_FILTER_ALLOC_IN_EXP_DST_MACADDR3_LEN 6
/* Number of expected source mac addresses (for OP==ALLOC || OP==ALLOC_ID ||
 * OP==EXCLUSIVE_LOCK)
 */
#define       MC_CMD_FILTER_ALLOC_IN_EXP_SRC_MACADDR_COUNT_OFST 56
#define       MC_CMD_FILTER_ALLOC_IN_EXP_SRC_MACADDR_COUNT_LEN 4
/* Expected source mac address 0 (for OP==ALLOC || OP==ALLOC_ID ||
 * OP==EXCLUSIVE_LOCK)
 */
#define       MC_CMD_FILTER_ALLOC_IN_EXP_SRC_MACADDR0_OFST 60
#define       MC_CMD_FILTER_ALLOC_IN_EXP_SRC_MACADDR0_LEN 6
/* Expected source mac address 1 (for OP==ALLOC || OP==ALLOC_ID ||
 * OP==EXCLUSIVE_LOCK)
 */
#define       MC_CMD_FILTER_ALLOC_IN_EXP_SRC_MACADDR1_OFST 66
#define       MC_CMD_FILTER_ALLOC_IN_EXP_SRC_MACADDR1_LEN 6
/* Expected source mac address 2 (for OP==ALLOC || OP==ALLOC_ID ||
 * OP==EXCLUSIVE_LOCK)
 */
#define       MC_CMD_FILTER_ALLOC_IN_EXP_SRC_MACADDR2_OFST 72
#define       MC_CMD_FILTER_ALLOC_IN_EXP_SRC_MACADDR2_LEN 6
/* Expected source mac address 3 (for OP==ALLOC || OP==ALLOC_ID ||
 * OP==EXCLUSIVE_LOCK)
 */
#define       MC_CMD_FILTER_ALLOC_IN_EXP_SRC_MACADDR3_OFST 78
#define       MC_CMD_FILTER_ALLOC_IN_EXP_SRC_MACADDR3_LEN 6
/* Expected filter info (for OP==ALLOC || OP==ALLOC_ID || OP==EXCLUSIVE_LOCK)
 */
#define       MC_CMD_FILTER_ALLOC_IN_EXP_FLTR_OFST 84
#define       MC_CMD_FILTER_ALLOC_IN_EXP_FLTR_LEN 2
/* enum: Set the EXP_FLTR value automatically */
#define          MC_CMD_FILTER_ALLOC_IN_EXP_FLTR_AUTO 0x400
/* alignment */
#define       MC_CMD_FILTER_ALLOC_IN_EXP_FLTR_RSVD_OFST 86
#define       MC_CMD_FILTER_ALLOC_IN_EXP_FLTR_RSVD_LEN 2
#define       MC_CMD_FILTER_ALLOC_IN_EXP_FLAGS_OFST 88
#define       MC_CMD_FILTER_ALLOC_IN_EXP_FLAGS_LEN 4
#define        MC_CMD_FILTER_ALLOC_IN_FLAG_DST_MACADDR_MATCH_OFST 88
#define        MC_CMD_FILTER_ALLOC_IN_FLAG_DST_MACADDR_MATCH_LBN 0
#define        MC_CMD_FILTER_ALLOC_IN_FLAG_DST_MACADDR_MATCH_WIDTH 1
#define        MC_CMD_FILTER_ALLOC_IN_FLAG_SRC_MACADDR_MATCH_OFST 88
#define        MC_CMD_FILTER_ALLOC_IN_FLAG_SRC_MACADDR_MATCH_LBN 1
#define        MC_CMD_FILTER_ALLOC_IN_FLAG_SRC_MACADDR_MATCH_WIDTH 1
#define        MC_CMD_FILTER_ALLOC_IN_FLAG_FLTR_MATCH_EXACT_OFST 88
#define        MC_CMD_FILTER_ALLOC_IN_FLAG_FLTR_MATCH_EXACT_LBN 2
#define        MC_CMD_FILTER_ALLOC_IN_FLAG_FLTR_MATCH_EXACT_WIDTH 1
#define        MC_CMD_FILTER_ALLOC_IN_FLAG_FLTR_MATCH_ALL_OFST 88
#define        MC_CMD_FILTER_ALLOC_IN_FLAG_FLTR_MATCH_ALL_LBN 3
#define        MC_CMD_FILTER_ALLOC_IN_FLAG_FLTR_MATCH_ALL_WIDTH 1
#define        MC_CMD_FILTER_ALLOC_IN_DROP_DST_MACADDR_MATCH_OFST 88
#define        MC_CMD_FILTER_ALLOC_IN_DROP_DST_MACADDR_MATCH_LBN 4
#define        MC_CMD_FILTER_ALLOC_IN_DROP_DST_MACADDR_MATCH_WIDTH 1
#define        MC_CMD_FILTER_ALLOC_IN_DROP_SRC_MACADDR_MATCH_OFST 88
#define        MC_CMD_FILTER_ALLOC_IN_DROP_SRC_MACADDR_MATCH_LBN 5
#define        MC_CMD_FILTER_ALLOC_IN_DROP_SRC_MACADDR_MATCH_WIDTH 1
#define        MC_CMD_FILTER_ALLOC_IN_DROP_FLTR_MATCH_EXACT_OFST 88
#define        MC_CMD_FILTER_ALLOC_IN_DROP_FLTR_MATCH_EXACT_LBN 6
#define        MC_CMD_FILTER_ALLOC_IN_DROP_FLTR_MATCH_EXACT_WIDTH 1
#define        MC_CMD_FILTER_ALLOC_IN_DROP_FLTR_MATCH_ALL_OFST 88
#define        MC_CMD_FILTER_ALLOC_IN_DROP_FLTR_MATCH_ALL_LBN 7
#define        MC_CMD_FILTER_ALLOC_IN_DROP_FLTR_MATCH_ALL_WIDTH 1
#define        MC_CMD_FILTER_ALLOC_IN_CNTXT_OFST 88
#define        MC_CMD_FILTER_ALLOC_IN_CNTXT_LBN 8
#define        MC_CMD_FILTER_ALLOC_IN_CNTXT_WIDTH 4
#define          MC_CMD_FILTER_ALLOC_IN_ZERO 0x0 /* enum */
/* enum: Filter bits from the MAC filters (Huntington only). */
#define          MC_CMD_FILTER_ALLOC_IN_FLTR 0x1
#define          MC_CMD_FILTER_ALLOC_IN_FINFO_SRC_DST 0x2 /* enum */
/* enum: (Medford only) */
#define          MC_CMD_FILTER_ALLOC_IN_FINFO_WRD1 0x3
/* enum: (Medford only) */
#define          MC_CMD_FILTER_ALLOC_IN_FINFO_WRD2 0x4
#define          MC_CMD_FILTER_ALLOC_IN_FINFO_WRD3 0x5 /* enum */
/* enum: (Huntington only) */
#define          MC_CMD_FILTER_ALLOC_IN_TS_LO 0x6
/* enum: (Huntington only) */
#define          MC_CMD_FILTER_ALLOC_IN_TS_MD 0x7
/* enum: (Huntington only) */
#define          MC_CMD_FILTER_ALLOC_IN_TS_HI 0x8

/* MC_CMD_FILTER_ALLOC_OUT msgresponse */
#define    MC_CMD_FILTER_ALLOC_OUT_LEN 4
/* The allocated rule_id. negative means failure (for OP==ALLOC || OP==ALLOC_ID
 * || OP==EXCLUSIVE_LOCK)
 */
#define       MC_CMD_FILTER_ALLOC_OUT_RULE_ID_OFST 0
#define       MC_CMD_FILTER_ALLOC_OUT_RULE_ID_LEN 4
/* Non-zero means allocated (for OP==IS_ALLOCATED) */
#define       MC_CMD_FILTER_ALLOC_OUT_ALLOCATED_OFST 0
#define       MC_CMD_FILTER_ALLOC_OUT_ALLOCATED_LEN 4

/* MC_CMD_FILTER_SET_MATCH_EXACT_IN msgrequest */
#define    MC_CMD_FILTER_SET_MATCH_EXACT_IN_LEN 16
/* identifies the test */
#define       MC_CMD_FILTER_SET_MATCH_EXACT_IN_EFTEST_ID_OFST 0
#define       MC_CMD_FILTER_SET_MATCH_EXACT_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_FILTER_SET_MATCH_EXACT_IN_EFEST_OP_OFST 1
#define       MC_CMD_FILTER_SET_MATCH_EXACT_IN_EFEST_OP_LEN 1
/* enum: Set a mac/vlan filter */
#define          MC_CMD_FILTER_SET_MATCH_EXACT_IN_SET_MATCH_EXACT 0x7
/* align the arguments to 32 bits */
#define       MC_CMD_FILTER_SET_MATCH_EXACT_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_FILTER_SET_MATCH_EXACT_IN_EFTEST_OP_RSVD_LEN 2
/* The requested port */
#define       MC_CMD_FILTER_SET_MATCH_EXACT_IN_PORT_OFST 4
#define       MC_CMD_FILTER_SET_MATCH_EXACT_IN_PORT_LEN 4
/* The requested filter id */
#define       MC_CMD_FILTER_SET_MATCH_EXACT_IN_RULE_ID_OFST 8
#define       MC_CMD_FILTER_SET_MATCH_EXACT_IN_RULE_ID_LEN 4
/* Exact match */
#define       MC_CMD_FILTER_SET_MATCH_EXACT_IN_EXACT_OFST 12
#define       MC_CMD_FILTER_SET_MATCH_EXACT_IN_EXACT_LEN 4

/* MC_CMD_FILTER_SET_MATCH_EXACT_OUT msgresponse */
#define    MC_CMD_FILTER_SET_MATCH_EXACT_OUT_LEN 4
/* Non-zero means failure */
#define       MC_CMD_FILTER_SET_MATCH_EXACT_OUT_STATUS_OFST 0
#define       MC_CMD_FILTER_SET_MATCH_EXACT_OUT_STATUS_LEN 4

/* MC_CMD_FILTER_SET_STRUCTURED_IN msgrequest */
#define    MC_CMD_FILTER_SET_STRUCTURED_IN_LEN 332
/* identifies the test */
#define       MC_CMD_FILTER_SET_STRUCTURED_IN_EFTEST_ID_OFST 0
#define       MC_CMD_FILTER_SET_STRUCTURED_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_FILTER_SET_STRUCTURED_IN_EFEST_OP_OFST 1
#define       MC_CMD_FILTER_SET_STRUCTURED_IN_EFEST_OP_LEN 1
/* enum: Set a structured filter */
#define          MC_CMD_FILTER_SET_STRUCTURED_IN_SET_STRUCTURED 0x8
/* align the arguments to 32 bits */
#define       MC_CMD_FILTER_SET_STRUCTURED_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_FILTER_SET_STRUCTURED_IN_EFTEST_OP_RSVD_LEN 2
/* The requested port */
#define       MC_CMD_FILTER_SET_STRUCTURED_IN_PORT_OFST 4
#define       MC_CMD_FILTER_SET_STRUCTURED_IN_PORT_LEN 4
/* The requested filter id */
#define       MC_CMD_FILTER_SET_STRUCTURED_IN_RULE_ID_OFST 8
#define       MC_CMD_FILTER_SET_STRUCTURED_IN_RULE_ID_LEN 4
/* mode */
#define       MC_CMD_FILTER_SET_STRUCTURED_IN_MODE_OFST 12
#define       MC_CMD_FILTER_SET_STRUCTURED_IN_MODE_LEN 4
/* enum: Simple */
#define          MC_CMD_FILTER_SET_STRUCTURED_IN_MODE_SIMPLE 0x0
/* enum: Layered */
#define          MC_CMD_FILTER_SET_STRUCTURED_IN_MODE_LAYERED 0x1
/* l2_ofst */
#define       MC_CMD_FILTER_SET_STRUCTURED_IN_L2_OFST_OFST 16
#define       MC_CMD_FILTER_SET_STRUCTURED_IN_L2_OFST_LEN 2
/* l2_size */
#define       MC_CMD_FILTER_SET_STRUCTURED_IN_L2_SIZE_OFST 18
#define       MC_CMD_FILTER_SET_STRUCTURED_IN_L2_SIZE_LEN 2
/* l2_MASK */
#define       MC_CMD_FILTER_SET_STRUCTURED_IN_L2_MASK_OFST 20
#define       MC_CMD_FILTER_SET_STRUCTURED_IN_L2_MASK_LEN 16
/* l3_ofst */
#define       MC_CMD_FILTER_SET_STRUCTURED_IN_L3_OFST_OFST 36
#define       MC_CMD_FILTER_SET_STRUCTURED_IN_L3_OFST_LEN 2
/* l3_size */
#define       MC_CMD_FILTER_SET_STRUCTURED_IN_L3_SIZE_OFST 38
#define       MC_CMD_FILTER_SET_STRUCTURED_IN_L3_SIZE_LEN 2
/* l3_MASK */
#define       MC_CMD_FILTER_SET_STRUCTURED_IN_L3_MASK_OFST 40
#define       MC_CMD_FILTER_SET_STRUCTURED_IN_L3_MASK_LEN 16
/* l4_ofst */
#define       MC_CMD_FILTER_SET_STRUCTURED_IN_L4_OFST_OFST 56
#define       MC_CMD_FILTER_SET_STRUCTURED_IN_L4_OFST_LEN 2
/* l4_size */
#define       MC_CMD_FILTER_SET_STRUCTURED_IN_L4_SIZE_OFST 58
#define       MC_CMD_FILTER_SET_STRUCTURED_IN_L4_SIZE_LEN 2
/* l4_MASK */
#define       MC_CMD_FILTER_SET_STRUCTURED_IN_L4_MASK_OFST 60
#define       MC_CMD_FILTER_SET_STRUCTURED_IN_L4_MASK_LEN 16
/* vals */
#define       MC_CMD_FILTER_SET_STRUCTURED_IN_VALS_OFST 76
#define       MC_CMD_FILTER_SET_STRUCTURED_IN_VALS_LEN 256

/* MC_CMD_FILTER_SET_STRUCTURED_OUT msgresponse */
#define    MC_CMD_FILTER_SET_STRUCTURED_OUT_LEN 4
/* Non-zero means failure */
#define       MC_CMD_FILTER_SET_STRUCTURED_OUT_STATUS_OFST 0
#define       MC_CMD_FILTER_SET_STRUCTURED_OUT_STATUS_LEN 4

/* MC_CMD_FILTER_SET_MAC_VLAN_IN msgrequest */
#define    MC_CMD_FILTER_SET_MAC_VLAN_IN_LEN 26
/* identifies the test */
#define       MC_CMD_FILTER_SET_MAC_VLAN_IN_EFTEST_ID_OFST 0
#define       MC_CMD_FILTER_SET_MAC_VLAN_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_FILTER_SET_MAC_VLAN_IN_EFEST_OP_OFST 1
#define       MC_CMD_FILTER_SET_MAC_VLAN_IN_EFEST_OP_LEN 1
/* enum: Set a mac/vlan filter */
#define          MC_CMD_FILTER_SET_MAC_VLAN_IN_SET_MAC_VLAN 0x9
/* align the arguments to 32 bits */
#define       MC_CMD_FILTER_SET_MAC_VLAN_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_FILTER_SET_MAC_VLAN_IN_EFTEST_OP_RSVD_LEN 2
/* The requested port */
#define       MC_CMD_FILTER_SET_MAC_VLAN_IN_PORT_OFST 4
#define       MC_CMD_FILTER_SET_MAC_VLAN_IN_PORT_LEN 4
/* The requested filter id */
#define       MC_CMD_FILTER_SET_MAC_VLAN_IN_RULE_ID_OFST 8
#define       MC_CMD_FILTER_SET_MAC_VLAN_IN_RULE_ID_LEN 4
/* destination mac address */
#define       MC_CMD_FILTER_SET_MAC_VLAN_IN_DST_MACADDR_OFST 12
#define       MC_CMD_FILTER_SET_MAC_VLAN_IN_DST_MACADDR_LEN 6
/* align vlan_match_enable to 32 bits */
#define       MC_CMD_FILTER_SET_MAC_VLAN_IN_DST_MACADDR_RSVD_OFST 18
#define       MC_CMD_FILTER_SET_MAC_VLAN_IN_DST_MACADDR_RSVD_LEN 2
/* vlan_match_enable */
#define       MC_CMD_FILTER_SET_MAC_VLAN_IN_VLAN_MATCH_ENABLE_OFST 20
#define       MC_CMD_FILTER_SET_MAC_VLAN_IN_VLAN_MATCH_ENABLE_LEN 4
/* vlan */
#define       MC_CMD_FILTER_SET_MAC_VLAN_IN_VLAN_OFST 24
#define       MC_CMD_FILTER_SET_MAC_VLAN_IN_VLAN_LEN 2
/* enum: No VLAN tag */
#define          MC_CMD_FILTER_SET_MAC_VLAN_IN_VLAN_NONE 0x1000

/* MC_CMD_FILTER_SET_MAC_VLAN_OUT msgresponse */
#define    MC_CMD_FILTER_SET_MAC_VLAN_OUT_LEN 4
/* Non-zero means failure */
#define       MC_CMD_FILTER_SET_MAC_VLAN_OUT_STATUS_OFST 0
#define       MC_CMD_FILTER_SET_MAC_VLAN_OUT_STATUS_LEN 4

/* MC_CMD_FILTER_SET_MULTICAST_VLAN_IN msgrequest */
#define    MC_CMD_FILTER_SET_MULTICAST_VLAN_IN_LEN 18
/* identifies the test */
#define       MC_CMD_FILTER_SET_MULTICAST_VLAN_IN_EFTEST_ID_OFST 0
#define       MC_CMD_FILTER_SET_MULTICAST_VLAN_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_FILTER_SET_MULTICAST_VLAN_IN_EFEST_OP_OFST 1
#define       MC_CMD_FILTER_SET_MULTICAST_VLAN_IN_EFEST_OP_LEN 1
/* enum: Set a multicast/vlan filter */
#define          MC_CMD_FILTER_SET_MULTICAST_VLAN_IN_SET_MULTICAST_VLAN 0xa
/* align the arguments to 32 bits */
#define       MC_CMD_FILTER_SET_MULTICAST_VLAN_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_FILTER_SET_MULTICAST_VLAN_IN_EFTEST_OP_RSVD_LEN 2
/* The requested port */
#define       MC_CMD_FILTER_SET_MULTICAST_VLAN_IN_PORT_OFST 4
#define       MC_CMD_FILTER_SET_MULTICAST_VLAN_IN_PORT_LEN 4
/* The requested filter id */
#define       MC_CMD_FILTER_SET_MULTICAST_VLAN_IN_RULE_ID_OFST 8
#define       MC_CMD_FILTER_SET_MULTICAST_VLAN_IN_RULE_ID_LEN 4
/* vlan_match_enable */
#define       MC_CMD_FILTER_SET_MULTICAST_VLAN_IN_VLAN_MATCH_ENABLE_OFST 12
#define       MC_CMD_FILTER_SET_MULTICAST_VLAN_IN_VLAN_MATCH_ENABLE_LEN 4
/* vlan */
#define       MC_CMD_FILTER_SET_MULTICAST_VLAN_IN_VLAN_OFST 16
#define       MC_CMD_FILTER_SET_MULTICAST_VLAN_IN_VLAN_LEN 2
/* enum: No VLAN tag */
#define          MC_CMD_FILTER_SET_MULTICAST_VLAN_IN_VLAN_NONE 0x1000

/* MC_CMD_FILTER_SET_MULTICAST_VLAN_OUT msgresponse */
#define    MC_CMD_FILTER_SET_MULTICAST_VLAN_OUT_LEN 4
/* Non-zero means failure */
#define       MC_CMD_FILTER_SET_MULTICAST_VLAN_OUT_STATUS_OFST 0
#define       MC_CMD_FILTER_SET_MULTICAST_VLAN_OUT_STATUS_LEN 4

/* MC_CMD_FILTER_SET_PROMISCUOUS_IN msgrequest */
#define    MC_CMD_FILTER_SET_PROMISCUOUS_IN_LEN 12
/* identifies the test */
#define       MC_CMD_FILTER_SET_PROMISCUOUS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_FILTER_SET_PROMISCUOUS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_FILTER_SET_PROMISCUOUS_IN_EFEST_OP_OFST 1
#define       MC_CMD_FILTER_SET_PROMISCUOUS_IN_EFEST_OP_LEN 1
/* enum: Set a promiscuous filter */
#define          MC_CMD_FILTER_SET_PROMISCUOUS_IN_SET_PROMISCUOUS 0xb
/* align the arguments to 32 bits */
#define       MC_CMD_FILTER_SET_PROMISCUOUS_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_FILTER_SET_PROMISCUOUS_IN_EFTEST_OP_RSVD_LEN 2
/* The requested port */
#define       MC_CMD_FILTER_SET_PROMISCUOUS_IN_PORT_OFST 4
#define       MC_CMD_FILTER_SET_PROMISCUOUS_IN_PORT_LEN 4
/* The requested filter id */
#define       MC_CMD_FILTER_SET_PROMISCUOUS_IN_RULE_ID_OFST 8
#define       MC_CMD_FILTER_SET_PROMISCUOUS_IN_RULE_ID_LEN 4

/* MC_CMD_FILTER_SET_PROMISCUOUS_OUT msgresponse */
#define    MC_CMD_FILTER_SET_PROMISCUOUS_OUT_LEN 4
/* Non-zero means failure */
#define       MC_CMD_FILTER_SET_PROMISCUOUS_OUT_STATUS_OFST 0
#define       MC_CMD_FILTER_SET_PROMISCUOUS_OUT_STATUS_LEN 4

/* MC_CMD_FILTER_SET_SRC_MAC_IN msgrequest */
#define    MC_CMD_FILTER_SET_SRC_MAC_IN_LEN 18
/* identifies the test */
#define       MC_CMD_FILTER_SET_SRC_MAC_IN_EFTEST_ID_OFST 0
#define       MC_CMD_FILTER_SET_SRC_MAC_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_FILTER_SET_SRC_MAC_IN_EFEST_OP_OFST 1
#define       MC_CMD_FILTER_SET_SRC_MAC_IN_EFEST_OP_LEN 1
/* enum: Set a mac/vlan filter */
#define          MC_CMD_FILTER_SET_SRC_MAC_IN_SET_SRC_MAC 0xc
/* align the arguments to 32 bits */
#define       MC_CMD_FILTER_SET_SRC_MAC_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_FILTER_SET_SRC_MAC_IN_EFTEST_OP_RSVD_LEN 2
/* The requested port */
#define       MC_CMD_FILTER_SET_SRC_MAC_IN_PORT_OFST 4
#define       MC_CMD_FILTER_SET_SRC_MAC_IN_PORT_LEN 4
/* The requested filter id */
#define       MC_CMD_FILTER_SET_SRC_MAC_IN_RULE_ID_OFST 8
#define       MC_CMD_FILTER_SET_SRC_MAC_IN_RULE_ID_LEN 4
/* source mac address */
#define       MC_CMD_FILTER_SET_SRC_MAC_IN_MACADDR_OFST 12
#define       MC_CMD_FILTER_SET_SRC_MAC_IN_MACADDR_LEN 6

/* MC_CMD_FILTER_SET_SRC_MAC_OUT msgresponse */
#define    MC_CMD_FILTER_SET_SRC_MAC_OUT_LEN 4
/* Non-zero means failure */
#define       MC_CMD_FILTER_SET_SRC_MAC_OUT_STATUS_OFST 0
#define       MC_CMD_FILTER_SET_SRC_MAC_OUT_STATUS_LEN 4

/* MC_CMD_FILTER_SET_DST_MAC_IN msgrequest */
#define    MC_CMD_FILTER_SET_DST_MAC_IN_LEN 18
/* identifies the test */
#define       MC_CMD_FILTER_SET_DST_MAC_IN_EFTEST_ID_OFST 0
#define       MC_CMD_FILTER_SET_DST_MAC_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_FILTER_SET_DST_MAC_IN_EFEST_OP_OFST 1
#define       MC_CMD_FILTER_SET_DST_MAC_IN_EFEST_OP_LEN 1
/* enum: Set a mac/vlan filter */
#define          MC_CMD_FILTER_SET_DST_MAC_IN_SET_DST_MAC 0xd
/* align the arguments to 32 bits */
#define       MC_CMD_FILTER_SET_DST_MAC_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_FILTER_SET_DST_MAC_IN_EFTEST_OP_RSVD_LEN 2
/* The requested port */
#define       MC_CMD_FILTER_SET_DST_MAC_IN_PORT_OFST 4
#define       MC_CMD_FILTER_SET_DST_MAC_IN_PORT_LEN 4
/* The requested filter id */
#define       MC_CMD_FILTER_SET_DST_MAC_IN_RULE_ID_OFST 8
#define       MC_CMD_FILTER_SET_DST_MAC_IN_RULE_ID_LEN 4
/* destination mac address */
#define       MC_CMD_FILTER_SET_DST_MAC_IN_MACADDR_OFST 12
#define       MC_CMD_FILTER_SET_DST_MAC_IN_MACADDR_LEN 6

/* MC_CMD_FILTER_SET_DST_MAC_OUT msgresponse */
#define    MC_CMD_FILTER_SET_DST_MAC_OUT_LEN 4
/* Non-zero means failure */
#define       MC_CMD_FILTER_SET_DST_MAC_OUT_STATUS_OFST 0
#define       MC_CMD_FILTER_SET_DST_MAC_OUT_STATUS_LEN 4

/* MC_CMD_FILTER_SET_BROADCAST_IN msgrequest */
#define    MC_CMD_FILTER_SET_BROADCAST_IN_LEN 12
/* identifies the test */
#define       MC_CMD_FILTER_SET_BROADCAST_IN_EFTEST_ID_OFST 0
#define       MC_CMD_FILTER_SET_BROADCAST_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_FILTER_SET_BROADCAST_IN_EFEST_OP_OFST 1
#define       MC_CMD_FILTER_SET_BROADCAST_IN_EFEST_OP_LEN 1
/* enum: Set a promiscuous filter */
#define          MC_CMD_FILTER_SET_BROADCAST_IN_SET_BROADCAST 0xe
/* align the arguments to 32 bits */
#define       MC_CMD_FILTER_SET_BROADCAST_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_FILTER_SET_BROADCAST_IN_EFTEST_OP_RSVD_LEN 2
/* The requested port */
#define       MC_CMD_FILTER_SET_BROADCAST_IN_PORT_OFST 4
#define       MC_CMD_FILTER_SET_BROADCAST_IN_PORT_LEN 4
/* The requested filter id */
#define       MC_CMD_FILTER_SET_BROADCAST_IN_RULE_ID_OFST 8
#define       MC_CMD_FILTER_SET_BROADCAST_IN_RULE_ID_LEN 4

/* MC_CMD_FILTER_SET_BROADCAST_OUT msgresponse */
#define    MC_CMD_FILTER_SET_BROADCAST_OUT_LEN 4
/* Non-zero means failure */
#define       MC_CMD_FILTER_SET_BROADCAST_OUT_STATUS_OFST 0
#define       MC_CMD_FILTER_SET_BROADCAST_OUT_STATUS_LEN 4

/* MC_CMD_FILTER_SET_MULTICAST_IN msgrequest */
#define    MC_CMD_FILTER_SET_MULTICAST_IN_LEN 12
/* identifies the test */
#define       MC_CMD_FILTER_SET_MULTICAST_IN_EFTEST_ID_OFST 0
#define       MC_CMD_FILTER_SET_MULTICAST_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_FILTER_SET_MULTICAST_IN_EFEST_OP_OFST 1
#define       MC_CMD_FILTER_SET_MULTICAST_IN_EFEST_OP_LEN 1
/* enum: Set a promiscuous filter */
#define          MC_CMD_FILTER_SET_MULTICAST_IN_SET_MULTICAST 0xf
/* align the arguments to 32 bits */
#define       MC_CMD_FILTER_SET_MULTICAST_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_FILTER_SET_MULTICAST_IN_EFTEST_OP_RSVD_LEN 2
/* The requested port */
#define       MC_CMD_FILTER_SET_MULTICAST_IN_PORT_OFST 4
#define       MC_CMD_FILTER_SET_MULTICAST_IN_PORT_LEN 4
/* The requested filter id */
#define       MC_CMD_FILTER_SET_MULTICAST_IN_RULE_ID_OFST 8
#define       MC_CMD_FILTER_SET_MULTICAST_IN_RULE_ID_LEN 4

/* MC_CMD_FILTER_SET_MULTICAST_OUT msgresponse */
#define    MC_CMD_FILTER_SET_MULTICAST_OUT_LEN 4
/* Non-zero means failure */
#define       MC_CMD_FILTER_SET_MULTICAST_OUT_STATUS_OFST 0
#define       MC_CMD_FILTER_SET_MULTICAST_OUT_STATUS_LEN 4

/* MC_CMD_FILTER_ENABLE_IN msgrequest */
#define    MC_CMD_FILTER_ENABLE_IN_LEN 12
/* identifies the test */
#define       MC_CMD_FILTER_ENABLE_IN_EFTEST_ID_OFST 0
#define       MC_CMD_FILTER_ENABLE_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_FILTER_ENABLE_IN_EFEST_OP_OFST 1
#define       MC_CMD_FILTER_ENABLE_IN_EFEST_OP_LEN 1
/* enum: Enable */
#define          MC_CMD_FILTER_ENABLE_IN_ENABLE 0x10
/* enum: Disable */
#define          MC_CMD_FILTER_ENABLE_IN_DISABLE 0x11
/* enum: Enabled */
#define          MC_CMD_FILTER_ENABLE_IN_IS_ENABLED 0x12
/* align the arguments to 32 bits */
#define       MC_CMD_FILTER_ENABLE_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_FILTER_ENABLE_IN_EFTEST_OP_RSVD_LEN 2
/* The requested port */
#define       MC_CMD_FILTER_ENABLE_IN_PORT_OFST 4
#define       MC_CMD_FILTER_ENABLE_IN_PORT_LEN 4
/* The requested filter id */
#define       MC_CMD_FILTER_ENABLE_IN_RULE_ID_OFST 8
#define       MC_CMD_FILTER_ENABLE_IN_RULE_ID_LEN 4

/* MC_CMD_FILTER_ENABLE_OUT msgresponse */
#define    MC_CMD_FILTER_ENABLE_OUT_LEN 4
/* Non-zero means failure */
#define       MC_CMD_FILTER_ENABLE_OUT_STATUS_OFST 0
#define       MC_CMD_FILTER_ENABLE_OUT_STATUS_LEN 4
/* Non-zero means failure */
#define       MC_CMD_FILTER_ENABLE_OUT_ENABLED_OFST 0
#define       MC_CMD_FILTER_ENABLE_OUT_ENABLED_LEN 4

/* MC_CMD_FILTER_WRITE_HW_FILTER_STRUCTURED_IN msgrequest */
#define    MC_CMD_FILTER_WRITE_HW_FILTER_STRUCTURED_IN_LEN 80
/* identifies the test */
#define       MC_CMD_FILTER_WRITE_HW_FILTER_STRUCTURED_IN_EFTEST_ID_OFST 0
#define       MC_CMD_FILTER_WRITE_HW_FILTER_STRUCTURED_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_FILTER_WRITE_HW_FILTER_STRUCTURED_IN_EFEST_OP_OFST 1
#define       MC_CMD_FILTER_WRITE_HW_FILTER_STRUCTURED_IN_EFEST_OP_LEN 1
/* enum: Write a structured hw filter */
#define          MC_CMD_FILTER_WRITE_HW_FILTER_STRUCTURED_IN_WRITE_HW_FILTER_STRUCTURED 0x13
/* align the arguments to 32 bits */
#define       MC_CMD_FILTER_WRITE_HW_FILTER_STRUCTURED_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_FILTER_WRITE_HW_FILTER_STRUCTURED_IN_EFTEST_OP_RSVD_LEN 2
/* The requested port */
#define       MC_CMD_FILTER_WRITE_HW_FILTER_STRUCTURED_IN_PORT_OFST 4
#define       MC_CMD_FILTER_WRITE_HW_FILTER_STRUCTURED_IN_PORT_LEN 4
/* The requested filter id */
#define       MC_CMD_FILTER_WRITE_HW_FILTER_STRUCTURED_IN_FILTER_IDX_OFST 8
#define       MC_CMD_FILTER_WRITE_HW_FILTER_STRUCTURED_IN_FILTER_IDX_LEN 4
/* mode */
#define       MC_CMD_FILTER_WRITE_HW_FILTER_STRUCTURED_IN_MODE_OFST 12
#define       MC_CMD_FILTER_WRITE_HW_FILTER_STRUCTURED_IN_MODE_LEN 4
/* enum: Simple */
#define          MC_CMD_FILTER_WRITE_HW_FILTER_STRUCTURED_IN_MODE_SIMPLE 0x0
/* enum: Layered */
#define          MC_CMD_FILTER_WRITE_HW_FILTER_STRUCTURED_IN_MODE_LAYERED 0x1
/* key0 */
#define       MC_CMD_FILTER_WRITE_HW_FILTER_STRUCTURED_IN_KEY0_OFST 16
#define       MC_CMD_FILTER_WRITE_HW_FILTER_STRUCTURED_IN_KEY0_LEN 2
/* key1 */
#define       MC_CMD_FILTER_WRITE_HW_FILTER_STRUCTURED_IN_KEY1_OFST 18
#define       MC_CMD_FILTER_WRITE_HW_FILTER_STRUCTURED_IN_KEY1_LEN 2
/* l2_size */
#define       MC_CMD_FILTER_WRITE_HW_FILTER_STRUCTURED_IN_L2_SIZE_OFST 20
#define       MC_CMD_FILTER_WRITE_HW_FILTER_STRUCTURED_IN_L2_SIZE_LEN 2
/* align the mask to 32 bits */
#define       MC_CMD_FILTER_WRITE_HW_FILTER_STRUCTURED_IN_L2_SIZE_RSVD_OFST 22
#define       MC_CMD_FILTER_WRITE_HW_FILTER_STRUCTURED_IN_L2_SIZE_RSVD_LEN 2
/* l2_MASK */
#define       MC_CMD_FILTER_WRITE_HW_FILTER_STRUCTURED_IN_L2_MASK_OFST 24
#define       MC_CMD_FILTER_WRITE_HW_FILTER_STRUCTURED_IN_L2_MASK_LEN 16
/* l3_size */
#define       MC_CMD_FILTER_WRITE_HW_FILTER_STRUCTURED_IN_L3_SIZE_OFST 40
#define       MC_CMD_FILTER_WRITE_HW_FILTER_STRUCTURED_IN_L3_SIZE_LEN 2
/* align the mask to 32 bits */
#define       MC_CMD_FILTER_WRITE_HW_FILTER_STRUCTURED_IN_L3_SIZE_RSVD_OFST 42
#define       MC_CMD_FILTER_WRITE_HW_FILTER_STRUCTURED_IN_L3_SIZE_RSVD_LEN 2
/* l3_mask */
#define       MC_CMD_FILTER_WRITE_HW_FILTER_STRUCTURED_IN_L3_MASK_OFST 44
#define       MC_CMD_FILTER_WRITE_HW_FILTER_STRUCTURED_IN_L3_MASK_LEN 16
/* l4_size */
#define       MC_CMD_FILTER_WRITE_HW_FILTER_STRUCTURED_IN_L4_SIZE_OFST 60
#define       MC_CMD_FILTER_WRITE_HW_FILTER_STRUCTURED_IN_L4_SIZE_LEN 2
/* align the mask to 32 bits */
#define       MC_CMD_FILTER_WRITE_HW_FILTER_STRUCTURED_IN_L4_SIZE_RSVD_OFST 62
#define       MC_CMD_FILTER_WRITE_HW_FILTER_STRUCTURED_IN_L4_SIZE_RSVD_LEN 2
/* l4_mask */
#define       MC_CMD_FILTER_WRITE_HW_FILTER_STRUCTURED_IN_L4_MASK_OFST 64
#define       MC_CMD_FILTER_WRITE_HW_FILTER_STRUCTURED_IN_L4_MASK_LEN 16

/* MC_CMD_FILTER_WRITE_HW_FILTER_VLAN_CRC_INIT_IN msgrequest */
#define    MC_CMD_FILTER_WRITE_HW_FILTER_VLAN_CRC_INIT_IN_LEN 12
/* identifies the test */
#define       MC_CMD_FILTER_WRITE_HW_FILTER_VLAN_CRC_INIT_IN_EFTEST_ID_OFST 0
#define       MC_CMD_FILTER_WRITE_HW_FILTER_VLAN_CRC_INIT_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_FILTER_WRITE_HW_FILTER_VLAN_CRC_INIT_IN_EFEST_OP_OFST 1
#define       MC_CMD_FILTER_WRITE_HW_FILTER_VLAN_CRC_INIT_IN_EFEST_OP_LEN 1
/* enum: Write the initial crc value */
#define          MC_CMD_FILTER_WRITE_HW_FILTER_VLAN_CRC_INIT_IN_WRITE_HW_FILTER_VLAN_CRC_INIT 0x14
/* align the arguments to 32 bits */
#define       MC_CMD_FILTER_WRITE_HW_FILTER_VLAN_CRC_INIT_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_FILTER_WRITE_HW_FILTER_VLAN_CRC_INIT_IN_EFTEST_OP_RSVD_LEN 2
/* The requested port */
#define       MC_CMD_FILTER_WRITE_HW_FILTER_VLAN_CRC_INIT_IN_PORT_OFST 4
#define       MC_CMD_FILTER_WRITE_HW_FILTER_VLAN_CRC_INIT_IN_PORT_LEN 4
/* The initial crc value */
#define       MC_CMD_FILTER_WRITE_HW_FILTER_VLAN_CRC_INIT_IN_CRC_INIT_OFST 8
#define       MC_CMD_FILTER_WRITE_HW_FILTER_VLAN_CRC_INIT_IN_CRC_INIT_LEN 4

/* MC_CMD_FILTER_WRITE_HW_FILTER_MAC_VLAN_IN msgrequest */
#define    MC_CMD_FILTER_WRITE_HW_FILTER_MAC_VLAN_IN_LEN 22
/* identifies the test */
#define       MC_CMD_FILTER_WRITE_HW_FILTER_MAC_VLAN_IN_EFTEST_ID_OFST 0
#define       MC_CMD_FILTER_WRITE_HW_FILTER_MAC_VLAN_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_FILTER_WRITE_HW_FILTER_MAC_VLAN_IN_EFEST_OP_OFST 1
#define       MC_CMD_FILTER_WRITE_HW_FILTER_MAC_VLAN_IN_EFEST_OP_LEN 1
/* enum: Write a mac/vlan hw filter */
#define          MC_CMD_FILTER_WRITE_HW_FILTER_MAC_VLAN_IN_WRITE_HW_FILTER_MAC_VLAN 0x15
/* align the arguments to 32 bits */
#define       MC_CMD_FILTER_WRITE_HW_FILTER_MAC_VLAN_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_FILTER_WRITE_HW_FILTER_MAC_VLAN_IN_EFTEST_OP_RSVD_LEN 2
/* The requested port */
#define       MC_CMD_FILTER_WRITE_HW_FILTER_MAC_VLAN_IN_PORT_OFST 4
#define       MC_CMD_FILTER_WRITE_HW_FILTER_MAC_VLAN_IN_PORT_LEN 4
/* The requested filter id */
#define       MC_CMD_FILTER_WRITE_HW_FILTER_MAC_VLAN_IN_FILTER_IDX_OFST 8
#define       MC_CMD_FILTER_WRITE_HW_FILTER_MAC_VLAN_IN_FILTER_IDX_LEN 4
/* enable */
#define       MC_CMD_FILTER_WRITE_HW_FILTER_MAC_VLAN_IN_ENABLE_OFST 12
#define       MC_CMD_FILTER_WRITE_HW_FILTER_MAC_VLAN_IN_ENABLE_LEN 4
/* tagged_hash_mode */
#define       MC_CMD_FILTER_WRITE_HW_FILTER_MAC_VLAN_IN_TAGGED_HASH_MODE_OFST 16
#define       MC_CMD_FILTER_WRITE_HW_FILTER_MAC_VLAN_IN_TAGGED_HASH_MODE_LEN 4
/* key */
#define       MC_CMD_FILTER_WRITE_HW_FILTER_MAC_VLAN_IN_KEY_OFST 20
#define       MC_CMD_FILTER_WRITE_HW_FILTER_MAC_VLAN_IN_KEY_LEN 2
/* enum: No VLAN tag */
#define          MC_CMD_FILTER_WRITE_HW_FILTER_MAC_VLAN_IN_VLAN_NONE 0x1000
/* enum: Don't care placeholder */
#define          MC_CMD_FILTER_WRITE_HW_FILTER_MAC_VLAN_IN_VLAN_DONT_CARE 0x2000

/* MC_CMD_FILTER_WRITE_HW_FILTER_MULTICAST_VLAN_IN msgrequest */
#define    MC_CMD_FILTER_WRITE_HW_FILTER_MULTICAST_VLAN_IN_LEN 22
/* identifies the test */
#define       MC_CMD_FILTER_WRITE_HW_FILTER_MULTICAST_VLAN_IN_EFTEST_ID_OFST 0
#define       MC_CMD_FILTER_WRITE_HW_FILTER_MULTICAST_VLAN_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_FILTER_WRITE_HW_FILTER_MULTICAST_VLAN_IN_EFEST_OP_OFST 1
#define       MC_CMD_FILTER_WRITE_HW_FILTER_MULTICAST_VLAN_IN_EFEST_OP_LEN 1
/* enum: Write a multicast/vlan hw filter */
#define          MC_CMD_FILTER_WRITE_HW_FILTER_MULTICAST_VLAN_IN_WRITE_HW_FILTER_MULTICAST_VLAN 0x16
/* align the arguments to 32 bits */
#define       MC_CMD_FILTER_WRITE_HW_FILTER_MULTICAST_VLAN_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_FILTER_WRITE_HW_FILTER_MULTICAST_VLAN_IN_EFTEST_OP_RSVD_LEN 2
/* The requested port */
#define       MC_CMD_FILTER_WRITE_HW_FILTER_MULTICAST_VLAN_IN_PORT_OFST 4
#define       MC_CMD_FILTER_WRITE_HW_FILTER_MULTICAST_VLAN_IN_PORT_LEN 4
/* The requested filter id */
#define       MC_CMD_FILTER_WRITE_HW_FILTER_MULTICAST_VLAN_IN_FILTER_IDX_OFST 8
#define       MC_CMD_FILTER_WRITE_HW_FILTER_MULTICAST_VLAN_IN_FILTER_IDX_LEN 4
/* enable */
#define       MC_CMD_FILTER_WRITE_HW_FILTER_MULTICAST_VLAN_IN_ENABLE_OFST 12
#define       MC_CMD_FILTER_WRITE_HW_FILTER_MULTICAST_VLAN_IN_ENABLE_LEN 4
/* vlan_match_enable */
#define       MC_CMD_FILTER_WRITE_HW_FILTER_MULTICAST_VLAN_IN_VLAN_MATCH_ENABLE_OFST 16
#define       MC_CMD_FILTER_WRITE_HW_FILTER_MULTICAST_VLAN_IN_VLAN_MATCH_ENABLE_LEN 4
/* vlan */
#define       MC_CMD_FILTER_WRITE_HW_FILTER_MULTICAST_VLAN_IN_VLAN_OFST 20
#define       MC_CMD_FILTER_WRITE_HW_FILTER_MULTICAST_VLAN_IN_VLAN_LEN 2
/* enum: No VLAN tag */
#define          MC_CMD_FILTER_WRITE_HW_FILTER_MULTICAST_VLAN_IN_VLAN_NONE 0x1000

/* MC_CMD_MC2MC_TEST_IN msgrequest */
#define    MC_CMD_MC2MC_TEST_IN_LEN 4
/* identifies the test */
#define       MC_CMD_MC2MC_TEST_IN_EFTEST_ID_OFST 0
#define       MC_CMD_MC2MC_TEST_IN_EFTEST_ID_LEN 1
/* MC2MC test-specific operation */
#define       MC_CMD_MC2MC_TEST_IN_EFTEST_OP_OFST 1
#define       MC_CMD_MC2MC_TEST_IN_EFTEST_OP_LEN 1
#define          MC_CMD_MC2MC_TEST_IN_GPIO_HANDSHAKE 0x0 /* enum */
/* align the next field to 32 bits */
#define       MC_CMD_MC2MC_TEST_IN_PAD_OFST 2
#define       MC_CMD_MC2MC_TEST_IN_PAD_LEN 2

/* MC_CMD_CNTAG_TEST_IN msgrequest */
#define    MC_CMD_CNTAG_TEST_IN_LEN 4
/* identifies the test */
#define       MC_CMD_CNTAG_TEST_IN_EFTEST_ID_OFST 0
#define       MC_CMD_CNTAG_TEST_IN_EFTEST_ID_LEN 1
/* CNTAG test-specific operation */
#define       MC_CMD_CNTAG_TEST_IN_EFTEST_OP_OFST 1
#define       MC_CMD_CNTAG_TEST_IN_EFTEST_OP_LEN 1
#define          MC_CMD_CNTAG_TEST_IN_CNTAG_OFF 0x0 /* enum */
#define          MC_CMD_CNTAG_TEST_IN_CNTAG_ON 0x1 /* enum */
/* The affected QID (NOTE that this needs to be already INITed) */
#define       MC_CMD_CNTAG_TEST_IN_QID_OFST 2
#define       MC_CMD_CNTAG_TEST_IN_QID_LEN 2

/* MC_CMD_PD_TEST_IN msgrequest */
#define    MC_CMD_PD_TEST_IN_LEN 28
/* identifies the test */
#define       MC_CMD_PD_TEST_IN_EFTEST_ID_OFST 0
#define       MC_CMD_PD_TEST_IN_EFTEST_ID_LEN 1
/* PD test-specific operation */
#define       MC_CMD_PD_TEST_IN_EFTEST_OP_OFST 1
#define       MC_CMD_PD_TEST_IN_EFTEST_OP_LEN 1
#define          MC_CMD_PD_TEST_IN_SPAM_VECTOR_TABLE_OFF 0x0 /* enum */
#define          MC_CMD_PD_TEST_IN_SPAM_VECTOR_TABLE_ON 0x1 /* enum */
#define          MC_CMD_PD_TEST_IN_SAVE_VECTOR_TABLE 0x2 /* enum */
#define          MC_CMD_PD_TEST_IN_RESTORE_VECTOR_TABLE 0x3 /* enum */
#define          MC_CMD_PD_TEST_IN_APPLY_LUE_PARAM_TWEAK 0x4 /* enum */
#define          MC_CMD_PD_TEST_IN_PER_PORT_HR_CONFIG_ON 0x5 /* enum */
#define          MC_CMD_PD_TEST_IN_PER_PORT_HR_CONFIG_OFF 0x6 /* enum */
#define          MC_CMD_PD_TEST_IN_LUE_FORCED_DEPTH 0x7 /* enum */
#define          MC_CMD_PD_TEST_IN_SPAM_EXC_REQ_OFF 0x8 /* enum */
#define          MC_CMD_PD_TEST_IN_SPAM_EXC_REQ_ON 0x9 /* enum */
#define          MC_CMD_PD_TEST_IN_ENGINE_LOOPBACK_HACK_ON 0xa /* enum */
#define          MC_CMD_PD_TEST_IN_ENGINE_LOOPBACK_HACK_OFF 0xb /* enum */
#define          MC_CMD_PD_TEST_IN_LUE_MEM_TEST 0xc /* enum */
/* align the arguments to 32 bits */
#define       MC_CMD_PD_TEST_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_PD_TEST_IN_EFTEST_OP_RSVD_LEN 2
/* Whirlpool rounds for fast hash (RX PD), or 0xffffffff for default */
#define       MC_CMD_PD_TEST_IN_RX_WHASH_FAST_CYCLES_OFST 4
#define       MC_CMD_PD_TEST_IN_RX_WHASH_FAST_CYCLES_LEN 4
/* Whirlpool rounds for slow hash (RX PD), or 0xffffffff for default */
#define       MC_CMD_PD_TEST_IN_RX_WHASH_SLOW_CYCLES_OFST 8
#define       MC_CMD_PD_TEST_IN_RX_WHASH_SLOW_CYCLES_LEN 4
/* Whirlpool rounds for fast hash (TX PD), or 0xffffffff for default */
#define       MC_CMD_PD_TEST_IN_TX_WHASH_FAST_CYCLES_OFST 12
#define       MC_CMD_PD_TEST_IN_TX_WHASH_FAST_CYCLES_LEN 4
/* Whirlpool rounds for slow hash (TX PD), or 0xffffffff for default */
#define       MC_CMD_PD_TEST_IN_TX_WHASH_SLOW_CYCLES_OFST 16
#define       MC_CMD_PD_TEST_IN_TX_WHASH_SLOW_CYCLES_LEN 4
/* LUE max hops, or 0xffffffff for default */
#define       MC_CMD_PD_TEST_IN_LUE_MAX_HOPS_OFST 20
#define       MC_CMD_PD_TEST_IN_LUE_MAX_HOPS_LEN 4
/* LUE match request almost-full cycle threshold, or 0xffffffff for default */
#define       MC_CMD_PD_TEST_IN_LUE_AF_FIFO_THRESHOLD_OFST 24
#define       MC_CMD_PD_TEST_IN_LUE_AF_FIFO_THRESHOLD_LEN 4

/* MC_CMD_PORT_SETTINGS_IN msgrequest */
#define    MC_CMD_PORT_SETTINGS_IN_LEN 8
/* identifies the test */
#define       MC_CMD_PORT_SETTINGS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_PORT_SETTINGS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_PORT_SETTINGS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_PORT_SETTINGS_IN_EFTEST_OP_LEN 1
/* enum: Deprecated */
#define          MC_CMD_PORT_SETTINGS_IN_APPLY 0x0
/* enum: Apply misc MAC/PCS settings */
#define          MC_CMD_PORT_SETTINGS_IN_APPLY_MISC 0x1
/* align the arguments to 32 bits */
#define       MC_CMD_PORT_SETTINGS_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_PORT_SETTINGS_IN_EFTEST_OP_RSVD_LEN 2
#define       MC_CMD_PORT_SETTINGS_IN_FLAGS_OFST 4
#define       MC_CMD_PORT_SETTINGS_IN_FLAGS_LEN 4
#define        MC_CMD_PORT_SETTINGS_IN_CRC_APPEND_OFST 4
#define        MC_CMD_PORT_SETTINGS_IN_CRC_APPEND_LBN 0
#define        MC_CMD_PORT_SETTINGS_IN_CRC_APPEND_WIDTH 1
#define        MC_CMD_PORT_SETTINGS_IN_CRC_FORWARD_OFST 4
#define        MC_CMD_PORT_SETTINGS_IN_CRC_FORWARD_LBN 1
#define        MC_CMD_PORT_SETTINGS_IN_CRC_FORWARD_WIDTH 1
#define        MC_CMD_PORT_SETTINGS_IN_PCSCLK_333_OFST 4
#define        MC_CMD_PORT_SETTINGS_IN_PCSCLK_333_LBN 2
#define        MC_CMD_PORT_SETTINGS_IN_PCSCLK_333_WIDTH 1
#define        MC_CMD_PORT_SETTINGS_IN_PCSCLK_625_OFST 4
#define        MC_CMD_PORT_SETTINGS_IN_PCSCLK_625_LBN 3
#define        MC_CMD_PORT_SETTINGS_IN_PCSCLK_625_WIDTH 1
#define        MC_CMD_PORT_SETTINGS_IN_PCSCLK_714_OFST 4
#define        MC_CMD_PORT_SETTINGS_IN_PCSCLK_714_LBN 4
#define        MC_CMD_PORT_SETTINGS_IN_PCSCLK_714_WIDTH 1

/* MC_CMD_PORT_LINK_CONTROL_IN msgrequest */
#define    MC_CMD_PORT_LINK_CONTROL_IN_LEN 8
/* identifies the test */
#define       MC_CMD_PORT_LINK_CONTROL_IN_EFTEST_ID_OFST 0
#define       MC_CMD_PORT_LINK_CONTROL_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_PORT_LINK_CONTROL_IN_EFTEST_OP_OFST 1
#define       MC_CMD_PORT_LINK_CONTROL_IN_EFTEST_OP_LEN 1
/* enum: MAC/PCS link control */
#define          MC_CMD_PORT_LINK_CONTROL_IN_LINK_CONTROL 0x2
/* align the arguments to 32 bits */
#define       MC_CMD_PORT_LINK_CONTROL_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_PORT_LINK_CONTROL_IN_EFTEST_OP_RSVD_LEN 2
/* Link mode */
#define       MC_CMD_PORT_LINK_CONTROL_IN_MODE_OFST 4
#define       MC_CMD_PORT_LINK_CONTROL_IN_MODE_LEN 4
#define          MC_CMD_PORT_LINK_CONTROL_IN_LINK_UP 0x0 /* enum */
#define          MC_CMD_PORT_LINK_CONTROL_IN_LINK_DOWN_LOWPOWER 0x1 /* enum */
#define          MC_CMD_PORT_LINK_CONTROL_IN_LINK_DOWN_LOS 0x2 /* enum */
#define          MC_CMD_PORT_LINK_CONTROL_IN_LINK_DOWN_LOCAL_FAULT 0x3 /* enum */
#define          MC_CMD_PORT_LINK_CONTROL_IN_LINK_DOWN_REMOTE_FAULT 0x4 /* enum */
#define          MC_CMD_PORT_LINK_CONTROL_IN_LINK_UP_TX_ONLY 0x5 /* enum */

/* MC_CMD_PORT_FAKE_PERST_IN msgrequest */
#define    MC_CMD_PORT_FAKE_PERST_IN_LEN 8
/* identifies the test */
#define       MC_CMD_PORT_FAKE_PERST_IN_EFTEST_ID_OFST 0
#define       MC_CMD_PORT_FAKE_PERST_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_PORT_FAKE_PERST_IN_EFTEST_OP_OFST 1
#define       MC_CMD_PORT_FAKE_PERST_IN_EFTEST_OP_LEN 1
/* enum: Fake nPERST assert control */
#define          MC_CMD_PORT_FAKE_PERST_IN_FAKE_PERST 0x3
/* align the arguments to 32 bits */
#define       MC_CMD_PORT_FAKE_PERST_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_PORT_FAKE_PERST_IN_EFTEST_OP_RSVD_LEN 2
#define       MC_CMD_PORT_FAKE_PERST_IN_ASSERT_OFST 4
#define       MC_CMD_PORT_FAKE_PERST_IN_ASSERT_LEN 4
#define        MC_CMD_PORT_FAKE_PERST_IN_ASSERT_TX_OFST 4
#define        MC_CMD_PORT_FAKE_PERST_IN_ASSERT_TX_LBN 0
#define        MC_CMD_PORT_FAKE_PERST_IN_ASSERT_TX_WIDTH 1
#define        MC_CMD_PORT_FAKE_PERST_IN_ASSERT_RX_OFST 4
#define        MC_CMD_PORT_FAKE_PERST_IN_ASSERT_RX_LBN 1
#define        MC_CMD_PORT_FAKE_PERST_IN_ASSERT_RX_WIDTH 1

/* MC_CMD_LED_SETTINGS_IN msgrequest */
#define    MC_CMD_LED_SETTINGS_IN_LEN 8
/* identifies the test */
#define       MC_CMD_LED_SETTINGS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_LED_SETTINGS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_LED_SETTINGS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_LED_SETTINGS_IN_EFTEST_OP_LEN 1
/* enum: Apply the supplied settings */
#define          MC_CMD_LED_SETTINGS_IN_APPLY 0x0
/* LEDs are numbered 0-7. */
#define       MC_CMD_LED_SETTINGS_IN_LED_NUMBER_OFST 2
#define       MC_CMD_LED_SETTINGS_IN_LED_NUMBER_LEN 1
#define       MC_CMD_LED_SETTINGS_IN_LED_MODE_OFST 3
#define       MC_CMD_LED_SETTINGS_IN_LED_MODE_LEN 1
#define          MC_CMD_LED_SETTINGS_IN_LEDMODE_ALWAYS_OFF 0x0 /* enum */
#define          MC_CMD_LED_SETTINGS_IN_LEDMODE_ALWAYS_ON 0x1 /* enum */
#define          MC_CMD_LED_SETTINGS_IN_LEDMODE_INACT_OFF_ACT_ON 0x2 /* enum */
#define          MC_CMD_LED_SETTINGS_IN_LEDMODE_INACT_OFF_ACT_FLASH 0x3 /* enum */
#define          MC_CMD_LED_SETTINGS_IN_LEDMODE_INACT_ON_ACT_FLASH 0x4 /* enum */
#define          MC_CMD_LED_SETTINGS_IN_LEDMODE_INACT_OFF_TX_FLASH 0x5 /* enum */
#define          MC_CMD_LED_SETTINGS_IN_LEDMODE_INACT_OFF_RX_FLASH 0x6 /* enum */
#define          MC_CMD_LED_SETTINGS_IN_LEDMODE_ALWAYS_FLASH 0x7 /* enum */
#define       MC_CMD_LED_SETTINGS_IN_LED_SOURCE_OFST 4
#define       MC_CMD_LED_SETTINGS_IN_LED_SOURCE_LEN 1
#define          MC_CMD_LED_SETTINGS_IN_LEDSRC_LOWSPEED 0x0 /* enum */
#define          MC_CMD_LED_SETTINGS_IN_LEDSRC_HIGHSPEED 0x1 /* enum */
/* 8-bit value specifying the LED flash sample frequency (if enabled). */
#define       MC_CMD_LED_SETTINGS_IN_LED_SAMPLE_FREQUENCY_OFST 5
#define       MC_CMD_LED_SETTINGS_IN_LED_SAMPLE_FREQUENCY_LEN 1
/* 16-bit value specifying the LED flashing frequency (if enabled). */
#define       MC_CMD_LED_SETTINGS_IN_LED_FLASH_FREQUENCY_OFST 6
#define       MC_CMD_LED_SETTINGS_IN_LED_FLASH_FREQUENCY_LEN 2

/* MC_CMD_LED_PORT_ACT_LEDS_IN msgrequest */
#define    MC_CMD_LED_PORT_ACT_LEDS_IN_LEN 12
/* identifies the test */
#define       MC_CMD_LED_PORT_ACT_LEDS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_LED_PORT_ACT_LEDS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_LED_PORT_ACT_LEDS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_LED_PORT_ACT_LEDS_IN_EFTEST_OP_LEN 1
/* enum: Set activity LED mapping for a port */
#define          MC_CMD_LED_PORT_ACT_LEDS_IN_SET 0x1
/* align the arguments to 32 bits */
#define       MC_CMD_LED_PORT_ACT_LEDS_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_LED_PORT_ACT_LEDS_IN_EFTEST_OP_RSVD_LEN 2
/* Logical port number */
#define       MC_CMD_LED_PORT_ACT_LEDS_IN_PORT_NUMBER_OFST 4
#define       MC_CMD_LED_PORT_ACT_LEDS_IN_PORT_NUMBER_LEN 4
/* Bitmask of port activity LEDs */
#define       MC_CMD_LED_PORT_ACT_LEDS_IN_LED_MASK_OFST 8
#define       MC_CMD_LED_PORT_ACT_LEDS_IN_LED_MASK_LEN 4

/* MC_CMD_LED_COUNTERS_IN msgrequest */
#define    MC_CMD_LED_COUNTERS_IN_LEN 2
/* identifies the test */
#define       MC_CMD_LED_COUNTERS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_LED_COUNTERS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_LED_COUNTERS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_LED_COUNTERS_IN_EFTEST_OP_LEN 1
/* enum: Read LED debug trigger counters */
#define          MC_CMD_LED_COUNTERS_IN_GET 0x2

/* MC_CMD_LED_COUNTERS_OUT msgrequest */
#define    MC_CMD_LED_COUNTERS_OUT_LEN 64
#define       MC_CMD_LED_COUNTERS_OUT_COUNTERS_OFST 0
#define       MC_CMD_LED_COUNTERS_OUT_COUNTERS_LEN 4
#define       MC_CMD_LED_COUNTERS_OUT_COUNTERS_NUM 16

/* MC_CMD_EFTEST_LTR_TEST_SEND_MSG_IN msgrequest */
#define    MC_CMD_EFTEST_LTR_TEST_SEND_MSG_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_LTR_TEST_SEND_MSG_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_LTR_TEST_SEND_MSG_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_LTR_TEST_SEND_MSG_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_LTR_TEST_SEND_MSG_IN_EFTEST_OP_LEN 1
/* enum: Send LTR message. */
#define          MC_CMD_EFTEST_LTR_TEST_SEND_MSG_IN_SEND_MSG 0x0
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_LTR_TEST_SEND_MSG_IN_PAD_OFST 2
#define       MC_CMD_EFTEST_LTR_TEST_SEND_MSG_IN_PAD_LEN 2
/* LTR message latency value */
#define       MC_CMD_EFTEST_LTR_TEST_SEND_MSG_IN_LATENCY_OFST 4
#define       MC_CMD_EFTEST_LTR_TEST_SEND_MSG_IN_LATENCY_LEN 4

/* MC_CMD_EFTEST_OBFF_TEST_GET_STATE_IN msgrequest */
#define    MC_CMD_EFTEST_OBFF_TEST_GET_STATE_IN_LEN 2
/* identifies the test */
#define       MC_CMD_EFTEST_OBFF_TEST_GET_STATE_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_OBFF_TEST_GET_STATE_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_OBFF_TEST_GET_STATE_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_OBFF_TEST_GET_STATE_IN_EFTEST_OP_LEN 1
/* enum: Get current OBFF state. */
#define          MC_CMD_EFTEST_OBFF_TEST_GET_STATE_IN_GET_STATE 0x0

/* MC_CMD_EFTEST_OBFF_TEST_GET_STATE_OUT msgrequest */
#define    MC_CMD_EFTEST_OBFF_TEST_GET_STATE_OUT_LEN 2
/* OBFF state */
#define       MC_CMD_EFTEST_OBFF_TEST_GET_STATE_OUT_STATE_OFST 0
#define       MC_CMD_EFTEST_OBFF_TEST_GET_STATE_OUT_STATE_LEN 1
/* enum: system is in idle low power state */
#define          MC_CMD_EFTEST_OBFF_TEST_GET_STATE_OUT_IDLE 0x0
/* enum: system memory path available for device memory read/write */
#define          MC_CMD_EFTEST_OBFF_TEST_GET_STATE_OUT_OBFF 0x1
/* enum: system fully active for all device actions */
#define          MC_CMD_EFTEST_OBFF_TEST_GET_STATE_OUT_CPU_ACTIVE 0x2
/* enum: OBFF state is not initialised */
#define          MC_CMD_EFTEST_OBFF_TEST_GET_STATE_OUT_INIT 0x3
/* OBFF mode */
#define       MC_CMD_EFTEST_OBFF_TEST_GET_STATE_OUT_MODE_OFST 1
#define       MC_CMD_EFTEST_OBFF_TEST_GET_STATE_OUT_MODE_LEN 1
/* enum: OBFF is disabled */
#define          MC_CMD_EFTEST_OBFF_TEST_GET_STATE_OUT_DISABLE 0x0
/* enum: OBFF is enabled using MSG variation A */
#define          MC_CMD_EFTEST_OBFF_TEST_GET_STATE_OUT_ENABLE_MSGA 0x1
/* enum: OBFF is enabled using MSG variation A */
#define          MC_CMD_EFTEST_OBFF_TEST_GET_STATE_OUT_ENABLE_MSGB 0x2
/* enum: OBFF is enabled using WAKE signaling */
#define          MC_CMD_EFTEST_OBFF_TEST_GET_STATE_OUT_ENABLE_WAKE 0x3

/* MC_CMD_CLOCK_RATIO_IN msgrequest */
#define    MC_CMD_CLOCK_RATIO_IN_LEN 8
/* identifies the test */
#define       MC_CMD_CLOCK_RATIO_IN_EFTEST_ID_OFST 0
#define       MC_CMD_CLOCK_RATIO_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_CLOCK_RATIO_IN_EFTEST_OP_OFST 1
#define       MC_CMD_CLOCK_RATIO_IN_EFTEST_OP_LEN 1
/* enum: Get current clock ratio */
#define          MC_CMD_CLOCK_RATIO_IN_GET_RATIO 0x0
/* enum: Get current clock ratio */
#define          MC_CMD_CLOCK_RATIO_IN_SET_RATIO 0x1
/* enum: Set Rhodium G0 clock (Medford Rhodium only) */
#define          MC_CMD_CLOCK_RATIO_IN_SET_RHODIUM_G0 0x2
/* enum: Set Protium G0 clock (Medford Protium only) */
#define          MC_CMD_CLOCK_RATIO_IN_SET_PROTIUM_G0 0x3
/* enum: Get DUT-time speeds of port types */
#define          MC_CMD_CLOCK_RATIO_IN_GET_PORT_SPEEDS 0x4
/* align the arguments to 32 bits */
#define       MC_CMD_CLOCK_RATIO_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_CLOCK_RATIO_IN_EFTEST_OP_RSVD_LEN 2
/* Clock ratio */
#define       MC_CMD_CLOCK_RATIO_IN_RATIO_OFST 4
#define       MC_CMD_CLOCK_RATIO_IN_RATIO_LEN 2
/* Rhodium/Protium G0 clock in Hz */
#define       MC_CMD_CLOCK_RATIO_IN_G0_HZ_OFST 4
#define       MC_CMD_CLOCK_RATIO_IN_G0_HZ_LEN 4

/* MC_CMD_CLOCK_RATIO_EXT_IN msgrequest */
#define    MC_CMD_CLOCK_RATIO_EXT_IN_LEN 12
/* identifies the test */
#define       MC_CMD_CLOCK_RATIO_EXT_IN_EFTEST_ID_OFST 0
#define       MC_CMD_CLOCK_RATIO_EXT_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_CLOCK_RATIO_EXT_IN_EFTEST_OP_OFST 1
#define       MC_CMD_CLOCK_RATIO_EXT_IN_EFTEST_OP_LEN 1
/*            Enum values, see field(s): */
/*               MC_CMD_CLOCK_RATIO_IN/EFTEST_OP */
/* align the arguments to 32 bits */
#define       MC_CMD_CLOCK_RATIO_EXT_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_CLOCK_RATIO_EXT_IN_EFTEST_OP_RSVD_LEN 2
/* Clock ratio */
#define       MC_CMD_CLOCK_RATIO_EXT_IN_RATIO_OFST 4
#define       MC_CMD_CLOCK_RATIO_EXT_IN_RATIO_LEN 2
/* Rhodium/Protium G0 clock in Hz */
#define       MC_CMD_CLOCK_RATIO_EXT_IN_G0_HZ_OFST 4
#define       MC_CMD_CLOCK_RATIO_EXT_IN_G0_HZ_LEN 4
/* Divider between G0 and Fast Clock (Protium only) */
#define       MC_CMD_CLOCK_RATIO_EXT_IN_CAKE_MODE_OFST 8
#define       MC_CMD_CLOCK_RATIO_EXT_IN_CAKE_MODE_LEN 4
/* Divider between G0 and Fast Clock (Rhodium only) */
#define       MC_CMD_CLOCK_RATIO_EXT_IN_G0_DIV_OFST 8
#define       MC_CMD_CLOCK_RATIO_EXT_IN_G0_DIV_LEN 4

/* MC_CMD_CLOCK_RATIO_OUT msgrequest */
#define    MC_CMD_CLOCK_RATIO_OUT_LEN 2
/* Clock ratio */
#define       MC_CMD_CLOCK_RATIO_OUT_RATIO_OFST 0
#define       MC_CMD_CLOCK_RATIO_OUT_RATIO_LEN 2

/* MC_CMD_CLOCK_RATIO_PORT_SPEEDS_OUT msgresponse */
#define    MC_CMD_CLOCK_RATIO_PORT_SPEEDS_OUT_LEN 12
/* 1G DUT-time port speed in Mbps */
#define       MC_CMD_CLOCK_RATIO_PORT_SPEEDS_OUT_SPEED_1G_OFST 0
#define       MC_CMD_CLOCK_RATIO_PORT_SPEEDS_OUT_SPEED_1G_LEN 4
/* 10G DUT-time port speed in Mbps */
#define       MC_CMD_CLOCK_RATIO_PORT_SPEEDS_OUT_SPEED_10G_OFST 4
#define       MC_CMD_CLOCK_RATIO_PORT_SPEEDS_OUT_SPEED_10G_LEN 4
/* 25G DUT-time port speed in Mbps */
#define       MC_CMD_CLOCK_RATIO_PORT_SPEEDS_OUT_SPEED_25G_OFST 8
#define       MC_CMD_CLOCK_RATIO_PORT_SPEEDS_OUT_SPEED_25G_LEN 4

/* MC_CMD_POWER_MGMT_TEST_RAISE_PME_IN msgrequest */
#define    MC_CMD_POWER_MGMT_TEST_RAISE_PME_IN_LEN 8
/* identifies the test */
#define       MC_CMD_POWER_MGMT_TEST_RAISE_PME_IN_EFTEST_ID_OFST 0
#define       MC_CMD_POWER_MGMT_TEST_RAISE_PME_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_POWER_MGMT_TEST_RAISE_PME_IN_EFTEST_OP_OFST 1
#define       MC_CMD_POWER_MGMT_TEST_RAISE_PME_IN_EFTEST_OP_LEN 1
/* enum: Raise a power management event */
#define          MC_CMD_POWER_MGMT_TEST_RAISE_PME_IN_RAISE_PME 0x0
/* align the arguments to 32 bits */
#define       MC_CMD_POWER_MGMT_TEST_RAISE_PME_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_POWER_MGMT_TEST_RAISE_PME_IN_EFTEST_OP_RSVD_LEN 2
/* The physical function number for which a power management event should be
 * raised
 */
#define       MC_CMD_POWER_MGMT_TEST_RAISE_PME_IN_PF_OFST 4
#define       MC_CMD_POWER_MGMT_TEST_RAISE_PME_IN_PF_LEN 4

/* MC_CMD_POWER_MGMT_TEST_START_LOG_IN msgrequest */
#define    MC_CMD_POWER_MGMT_TEST_START_LOG_IN_LEN 2
/* identifies the test */
#define       MC_CMD_POWER_MGMT_TEST_START_LOG_IN_EFTEST_ID_OFST 0
#define       MC_CMD_POWER_MGMT_TEST_START_LOG_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_POWER_MGMT_TEST_START_LOG_IN_EFTEST_OP_OFST 1
#define       MC_CMD_POWER_MGMT_TEST_START_LOG_IN_EFTEST_OP_LEN 1
/* enum: Start logging thread to log dstate and lstate changes */
#define          MC_CMD_POWER_MGMT_TEST_START_LOG_IN_START_LOG 0x1

/* MC_CMD_POWER_MGMT_TEST_STOP_LOG_IN msgrequest */
#define    MC_CMD_POWER_MGMT_TEST_STOP_LOG_IN_LEN 2
/* identifies the test */
#define       MC_CMD_POWER_MGMT_TEST_STOP_LOG_IN_EFTEST_ID_OFST 0
#define       MC_CMD_POWER_MGMT_TEST_STOP_LOG_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_POWER_MGMT_TEST_STOP_LOG_IN_EFTEST_OP_OFST 1
#define       MC_CMD_POWER_MGMT_TEST_STOP_LOG_IN_EFTEST_OP_LEN 1
/* enum: Stop logging thread */
#define          MC_CMD_POWER_MGMT_TEST_STOP_LOG_IN_STOP_LOG 0x2

/* MC_CMD_POWER_MGMT_TEST_GET_DSTATE_LOG_IN msgrequest */
#define    MC_CMD_POWER_MGMT_TEST_GET_DSTATE_LOG_IN_LEN 8
/* identifies the test */
#define       MC_CMD_POWER_MGMT_TEST_GET_DSTATE_LOG_IN_EFTEST_ID_OFST 0
#define       MC_CMD_POWER_MGMT_TEST_GET_DSTATE_LOG_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_POWER_MGMT_TEST_GET_DSTATE_LOG_IN_EFTEST_OP_OFST 1
#define       MC_CMD_POWER_MGMT_TEST_GET_DSTATE_LOG_IN_EFTEST_OP_LEN 1
/* enum: Get the DStates of the PFs */
#define          MC_CMD_POWER_MGMT_TEST_GET_DSTATE_LOG_IN_GET_DSTATE_LOG 0x3
/* align the arguments to 32 bits */
#define       MC_CMD_POWER_MGMT_TEST_GET_DSTATE_LOG_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_POWER_MGMT_TEST_GET_DSTATE_LOG_IN_EFTEST_OP_RSVD_LEN 2
/* The physical function number for which the log is requested */
#define       MC_CMD_POWER_MGMT_TEST_GET_DSTATE_LOG_IN_PF_OFST 4
#define       MC_CMD_POWER_MGMT_TEST_GET_DSTATE_LOG_IN_PF_LEN 4

/* MC_CMD_POWER_MGMT_TEST_GET_DSTATE_LOG_OUT msgresponse */
#define    MC_CMD_POWER_MGMT_TEST_GET_DSTATE_LOG_OUT_LENMIN 5
#define    MC_CMD_POWER_MGMT_TEST_GET_DSTATE_LOG_OUT_LENMAX 252
#define    MC_CMD_POWER_MGMT_TEST_GET_DSTATE_LOG_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_POWER_MGMT_TEST_GET_DSTATE_LOG_OUT_LEN(num) (4+1*(num))
#define    MC_CMD_POWER_MGMT_TEST_GET_DSTATE_LOG_OUT_DSTATES_NUM(len) (((len)-4)/1)
/* Number of dstate entries in log */
#define       MC_CMD_POWER_MGMT_TEST_GET_DSTATE_LOG_OUT_NUM_ENTRIES_OFST 0
#define       MC_CMD_POWER_MGMT_TEST_GET_DSTATE_LOG_OUT_NUM_ENTRIES_LEN 4
/* Table of state entries */
#define       MC_CMD_POWER_MGMT_TEST_GET_DSTATE_LOG_OUT_DSTATES_OFST 4
#define       MC_CMD_POWER_MGMT_TEST_GET_DSTATE_LOG_OUT_DSTATES_LEN 1
#define       MC_CMD_POWER_MGMT_TEST_GET_DSTATE_LOG_OUT_DSTATES_MINNUM 1
#define       MC_CMD_POWER_MGMT_TEST_GET_DSTATE_LOG_OUT_DSTATES_MAXNUM 248
#define       MC_CMD_POWER_MGMT_TEST_GET_DSTATE_LOG_OUT_DSTATES_MAXNUM_MCDI2 1016

/* MC_CMD_POWER_MGMT_TEST_GET_LSTATE_LOG_IN msgrequest */
#define    MC_CMD_POWER_MGMT_TEST_GET_LSTATE_LOG_IN_LEN 2
/* identifies the test */
#define       MC_CMD_POWER_MGMT_TEST_GET_LSTATE_LOG_IN_EFTEST_ID_OFST 0
#define       MC_CMD_POWER_MGMT_TEST_GET_LSTATE_LOG_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_POWER_MGMT_TEST_GET_LSTATE_LOG_IN_EFTEST_OP_OFST 1
#define       MC_CMD_POWER_MGMT_TEST_GET_LSTATE_LOG_IN_EFTEST_OP_LEN 1
/* enum: Get a log of the link state transitions */
#define          MC_CMD_POWER_MGMT_TEST_GET_LSTATE_LOG_IN_GET_LSTATE_LOG 0x4

/* MC_CMD_POWER_MGMT_TEST_GET_LSTATE_LOG_OUT msgresponse */
#define    MC_CMD_POWER_MGMT_TEST_GET_LSTATE_LOG_OUT_LENMIN 5
#define    MC_CMD_POWER_MGMT_TEST_GET_LSTATE_LOG_OUT_LENMAX 252
#define    MC_CMD_POWER_MGMT_TEST_GET_LSTATE_LOG_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_POWER_MGMT_TEST_GET_LSTATE_LOG_OUT_LEN(num) (4+1*(num))
#define    MC_CMD_POWER_MGMT_TEST_GET_LSTATE_LOG_OUT_LSTATES_NUM(len) (((len)-4)/1)
/* Number of link state entries in log */
#define       MC_CMD_POWER_MGMT_TEST_GET_LSTATE_LOG_OUT_NUM_ENTRIES_OFST 0
#define       MC_CMD_POWER_MGMT_TEST_GET_LSTATE_LOG_OUT_NUM_ENTRIES_LEN 4
/* Table of state entries */
#define       MC_CMD_POWER_MGMT_TEST_GET_LSTATE_LOG_OUT_LSTATES_OFST 4
#define       MC_CMD_POWER_MGMT_TEST_GET_LSTATE_LOG_OUT_LSTATES_LEN 1
#define       MC_CMD_POWER_MGMT_TEST_GET_LSTATE_LOG_OUT_LSTATES_MINNUM 1
#define       MC_CMD_POWER_MGMT_TEST_GET_LSTATE_LOG_OUT_LSTATES_MAXNUM 248
#define       MC_CMD_POWER_MGMT_TEST_GET_LSTATE_LOG_OUT_LSTATES_MAXNUM_MCDI2 1016

/* MC_CMD_PIOTEST_MSG_IN msgrequest */
#define    MC_CMD_PIOTEST_MSG_IN_LEN 8
/* identifies the test */
#define       MC_CMD_PIOTEST_MSG_IN_EFTEST_ID_OFST 0
#define       MC_CMD_PIOTEST_MSG_IN_EFTEST_ID_LEN 1
/* PIOTEST test-specific operation */
#define       MC_CMD_PIOTEST_MSG_IN_EFTEST_OP_OFST 1
#define       MC_CMD_PIOTEST_MSG_IN_EFTEST_OP_LEN 1
#define          MC_CMD_PIOTEST_MSG_IN_OPEN_MSG 0x0 /* enum */
#define          MC_CMD_PIOTEST_MSG_IN_CLOSE_MSG 0x1 /* enum */
#define          MC_CMD_PIOTEST_MSG_IN_POLL_MSG 0x2 /* enum */
/* align the next field to 32 bits */
#define       MC_CMD_PIOTEST_MSG_IN_PAD_OFST 2
#define       MC_CMD_PIOTEST_MSG_IN_PAD_LEN 2
/* This is the first parameter */
#define       MC_CMD_PIOTEST_MSG_IN_PARAMETER_ONE_OFST 4
#define       MC_CMD_PIOTEST_MSG_IN_PARAMETER_ONE_LEN 4

/* MC_CMD_PIOTEST_MSG_OUT msgresponse: indexed by enum_packet_test_rc */
#define    MC_CMD_PIOTEST_MSG_OUT_LENMIN 4
#define    MC_CMD_PIOTEST_MSG_OUT_LENMAX 252
#define    MC_CMD_PIOTEST_MSG_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_PIOTEST_MSG_OUT_LEN(num) (0+4*(num))
#define    MC_CMD_PIOTEST_MSG_OUT_TEST_RESULTS_NUM(len) (((len)-0)/4)
#define       MC_CMD_PIOTEST_MSG_OUT_TEST_RESULTS_OFST 0
#define       MC_CMD_PIOTEST_MSG_OUT_TEST_RESULTS_LEN 4
#define       MC_CMD_PIOTEST_MSG_OUT_TEST_RESULTS_MINNUM 1
#define       MC_CMD_PIOTEST_MSG_OUT_TEST_RESULTS_MAXNUM 63
#define       MC_CMD_PIOTEST_MSG_OUT_TEST_RESULTS_MAXNUM_MCDI2 255

/* MC_CMD_CSR_ACCESS_START_IN msgrequest */
#define    MC_CMD_CSR_ACCESS_START_IN_LEN 28
/* identifies the test */
#define       MC_CMD_CSR_ACCESS_START_IN_EFTEST_ID_OFST 0
#define       MC_CMD_CSR_ACCESS_START_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_CSR_ACCESS_START_IN_EFTEST_OP_OFST 1
#define       MC_CMD_CSR_ACCESS_START_IN_EFTEST_OP_LEN 1
#define          MC_CMD_CSR_ACCESS_START_IN_STOP 0x0 /* enum */
#define          MC_CMD_CSR_ACCESS_START_IN_START_READ 0x1 /* enum */
#define          MC_CMD_CSR_ACCESS_START_IN_START_WRITE 0x2 /* enum */
#define          MC_CMD_CSR_ACCESS_START_IN_START_WRITE_READ 0x3 /* enum */
#define          MC_CMD_CSR_ACCESS_START_IN_START_WRITE_SAFE 0x4 /* enum */
#define          MC_CMD_CSR_ACCESS_START_IN_TABLE_SCAN 0x5 /* enum */
#define          MC_CMD_CSR_ACCESS_START_IN_START_CTPIO_READ 0x6 /* enum */
/* Align next field to 32bits */
#define       MC_CMD_CSR_ACCESS_START_IN_PAD_OFST 2
#define       MC_CMD_CSR_ACCESS_START_IN_PAD_LEN 2
/* In DPCPU clk cycles */
#define       MC_CMD_CSR_ACCESS_START_IN_START_DELAY_OFST 4
#define       MC_CMD_CSR_ACCESS_START_IN_START_DELAY_LEN 4
/* Zero means until stopped. Only space in response for 4 read values */
#define       MC_CMD_CSR_ACCESS_START_IN_RPT_COUNT_OFST 8
#define       MC_CMD_CSR_ACCESS_START_IN_RPT_COUNT_LEN 4
/* In DPCPU clk cycles. Setting bit 15 forces the use of a PRNG to generate the
 * values. Bits 14-11 control the number of bits used from the PRNG to generate
 * the delay. Bits 15-0 provide the initial seed.
 */
#define       MC_CMD_CSR_ACCESS_START_IN_GAP_DELAY_OFST 12
#define       MC_CMD_CSR_ACCESS_START_IN_GAP_DELAY_LEN 4
/* Register data to write. Only valid in write/write-read. */
#define       MC_CMD_CSR_ACCESS_START_IN_DATA_OFST 16
#define       MC_CMD_CSR_ACCESS_START_IN_DATA_LEN 4
/* Register address. */
#define       MC_CMD_CSR_ACCESS_START_IN_ADDRESS_OFST 20
#define       MC_CMD_CSR_ACCESS_START_IN_ADDRESS_LEN 4
/* Address increment */
#define       MC_CMD_CSR_ACCESS_START_IN_STEP_OFST 24
#define       MC_CMD_CSR_ACCESS_START_IN_STEP_LEN 4

/* MC_CMD_CSR_ACCESS_STOP_IN msgrequest */
#define    MC_CMD_CSR_ACCESS_STOP_IN_LEN 2
/* identifies the test */
#define       MC_CMD_CSR_ACCESS_STOP_IN_EFTEST_ID_OFST 0
#define       MC_CMD_CSR_ACCESS_STOP_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_CSR_ACCESS_STOP_IN_EFTEST_OP_OFST 1
#define       MC_CMD_CSR_ACCESS_STOP_IN_EFTEST_OP_LEN 1
#define          MC_CMD_CSR_ACCESS_STOP_IN_STOP_RETURN_RESULT 0x0 /* enum */

/* MC_CMD_CSR_ACCESS_STOP_OUT msgresponse */
#define    MC_CMD_CSR_ACCESS_STOP_OUT_LEN 28
#define       MC_CMD_CSR_ACCESS_STOP_OUT_STATUS_OFST 0
#define       MC_CMD_CSR_ACCESS_STOP_OUT_STATUS_LEN 4
#define          MC_CMD_CSR_ACCESS_STOP_OUT_STATUS_BUSY 0x8000000 /* enum */
#define       MC_CMD_CSR_ACCESS_STOP_OUT_READ_COUNT_OFST 4
#define       MC_CMD_CSR_ACCESS_STOP_OUT_READ_COUNT_LEN 4
#define       MC_CMD_CSR_ACCESS_STOP_OUT_READ_VAL_1_OFST 8
#define       MC_CMD_CSR_ACCESS_STOP_OUT_READ_VAL_1_LEN 4
#define       MC_CMD_CSR_ACCESS_STOP_OUT_READ_VAL_2_OFST 12
#define       MC_CMD_CSR_ACCESS_STOP_OUT_READ_VAL_2_LEN 4
#define       MC_CMD_CSR_ACCESS_STOP_OUT_READ_VAL_3_OFST 16
#define       MC_CMD_CSR_ACCESS_STOP_OUT_READ_VAL_3_LEN 4
#define       MC_CMD_CSR_ACCESS_STOP_OUT_READ_VAL_4_OFST 20
#define       MC_CMD_CSR_ACCESS_STOP_OUT_READ_VAL_4_LEN 4
#define       MC_CMD_CSR_ACCESS_STOP_OUT_ADDRESS_OFST 24
#define       MC_CMD_CSR_ACCESS_STOP_OUT_ADDRESS_LEN 4

/* MC_CMD_CSR_ACCESS_TABLE_SCAN_IN msgrequest */
#define    MC_CMD_CSR_ACCESS_TABLE_SCAN_IN_LEN 20
/* identifies the test */
#define       MC_CMD_CSR_ACCESS_TABLE_SCAN_IN_EFTEST_ID_OFST 0
#define       MC_CMD_CSR_ACCESS_TABLE_SCAN_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_CSR_ACCESS_TABLE_SCAN_IN_EFTEST_OP_OFST 1
#define       MC_CMD_CSR_ACCESS_TABLE_SCAN_IN_EFTEST_OP_LEN 1
#define          MC_CMD_CSR_ACCESS_TABLE_SCAN_IN_TABLE_SCAN 0x5 /* enum */
#define       MC_CMD_CSR_ACCESS_TABLE_SCAN_IN_PAD_OFST 2
#define       MC_CMD_CSR_ACCESS_TABLE_SCAN_IN_PAD_LEN 2
#define       MC_CMD_CSR_ACCESS_TABLE_SCAN_IN_START_ADDRESS_OFST 4
#define       MC_CMD_CSR_ACCESS_TABLE_SCAN_IN_START_ADDRESS_LEN 4
#define       MC_CMD_CSR_ACCESS_TABLE_SCAN_IN_STEP_OFST 8
#define       MC_CMD_CSR_ACCESS_TABLE_SCAN_IN_STEP_LEN 4
#define       MC_CMD_CSR_ACCESS_TABLE_SCAN_IN_COUNT_OFST 12
#define       MC_CMD_CSR_ACCESS_TABLE_SCAN_IN_COUNT_LEN 4
#define       MC_CMD_CSR_ACCESS_TABLE_SCAN_IN_MASK_OFST 16
#define       MC_CMD_CSR_ACCESS_TABLE_SCAN_IN_MASK_LEN 4

/* MC_CMD_CSR_ACCESS_TABLE_SCAN_OUT msgresponse */
#define    MC_CMD_CSR_ACCESS_TABLE_SCAN_OUT_LEN 4
#define       MC_CMD_CSR_ACCESS_TABLE_SCAN_OUT_RESULT_OFST 0
#define       MC_CMD_CSR_ACCESS_TABLE_SCAN_OUT_RESULT_LEN 4

/* MC_CMD_MC_DOORBELL_STRESS_IN msgrequest */
#define    MC_CMD_MC_DOORBELL_STRESS_IN_LEN 2
/* identifies the test */
#define       MC_CMD_MC_DOORBELL_STRESS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_MC_DOORBELL_STRESS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_MC_DOORBELL_STRESS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_MC_DOORBELL_STRESS_IN_EFTEST_OP_LEN 1
#define          MC_CMD_MC_DOORBELL_STRESS_IN_START 0x0 /* enum */
#define          MC_CMD_MC_DOORBELL_STRESS_IN_STOP 0x1 /* enum */

/* MC_CMD_TLP_STRESS_IN msgrequest */
#define    MC_CMD_TLP_STRESS_IN_LEN 28
/* identifies the test */
#define       MC_CMD_TLP_STRESS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_TLP_STRESS_IN_EFTEST_ID_LEN 1
/* the operation requested. Note that 3 is used by MC_CMD_TLP_STRESS_POLL_IN */
#define       MC_CMD_TLP_STRESS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_TLP_STRESS_IN_EFTEST_OP_LEN 1
#define          MC_CMD_TLP_STRESS_IN_READ 0x0 /* enum */
#define          MC_CMD_TLP_STRESS_IN_WRITE 0x1 /* enum */
#define          MC_CMD_TLP_STRESS_IN_READ_WRITE 0x2 /* enum */
#define          MC_CMD_TLP_STRESS_IN_READ_WRITE_HOG 0x4 /* enum */
#define          MC_CMD_TLP_STRESS_IN_READ_VERIFY 0x5 /* enum */
#define          MC_CMD_TLP_STRESS_IN_READ_HOG_VERIFY 0x6 /* enum */
/* Align next field to 32bits */
#define       MC_CMD_TLP_STRESS_IN_PAD_OFST 2
#define       MC_CMD_TLP_STRESS_IN_PAD_LEN 2
/* Number of iterations */
#define       MC_CMD_TLP_STRESS_IN_ITERATIONS_OFST 4
#define       MC_CMD_TLP_STRESS_IN_ITERATIONS_LEN 4
/* TLP length */
#define       MC_CMD_TLP_STRESS_IN_LEN_OFST 8
#define       MC_CMD_TLP_STRESS_IN_LEN_LEN 4
/* Buffer address in host memory for reads (low 32 bits) */
#define       MC_CMD_TLP_STRESS_IN_RADDR_LO_OFST 12
#define       MC_CMD_TLP_STRESS_IN_RADDR_LO_LEN 4
/* Buffer address in host memory for reads (high 32 bits) */
#define       MC_CMD_TLP_STRESS_IN_RADDR_HI_OFST 16
#define       MC_CMD_TLP_STRESS_IN_RADDR_HI_LEN 4
/* Buffer address in host memory for writes (low 32 bits) */
#define       MC_CMD_TLP_STRESS_IN_WADDR_LO_OFST 20
#define       MC_CMD_TLP_STRESS_IN_WADDR_LO_LEN 4
/* Buffer address in host memory for writes (high 32 bits) */
#define       MC_CMD_TLP_STRESS_IN_WADDR_HI_OFST 24
#define       MC_CMD_TLP_STRESS_IN_WADDR_HI_LEN 4

/* MC_CMD_TLP_STRESS_OUT msgresponse */
#define    MC_CMD_TLP_STRESS_OUT_LEN 4
/* Pointer to thread structure */
#define       MC_CMD_TLP_STRESS_OUT_THREAD_OFST 0
#define       MC_CMD_TLP_STRESS_OUT_THREAD_LEN 4

/* MC_CMD_TLP_STRESS_POLL_IN msgrequest */
#define    MC_CMD_TLP_STRESS_POLL_IN_LEN 8
/* identifies the test */
#define       MC_CMD_TLP_STRESS_POLL_IN_EFTEST_ID_OFST 0
#define       MC_CMD_TLP_STRESS_POLL_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_TLP_STRESS_POLL_IN_EFTEST_OP_OFST 1
#define       MC_CMD_TLP_STRESS_POLL_IN_EFTEST_OP_LEN 1
#define          MC_CMD_TLP_STRESS_POLL_IN_POLL 0x3 /* enum */
/* Align next field to 32bits */
#define       MC_CMD_TLP_STRESS_POLL_IN_PAD_OFST 2
#define       MC_CMD_TLP_STRESS_POLL_IN_PAD_LEN 2
/* Pointer to thread structure */
#define       MC_CMD_TLP_STRESS_POLL_IN_THREAD_OFST 4
#define       MC_CMD_TLP_STRESS_POLL_IN_THREAD_LEN 4

/* MC_CMD_TLP_STRESS_POLL_OUT msgresponse */
#define    MC_CMD_TLP_STRESS_POLL_OUT_LEN 12
/* Test result */
#define       MC_CMD_TLP_STRESS_POLL_OUT_RC_OFST 0
#define       MC_CMD_TLP_STRESS_POLL_OUT_RC_LEN 4
/* Number of successful TLP transactions */
#define       MC_CMD_TLP_STRESS_POLL_OUT_SUCCESS_OFST 4
#define       MC_CMD_TLP_STRESS_POLL_OUT_SUCCESS_LEN 4
/* Number of failed TLP transactions (only for reads) */
#define       MC_CMD_TLP_STRESS_POLL_OUT_FAIL_OFST 8
#define       MC_CMD_TLP_STRESS_POLL_OUT_FAIL_LEN 4

/* MC_CMD_KITCHEN_SINK_IN msgrequest */
#define    MC_CMD_KITCHEN_SINK_IN_LEN 2
/* identifies the test */
#define       MC_CMD_KITCHEN_SINK_IN_EFTEST_ID_OFST 0
#define       MC_CMD_KITCHEN_SINK_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_KITCHEN_SINK_IN_EFTEST_OP_OFST 1
#define       MC_CMD_KITCHEN_SINK_IN_EFTEST_OP_LEN 1
#define          MC_CMD_KITCHEN_SINK_IN_RT_TIMER 0x0 /* enum */
#define          MC_CMD_KITCHEN_SINK_IN_WATCHDOG 0x1 /* enum */

/* MC_CMD_EFTEST_PE_INSTALL_IN msgrequest */
#define    MC_CMD_EFTEST_PE_INSTALL_IN_LENMIN 20
#define    MC_CMD_EFTEST_PE_INSTALL_IN_LENMAX 252
#define    MC_CMD_EFTEST_PE_INSTALL_IN_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_PE_INSTALL_IN_LEN(num) (16+4*(num))
#define    MC_CMD_EFTEST_PE_INSTALL_IN_INSTR_NUM(len) (((len)-16)/4)
/* identifies the test */
#define       MC_CMD_EFTEST_PE_INSTALL_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_PE_INSTALL_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_PE_INSTALL_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_PE_INSTALL_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_PE_INSTALL_IN_PE_INSTALL 0x0 /* enum */
/* Align next field to 32bits */
#define       MC_CMD_EFTEST_PE_INSTALL_IN_PAD_OFST 2
#define       MC_CMD_EFTEST_PE_INSTALL_IN_PAD_LEN 2
#define          MC_CMD_EFTEST_PE_INSTALL_IN_PE_REQ_MAX_TX 0xe /* enum */
#define          MC_CMD_EFTEST_PE_INSTALL_IN_PE_REQ_MAX_RX 0xe /* enum */
/* 1 - TX, 0 - RX */
#define       MC_CMD_EFTEST_PE_INSTALL_IN_TX_OFST 4
#define       MC_CMD_EFTEST_PE_INSTALL_IN_TX_LEN 4
/* TX when TX_SRC is HOST and RX when RX_DST in HOST: absolute dmaq; TX when
 * TX_SRC is SFFF: sfff_destination_id (relative to TXDP specified by
 * TXDP0/TXDP1); RX when RX_DST is P0 or P1: sfff_destination_id (relative to
 * TXDP specified by P0/P1)
 */
#define       MC_CMD_EFTEST_PE_INSTALL_IN_DMAQ_OR_SFFF_DEST_ID_OFST 8
#define       MC_CMD_EFTEST_PE_INSTALL_IN_DMAQ_OR_SFFF_DEST_ID_LEN 2
#define       MC_CMD_EFTEST_PE_INSTALL_IN_TX_SRC_OR_RX_DST_OFST 10
#define       MC_CMD_EFTEST_PE_INSTALL_IN_TX_SRC_OR_RX_DST_LEN 2
#define          MC_CMD_EFTEST_PE_INSTALL_IN_TX_SRC_HOST 0x0 /* enum */
#define          MC_CMD_EFTEST_PE_INSTALL_IN_TX_SRC_SFFF_TXDP0 0x1 /* enum */
#define          MC_CMD_EFTEST_PE_INSTALL_IN_TX_SRC_SFFF_TXDP1 0x2 /* enum */
#define       MC_CMD_EFTEST_PE_INSTALL_IN_DUMMY2_OFST 10
#define       MC_CMD_EFTEST_PE_INSTALL_IN_DUMMY2_LEN 2
/* enum: Backward compatibility with older snapper; don't use. */
#define          MC_CMD_EFTEST_PE_INSTALL_IN_RX_DST_BACKWARD_COMPATIBILTY 0x0
#define          MC_CMD_EFTEST_PE_INSTALL_IN_RX_DST_HOST 0x8 /* enum */
#define          MC_CMD_EFTEST_PE_INSTALL_IN_RX_DST_MC 0x4 /* enum */
#define          MC_CMD_EFTEST_PE_INSTALL_IN_RX_DST_P0 0x2 /* enum */
#define          MC_CMD_EFTEST_PE_INSTALL_IN_RX_DST_P1 0x1 /* enum */
/* Instruction count */
#define       MC_CMD_EFTEST_PE_INSTALL_IN_INSTR_COUNT_OFST 12
#define       MC_CMD_EFTEST_PE_INSTALL_IN_INSTR_COUNT_LEN 4
/* Instructions */
#define       MC_CMD_EFTEST_PE_INSTALL_IN_INSTR_OFST 16
#define       MC_CMD_EFTEST_PE_INSTALL_IN_INSTR_LEN 4
#define       MC_CMD_EFTEST_PE_INSTALL_IN_INSTR_MINNUM 0
#define       MC_CMD_EFTEST_PE_INSTALL_IN_INSTR_MAXNUM 59
#define       MC_CMD_EFTEST_PE_INSTALL_IN_INSTR_MAXNUM_MCDI2 251
#define        MC_CMD_EFTEST_PE_INSTALL_IN_IMM1_OFST 16
#define        MC_CMD_EFTEST_PE_INSTALL_IN_IMM1_LBN 0
#define        MC_CMD_EFTEST_PE_INSTALL_IN_IMM1_WIDTH 3
#define          MC_CMD_EFTEST_PE_INSTALL_IN_INSRT_MODE_LOAD_OR_OVERWRITE 0x0 /* enum */
#define          MC_CMD_EFTEST_PE_INSTALL_IN_INSRT_MODE_LOAD_OR_ADD 0x1 /* enum */
#define          MC_CMD_EFTEST_PE_INSTALL_IN_INSRT_MODE_LOAD_OR_AND 0x5 /* enum */
#define          MC_CMD_EFTEST_PE_INSTALL_IN_INSRT_MODE_DELETE_OR_INSERT_FRONT 0x2 /* enum */
#define          MC_CMD_EFTEST_PE_INSTALL_IN_INSRT_MODE_DELETE_OR_INSERT_BACK 0x3 /* enum */
#define          MC_CMD_EFTEST_PE_INSTALL_IN_INSRT_MODE_DEFAULT_TX 0x0 /* enum */
#define          MC_CMD_EFTEST_PE_INSTALL_IN_INSRT_MODE_DEFAULT_RX 0x2 /* enum */
#define        MC_CMD_EFTEST_PE_INSTALL_IN_DUMMY_OFST 16
#define        MC_CMD_EFTEST_PE_INSTALL_IN_DUMMY_LBN 0
#define        MC_CMD_EFTEST_PE_INSTALL_IN_DUMMY_WIDTH 3
#define          MC_CMD_EFTEST_PE_INSTALL_IN_ALGN_MODE_SOP 0x0 /* enum */
#define          MC_CMD_EFTEST_PE_INSTALL_IN_ALGN_MODE_L3 0x1 /* enum */
#define          MC_CMD_EFTEST_PE_INSTALL_IN_ALGN_MODE_L4 0x2 /* enum */
#define          MC_CMD_EFTEST_PE_INSTALL_IN_ALGN_MODE_PLD 0x3 /* enum */
#define          MC_CMD_EFTEST_PE_INSTALL_IN_ALGN_MODE_INNER_L3 0x4 /* enum */
#define          MC_CMD_EFTEST_PE_INSTALL_IN_ALGN_MODE_INNER_L4 0x5 /* enum */
#define          MC_CMD_EFTEST_PE_INSTALL_IN_ALGN_MODE_INNER_PLD 0x6 /* enum */
#define          MC_CMD_EFTEST_PE_INSTALL_IN_ALGN_MODE_DEFAULT 0x0 /* enum */
#define        MC_CMD_EFTEST_PE_INSTALL_IN_DUMMIER_OFST 16
#define        MC_CMD_EFTEST_PE_INSTALL_IN_DUMMIER_LBN 0
#define        MC_CMD_EFTEST_PE_INSTALL_IN_DUMMIER_WIDTH 3
#define          MC_CMD_EFTEST_PE_INSTALL_IN_IMM1_COLLECT_NOW 0x0 /* enum */
#define          MC_CMD_EFTEST_PE_INSTALL_IN_IMM1_DEFER_COLLECT 0x1 /* enum */
#define        MC_CMD_EFTEST_PE_INSTALL_IN_DUMMIEST_OFST 16
#define        MC_CMD_EFTEST_PE_INSTALL_IN_DUMMIEST_LBN 0
#define        MC_CMD_EFTEST_PE_INSTALL_IN_DUMMIEST_WIDTH 3
#define          MC_CMD_EFTEST_PE_INSTALL_IN_IMM1_COLLECT_RD1 0x0 /* enum */
#define          MC_CMD_EFTEST_PE_INSTALL_IN_IMM1_COLLECT_RD2 0x1 /* enum */
#define        MC_CMD_EFTEST_PE_INSTALL_IN_OP_OFST 16
#define        MC_CMD_EFTEST_PE_INSTALL_IN_OP_LBN 4
#define        MC_CMD_EFTEST_PE_INSTALL_IN_OP_WIDTH 4
#define          MC_CMD_EFTEST_PE_INSTALL_IN_OP_NOP 0x0 /* enum */
#define          MC_CMD_EFTEST_PE_INSTALL_IN_OP_LD1_ACC 0x1 /* enum */
#define          MC_CMD_EFTEST_PE_INSTALL_IN_OP_LD1_IGN 0x2 /* enum */
#define          MC_CMD_EFTEST_PE_INSTALL_IN_OP_ST1_ACC 0x3 /* enum */
#define          MC_CMD_EFTEST_PE_INSTALL_IN_OP_ST1_IMM 0x4 /* enum */
#define          MC_CMD_EFTEST_PE_INSTALL_IN_OP_LD_CLCT 0x5 /* enum */
#define          MC_CMD_EFTEST_PE_INSTALL_IN_OP_PE_CSUM_IMM 0x6 /* enum */
#define          MC_CMD_EFTEST_PE_INSTALL_IN_OP_LD2_ACC 0x9 /* enum */
#define          MC_CMD_EFTEST_PE_INSTALL_IN_OP_LD2_IGN 0xa /* enum */
#define          MC_CMD_EFTEST_PE_INSTALL_IN_OP_ST2_ACC 0xb /* enum */
#define          MC_CMD_EFTEST_PE_INSTALL_IN_OP_ST2_IMM 0xc /* enum */
#define          MC_CMD_EFTEST_PE_INSTALL_IN_OP_INSRT_MODE 0xd /* enum */
#define          MC_CMD_EFTEST_PE_INSTALL_IN_OP_ALGN_MODE 0xe /* enum */
#define          MC_CMD_EFTEST_PE_INSTALL_IN_OP_RTN 0xf /* enum */
#define        MC_CMD_EFTEST_PE_INSTALL_IN_OFST_OFST 16
#define        MC_CMD_EFTEST_PE_INSTALL_IN_OFST_LBN 8
#define        MC_CMD_EFTEST_PE_INSTALL_IN_OFST_WIDTH 8
#define        MC_CMD_EFTEST_PE_INSTALL_IN_IMM2_OFST 16
#define        MC_CMD_EFTEST_PE_INSTALL_IN_IMM2_LBN 16
#define        MC_CMD_EFTEST_PE_INSTALL_IN_IMM2_WIDTH 16

/* MC_CMD_EFTEST_PE_INSTALL_OUT msgresponse */
#define    MC_CMD_EFTEST_PE_INSTALL_OUT_LEN 4
/* HANDLE */
#define       MC_CMD_EFTEST_PE_INSTALL_OUT_HANDLE_OFST 0
#define       MC_CMD_EFTEST_PE_INSTALL_OUT_HANDLE_LEN 4
#define          MC_CMD_EFTEST_PE_INSTALL_OUT_HANDLE_NULL 0xdeadbeef /* enum */

/* MC_CMD_EFTEST_PE_UNINSTALL_IN msgrequest */
#define    MC_CMD_EFTEST_PE_UNINSTALL_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_PE_UNINSTALL_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_PE_UNINSTALL_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_PE_UNINSTALL_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_PE_UNINSTALL_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_PE_UNINSTALL_IN_PE_UNINSTALL 0x1 /* enum */
/* Align next field to 32bits */
#define       MC_CMD_EFTEST_PE_UNINSTALL_IN_PAD_OFST 2
#define       MC_CMD_EFTEST_PE_UNINSTALL_IN_PAD_LEN 2
/* HANDLE */
#define       MC_CMD_EFTEST_PE_UNINSTALL_IN_HANDLE_OFST 4
#define       MC_CMD_EFTEST_PE_UNINSTALL_IN_HANDLE_LEN 4

/* MC_CMD_BIU_TEST_IN msgrequest */
#define    MC_CMD_BIU_TEST_IN_LEN 24
/* identifies the test */
#define       MC_CMD_BIU_TEST_IN_EFTEST_ID_OFST 0
#define       MC_CMD_BIU_TEST_IN_EFTEST_ID_LEN 1
/* PD test-specific operation */
#define       MC_CMD_BIU_TEST_IN_EFTEST_OP_OFST 1
#define       MC_CMD_BIU_TEST_IN_EFTEST_OP_LEN 1
#define          MC_CMD_BIU_TEST_IN_TABLE_AGITATOR_OFF 0x0 /* enum */
#define          MC_CMD_BIU_TEST_IN_TABLE_AGITATOR_ON 0x1 /* enum */
/* align the arguments to 32 bits */
#define       MC_CMD_BIU_TEST_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_BIU_TEST_IN_EFTEST_OP_RSVD_LEN 2
/* PF to use when writing to tables */
#define       MC_CMD_BIU_TEST_IN_PF_OFST 4
#define       MC_CMD_BIU_TEST_IN_PF_LEN 4
/* VF to use when writing to tables */
#define       MC_CMD_BIU_TEST_IN_VF_OFST 8
#define       MC_CMD_BIU_TEST_IN_VF_LEN 4
/* Interrupt vector to use when writing to tables */
#define       MC_CMD_BIU_TEST_IN_INTVEC_OFST 12
#define       MC_CMD_BIU_TEST_IN_INTVEC_LEN 4
/* Function number to use when writing to tables */
#define       MC_CMD_BIU_TEST_IN_FNUM_OFST 16
#define       MC_CMD_BIU_TEST_IN_FNUM_LEN 4
/* VI (absolute) to use when writing to tables */
#define       MC_CMD_BIU_TEST_IN_VI_OFST 20
#define       MC_CMD_BIU_TEST_IN_VI_LEN 4

/* MC_CMD_BUFTBL_INIT_IN msgrequest */
#define    MC_CMD_BUFTBL_INIT_IN_LEN 4
/* identifies the test */
#define       MC_CMD_BUFTBL_INIT_IN_EFTEST_ID_OFST 0
#define       MC_CMD_BUFTBL_INIT_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_BUFTBL_INIT_IN_EFTEST_OP_OFST 1
#define       MC_CMD_BUFTBL_INIT_IN_EFTEST_OP_LEN 1
#define          MC_CMD_BUFTBL_INIT_IN_BUFTBL_INIT 0x0 /* enum */
/* align the arguments to 32 bits */
#define       MC_CMD_BUFTBL_INIT_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_BUFTBL_INIT_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_PDMA_STRESS_INIT_IN msgrequest */
#define    MC_CMD_EFTEST_PDMA_STRESS_INIT_IN_LEN 56
/* identifies the test */
#define       MC_CMD_EFTEST_PDMA_STRESS_INIT_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_PDMA_STRESS_INIT_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_PDMA_STRESS_INIT_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_PDMA_STRESS_INIT_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_PDMA_STRESS_INIT_IN_INIT 0x0 /* enum */
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_PDMA_STRESS_INIT_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_PDMA_STRESS_INIT_IN_EFTEST_OP_RSVD_LEN 2
/* The requested port */
#define       MC_CMD_EFTEST_PDMA_STRESS_INIT_IN_PORT_OFST 4
#define       MC_CMD_EFTEST_PDMA_STRESS_INIT_IN_PORT_LEN 4
/*            Enum values, see field(s): */
/*               MC_CMD_FILTER_ALLOC_IN/PORT */
/* The source field to put in the FIW */
#define       MC_CMD_EFTEST_PDMA_STRESS_INIT_IN_SRC_OFST 8
#define       MC_CMD_EFTEST_PDMA_STRESS_INIT_IN_SRC_LEN 4
/*            Enum values, see field(s): */
/*               MC_CMD_FILTER_ALLOC_IN/ECHO_SRC */
/* Destination mac */
#define       MC_CMD_EFTEST_PDMA_STRESS_INIT_IN_DST_MACADDR_OFST 12
#define       MC_CMD_EFTEST_PDMA_STRESS_INIT_IN_DST_MACADDR_LEN 6
/* align */
#define       MC_CMD_EFTEST_PDMA_STRESS_INIT_IN_DST_MACADDR_RSVD_OFST 18
#define       MC_CMD_EFTEST_PDMA_STRESS_INIT_IN_DST_MACADDR_RSVD_LEN 2
/* Destination mac */
#define       MC_CMD_EFTEST_PDMA_STRESS_INIT_IN_SRC_MACADDR_OFST 20
#define       MC_CMD_EFTEST_PDMA_STRESS_INIT_IN_SRC_MACADDR_LEN 6
/* align */
#define       MC_CMD_EFTEST_PDMA_STRESS_INIT_IN_SRC_MACADDR_RSVD_OFST 26
#define       MC_CMD_EFTEST_PDMA_STRESS_INIT_IN_SRC_MACADDR_RSVD_LEN 2
#define       MC_CMD_EFTEST_PDMA_STRESS_INIT_IN_FLAGS_OFST 28
#define       MC_CMD_EFTEST_PDMA_STRESS_INIT_IN_FLAGS_LEN 4
#define        MC_CMD_EFTEST_PDMA_STRESS_INIT_IN_USE_FC_OFST 28
#define        MC_CMD_EFTEST_PDMA_STRESS_INIT_IN_USE_FC_LBN 0
#define        MC_CMD_EFTEST_PDMA_STRESS_INIT_IN_USE_FC_WIDTH 1
#define        MC_CMD_EFTEST_PDMA_STRESS_INIT_IN_DONT_BLOCK_PDMA_THREAD_OFST 28
#define        MC_CMD_EFTEST_PDMA_STRESS_INIT_IN_DONT_BLOCK_PDMA_THREAD_LBN 1
#define        MC_CMD_EFTEST_PDMA_STRESS_INIT_IN_DONT_BLOCK_PDMA_THREAD_WIDTH 1
/* Min packet size */
#define       MC_CMD_EFTEST_PDMA_STRESS_INIT_IN_MIN_FRAME_LEN_OFST 32
#define       MC_CMD_EFTEST_PDMA_STRESS_INIT_IN_MIN_FRAME_LEN_LEN 4
/* Max packet size */
#define       MC_CMD_EFTEST_PDMA_STRESS_INIT_IN_MAX_FRAME_LEN_OFST 36
#define       MC_CMD_EFTEST_PDMA_STRESS_INIT_IN_MAX_FRAME_LEN_LEN 4
/* Start IP ID */
#define       MC_CMD_EFTEST_PDMA_STRESS_INIT_IN_START_IP_ID_OFST 40
#define       MC_CMD_EFTEST_PDMA_STRESS_INIT_IN_START_IP_ID_LEN 4
/* Total number of packets to send */
#define       MC_CMD_EFTEST_PDMA_STRESS_INIT_IN_COUNT_OFST 44
#define       MC_CMD_EFTEST_PDMA_STRESS_INIT_IN_COUNT_LEN 4
/* Total number of packets to send */
#define       MC_CMD_EFTEST_PDMA_STRESS_INIT_IN_BATCH_OFST 48
#define       MC_CMD_EFTEST_PDMA_STRESS_INIT_IN_BATCH_LEN 4
/* Stress pdma memory from the mcpu */
#define       MC_CMD_EFTEST_PDMA_STRESS_INIT_IN_MCPU_STRESS_OFST 52
#define       MC_CMD_EFTEST_PDMA_STRESS_INIT_IN_MCPU_STRESS_LEN 4
#define        MC_CMD_EFTEST_PDMA_STRESS_INIT_IN_MCPU_STRESS_LD_OFST 52
#define        MC_CMD_EFTEST_PDMA_STRESS_INIT_IN_MCPU_STRESS_LD_LBN 0
#define        MC_CMD_EFTEST_PDMA_STRESS_INIT_IN_MCPU_STRESS_LD_WIDTH 1
#define        MC_CMD_EFTEST_PDMA_STRESS_INIT_IN_MCPU_STRESS_ST_OFST 52
#define        MC_CMD_EFTEST_PDMA_STRESS_INIT_IN_MCPU_STRESS_ST_LBN 1
#define        MC_CMD_EFTEST_PDMA_STRESS_INIT_IN_MCPU_STRESS_ST_WIDTH 1

/* MC_CMD_EFTEST_PDMA_STRESS_INIT_OUT msgresponse */
#define    MC_CMD_EFTEST_PDMA_STRESS_INIT_OUT_LEN 4
/* thread handle */
#define       MC_CMD_EFTEST_PDMA_STRESS_INIT_OUT_HANDLE_OFST 0
#define       MC_CMD_EFTEST_PDMA_STRESS_INIT_OUT_HANDLE_LEN 4

/* MC_CMD_EFTEST_PDMA_STRESS_START_IN msgrequest */
#define    MC_CMD_EFTEST_PDMA_STRESS_START_IN_LEN 12
/* identifies the test */
#define       MC_CMD_EFTEST_PDMA_STRESS_START_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_PDMA_STRESS_START_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_PDMA_STRESS_START_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_PDMA_STRESS_START_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_PDMA_STRESS_START_IN_START 0x1 /* enum */
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_PDMA_STRESS_START_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_PDMA_STRESS_START_IN_EFTEST_OP_RSVD_LEN 2
/* thread handle */
#define       MC_CMD_EFTEST_PDMA_STRESS_START_IN_HANDLE_OFST 4
#define       MC_CMD_EFTEST_PDMA_STRESS_START_IN_HANDLE_LEN 4
/* thread handle */
#define       MC_CMD_EFTEST_PDMA_STRESS_START_IN_FC_RSVD_OFST 8
#define       MC_CMD_EFTEST_PDMA_STRESS_START_IN_FC_RSVD_LEN 4

/* MC_CMD_EFTEST_PDMA_STRESS_POLL_IN msgrequest */
#define    MC_CMD_EFTEST_PDMA_STRESS_POLL_IN_LEN 12
/* identifies the test */
#define       MC_CMD_EFTEST_PDMA_STRESS_POLL_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_PDMA_STRESS_POLL_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_PDMA_STRESS_POLL_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_PDMA_STRESS_POLL_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_PDMA_STRESS_POLL_IN_POLL 0x2 /* enum */
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_PDMA_STRESS_POLL_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_PDMA_STRESS_POLL_IN_EFTEST_OP_RSVD_LEN 2
/* thread handle */
#define       MC_CMD_EFTEST_PDMA_STRESS_POLL_IN_HANDLE_OFST 4
#define       MC_CMD_EFTEST_PDMA_STRESS_POLL_IN_HANDLE_LEN 4
/* thread handle */
#define       MC_CMD_EFTEST_PDMA_STRESS_POLL_IN_FC_RSVD_OFST 8
#define       MC_CMD_EFTEST_PDMA_STRESS_POLL_IN_FC_RSVD_LEN 4

/* MC_CMD_EFTEST_PDMA_STRESS_POLL_OUT msgresponse */
#define    MC_CMD_EFTEST_PDMA_STRESS_POLL_OUT_LEN 12
/* thread still active */
#define       MC_CMD_EFTEST_PDMA_STRESS_POLL_OUT_ACTIVE_OFST 0
#define       MC_CMD_EFTEST_PDMA_STRESS_POLL_OUT_ACTIVE_LEN 4
/* next packet no to be sent */
#define       MC_CMD_EFTEST_PDMA_STRESS_POLL_OUT_PKT_NO_OFST 4
#define       MC_CMD_EFTEST_PDMA_STRESS_POLL_OUT_PKT_NO_LEN 4
/* current usage of fc allocation */
#define       MC_CMD_EFTEST_PDMA_STRESS_POLL_OUT_FC_USED_OFST 8
#define       MC_CMD_EFTEST_PDMA_STRESS_POLL_OUT_FC_USED_LEN 4

/* MC_CMD_EFTEST_PDMA_STRESS_FINI_IN msgrequest */
#define    MC_CMD_EFTEST_PDMA_STRESS_FINI_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_PDMA_STRESS_FINI_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_PDMA_STRESS_FINI_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_PDMA_STRESS_FINI_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_PDMA_STRESS_FINI_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_PDMA_STRESS_FINI_IN_FINI 0x3 /* enum */
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_PDMA_STRESS_FINI_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_PDMA_STRESS_FINI_IN_EFTEST_OP_RSVD_LEN 2
/* thread handle */
#define       MC_CMD_EFTEST_PDMA_STRESS_FINI_IN_HANDLE_OFST 4
#define       MC_CMD_EFTEST_PDMA_STRESS_FINI_IN_HANDLE_LEN 4

/* MC_CMD_EFTEST_ECC_AER_IN msgrequest */
#define    MC_CMD_EFTEST_ECC_AER_IN_LEN 2
/* identifies the test */
#define       MC_CMD_EFTEST_ECC_AER_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_ECC_AER_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_ECC_AER_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_ECC_AER_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_ECC_AER_IN_INJECT_NONE 0x0 /* enum */
#define          MC_CMD_EFTEST_ECC_AER_IN_INJECT_UNCORR 0x1 /* enum */

/* MC_CMD_EFTEST_RMON_SET_SCRATCH_IN msgrequest */
#define    MC_CMD_EFTEST_RMON_SET_SCRATCH_IN_LEN 12
/* identifies the test */
#define       MC_CMD_EFTEST_RMON_SET_SCRATCH_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RMON_SET_SCRATCH_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_RMON_SET_SCRATCH_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RMON_SET_SCRATCH_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_RMON_SET_SCRATCH_IN_SET_SCRATCH 0x0 /* enum */
/* The RMON level of the new stats block to associate with the port. */
#define       MC_CMD_EFTEST_RMON_SET_SCRATCH_IN_RMON_LEVEL_OFST 4
#define       MC_CMD_EFTEST_RMON_SET_SCRATCH_IN_RMON_LEVEL_LEN 4
#define          MC_CMD_EFTEST_RMON_SET_SCRATCH_IN_RMON_LEVEL_NONE 0x0 /* enum */
#define          MC_CMD_EFTEST_RMON_SET_SCRATCH_IN_RMON_LEVEL_CLASS 0x1 /* enum */
#define          MC_CMD_EFTEST_RMON_SET_SCRATCH_IN_RMON_LEVEL_SUPER_CLASS 0x2 /* enum */
/* The index of the new stats block to associate with the port. */
#define       MC_CMD_EFTEST_RMON_SET_SCRATCH_IN_RMON_INDEX_OFST 8
#define       MC_CMD_EFTEST_RMON_SET_SCRATCH_IN_RMON_INDEX_LEN 4

/* MC_CMD_EFTEST_RMON_RX_UP_CONV_STATS_IN msgrequest */
#define    MC_CMD_EFTEST_RMON_RX_UP_CONV_STATS_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_RMON_RX_UP_CONV_STATS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RMON_RX_UP_CONV_STATS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_RMON_RX_UP_CONV_STATS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RMON_RX_UP_CONV_STATS_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_RMON_RX_UP_CONV_STATS_IN_RX_UP_CONV_STATS 0x1 /* enum */
/* flags */
#define       MC_CMD_EFTEST_RMON_RX_UP_CONV_STATS_IN_FLAGS_OFST 4
#define       MC_CMD_EFTEST_RMON_RX_UP_CONV_STATS_IN_FLAGS_LEN 4
#define        MC_CMD_EFTEST_RMON_RX_UP_CONV_STATS_IN_PORT_OFST 4
#define        MC_CMD_EFTEST_RMON_RX_UP_CONV_STATS_IN_PORT_LBN 0
#define        MC_CMD_EFTEST_RMON_RX_UP_CONV_STATS_IN_PORT_WIDTH 16
#define        MC_CMD_EFTEST_RMON_RX_UP_CONV_STATS_IN_RST_OFST 4
#define        MC_CMD_EFTEST_RMON_RX_UP_CONV_STATS_IN_RST_LBN 16
#define        MC_CMD_EFTEST_RMON_RX_UP_CONV_STATS_IN_RST_WIDTH 1

/* MC_CMD_EFTEST_RMON_RX_UP_CONV_STATS_OUT msgresponse */
#define    MC_CMD_EFTEST_RMON_RX_UP_CONV_STATS_OUT_LENMIN 4
#define    MC_CMD_EFTEST_RMON_RX_UP_CONV_STATS_OUT_LENMAX 252
#define    MC_CMD_EFTEST_RMON_RX_UP_CONV_STATS_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_RMON_RX_UP_CONV_STATS_OUT_LEN(num) (0+4*(num))
#define    MC_CMD_EFTEST_RMON_RX_UP_CONV_STATS_OUT_BUFFER_NUM(len) (((len)-0)/4)
/* Array of stats */
#define       MC_CMD_EFTEST_RMON_RX_UP_CONV_STATS_OUT_BUFFER_OFST 0
#define       MC_CMD_EFTEST_RMON_RX_UP_CONV_STATS_OUT_BUFFER_LEN 4
#define       MC_CMD_EFTEST_RMON_RX_UP_CONV_STATS_OUT_BUFFER_MINNUM 1
#define       MC_CMD_EFTEST_RMON_RX_UP_CONV_STATS_OUT_BUFFER_MAXNUM 63
#define       MC_CMD_EFTEST_RMON_RX_UP_CONV_STATS_OUT_BUFFER_MAXNUM_MCDI2 255

/* MC_CMD_EFTEST_RMON_RX_IPI_STATS_IN msgrequest */
#define    MC_CMD_EFTEST_RMON_RX_IPI_STATS_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_RMON_RX_IPI_STATS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RMON_RX_IPI_STATS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_RMON_RX_IPI_STATS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RMON_RX_IPI_STATS_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_RMON_RX_IPI_STATS_IN_RX_IPI_STATS 0x2 /* enum */
/* flags */
#define       MC_CMD_EFTEST_RMON_RX_IPI_STATS_IN_FLAGS_OFST 4
#define       MC_CMD_EFTEST_RMON_RX_IPI_STATS_IN_FLAGS_LEN 4
#define        MC_CMD_EFTEST_RMON_RX_IPI_STATS_IN_VFIFO_OFST 4
#define        MC_CMD_EFTEST_RMON_RX_IPI_STATS_IN_VFIFO_LBN 0
#define        MC_CMD_EFTEST_RMON_RX_IPI_STATS_IN_VFIFO_WIDTH 16
#define        MC_CMD_EFTEST_RMON_RX_IPI_STATS_IN_RST_OFST 4
#define        MC_CMD_EFTEST_RMON_RX_IPI_STATS_IN_RST_LBN 16
#define        MC_CMD_EFTEST_RMON_RX_IPI_STATS_IN_RST_WIDTH 1

/* MC_CMD_EFTEST_RMON_RX_IPI_STATS_OUT msgresponse */
#define    MC_CMD_EFTEST_RMON_RX_IPI_STATS_OUT_LENMIN 4
#define    MC_CMD_EFTEST_RMON_RX_IPI_STATS_OUT_LENMAX 252
#define    MC_CMD_EFTEST_RMON_RX_IPI_STATS_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_RMON_RX_IPI_STATS_OUT_LEN(num) (0+4*(num))
#define    MC_CMD_EFTEST_RMON_RX_IPI_STATS_OUT_BUFFER_NUM(len) (((len)-0)/4)
/* Array of stats */
#define       MC_CMD_EFTEST_RMON_RX_IPI_STATS_OUT_BUFFER_OFST 0
#define       MC_CMD_EFTEST_RMON_RX_IPI_STATS_OUT_BUFFER_LEN 4
#define       MC_CMD_EFTEST_RMON_RX_IPI_STATS_OUT_BUFFER_MINNUM 1
#define       MC_CMD_EFTEST_RMON_RX_IPI_STATS_OUT_BUFFER_MAXNUM 63
#define       MC_CMD_EFTEST_RMON_RX_IPI_STATS_OUT_BUFFER_MAXNUM_MCDI2 255

/* MC_CMD_EFTEST_RMON_RX_CLASS_STATS_IN msgrequest */
#define    MC_CMD_EFTEST_RMON_RX_CLASS_STATS_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_RMON_RX_CLASS_STATS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RMON_RX_CLASS_STATS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_RMON_RX_CLASS_STATS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RMON_RX_CLASS_STATS_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_RMON_RX_CLASS_STATS_IN_RX_CLASS_STATS 0x3 /* enum */
/* flags */
#define       MC_CMD_EFTEST_RMON_RX_CLASS_STATS_IN_FLAGS_OFST 4
#define       MC_CMD_EFTEST_RMON_RX_CLASS_STATS_IN_FLAGS_LEN 4
#define        MC_CMD_EFTEST_RMON_RX_CLASS_STATS_IN_CLASS_OFST 4
#define        MC_CMD_EFTEST_RMON_RX_CLASS_STATS_IN_CLASS_LBN 0
#define        MC_CMD_EFTEST_RMON_RX_CLASS_STATS_IN_CLASS_WIDTH 16
#define        MC_CMD_EFTEST_RMON_RX_CLASS_STATS_IN_RST_OFST 4
#define        MC_CMD_EFTEST_RMON_RX_CLASS_STATS_IN_RST_LBN 16
#define        MC_CMD_EFTEST_RMON_RX_CLASS_STATS_IN_RST_WIDTH 1

/* MC_CMD_EFTEST_RMON_RX_CLASS_STATS_OUT msgresponse */
#define    MC_CMD_EFTEST_RMON_RX_CLASS_STATS_OUT_LENMIN 4
#define    MC_CMD_EFTEST_RMON_RX_CLASS_STATS_OUT_LENMAX 252
#define    MC_CMD_EFTEST_RMON_RX_CLASS_STATS_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_RMON_RX_CLASS_STATS_OUT_LEN(num) (0+4*(num))
#define    MC_CMD_EFTEST_RMON_RX_CLASS_STATS_OUT_BUFFER_NUM(len) (((len)-0)/4)
/* Array of stats */
#define       MC_CMD_EFTEST_RMON_RX_CLASS_STATS_OUT_BUFFER_OFST 0
#define       MC_CMD_EFTEST_RMON_RX_CLASS_STATS_OUT_BUFFER_LEN 4
#define       MC_CMD_EFTEST_RMON_RX_CLASS_STATS_OUT_BUFFER_MINNUM 1
#define       MC_CMD_EFTEST_RMON_RX_CLASS_STATS_OUT_BUFFER_MAXNUM 63
#define       MC_CMD_EFTEST_RMON_RX_CLASS_STATS_OUT_BUFFER_MAXNUM_MCDI2 255

/* MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_STATS_IN msgrequest */
#define    MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_STATS_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_STATS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_STATS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_STATS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_STATS_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_STATS_IN_RX_SUPER_CLASS_STATS 0x4 /* enum */
/* flags */
#define       MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_STATS_IN_FLAGS_OFST 4
#define       MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_STATS_IN_FLAGS_LEN 4
#define        MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_STATS_IN_SUPER_CLASS_OFST 4
#define        MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_STATS_IN_SUPER_CLASS_LBN 0
#define        MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_STATS_IN_SUPER_CLASS_WIDTH 16
#define        MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_STATS_IN_RST_OFST 4
#define        MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_STATS_IN_RST_LBN 16
#define        MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_STATS_IN_RST_WIDTH 1

/* MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_STATS_OUT msgresponse */
#define    MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_STATS_OUT_LENMIN 4
#define    MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_STATS_OUT_LENMAX 252
#define    MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_STATS_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_STATS_OUT_LEN(num) (0+4*(num))
#define    MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_STATS_OUT_BUFFER_NUM(len) (((len)-0)/4)
/* Array of stats */
#define       MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_STATS_OUT_BUFFER_OFST 0
#define       MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_STATS_OUT_BUFFER_LEN 4
#define       MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_STATS_OUT_BUFFER_MINNUM 1
#define       MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_STATS_OUT_BUFFER_MAXNUM 63
#define       MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_STATS_OUT_BUFFER_MAXNUM_MCDI2 255

/* MC_CMD_EFTEST_RMON_RX_CLASS_DROPS_STATS_IN msgrequest */
#define    MC_CMD_EFTEST_RMON_RX_CLASS_DROPS_STATS_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_RMON_RX_CLASS_DROPS_STATS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RMON_RX_CLASS_DROPS_STATS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_RMON_RX_CLASS_DROPS_STATS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RMON_RX_CLASS_DROPS_STATS_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_RMON_RX_CLASS_DROPS_STATS_IN_RX_CLASS_DROPS_STATS 0x5 /* enum */
/* flags */
#define       MC_CMD_EFTEST_RMON_RX_CLASS_DROPS_STATS_IN_FLAGS_OFST 4
#define       MC_CMD_EFTEST_RMON_RX_CLASS_DROPS_STATS_IN_FLAGS_LEN 4
#define        MC_CMD_EFTEST_RMON_RX_CLASS_DROPS_STATS_IN_CLASS_OFST 4
#define        MC_CMD_EFTEST_RMON_RX_CLASS_DROPS_STATS_IN_CLASS_LBN 0
#define        MC_CMD_EFTEST_RMON_RX_CLASS_DROPS_STATS_IN_CLASS_WIDTH 16
#define        MC_CMD_EFTEST_RMON_RX_CLASS_DROPS_STATS_IN_RST_OFST 4
#define        MC_CMD_EFTEST_RMON_RX_CLASS_DROPS_STATS_IN_RST_LBN 16
#define        MC_CMD_EFTEST_RMON_RX_CLASS_DROPS_STATS_IN_RST_WIDTH 1

/* MC_CMD_EFTEST_RMON_RX_CLASS_DROPS_STATS_OUT msgresponse */
#define    MC_CMD_EFTEST_RMON_RX_CLASS_DROPS_STATS_OUT_LENMIN 4
#define    MC_CMD_EFTEST_RMON_RX_CLASS_DROPS_STATS_OUT_LENMAX 252
#define    MC_CMD_EFTEST_RMON_RX_CLASS_DROPS_STATS_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_RMON_RX_CLASS_DROPS_STATS_OUT_LEN(num) (0+4*(num))
#define    MC_CMD_EFTEST_RMON_RX_CLASS_DROPS_STATS_OUT_BUFFER_NUM(len) (((len)-0)/4)
/* Array of stats */
#define       MC_CMD_EFTEST_RMON_RX_CLASS_DROPS_STATS_OUT_BUFFER_OFST 0
#define       MC_CMD_EFTEST_RMON_RX_CLASS_DROPS_STATS_OUT_BUFFER_LEN 4
#define       MC_CMD_EFTEST_RMON_RX_CLASS_DROPS_STATS_OUT_BUFFER_MINNUM 1
#define       MC_CMD_EFTEST_RMON_RX_CLASS_DROPS_STATS_OUT_BUFFER_MAXNUM 63
#define       MC_CMD_EFTEST_RMON_RX_CLASS_DROPS_STATS_OUT_BUFFER_MAXNUM_MCDI2 255

/* MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_DROPS_STATS_IN msgrequest */
#define    MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_DROPS_STATS_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_DROPS_STATS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_DROPS_STATS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_DROPS_STATS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_DROPS_STATS_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_DROPS_STATS_IN_RX_SUPER_CLASS_DROPS_STATS 0x6 /* enum */
/* flags */
#define       MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_DROPS_STATS_IN_FLAGS_OFST 4
#define       MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_DROPS_STATS_IN_FLAGS_LEN 4
#define        MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_DROPS_STATS_IN_SUPER_CLASS_OFST 4
#define        MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_DROPS_STATS_IN_SUPER_CLASS_LBN 0
#define        MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_DROPS_STATS_IN_SUPER_CLASS_WIDTH 16
#define        MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_DROPS_STATS_IN_RST_OFST 4
#define        MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_DROPS_STATS_IN_RST_LBN 16
#define        MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_DROPS_STATS_IN_RST_WIDTH 1

/* MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_DROPS_STATS_OUT msgresponse */
#define    MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_DROPS_STATS_OUT_LENMIN 4
#define    MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_DROPS_STATS_OUT_LENMAX 252
#define    MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_DROPS_STATS_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_DROPS_STATS_OUT_LEN(num) (0+4*(num))
#define    MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_DROPS_STATS_OUT_BUFFER_NUM(len) (((len)-0)/4)
/* Array of stats */
#define       MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_DROPS_STATS_OUT_BUFFER_OFST 0
#define       MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_DROPS_STATS_OUT_BUFFER_LEN 4
#define       MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_DROPS_STATS_OUT_BUFFER_MINNUM 1
#define       MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_DROPS_STATS_OUT_BUFFER_MAXNUM 63
#define       MC_CMD_EFTEST_RMON_RX_SUPER_CLASS_DROPS_STATS_OUT_BUFFER_MAXNUM_MCDI2 255

/* MC_CMD_EFTEST_RMON_RX_ERRORS_STATS_IN msgrequest */
#define    MC_CMD_EFTEST_RMON_RX_ERRORS_STATS_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_RMON_RX_ERRORS_STATS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RMON_RX_ERRORS_STATS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_RMON_RX_ERRORS_STATS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RMON_RX_ERRORS_STATS_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_RMON_RX_ERRORS_STATS_IN_RX_ERRORS_STATS 0x7 /* enum */
/* flags */
#define       MC_CMD_EFTEST_RMON_RX_ERRORS_STATS_IN_FLAGS_OFST 4
#define       MC_CMD_EFTEST_RMON_RX_ERRORS_STATS_IN_FLAGS_LEN 4
#define        MC_CMD_EFTEST_RMON_RX_ERRORS_STATS_IN_QID_OFST 4
#define        MC_CMD_EFTEST_RMON_RX_ERRORS_STATS_IN_QID_LBN 0
#define        MC_CMD_EFTEST_RMON_RX_ERRORS_STATS_IN_QID_WIDTH 16
#define        MC_CMD_EFTEST_RMON_RX_ERRORS_STATS_IN_RST_OFST 4
#define        MC_CMD_EFTEST_RMON_RX_ERRORS_STATS_IN_RST_LBN 16
#define        MC_CMD_EFTEST_RMON_RX_ERRORS_STATS_IN_RST_WIDTH 1

/* MC_CMD_EFTEST_RMON_RX_ERRORS_STATS_OUT msgresponse */
#define    MC_CMD_EFTEST_RMON_RX_ERRORS_STATS_OUT_LENMIN 4
#define    MC_CMD_EFTEST_RMON_RX_ERRORS_STATS_OUT_LENMAX 252
#define    MC_CMD_EFTEST_RMON_RX_ERRORS_STATS_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_RMON_RX_ERRORS_STATS_OUT_LEN(num) (0+4*(num))
#define    MC_CMD_EFTEST_RMON_RX_ERRORS_STATS_OUT_BUFFER_NUM(len) (((len)-0)/4)
/* Array of stats */
#define       MC_CMD_EFTEST_RMON_RX_ERRORS_STATS_OUT_BUFFER_OFST 0
#define       MC_CMD_EFTEST_RMON_RX_ERRORS_STATS_OUT_BUFFER_LEN 4
#define       MC_CMD_EFTEST_RMON_RX_ERRORS_STATS_OUT_BUFFER_MINNUM 1
#define       MC_CMD_EFTEST_RMON_RX_ERRORS_STATS_OUT_BUFFER_MAXNUM 63
#define       MC_CMD_EFTEST_RMON_RX_ERRORS_STATS_OUT_BUFFER_MAXNUM_MCDI2 255

/* MC_CMD_EFTEST_RMON_RX_OVERFLOW_STATS_IN msgrequest */
#define    MC_CMD_EFTEST_RMON_RX_OVERFLOW_STATS_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_RMON_RX_OVERFLOW_STATS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RMON_RX_OVERFLOW_STATS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_RMON_RX_OVERFLOW_STATS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RMON_RX_OVERFLOW_STATS_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_RMON_RX_OVERFLOW_STATS_IN_RX_OVERFLOW_STATS 0x8 /* enum */
/* flags */
#define       MC_CMD_EFTEST_RMON_RX_OVERFLOW_STATS_IN_FLAGS_OFST 4
#define       MC_CMD_EFTEST_RMON_RX_OVERFLOW_STATS_IN_FLAGS_LEN 4
#define        MC_CMD_EFTEST_RMON_RX_OVERFLOW_STATS_IN_CLASS_OFST 4
#define        MC_CMD_EFTEST_RMON_RX_OVERFLOW_STATS_IN_CLASS_LBN 0
#define        MC_CMD_EFTEST_RMON_RX_OVERFLOW_STATS_IN_CLASS_WIDTH 16
#define        MC_CMD_EFTEST_RMON_RX_OVERFLOW_STATS_IN_RST_OFST 4
#define        MC_CMD_EFTEST_RMON_RX_OVERFLOW_STATS_IN_RST_LBN 16
#define        MC_CMD_EFTEST_RMON_RX_OVERFLOW_STATS_IN_RST_WIDTH 1

/* MC_CMD_EFTEST_RMON_RX_OVERFLOW_STATS_OUT msgresponse */
#define    MC_CMD_EFTEST_RMON_RX_OVERFLOW_STATS_OUT_LENMIN 4
#define    MC_CMD_EFTEST_RMON_RX_OVERFLOW_STATS_OUT_LENMAX 252
#define    MC_CMD_EFTEST_RMON_RX_OVERFLOW_STATS_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_RMON_RX_OVERFLOW_STATS_OUT_LEN(num) (0+4*(num))
#define    MC_CMD_EFTEST_RMON_RX_OVERFLOW_STATS_OUT_BUFFER_NUM(len) (((len)-0)/4)
/* Array of stats */
#define       MC_CMD_EFTEST_RMON_RX_OVERFLOW_STATS_OUT_BUFFER_OFST 0
#define       MC_CMD_EFTEST_RMON_RX_OVERFLOW_STATS_OUT_BUFFER_LEN 4
#define       MC_CMD_EFTEST_RMON_RX_OVERFLOW_STATS_OUT_BUFFER_MINNUM 1
#define       MC_CMD_EFTEST_RMON_RX_OVERFLOW_STATS_OUT_BUFFER_MAXNUM 63
#define       MC_CMD_EFTEST_RMON_RX_OVERFLOW_STATS_OUT_BUFFER_MAXNUM_MCDI2 255

/* MC_CMD_EFTEST_RMON_TX_CLASS_STATS_IN msgrequest */
#define    MC_CMD_EFTEST_RMON_TX_CLASS_STATS_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_RMON_TX_CLASS_STATS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RMON_TX_CLASS_STATS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_RMON_TX_CLASS_STATS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RMON_TX_CLASS_STATS_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_RMON_TX_CLASS_STATS_IN_TX_CLASS_STATS 0x9 /* enum */
/* flags */
#define       MC_CMD_EFTEST_RMON_TX_CLASS_STATS_IN_FLAGS_OFST 4
#define       MC_CMD_EFTEST_RMON_TX_CLASS_STATS_IN_FLAGS_LEN 4
#define        MC_CMD_EFTEST_RMON_TX_CLASS_STATS_IN_CLASS_OFST 4
#define        MC_CMD_EFTEST_RMON_TX_CLASS_STATS_IN_CLASS_LBN 0
#define        MC_CMD_EFTEST_RMON_TX_CLASS_STATS_IN_CLASS_WIDTH 16
#define        MC_CMD_EFTEST_RMON_TX_CLASS_STATS_IN_RST_OFST 4
#define        MC_CMD_EFTEST_RMON_TX_CLASS_STATS_IN_RST_LBN 16
#define        MC_CMD_EFTEST_RMON_TX_CLASS_STATS_IN_RST_WIDTH 1

/* MC_CMD_EFTEST_RMON_TX_CLASS_STATS_OUT msgresponse */
#define    MC_CMD_EFTEST_RMON_TX_CLASS_STATS_OUT_LENMIN 4
#define    MC_CMD_EFTEST_RMON_TX_CLASS_STATS_OUT_LENMAX 252
#define    MC_CMD_EFTEST_RMON_TX_CLASS_STATS_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_RMON_TX_CLASS_STATS_OUT_LEN(num) (0+4*(num))
#define    MC_CMD_EFTEST_RMON_TX_CLASS_STATS_OUT_BUFFER_NUM(len) (((len)-0)/4)
/* Array of stats */
#define       MC_CMD_EFTEST_RMON_TX_CLASS_STATS_OUT_BUFFER_OFST 0
#define       MC_CMD_EFTEST_RMON_TX_CLASS_STATS_OUT_BUFFER_LEN 4
#define       MC_CMD_EFTEST_RMON_TX_CLASS_STATS_OUT_BUFFER_MINNUM 1
#define       MC_CMD_EFTEST_RMON_TX_CLASS_STATS_OUT_BUFFER_MAXNUM 63
#define       MC_CMD_EFTEST_RMON_TX_CLASS_STATS_OUT_BUFFER_MAXNUM_MCDI2 255

/* MC_CMD_EFTEST_RMON_TX_SUPER_CLASS_STATS_IN msgrequest */
#define    MC_CMD_EFTEST_RMON_TX_SUPER_CLASS_STATS_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_RMON_TX_SUPER_CLASS_STATS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RMON_TX_SUPER_CLASS_STATS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_RMON_TX_SUPER_CLASS_STATS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RMON_TX_SUPER_CLASS_STATS_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_RMON_TX_SUPER_CLASS_STATS_IN_TX_SUPER_CLASS_STATS 0xa /* enum */
/* flags */
#define       MC_CMD_EFTEST_RMON_TX_SUPER_CLASS_STATS_IN_FLAGS_OFST 4
#define       MC_CMD_EFTEST_RMON_TX_SUPER_CLASS_STATS_IN_FLAGS_LEN 4
#define        MC_CMD_EFTEST_RMON_TX_SUPER_CLASS_STATS_IN_SUPER_CLASS_OFST 4
#define        MC_CMD_EFTEST_RMON_TX_SUPER_CLASS_STATS_IN_SUPER_CLASS_LBN 0
#define        MC_CMD_EFTEST_RMON_TX_SUPER_CLASS_STATS_IN_SUPER_CLASS_WIDTH 16
#define        MC_CMD_EFTEST_RMON_TX_SUPER_CLASS_STATS_IN_RST_OFST 4
#define        MC_CMD_EFTEST_RMON_TX_SUPER_CLASS_STATS_IN_RST_LBN 16
#define        MC_CMD_EFTEST_RMON_TX_SUPER_CLASS_STATS_IN_RST_WIDTH 1

/* MC_CMD_EFTEST_RMON_TX_SUPER_CLASS_STATS_OUT msgresponse */
#define    MC_CMD_EFTEST_RMON_TX_SUPER_CLASS_STATS_OUT_LENMIN 4
#define    MC_CMD_EFTEST_RMON_TX_SUPER_CLASS_STATS_OUT_LENMAX 252
#define    MC_CMD_EFTEST_RMON_TX_SUPER_CLASS_STATS_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_RMON_TX_SUPER_CLASS_STATS_OUT_LEN(num) (0+4*(num))
#define    MC_CMD_EFTEST_RMON_TX_SUPER_CLASS_STATS_OUT_BUFFER_NUM(len) (((len)-0)/4)
/* Array of stats */
#define       MC_CMD_EFTEST_RMON_TX_SUPER_CLASS_STATS_OUT_BUFFER_OFST 0
#define       MC_CMD_EFTEST_RMON_TX_SUPER_CLASS_STATS_OUT_BUFFER_LEN 4
#define       MC_CMD_EFTEST_RMON_TX_SUPER_CLASS_STATS_OUT_BUFFER_MINNUM 1
#define       MC_CMD_EFTEST_RMON_TX_SUPER_CLASS_STATS_OUT_BUFFER_MAXNUM 63
#define       MC_CMD_EFTEST_RMON_TX_SUPER_CLASS_STATS_OUT_BUFFER_MAXNUM_MCDI2 255

/* MC_CMD_EFTEST_RMON_TX_NOWHERE_STATS_IN msgrequest */
#define    MC_CMD_EFTEST_RMON_TX_NOWHERE_STATS_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_RMON_TX_NOWHERE_STATS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RMON_TX_NOWHERE_STATS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_RMON_TX_NOWHERE_STATS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RMON_TX_NOWHERE_STATS_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_RMON_TX_NOWHERE_STATS_IN_TX_NOWHERE_STATS 0xb /* enum */
/* flags */
#define       MC_CMD_EFTEST_RMON_TX_NOWHERE_STATS_IN_FLAGS_OFST 4
#define       MC_CMD_EFTEST_RMON_TX_NOWHERE_STATS_IN_FLAGS_LEN 4
#define        MC_CMD_EFTEST_RMON_TX_NOWHERE_STATS_IN_CLASS_OFST 4
#define        MC_CMD_EFTEST_RMON_TX_NOWHERE_STATS_IN_CLASS_LBN 0
#define        MC_CMD_EFTEST_RMON_TX_NOWHERE_STATS_IN_CLASS_WIDTH 16
#define        MC_CMD_EFTEST_RMON_TX_NOWHERE_STATS_IN_RST_OFST 4
#define        MC_CMD_EFTEST_RMON_TX_NOWHERE_STATS_IN_RST_LBN 16
#define        MC_CMD_EFTEST_RMON_TX_NOWHERE_STATS_IN_RST_WIDTH 1

/* MC_CMD_EFTEST_RMON_TX_NOWHERE_STATS_OUT msgresponse */
#define    MC_CMD_EFTEST_RMON_TX_NOWHERE_STATS_OUT_LENMIN 4
#define    MC_CMD_EFTEST_RMON_TX_NOWHERE_STATS_OUT_LENMAX 252
#define    MC_CMD_EFTEST_RMON_TX_NOWHERE_STATS_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_RMON_TX_NOWHERE_STATS_OUT_LEN(num) (0+4*(num))
#define    MC_CMD_EFTEST_RMON_TX_NOWHERE_STATS_OUT_BUFFER_NUM(len) (((len)-0)/4)
/* Array of stats */
#define       MC_CMD_EFTEST_RMON_TX_NOWHERE_STATS_OUT_BUFFER_OFST 0
#define       MC_CMD_EFTEST_RMON_TX_NOWHERE_STATS_OUT_BUFFER_LEN 4
#define       MC_CMD_EFTEST_RMON_TX_NOWHERE_STATS_OUT_BUFFER_MINNUM 1
#define       MC_CMD_EFTEST_RMON_TX_NOWHERE_STATS_OUT_BUFFER_MAXNUM 63
#define       MC_CMD_EFTEST_RMON_TX_NOWHERE_STATS_OUT_BUFFER_MAXNUM_MCDI2 255

/* MC_CMD_EFTEST_RMON_TX_NOWHERE_QBB_STATS_IN msgrequest */
#define    MC_CMD_EFTEST_RMON_TX_NOWHERE_QBB_STATS_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_RMON_TX_NOWHERE_QBB_STATS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RMON_TX_NOWHERE_QBB_STATS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_RMON_TX_NOWHERE_QBB_STATS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RMON_TX_NOWHERE_QBB_STATS_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_RMON_TX_NOWHERE_QBB_STATS_IN_TX_NOWHERE_QBB_STATS 0xc /* enum */
/* flags */
#define       MC_CMD_EFTEST_RMON_TX_NOWHERE_QBB_STATS_IN_FLAGS_OFST 4
#define       MC_CMD_EFTEST_RMON_TX_NOWHERE_QBB_STATS_IN_FLAGS_LEN 4
#define        MC_CMD_EFTEST_RMON_TX_NOWHERE_QBB_STATS_IN_PRIORITY_OFST 4
#define        MC_CMD_EFTEST_RMON_TX_NOWHERE_QBB_STATS_IN_PRIORITY_LBN 0
#define        MC_CMD_EFTEST_RMON_TX_NOWHERE_QBB_STATS_IN_PRIORITY_WIDTH 16
#define        MC_CMD_EFTEST_RMON_TX_NOWHERE_QBB_STATS_IN_RST_OFST 4
#define        MC_CMD_EFTEST_RMON_TX_NOWHERE_QBB_STATS_IN_RST_LBN 16
#define        MC_CMD_EFTEST_RMON_TX_NOWHERE_QBB_STATS_IN_RST_WIDTH 1

/* MC_CMD_EFTEST_RMON_TX_NOWHERE_QBB_STATS_OUT msgresponse */
#define    MC_CMD_EFTEST_RMON_TX_NOWHERE_QBB_STATS_OUT_LENMIN 4
#define    MC_CMD_EFTEST_RMON_TX_NOWHERE_QBB_STATS_OUT_LENMAX 252
#define    MC_CMD_EFTEST_RMON_TX_NOWHERE_QBB_STATS_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_RMON_TX_NOWHERE_QBB_STATS_OUT_LEN(num) (0+4*(num))
#define    MC_CMD_EFTEST_RMON_TX_NOWHERE_QBB_STATS_OUT_BUFFER_NUM(len) (((len)-0)/4)
/* Array of stats */
#define       MC_CMD_EFTEST_RMON_TX_NOWHERE_QBB_STATS_OUT_BUFFER_OFST 0
#define       MC_CMD_EFTEST_RMON_TX_NOWHERE_QBB_STATS_OUT_BUFFER_LEN 4
#define       MC_CMD_EFTEST_RMON_TX_NOWHERE_QBB_STATS_OUT_BUFFER_MINNUM 1
#define       MC_CMD_EFTEST_RMON_TX_NOWHERE_QBB_STATS_OUT_BUFFER_MAXNUM 63
#define       MC_CMD_EFTEST_RMON_TX_NOWHERE_QBB_STATS_OUT_BUFFER_MAXNUM_MCDI2 255

/* MC_CMD_EFTEST_RMON_TX_ERRORS_STATS_IN msgrequest */
#define    MC_CMD_EFTEST_RMON_TX_ERRORS_STATS_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_RMON_TX_ERRORS_STATS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RMON_TX_ERRORS_STATS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_RMON_TX_ERRORS_STATS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RMON_TX_ERRORS_STATS_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_RMON_TX_ERRORS_STATS_IN_TX_ERRORS_STATS 0xd /* enum */
/* flags */
#define       MC_CMD_EFTEST_RMON_TX_ERRORS_STATS_IN_FLAGS_OFST 4
#define       MC_CMD_EFTEST_RMON_TX_ERRORS_STATS_IN_FLAGS_LEN 4
#define        MC_CMD_EFTEST_RMON_TX_ERRORS_STATS_IN_QID_OFST 4
#define        MC_CMD_EFTEST_RMON_TX_ERRORS_STATS_IN_QID_LBN 0
#define        MC_CMD_EFTEST_RMON_TX_ERRORS_STATS_IN_QID_WIDTH 16
#define        MC_CMD_EFTEST_RMON_TX_ERRORS_STATS_IN_RST_OFST 4
#define        MC_CMD_EFTEST_RMON_TX_ERRORS_STATS_IN_RST_LBN 16
#define        MC_CMD_EFTEST_RMON_TX_ERRORS_STATS_IN_RST_WIDTH 1

/* MC_CMD_EFTEST_RMON_TX_ERRORS_STATS_OUT msgresponse */
#define    MC_CMD_EFTEST_RMON_TX_ERRORS_STATS_OUT_LENMIN 4
#define    MC_CMD_EFTEST_RMON_TX_ERRORS_STATS_OUT_LENMAX 252
#define    MC_CMD_EFTEST_RMON_TX_ERRORS_STATS_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_RMON_TX_ERRORS_STATS_OUT_LEN(num) (0+4*(num))
#define    MC_CMD_EFTEST_RMON_TX_ERRORS_STATS_OUT_BUFFER_NUM(len) (((len)-0)/4)
/* Array of stats */
#define       MC_CMD_EFTEST_RMON_TX_ERRORS_STATS_OUT_BUFFER_OFST 0
#define       MC_CMD_EFTEST_RMON_TX_ERRORS_STATS_OUT_BUFFER_LEN 4
#define       MC_CMD_EFTEST_RMON_TX_ERRORS_STATS_OUT_BUFFER_MINNUM 1
#define       MC_CMD_EFTEST_RMON_TX_ERRORS_STATS_OUT_BUFFER_MAXNUM 63
#define       MC_CMD_EFTEST_RMON_TX_ERRORS_STATS_OUT_BUFFER_MAXNUM_MCDI2 255

/* MC_CMD_EFTEST_RMON_TX_OVERFLOW_STATS_IN msgrequest */
#define    MC_CMD_EFTEST_RMON_TX_OVERFLOW_STATS_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_RMON_TX_OVERFLOW_STATS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RMON_TX_OVERFLOW_STATS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_RMON_TX_OVERFLOW_STATS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RMON_TX_OVERFLOW_STATS_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_RMON_TX_OVERFLOW_STATS_IN_TX_OVERFLOW_STATS 0xe /* enum */
/* flags */
#define       MC_CMD_EFTEST_RMON_TX_OVERFLOW_STATS_IN_FLAGS_OFST 4
#define       MC_CMD_EFTEST_RMON_TX_OVERFLOW_STATS_IN_FLAGS_LEN 4
#define        MC_CMD_EFTEST_RMON_TX_OVERFLOW_STATS_IN_CLASS_OFST 4
#define        MC_CMD_EFTEST_RMON_TX_OVERFLOW_STATS_IN_CLASS_LBN 0
#define        MC_CMD_EFTEST_RMON_TX_OVERFLOW_STATS_IN_CLASS_WIDTH 16
#define        MC_CMD_EFTEST_RMON_TX_OVERFLOW_STATS_IN_RST_OFST 4
#define        MC_CMD_EFTEST_RMON_TX_OVERFLOW_STATS_IN_RST_LBN 16
#define        MC_CMD_EFTEST_RMON_TX_OVERFLOW_STATS_IN_RST_WIDTH 1

/* MC_CMD_EFTEST_RMON_TX_OVERFLOW_STATS_OUT msgresponse */
#define    MC_CMD_EFTEST_RMON_TX_OVERFLOW_STATS_OUT_LENMIN 4
#define    MC_CMD_EFTEST_RMON_TX_OVERFLOW_STATS_OUT_LENMAX 252
#define    MC_CMD_EFTEST_RMON_TX_OVERFLOW_STATS_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_RMON_TX_OVERFLOW_STATS_OUT_LEN(num) (0+4*(num))
#define    MC_CMD_EFTEST_RMON_TX_OVERFLOW_STATS_OUT_BUFFER_NUM(len) (((len)-0)/4)
/* Array of stats */
#define       MC_CMD_EFTEST_RMON_TX_OVERFLOW_STATS_OUT_BUFFER_OFST 0
#define       MC_CMD_EFTEST_RMON_TX_OVERFLOW_STATS_OUT_BUFFER_LEN 4
#define       MC_CMD_EFTEST_RMON_TX_OVERFLOW_STATS_OUT_BUFFER_MINNUM 1
#define       MC_CMD_EFTEST_RMON_TX_OVERFLOW_STATS_OUT_BUFFER_MAXNUM 63
#define       MC_CMD_EFTEST_RMON_TX_OVERFLOW_STATS_OUT_BUFFER_MAXNUM_MCDI2 255

/* MC_CMD_EFTEST_RMON_RX_ADD_QID_TO_CLASS_IN msgrequest */
#define    MC_CMD_EFTEST_RMON_RX_ADD_QID_TO_CLASS_IN_LEN 16
/* identifies the test */
#define       MC_CMD_EFTEST_RMON_RX_ADD_QID_TO_CLASS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RMON_RX_ADD_QID_TO_CLASS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_RMON_RX_ADD_QID_TO_CLASS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RMON_RX_ADD_QID_TO_CLASS_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_RMON_RX_ADD_QID_TO_CLASS_IN_RX_ADD_QID_TO_CLASS 0xf /* enum */
/* class */
#define       MC_CMD_EFTEST_RMON_RX_ADD_QID_TO_CLASS_IN_CLASS_OFST 4
#define       MC_CMD_EFTEST_RMON_RX_ADD_QID_TO_CLASS_IN_CLASS_LEN 4
/* qid */
#define       MC_CMD_EFTEST_RMON_RX_ADD_QID_TO_CLASS_IN_QID_OFST 8
#define       MC_CMD_EFTEST_RMON_RX_ADD_QID_TO_CLASS_IN_QID_LEN 4
/* flags */
#define       MC_CMD_EFTEST_RMON_RX_ADD_QID_TO_CLASS_IN_FLAGS_OFST 12
#define       MC_CMD_EFTEST_RMON_RX_ADD_QID_TO_CLASS_IN_FLAGS_LEN 4
#define        MC_CMD_EFTEST_RMON_RX_ADD_QID_TO_CLASS_IN_SUPER_CLASS_OFST 12
#define        MC_CMD_EFTEST_RMON_RX_ADD_QID_TO_CLASS_IN_SUPER_CLASS_LBN 0
#define        MC_CMD_EFTEST_RMON_RX_ADD_QID_TO_CLASS_IN_SUPER_CLASS_WIDTH 4
#define        MC_CMD_EFTEST_RMON_RX_ADD_QID_TO_CLASS_IN_PE_DELTA_OFST 12
#define        MC_CMD_EFTEST_RMON_RX_ADD_QID_TO_CLASS_IN_PE_DELTA_LBN 4
#define        MC_CMD_EFTEST_RMON_RX_ADD_QID_TO_CLASS_IN_PE_DELTA_WIDTH 4
#define        MC_CMD_EFTEST_RMON_RX_ADD_QID_TO_CLASS_IN_MTU_OFST 12
#define        MC_CMD_EFTEST_RMON_RX_ADD_QID_TO_CLASS_IN_MTU_LBN 8
#define        MC_CMD_EFTEST_RMON_RX_ADD_QID_TO_CLASS_IN_MTU_WIDTH 14

/* MC_CMD_EFTEST_RMON_RX_ADD_QID_TO_CLASS_OUT msgresponse */
#define    MC_CMD_EFTEST_RMON_RX_ADD_QID_TO_CLASS_OUT_LEN 0

/* MC_CMD_EFTEST_RMON_TX_ADD_QID_TO_CLASS_IN msgrequest */
#define    MC_CMD_EFTEST_RMON_TX_ADD_QID_TO_CLASS_IN_LEN 16
/* identifies the test */
#define       MC_CMD_EFTEST_RMON_TX_ADD_QID_TO_CLASS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RMON_TX_ADD_QID_TO_CLASS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_RMON_TX_ADD_QID_TO_CLASS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RMON_TX_ADD_QID_TO_CLASS_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_RMON_TX_ADD_QID_TO_CLASS_IN_TX_ADD_QID_TO_CLASS 0x10 /* enum */
/* class */
#define       MC_CMD_EFTEST_RMON_TX_ADD_QID_TO_CLASS_IN_CLASS_OFST 4
#define       MC_CMD_EFTEST_RMON_TX_ADD_QID_TO_CLASS_IN_CLASS_LEN 4
/* qid */
#define       MC_CMD_EFTEST_RMON_TX_ADD_QID_TO_CLASS_IN_QID_OFST 8
#define       MC_CMD_EFTEST_RMON_TX_ADD_QID_TO_CLASS_IN_QID_LEN 4
/* flags */
#define       MC_CMD_EFTEST_RMON_TX_ADD_QID_TO_CLASS_IN_FLAGS_OFST 12
#define       MC_CMD_EFTEST_RMON_TX_ADD_QID_TO_CLASS_IN_FLAGS_LEN 4
#define        MC_CMD_EFTEST_RMON_TX_ADD_QID_TO_CLASS_IN_SUPER_CLASS_OFST 12
#define        MC_CMD_EFTEST_RMON_TX_ADD_QID_TO_CLASS_IN_SUPER_CLASS_LBN 0
#define        MC_CMD_EFTEST_RMON_TX_ADD_QID_TO_CLASS_IN_SUPER_CLASS_WIDTH 4
#define        MC_CMD_EFTEST_RMON_TX_ADD_QID_TO_CLASS_IN_PE_DELTA_OFST 12
#define        MC_CMD_EFTEST_RMON_TX_ADD_QID_TO_CLASS_IN_PE_DELTA_LBN 4
#define        MC_CMD_EFTEST_RMON_TX_ADD_QID_TO_CLASS_IN_PE_DELTA_WIDTH 4
#define        MC_CMD_EFTEST_RMON_TX_ADD_QID_TO_CLASS_IN_MTU_OFST 12
#define        MC_CMD_EFTEST_RMON_TX_ADD_QID_TO_CLASS_IN_MTU_LBN 8
#define        MC_CMD_EFTEST_RMON_TX_ADD_QID_TO_CLASS_IN_MTU_WIDTH 14

/* MC_CMD_EFTEST_RMON_TX_ADD_QID_TO_CLASS_OUT msgresponse */
#define    MC_CMD_EFTEST_RMON_TX_ADD_QID_TO_CLASS_OUT_LEN 0

/* MC_CMD_EFTEST_RMON_ALLOC_CLASS_IN msgrequest */
#define    MC_CMD_EFTEST_RMON_ALLOC_CLASS_IN_LEN 2
/* identifies the test */
#define       MC_CMD_EFTEST_RMON_ALLOC_CLASS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RMON_ALLOC_CLASS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_RMON_ALLOC_CLASS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RMON_ALLOC_CLASS_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_RMON_ALLOC_CLASS_IN_ALLOC_CLASS 0x11 /* enum */

/* MC_CMD_EFTEST_RMON_ALLOC_CLASS_OUT msgresponse */
#define    MC_CMD_EFTEST_RMON_ALLOC_CLASS_OUT_LEN 4
/* class */
#define       MC_CMD_EFTEST_RMON_ALLOC_CLASS_OUT_CLASS_OFST 0
#define       MC_CMD_EFTEST_RMON_ALLOC_CLASS_OUT_CLASS_LEN 4

/* MC_CMD_EFTEST_RMON_ALLOC_SUPER_CLASS_IN msgrequest */
#define    MC_CMD_EFTEST_RMON_ALLOC_SUPER_CLASS_IN_LEN 2
/* identifies the test */
#define       MC_CMD_EFTEST_RMON_ALLOC_SUPER_CLASS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RMON_ALLOC_SUPER_CLASS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_RMON_ALLOC_SUPER_CLASS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RMON_ALLOC_SUPER_CLASS_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_RMON_ALLOC_SUPER_CLASS_IN_ALLOC_SUPER_CLASS 0x12 /* enum */

/* MC_CMD_EFTEST_RMON_ALLOC_SUPER_CLASS_OUT msgresponse */
#define    MC_CMD_EFTEST_RMON_ALLOC_SUPER_CLASS_OUT_LEN 4
/* super_class */
#define       MC_CMD_EFTEST_RMON_ALLOC_SUPER_CLASS_OUT_SUPER_CLASS_OFST 0
#define       MC_CMD_EFTEST_RMON_ALLOC_SUPER_CLASS_OUT_SUPER_CLASS_LEN 4

/* MC_CMD_EFTEST_RMON_DEALLOC_CLASS_IN msgrequest */
#define    MC_CMD_EFTEST_RMON_DEALLOC_CLASS_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_RMON_DEALLOC_CLASS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RMON_DEALLOC_CLASS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_RMON_DEALLOC_CLASS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RMON_DEALLOC_CLASS_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_RMON_DEALLOC_CLASS_IN_DEALLOC_CLASS 0x13 /* enum */
/* class */
#define       MC_CMD_EFTEST_RMON_DEALLOC_CLASS_IN_CLASS_OFST 4
#define       MC_CMD_EFTEST_RMON_DEALLOC_CLASS_IN_CLASS_LEN 4

/* MC_CMD_EFTEST_RMON_DEALLOC_CLASS_OUT msgresponse */
#define    MC_CMD_EFTEST_RMON_DEALLOC_CLASS_OUT_LEN 0

/* MC_CMD_EFTEST_RMON_DEALLOC_SUPER_CLASS_IN msgrequest */
#define    MC_CMD_EFTEST_RMON_DEALLOC_SUPER_CLASS_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_RMON_DEALLOC_SUPER_CLASS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RMON_DEALLOC_SUPER_CLASS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_RMON_DEALLOC_SUPER_CLASS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RMON_DEALLOC_SUPER_CLASS_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_RMON_DEALLOC_SUPER_CLASS_IN_DEALLOC_SUPER_CLASS 0x14 /* enum */
/* super_class */
#define       MC_CMD_EFTEST_RMON_DEALLOC_SUPER_CLASS_IN_SUPER_CLASS_OFST 4
#define       MC_CMD_EFTEST_RMON_DEALLOC_SUPER_CLASS_IN_SUPER_CLASS_LEN 4

/* MC_CMD_EFTEST_RMON_DEALLOC_SUPER_CLASS_OUT msgresponse */
#define    MC_CMD_EFTEST_RMON_DEALLOC_SUPER_CLASS_OUT_LEN 0

/* MC_CMD_EFTEST_RMON_COLLECT_CLASS_STATS_IN msgrequest */
#define    MC_CMD_EFTEST_RMON_COLLECT_CLASS_STATS_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_RMON_COLLECT_CLASS_STATS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RMON_COLLECT_CLASS_STATS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_RMON_COLLECT_CLASS_STATS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RMON_COLLECT_CLASS_STATS_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_RMON_COLLECT_CLASS_STATS_IN_COLLECT_CLASS_STATS 0x15 /* enum */
/* The port id associated with the vport/pport at which to collect class stats
 */
#define       MC_CMD_EFTEST_RMON_COLLECT_CLASS_STATS_IN_PORT_ID_OFST 4
#define       MC_CMD_EFTEST_RMON_COLLECT_CLASS_STATS_IN_PORT_ID_LEN 4

/* MC_CMD_EFTEST_RMON_COLLECT_CLASS_STATS_OUT msgresponse */
#define    MC_CMD_EFTEST_RMON_COLLECT_CLASS_STATS_OUT_LEN 4
/* class */
#define       MC_CMD_EFTEST_RMON_COLLECT_CLASS_STATS_OUT_CLASS_OFST 0
#define       MC_CMD_EFTEST_RMON_COLLECT_CLASS_STATS_OUT_CLASS_LEN 4

/* MC_CMD_EFTEST_RMON_COLLECT_SUPER_CLASS_STATS_IN msgrequest */
#define    MC_CMD_EFTEST_RMON_COLLECT_SUPER_CLASS_STATS_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_RMON_COLLECT_SUPER_CLASS_STATS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RMON_COLLECT_SUPER_CLASS_STATS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_RMON_COLLECT_SUPER_CLASS_STATS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RMON_COLLECT_SUPER_CLASS_STATS_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_RMON_COLLECT_SUPER_CLASS_STATS_IN_COLLECT_SUPER_CLASS_STATS 0x16 /* enum */
/* The port id associated with the vport/pport at which to collect class stats
 */
#define       MC_CMD_EFTEST_RMON_COLLECT_SUPER_CLASS_STATS_IN_PORT_ID_OFST 4
#define       MC_CMD_EFTEST_RMON_COLLECT_SUPER_CLASS_STATS_IN_PORT_ID_LEN 4

/* MC_CMD_EFTEST_RMON_COLLECT_SUPER_CLASS_STATS_OUT msgresponse */
#define    MC_CMD_EFTEST_RMON_COLLECT_SUPER_CLASS_STATS_OUT_LEN 4
/* super_class */
#define       MC_CMD_EFTEST_RMON_COLLECT_SUPER_CLASS_STATS_OUT_SUPER_CLASS_OFST 0
#define       MC_CMD_EFTEST_RMON_COLLECT_SUPER_CLASS_STATS_OUT_SUPER_CLASS_LEN 4

/* MC_CMD_EFTEST_RMON_MC_INGRESS_STATS_IN msgrequest */
#define    MC_CMD_EFTEST_RMON_MC_INGRESS_STATS_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_RMON_MC_INGRESS_STATS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RMON_MC_INGRESS_STATS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_RMON_MC_INGRESS_STATS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RMON_MC_INGRESS_STATS_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_RMON_MC_INGRESS_STATS_IN_MC_INGRESS_STATS 0x17 /* enum */
/* flags */
#define       MC_CMD_EFTEST_RMON_MC_INGRESS_STATS_IN_FLAGS_OFST 4
#define       MC_CMD_EFTEST_RMON_MC_INGRESS_STATS_IN_FLAGS_LEN 4
#define        MC_CMD_EFTEST_RMON_MC_INGRESS_STATS_IN_PORT_OFST 4
#define        MC_CMD_EFTEST_RMON_MC_INGRESS_STATS_IN_PORT_LBN 0
#define        MC_CMD_EFTEST_RMON_MC_INGRESS_STATS_IN_PORT_WIDTH 16
#define        MC_CMD_EFTEST_RMON_MC_INGRESS_STATS_IN_RST_OFST 4
#define        MC_CMD_EFTEST_RMON_MC_INGRESS_STATS_IN_RST_LBN 16
#define        MC_CMD_EFTEST_RMON_MC_INGRESS_STATS_IN_RST_WIDTH 1

/* MC_CMD_EFTEST_RMON_MC_INGRESS_STATS_OUT msgresponse */
#define    MC_CMD_EFTEST_RMON_MC_INGRESS_STATS_OUT_LENMIN 4
#define    MC_CMD_EFTEST_RMON_MC_INGRESS_STATS_OUT_LENMAX 252
#define    MC_CMD_EFTEST_RMON_MC_INGRESS_STATS_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_RMON_MC_INGRESS_STATS_OUT_LEN(num) (0+4*(num))
#define    MC_CMD_EFTEST_RMON_MC_INGRESS_STATS_OUT_BUFFER_NUM(len) (((len)-0)/4)
/* Array of stats */
#define       MC_CMD_EFTEST_RMON_MC_INGRESS_STATS_OUT_BUFFER_OFST 0
#define       MC_CMD_EFTEST_RMON_MC_INGRESS_STATS_OUT_BUFFER_LEN 4
#define       MC_CMD_EFTEST_RMON_MC_INGRESS_STATS_OUT_BUFFER_MINNUM 1
#define       MC_CMD_EFTEST_RMON_MC_INGRESS_STATS_OUT_BUFFER_MAXNUM 63
#define       MC_CMD_EFTEST_RMON_MC_INGRESS_STATS_OUT_BUFFER_MAXNUM_MCDI2 255

/* MC_CMD_EFTEST_RMON_MC_EGRESS0_STATS_IN msgrequest */
#define    MC_CMD_EFTEST_RMON_MC_EGRESS0_STATS_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_RMON_MC_EGRESS0_STATS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RMON_MC_EGRESS0_STATS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_RMON_MC_EGRESS0_STATS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RMON_MC_EGRESS0_STATS_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_RMON_MC_EGRESS0_STATS_IN_MC_EGRESS0_STATS 0x18 /* enum */
/* flags */
#define       MC_CMD_EFTEST_RMON_MC_EGRESS0_STATS_IN_FLAGS_OFST 4
#define       MC_CMD_EFTEST_RMON_MC_EGRESS0_STATS_IN_FLAGS_LEN 4
#define        MC_CMD_EFTEST_RMON_MC_EGRESS0_STATS_IN_UNUSED_OFST 4
#define        MC_CMD_EFTEST_RMON_MC_EGRESS0_STATS_IN_UNUSED_LBN 0
#define        MC_CMD_EFTEST_RMON_MC_EGRESS0_STATS_IN_UNUSED_WIDTH 16
#define        MC_CMD_EFTEST_RMON_MC_EGRESS0_STATS_IN_RST_OFST 4
#define        MC_CMD_EFTEST_RMON_MC_EGRESS0_STATS_IN_RST_LBN 16
#define        MC_CMD_EFTEST_RMON_MC_EGRESS0_STATS_IN_RST_WIDTH 1

/* MC_CMD_EFTEST_RMON_MC_EGRESS0_STATS_OUT msgresponse */
#define    MC_CMD_EFTEST_RMON_MC_EGRESS0_STATS_OUT_LENMIN 4
#define    MC_CMD_EFTEST_RMON_MC_EGRESS0_STATS_OUT_LENMAX 252
#define    MC_CMD_EFTEST_RMON_MC_EGRESS0_STATS_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_RMON_MC_EGRESS0_STATS_OUT_LEN(num) (0+4*(num))
#define    MC_CMD_EFTEST_RMON_MC_EGRESS0_STATS_OUT_BUFFER_NUM(len) (((len)-0)/4)
/* Array of stats */
#define       MC_CMD_EFTEST_RMON_MC_EGRESS0_STATS_OUT_BUFFER_OFST 0
#define       MC_CMD_EFTEST_RMON_MC_EGRESS0_STATS_OUT_BUFFER_LEN 4
#define       MC_CMD_EFTEST_RMON_MC_EGRESS0_STATS_OUT_BUFFER_MINNUM 1
#define       MC_CMD_EFTEST_RMON_MC_EGRESS0_STATS_OUT_BUFFER_MAXNUM 63
#define       MC_CMD_EFTEST_RMON_MC_EGRESS0_STATS_OUT_BUFFER_MAXNUM_MCDI2 255

/* MC_CMD_EFTEST_RMON_MC_EGRESS1_STATS_IN msgrequest */
#define    MC_CMD_EFTEST_RMON_MC_EGRESS1_STATS_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_RMON_MC_EGRESS1_STATS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RMON_MC_EGRESS1_STATS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_RMON_MC_EGRESS1_STATS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RMON_MC_EGRESS1_STATS_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_RMON_MC_EGRESS1_STATS_IN_MC_EGRESS1_STATS 0x19 /* enum */
/* flags */
#define       MC_CMD_EFTEST_RMON_MC_EGRESS1_STATS_IN_FLAGS_OFST 4
#define       MC_CMD_EFTEST_RMON_MC_EGRESS1_STATS_IN_FLAGS_LEN 4
#define        MC_CMD_EFTEST_RMON_MC_EGRESS1_STATS_IN_UNUSED_OFST 4
#define        MC_CMD_EFTEST_RMON_MC_EGRESS1_STATS_IN_UNUSED_LBN 0
#define        MC_CMD_EFTEST_RMON_MC_EGRESS1_STATS_IN_UNUSED_WIDTH 16
#define        MC_CMD_EFTEST_RMON_MC_EGRESS1_STATS_IN_RST_OFST 4
#define        MC_CMD_EFTEST_RMON_MC_EGRESS1_STATS_IN_RST_LBN 16
#define        MC_CMD_EFTEST_RMON_MC_EGRESS1_STATS_IN_RST_WIDTH 1

/* MC_CMD_EFTEST_RMON_MC_EGRESS1_STATS_OUT msgresponse */
#define    MC_CMD_EFTEST_RMON_MC_EGRESS1_STATS_OUT_LENMIN 4
#define    MC_CMD_EFTEST_RMON_MC_EGRESS1_STATS_OUT_LENMAX 252
#define    MC_CMD_EFTEST_RMON_MC_EGRESS1_STATS_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_RMON_MC_EGRESS1_STATS_OUT_LEN(num) (0+4*(num))
#define    MC_CMD_EFTEST_RMON_MC_EGRESS1_STATS_OUT_BUFFER_NUM(len) (((len)-0)/4)
/* Array of stats */
#define       MC_CMD_EFTEST_RMON_MC_EGRESS1_STATS_OUT_BUFFER_OFST 0
#define       MC_CMD_EFTEST_RMON_MC_EGRESS1_STATS_OUT_BUFFER_LEN 4
#define       MC_CMD_EFTEST_RMON_MC_EGRESS1_STATS_OUT_BUFFER_MINNUM 1
#define       MC_CMD_EFTEST_RMON_MC_EGRESS1_STATS_OUT_BUFFER_MAXNUM 63
#define       MC_CMD_EFTEST_RMON_MC_EGRESS1_STATS_OUT_BUFFER_MAXNUM_MCDI2 255

/* MC_CMD_EFTEST_RMON_MC_EGRESS2_STATS_IN msgrequest */
#define    MC_CMD_EFTEST_RMON_MC_EGRESS2_STATS_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_RMON_MC_EGRESS2_STATS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RMON_MC_EGRESS2_STATS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_RMON_MC_EGRESS2_STATS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RMON_MC_EGRESS2_STATS_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_RMON_MC_EGRESS2_STATS_IN_MC_EGRESS2_STATS 0x1a /* enum */
/* flags */
#define       MC_CMD_EFTEST_RMON_MC_EGRESS2_STATS_IN_FLAGS_OFST 4
#define       MC_CMD_EFTEST_RMON_MC_EGRESS2_STATS_IN_FLAGS_LEN 4
#define        MC_CMD_EFTEST_RMON_MC_EGRESS2_STATS_IN_UNUSED_OFST 4
#define        MC_CMD_EFTEST_RMON_MC_EGRESS2_STATS_IN_UNUSED_LBN 0
#define        MC_CMD_EFTEST_RMON_MC_EGRESS2_STATS_IN_UNUSED_WIDTH 16
#define        MC_CMD_EFTEST_RMON_MC_EGRESS2_STATS_IN_RST_OFST 4
#define        MC_CMD_EFTEST_RMON_MC_EGRESS2_STATS_IN_RST_LBN 16
#define        MC_CMD_EFTEST_RMON_MC_EGRESS2_STATS_IN_RST_WIDTH 1

/* MC_CMD_EFTEST_RMON_MC_EGRESS2_STATS_OUT msgresponse */
#define    MC_CMD_EFTEST_RMON_MC_EGRESS2_STATS_OUT_LENMIN 4
#define    MC_CMD_EFTEST_RMON_MC_EGRESS2_STATS_OUT_LENMAX 252
#define    MC_CMD_EFTEST_RMON_MC_EGRESS2_STATS_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_RMON_MC_EGRESS2_STATS_OUT_LEN(num) (0+4*(num))
#define    MC_CMD_EFTEST_RMON_MC_EGRESS2_STATS_OUT_BUFFER_NUM(len) (((len)-0)/4)
/* Array of stats */
#define       MC_CMD_EFTEST_RMON_MC_EGRESS2_STATS_OUT_BUFFER_OFST 0
#define       MC_CMD_EFTEST_RMON_MC_EGRESS2_STATS_OUT_BUFFER_LEN 4
#define       MC_CMD_EFTEST_RMON_MC_EGRESS2_STATS_OUT_BUFFER_MINNUM 1
#define       MC_CMD_EFTEST_RMON_MC_EGRESS2_STATS_OUT_BUFFER_MAXNUM 63
#define       MC_CMD_EFTEST_RMON_MC_EGRESS2_STATS_OUT_BUFFER_MAXNUM_MCDI2 255

/* MC_CMD_EFTEST_RMON_MC_EGRESS3_STATS_IN msgrequest */
#define    MC_CMD_EFTEST_RMON_MC_EGRESS3_STATS_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_RMON_MC_EGRESS3_STATS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RMON_MC_EGRESS3_STATS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_RMON_MC_EGRESS3_STATS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RMON_MC_EGRESS3_STATS_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_RMON_MC_EGRESS3_STATS_IN_MC_EGRESS3_STATS 0x1b /* enum */
/* flags */
#define       MC_CMD_EFTEST_RMON_MC_EGRESS3_STATS_IN_FLAGS_OFST 4
#define       MC_CMD_EFTEST_RMON_MC_EGRESS3_STATS_IN_FLAGS_LEN 4
#define        MC_CMD_EFTEST_RMON_MC_EGRESS3_STATS_IN_UNUSED_OFST 4
#define        MC_CMD_EFTEST_RMON_MC_EGRESS3_STATS_IN_UNUSED_LBN 0
#define        MC_CMD_EFTEST_RMON_MC_EGRESS3_STATS_IN_UNUSED_WIDTH 16
#define        MC_CMD_EFTEST_RMON_MC_EGRESS3_STATS_IN_RST_OFST 4
#define        MC_CMD_EFTEST_RMON_MC_EGRESS3_STATS_IN_RST_LBN 16
#define        MC_CMD_EFTEST_RMON_MC_EGRESS3_STATS_IN_RST_WIDTH 1

/* MC_CMD_EFTEST_RMON_MC_EGRESS3_STATS_OUT msgresponse */
#define    MC_CMD_EFTEST_RMON_MC_EGRESS3_STATS_OUT_LENMIN 4
#define    MC_CMD_EFTEST_RMON_MC_EGRESS3_STATS_OUT_LENMAX 252
#define    MC_CMD_EFTEST_RMON_MC_EGRESS3_STATS_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_RMON_MC_EGRESS3_STATS_OUT_LEN(num) (0+4*(num))
#define    MC_CMD_EFTEST_RMON_MC_EGRESS3_STATS_OUT_BUFFER_NUM(len) (((len)-0)/4)
/* Array of stats */
#define       MC_CMD_EFTEST_RMON_MC_EGRESS3_STATS_OUT_BUFFER_OFST 0
#define       MC_CMD_EFTEST_RMON_MC_EGRESS3_STATS_OUT_BUFFER_LEN 4
#define       MC_CMD_EFTEST_RMON_MC_EGRESS3_STATS_OUT_BUFFER_MINNUM 1
#define       MC_CMD_EFTEST_RMON_MC_EGRESS3_STATS_OUT_BUFFER_MAXNUM 63
#define       MC_CMD_EFTEST_RMON_MC_EGRESS3_STATS_OUT_BUFFER_MAXNUM_MCDI2 255

/* MC_CMD_EFTEST_RMON_MC_EGRESS_RX0_STATS_IN msgrequest */
#define    MC_CMD_EFTEST_RMON_MC_EGRESS_RX0_STATS_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_RX0_STATS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_RX0_STATS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_RX0_STATS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_RX0_STATS_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_RMON_MC_EGRESS_RX0_STATS_IN_MC_EGRESS_RX0_STATS 0x1c /* enum */
/* flags */
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_RX0_STATS_IN_FLAGS_OFST 4
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_RX0_STATS_IN_FLAGS_LEN 4
#define        MC_CMD_EFTEST_RMON_MC_EGRESS_RX0_STATS_IN_UNUSED_OFST 4
#define        MC_CMD_EFTEST_RMON_MC_EGRESS_RX0_STATS_IN_UNUSED_LBN 0
#define        MC_CMD_EFTEST_RMON_MC_EGRESS_RX0_STATS_IN_UNUSED_WIDTH 16
#define        MC_CMD_EFTEST_RMON_MC_EGRESS_RX0_STATS_IN_RST_OFST 4
#define        MC_CMD_EFTEST_RMON_MC_EGRESS_RX0_STATS_IN_RST_LBN 16
#define        MC_CMD_EFTEST_RMON_MC_EGRESS_RX0_STATS_IN_RST_WIDTH 1

/* MC_CMD_EFTEST_RMON_MC_EGRESS_RX0_STATS_OUT msgresponse */
#define    MC_CMD_EFTEST_RMON_MC_EGRESS_RX0_STATS_OUT_LENMIN 4
#define    MC_CMD_EFTEST_RMON_MC_EGRESS_RX0_STATS_OUT_LENMAX 252
#define    MC_CMD_EFTEST_RMON_MC_EGRESS_RX0_STATS_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_RMON_MC_EGRESS_RX0_STATS_OUT_LEN(num) (0+4*(num))
#define    MC_CMD_EFTEST_RMON_MC_EGRESS_RX0_STATS_OUT_BUFFER_NUM(len) (((len)-0)/4)
/* Array of stats */
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_RX0_STATS_OUT_BUFFER_OFST 0
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_RX0_STATS_OUT_BUFFER_LEN 4
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_RX0_STATS_OUT_BUFFER_MINNUM 1
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_RX0_STATS_OUT_BUFFER_MAXNUM 63
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_RX0_STATS_OUT_BUFFER_MAXNUM_MCDI2 255

/* MC_CMD_EFTEST_RMON_MC_EGRESS_RX1_STATS_IN msgrequest */
#define    MC_CMD_EFTEST_RMON_MC_EGRESS_RX1_STATS_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_RX1_STATS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_RX1_STATS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_RX1_STATS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_RX1_STATS_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_RMON_MC_EGRESS_RX1_STATS_IN_MC_EGRESS_RX1_STATS 0x1d /* enum */
/* flags */
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_RX1_STATS_IN_FLAGS_OFST 4
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_RX1_STATS_IN_FLAGS_LEN 4
#define        MC_CMD_EFTEST_RMON_MC_EGRESS_RX1_STATS_IN_UNUSED_OFST 4
#define        MC_CMD_EFTEST_RMON_MC_EGRESS_RX1_STATS_IN_UNUSED_LBN 0
#define        MC_CMD_EFTEST_RMON_MC_EGRESS_RX1_STATS_IN_UNUSED_WIDTH 16
#define        MC_CMD_EFTEST_RMON_MC_EGRESS_RX1_STATS_IN_RST_OFST 4
#define        MC_CMD_EFTEST_RMON_MC_EGRESS_RX1_STATS_IN_RST_LBN 16
#define        MC_CMD_EFTEST_RMON_MC_EGRESS_RX1_STATS_IN_RST_WIDTH 1

/* MC_CMD_EFTEST_RMON_MC_EGRESS_RX1_STATS_OUT msgresponse */
#define    MC_CMD_EFTEST_RMON_MC_EGRESS_RX1_STATS_OUT_LENMIN 4
#define    MC_CMD_EFTEST_RMON_MC_EGRESS_RX1_STATS_OUT_LENMAX 252
#define    MC_CMD_EFTEST_RMON_MC_EGRESS_RX1_STATS_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_RMON_MC_EGRESS_RX1_STATS_OUT_LEN(num) (0+4*(num))
#define    MC_CMD_EFTEST_RMON_MC_EGRESS_RX1_STATS_OUT_BUFFER_NUM(len) (((len)-0)/4)
/* Array of stats */
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_RX1_STATS_OUT_BUFFER_OFST 0
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_RX1_STATS_OUT_BUFFER_LEN 4
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_RX1_STATS_OUT_BUFFER_MINNUM 1
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_RX1_STATS_OUT_BUFFER_MAXNUM 63
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_RX1_STATS_OUT_BUFFER_MAXNUM_MCDI2 255

/* MC_CMD_EFTEST_RMON_MC_EGRESS_NCSI_STATS_IN msgrequest */
#define    MC_CMD_EFTEST_RMON_MC_EGRESS_NCSI_STATS_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_NCSI_STATS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_NCSI_STATS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_NCSI_STATS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_NCSI_STATS_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_RMON_MC_EGRESS_NCSI_STATS_IN_MC_EGRESS_NCSI_STATS 0x1e /* enum */
/* flags */
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_NCSI_STATS_IN_FLAGS_OFST 4
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_NCSI_STATS_IN_FLAGS_LEN 4
#define        MC_CMD_EFTEST_RMON_MC_EGRESS_NCSI_STATS_IN_UNUSED_OFST 4
#define        MC_CMD_EFTEST_RMON_MC_EGRESS_NCSI_STATS_IN_UNUSED_LBN 0
#define        MC_CMD_EFTEST_RMON_MC_EGRESS_NCSI_STATS_IN_UNUSED_WIDTH 16
#define        MC_CMD_EFTEST_RMON_MC_EGRESS_NCSI_STATS_IN_RST_OFST 4
#define        MC_CMD_EFTEST_RMON_MC_EGRESS_NCSI_STATS_IN_RST_LBN 16
#define        MC_CMD_EFTEST_RMON_MC_EGRESS_NCSI_STATS_IN_RST_WIDTH 1

/* MC_CMD_EFTEST_RMON_MC_EGRESS_NCSI_STATS_OUT msgresponse */
#define    MC_CMD_EFTEST_RMON_MC_EGRESS_NCSI_STATS_OUT_LENMIN 4
#define    MC_CMD_EFTEST_RMON_MC_EGRESS_NCSI_STATS_OUT_LENMAX 252
#define    MC_CMD_EFTEST_RMON_MC_EGRESS_NCSI_STATS_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_RMON_MC_EGRESS_NCSI_STATS_OUT_LEN(num) (0+4*(num))
#define    MC_CMD_EFTEST_RMON_MC_EGRESS_NCSI_STATS_OUT_BUFFER_NUM(len) (((len)-0)/4)
/* Array of stats */
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_NCSI_STATS_OUT_BUFFER_OFST 0
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_NCSI_STATS_OUT_BUFFER_LEN 4
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_NCSI_STATS_OUT_BUFFER_MINNUM 1
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_NCSI_STATS_OUT_BUFFER_MAXNUM 63
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_NCSI_STATS_OUT_BUFFER_MAXNUM_MCDI2 255

/* MC_CMD_EFTEST_RMON_MC_INGRESS_BUCKETS_STATS_IN msgrequest */
#define    MC_CMD_EFTEST_RMON_MC_INGRESS_BUCKETS_STATS_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_RMON_MC_INGRESS_BUCKETS_STATS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RMON_MC_INGRESS_BUCKETS_STATS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_RMON_MC_INGRESS_BUCKETS_STATS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RMON_MC_INGRESS_BUCKETS_STATS_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_RMON_MC_INGRESS_BUCKETS_STATS_IN_MC_INGRESS_BUCKETS_STATS 0x1f /* enum */
/* flags */
#define       MC_CMD_EFTEST_RMON_MC_INGRESS_BUCKETS_STATS_IN_FLAGS_OFST 4
#define       MC_CMD_EFTEST_RMON_MC_INGRESS_BUCKETS_STATS_IN_FLAGS_LEN 4
#define        MC_CMD_EFTEST_RMON_MC_INGRESS_BUCKETS_STATS_IN_UNUSED_OFST 4
#define        MC_CMD_EFTEST_RMON_MC_INGRESS_BUCKETS_STATS_IN_UNUSED_LBN 0
#define        MC_CMD_EFTEST_RMON_MC_INGRESS_BUCKETS_STATS_IN_UNUSED_WIDTH 16
#define        MC_CMD_EFTEST_RMON_MC_INGRESS_BUCKETS_STATS_IN_RST_OFST 4
#define        MC_CMD_EFTEST_RMON_MC_INGRESS_BUCKETS_STATS_IN_RST_LBN 16
#define        MC_CMD_EFTEST_RMON_MC_INGRESS_BUCKETS_STATS_IN_RST_WIDTH 1

/* MC_CMD_EFTEST_RMON_MC_INGRESS_BUCKETS_STATS_OUT msgresponse */
#define    MC_CMD_EFTEST_RMON_MC_INGRESS_BUCKETS_STATS_OUT_LENMIN 4
#define    MC_CMD_EFTEST_RMON_MC_INGRESS_BUCKETS_STATS_OUT_LENMAX 252
#define    MC_CMD_EFTEST_RMON_MC_INGRESS_BUCKETS_STATS_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_RMON_MC_INGRESS_BUCKETS_STATS_OUT_LEN(num) (0+4*(num))
#define    MC_CMD_EFTEST_RMON_MC_INGRESS_BUCKETS_STATS_OUT_BUFFER_NUM(len) (((len)-0)/4)
/* Array of stats */
#define       MC_CMD_EFTEST_RMON_MC_INGRESS_BUCKETS_STATS_OUT_BUFFER_OFST 0
#define       MC_CMD_EFTEST_RMON_MC_INGRESS_BUCKETS_STATS_OUT_BUFFER_LEN 4
#define       MC_CMD_EFTEST_RMON_MC_INGRESS_BUCKETS_STATS_OUT_BUFFER_MINNUM 1
#define       MC_CMD_EFTEST_RMON_MC_INGRESS_BUCKETS_STATS_OUT_BUFFER_MAXNUM 63
#define       MC_CMD_EFTEST_RMON_MC_INGRESS_BUCKETS_STATS_OUT_BUFFER_MAXNUM_MCDI2 255

/* MC_CMD_EFTEST_RMON_MC_EGRESS_BUCKETS_STATS_IN msgrequest */
#define    MC_CMD_EFTEST_RMON_MC_EGRESS_BUCKETS_STATS_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_BUCKETS_STATS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_BUCKETS_STATS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_BUCKETS_STATS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_BUCKETS_STATS_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_RMON_MC_EGRESS_BUCKETS_STATS_IN_MC_EGRESS_BUCKETS_STATS 0x20 /* enum */
/* flags */
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_BUCKETS_STATS_IN_FLAGS_OFST 4
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_BUCKETS_STATS_IN_FLAGS_LEN 4
#define        MC_CMD_EFTEST_RMON_MC_EGRESS_BUCKETS_STATS_IN_UNUSED_OFST 4
#define        MC_CMD_EFTEST_RMON_MC_EGRESS_BUCKETS_STATS_IN_UNUSED_LBN 0
#define        MC_CMD_EFTEST_RMON_MC_EGRESS_BUCKETS_STATS_IN_UNUSED_WIDTH 16
#define        MC_CMD_EFTEST_RMON_MC_EGRESS_BUCKETS_STATS_IN_RST_OFST 4
#define        MC_CMD_EFTEST_RMON_MC_EGRESS_BUCKETS_STATS_IN_RST_LBN 16
#define        MC_CMD_EFTEST_RMON_MC_EGRESS_BUCKETS_STATS_IN_RST_WIDTH 1

/* MC_CMD_EFTEST_RMON_MC_EGRESS_BUCKETS_STATS_OUT msgresponse */
#define    MC_CMD_EFTEST_RMON_MC_EGRESS_BUCKETS_STATS_OUT_LENMIN 4
#define    MC_CMD_EFTEST_RMON_MC_EGRESS_BUCKETS_STATS_OUT_LENMAX 252
#define    MC_CMD_EFTEST_RMON_MC_EGRESS_BUCKETS_STATS_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_RMON_MC_EGRESS_BUCKETS_STATS_OUT_LEN(num) (0+4*(num))
#define    MC_CMD_EFTEST_RMON_MC_EGRESS_BUCKETS_STATS_OUT_BUFFER_NUM(len) (((len)-0)/4)
/* Array of stats */
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_BUCKETS_STATS_OUT_BUFFER_OFST 0
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_BUCKETS_STATS_OUT_BUFFER_LEN 4
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_BUCKETS_STATS_OUT_BUFFER_MINNUM 1
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_BUCKETS_STATS_OUT_BUFFER_MAXNUM 63
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_BUCKETS_STATS_OUT_BUFFER_MAXNUM_MCDI2 255

/* MC_CMD_EFTEST_RMON_MC_EGRESS_VLAN_STATS_IN msgrequest */
#define    MC_CMD_EFTEST_RMON_MC_EGRESS_VLAN_STATS_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_VLAN_STATS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_VLAN_STATS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_VLAN_STATS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_VLAN_STATS_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_RMON_MC_EGRESS_VLAN_STATS_IN_MC_EGRESS_VLAN_STATS 0x21 /* enum */
/* flags */
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_VLAN_STATS_IN_FLAGS_OFST 4
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_VLAN_STATS_IN_FLAGS_LEN 4
#define        MC_CMD_EFTEST_RMON_MC_EGRESS_VLAN_STATS_IN_UNUSED_OFST 4
#define        MC_CMD_EFTEST_RMON_MC_EGRESS_VLAN_STATS_IN_UNUSED_LBN 0
#define        MC_CMD_EFTEST_RMON_MC_EGRESS_VLAN_STATS_IN_UNUSED_WIDTH 16
#define        MC_CMD_EFTEST_RMON_MC_EGRESS_VLAN_STATS_IN_RST_OFST 4
#define        MC_CMD_EFTEST_RMON_MC_EGRESS_VLAN_STATS_IN_RST_LBN 16
#define        MC_CMD_EFTEST_RMON_MC_EGRESS_VLAN_STATS_IN_RST_WIDTH 1

/* MC_CMD_EFTEST_RMON_MC_EGRESS_VLAN_STATS_OUT msgresponse */
#define    MC_CMD_EFTEST_RMON_MC_EGRESS_VLAN_STATS_OUT_LENMIN 4
#define    MC_CMD_EFTEST_RMON_MC_EGRESS_VLAN_STATS_OUT_LENMAX 252
#define    MC_CMD_EFTEST_RMON_MC_EGRESS_VLAN_STATS_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_RMON_MC_EGRESS_VLAN_STATS_OUT_LEN(num) (0+4*(num))
#define    MC_CMD_EFTEST_RMON_MC_EGRESS_VLAN_STATS_OUT_BUFFER_NUM(len) (((len)-0)/4)
/* Array of stats */
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_VLAN_STATS_OUT_BUFFER_OFST 0
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_VLAN_STATS_OUT_BUFFER_LEN 4
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_VLAN_STATS_OUT_BUFFER_MINNUM 1
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_VLAN_STATS_OUT_BUFFER_MAXNUM 63
#define       MC_CMD_EFTEST_RMON_MC_EGRESS_VLAN_STATS_OUT_BUFFER_MAXNUM_MCDI2 255

/* MC_CMD_EFTEST_RMON_END_COLLECT_CLASS_STATS_IN msgrequest */
#define    MC_CMD_EFTEST_RMON_END_COLLECT_CLASS_STATS_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_RMON_END_COLLECT_CLASS_STATS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RMON_END_COLLECT_CLASS_STATS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_RMON_END_COLLECT_CLASS_STATS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RMON_END_COLLECT_CLASS_STATS_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_RMON_END_COLLECT_CLASS_STATS_IN_END_COLLECT_CLASS_STATS 0x22 /* enum */
/* The port id associated with the vport/pport at which to stop collecting
 * class stats
 */
#define       MC_CMD_EFTEST_RMON_END_COLLECT_CLASS_STATS_IN_PORT_ID_OFST 4
#define       MC_CMD_EFTEST_RMON_END_COLLECT_CLASS_STATS_IN_PORT_ID_LEN 4

/* MC_CMD_EFTEST_RMON_END_COLLECT_CLASS_STATS_OUT msgresponse */
#define    MC_CMD_EFTEST_RMON_END_COLLECT_CLASS_STATS_OUT_LEN 0

/* MC_CMD_EFTEST_RMON_END_COLLECT_SUPER_CLASS_STATS_IN msgrequest */
#define    MC_CMD_EFTEST_RMON_END_COLLECT_SUPER_CLASS_STATS_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_RMON_END_COLLECT_SUPER_CLASS_STATS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RMON_END_COLLECT_SUPER_CLASS_STATS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_RMON_END_COLLECT_SUPER_CLASS_STATS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RMON_END_COLLECT_SUPER_CLASS_STATS_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_RMON_END_COLLECT_SUPER_CLASS_STATS_IN_END_COLLECT_SUPER_CLASS_STATS 0x23 /* enum */
/* The port id associated with the vport/pport at which to stop collecting
 * class stats
 */
#define       MC_CMD_EFTEST_RMON_END_COLLECT_SUPER_CLASS_STATS_IN_PORT_ID_OFST 4
#define       MC_CMD_EFTEST_RMON_END_COLLECT_SUPER_CLASS_STATS_IN_PORT_ID_LEN 4

/* MC_CMD_EFTEST_RMON_END_COLLECT_SUPER_CLASS_STATS_OUT msgresponse */
#define    MC_CMD_EFTEST_RMON_END_COLLECT_SUPER_CLASS_STATS_OUT_LEN 0

/* MC_CMD_EFTEST_RMON_RX_SFFF_STATS_IN msgrequest */
#define    MC_CMD_EFTEST_RMON_RX_SFFF_STATS_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_RMON_RX_SFFF_STATS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RMON_RX_SFFF_STATS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_RMON_RX_SFFF_STATS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RMON_RX_SFFF_STATS_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_RMON_RX_SFFF_STATS_IN_RX_SFFF_STATS 0x24 /* enum */
/* flags */
#define       MC_CMD_EFTEST_RMON_RX_SFFF_STATS_IN_FLAGS_OFST 4
#define       MC_CMD_EFTEST_RMON_RX_SFFF_STATS_IN_FLAGS_LEN 4
#define        MC_CMD_EFTEST_RMON_RX_SFFF_STATS_IN_RESERVED_OFST 4
#define        MC_CMD_EFTEST_RMON_RX_SFFF_STATS_IN_RESERVED_LBN 0
#define        MC_CMD_EFTEST_RMON_RX_SFFF_STATS_IN_RESERVED_WIDTH 16
#define        MC_CMD_EFTEST_RMON_RX_SFFF_STATS_IN_RST_OFST 4
#define        MC_CMD_EFTEST_RMON_RX_SFFF_STATS_IN_RST_LBN 16
#define        MC_CMD_EFTEST_RMON_RX_SFFF_STATS_IN_RST_WIDTH 1

/* MC_CMD_EFTEST_RMON_RX_SFFF_STATS_OUT msgresponse */
#define    MC_CMD_EFTEST_RMON_RX_SFFF_STATS_OUT_LENMIN 4
#define    MC_CMD_EFTEST_RMON_RX_SFFF_STATS_OUT_LENMAX 252
#define    MC_CMD_EFTEST_RMON_RX_SFFF_STATS_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_RMON_RX_SFFF_STATS_OUT_LEN(num) (0+4*(num))
#define    MC_CMD_EFTEST_RMON_RX_SFFF_STATS_OUT_BUFFER_NUM(len) (((len)-0)/4)
/* Array of stats */
#define       MC_CMD_EFTEST_RMON_RX_SFFF_STATS_OUT_BUFFER_OFST 0
#define       MC_CMD_EFTEST_RMON_RX_SFFF_STATS_OUT_BUFFER_LEN 4
#define       MC_CMD_EFTEST_RMON_RX_SFFF_STATS_OUT_BUFFER_MINNUM 1
#define       MC_CMD_EFTEST_RMON_RX_SFFF_STATS_OUT_BUFFER_MAXNUM 63
#define       MC_CMD_EFTEST_RMON_RX_SFFF_STATS_OUT_BUFFER_MAXNUM_MCDI2 255

/* MC_CMD_EFTEST_RMON_RX_MC_STATS_IN msgrequest */
#define    MC_CMD_EFTEST_RMON_RX_MC_STATS_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_RMON_RX_MC_STATS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RMON_RX_MC_STATS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_RMON_RX_MC_STATS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RMON_RX_MC_STATS_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_RMON_RX_MC_STATS_IN_RX_MC_STATS 0x25 /* enum */
/* flags */
#define       MC_CMD_EFTEST_RMON_RX_MC_STATS_IN_FLAGS_OFST 4
#define       MC_CMD_EFTEST_RMON_RX_MC_STATS_IN_FLAGS_LEN 4
#define        MC_CMD_EFTEST_RMON_RX_MC_STATS_IN_RESERVED_OFST 4
#define        MC_CMD_EFTEST_RMON_RX_MC_STATS_IN_RESERVED_LBN 0
#define        MC_CMD_EFTEST_RMON_RX_MC_STATS_IN_RESERVED_WIDTH 16
#define        MC_CMD_EFTEST_RMON_RX_MC_STATS_IN_RST_OFST 4
#define        MC_CMD_EFTEST_RMON_RX_MC_STATS_IN_RST_LBN 16
#define        MC_CMD_EFTEST_RMON_RX_MC_STATS_IN_RST_WIDTH 1

/* MC_CMD_EFTEST_RMON_RX_MC_STATS_OUT msgresponse */
#define    MC_CMD_EFTEST_RMON_RX_MC_STATS_OUT_LENMIN 4
#define    MC_CMD_EFTEST_RMON_RX_MC_STATS_OUT_LENMAX 252
#define    MC_CMD_EFTEST_RMON_RX_MC_STATS_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_RMON_RX_MC_STATS_OUT_LEN(num) (0+4*(num))
#define    MC_CMD_EFTEST_RMON_RX_MC_STATS_OUT_BUFFER_NUM(len) (((len)-0)/4)
/* Array of stats */
#define       MC_CMD_EFTEST_RMON_RX_MC_STATS_OUT_BUFFER_OFST 0
#define       MC_CMD_EFTEST_RMON_RX_MC_STATS_OUT_BUFFER_LEN 4
#define       MC_CMD_EFTEST_RMON_RX_MC_STATS_OUT_BUFFER_MINNUM 1
#define       MC_CMD_EFTEST_RMON_RX_MC_STATS_OUT_BUFFER_MAXNUM 63
#define       MC_CMD_EFTEST_RMON_RX_MC_STATS_OUT_BUFFER_MAXNUM_MCDI2 255

/* MC_CMD_EFTEST_RMON_GET_EF100_STATS_IN msgrequest */
#define    MC_CMD_EFTEST_RMON_GET_EF100_STATS_IN_LEN 12
/* identifies the test */
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_RMON_GET_EF100_STATS_IN_GET_EF100_STATS 0x26 /* enum */
/* Identifier for the RMON instance that stats should be retrieved from */
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_IN_ENGINE_ID_OFST 4
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_IN_ENGINE_ID_LEN 4
/* enum: Match engine at the ingress to the MAE */
#define          MC_CMD_EFTEST_RMON_GET_EF100_STATS_IN_ME 0x0
/* enum: Action engine at the egress of the MAE */
#define          MC_CMD_EFTEST_RMON_GET_EF100_STATS_IN_AE 0x1
/* enum: Match engine at the ingress to the network MAE */
#define          MC_CMD_EFTEST_RMON_GET_EF100_STATS_IN_N_ME 0x2
/* enum: Action engine at the egress of the network MAE */
#define          MC_CMD_EFTEST_RMON_GET_EF100_STATS_IN_N_AE 0x3
/* enum: VNIC RX engine */
#define          MC_CMD_EFTEST_RMON_GET_EF100_STATS_IN_VNRX 0x4
/* The index of the counter set to be retrieved. The meaning of this field
 * depends on the ENGINE_ID. ME and N_ME engines are indexed by SRC_MPORT AE
 * and N_AE engines are indexed by DST_MPORT VNRX engine is indexed by
 * INGRESS_MPORT
 */
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_IN_COUNTER_SET_INDEX_OFST 8
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_IN_COUNTER_SET_INDEX_LEN 4

/* MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT msgresponse */
#define    MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_LEN 72
/* A bitfield indicating which of the stats are valid for the RMON engine
 * selected in the request.
 */
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_VALID_STATS_OFST 0
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_VALID_STATS_LEN 4
#define        MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_ALL_BYTE_CNT_VALID_OFST 0
#define        MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_ALL_BYTE_CNT_VALID_LBN 0
#define        MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_ALL_BYTE_CNT_VALID_WIDTH 1
#define        MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_ALL_PKT_CNT_VALID_OFST 0
#define        MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_ALL_PKT_CNT_VALID_LBN 1
#define        MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_ALL_PKT_CNT_VALID_WIDTH 1
#define        MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_MCAST_BYTE_CNT_VALID_OFST 0
#define        MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_MCAST_BYTE_CNT_VALID_LBN 2
#define        MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_MCAST_BYTE_CNT_VALID_WIDTH 1
#define        MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_MCAST_PKT_CNT_VALID_OFST 0
#define        MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_MCAST_PKT_CNT_VALID_LBN 3
#define        MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_MCAST_PKT_CNT_VALID_WIDTH 1
#define        MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_BCAST_BYTE_CNT_VALID_OFST 0
#define        MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_BCAST_BYTE_CNT_VALID_LBN 4
#define        MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_BCAST_BYTE_CNT_VALID_WIDTH 1
#define        MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_BCAST_PKT_CNT_VALID_OFST 0
#define        MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_BCAST_PKT_CNT_VALID_LBN 5
#define        MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_BCAST_PKT_CNT_VALID_WIDTH 1
#define        MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_DROP_BYTE_CNT_VALID_OFST 0
#define        MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_DROP_BYTE_CNT_VALID_LBN 6
#define        MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_DROP_BYTE_CNT_VALID_WIDTH 1
#define        MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_DROP_PKT_CNT_VALID_OFST 0
#define        MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_DROP_PKT_CNT_VALID_LBN 7
#define        MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_DROP_PKT_CNT_VALID_WIDTH 1
/* Required for alignment of 64 bit fields */
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_RESERVED_OFST 4
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_RESERVED_LEN 4
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_ALL_BYTE_CNT_OFST 8
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_ALL_BYTE_CNT_LEN 8
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_ALL_BYTE_CNT_LO_OFST 8
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_ALL_BYTE_CNT_LO_LEN 4
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_ALL_BYTE_CNT_LO_LBN 64
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_ALL_BYTE_CNT_LO_WIDTH 32
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_ALL_BYTE_CNT_HI_OFST 12
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_ALL_BYTE_CNT_HI_LEN 4
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_ALL_BYTE_CNT_HI_LBN 96
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_ALL_BYTE_CNT_HI_WIDTH 32
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_ALL_PKT_CNT_OFST 16
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_ALL_PKT_CNT_LEN 8
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_ALL_PKT_CNT_LO_OFST 16
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_ALL_PKT_CNT_LO_LEN 4
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_ALL_PKT_CNT_LO_LBN 128
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_ALL_PKT_CNT_LO_WIDTH 32
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_ALL_PKT_CNT_HI_OFST 20
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_ALL_PKT_CNT_HI_LEN 4
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_ALL_PKT_CNT_HI_LBN 160
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_ALL_PKT_CNT_HI_WIDTH 32
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_MCAST_BYTE_CNT_OFST 24
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_MCAST_BYTE_CNT_LEN 8
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_MCAST_BYTE_CNT_LO_OFST 24
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_MCAST_BYTE_CNT_LO_LEN 4
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_MCAST_BYTE_CNT_LO_LBN 192
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_MCAST_BYTE_CNT_LO_WIDTH 32
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_MCAST_BYTE_CNT_HI_OFST 28
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_MCAST_BYTE_CNT_HI_LEN 4
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_MCAST_BYTE_CNT_HI_LBN 224
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_MCAST_BYTE_CNT_HI_WIDTH 32
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_MCAST_PKT_CNT_OFST 32
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_MCAST_PKT_CNT_LEN 8
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_MCAST_PKT_CNT_LO_OFST 32
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_MCAST_PKT_CNT_LO_LEN 4
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_MCAST_PKT_CNT_LO_LBN 256
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_MCAST_PKT_CNT_LO_WIDTH 32
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_MCAST_PKT_CNT_HI_OFST 36
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_MCAST_PKT_CNT_HI_LEN 4
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_MCAST_PKT_CNT_HI_LBN 288
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_MCAST_PKT_CNT_HI_WIDTH 32
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_BCAST_BYTE_CNT_OFST 40
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_BCAST_BYTE_CNT_LEN 8
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_BCAST_BYTE_CNT_LO_OFST 40
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_BCAST_BYTE_CNT_LO_LEN 4
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_BCAST_BYTE_CNT_LO_LBN 320
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_BCAST_BYTE_CNT_LO_WIDTH 32
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_BCAST_BYTE_CNT_HI_OFST 44
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_BCAST_BYTE_CNT_HI_LEN 4
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_BCAST_BYTE_CNT_HI_LBN 352
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_BCAST_BYTE_CNT_HI_WIDTH 32
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_BCAST_PKT_CNT_OFST 48
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_BCAST_PKT_CNT_LEN 8
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_BCAST_PKT_CNT_LO_OFST 48
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_BCAST_PKT_CNT_LO_LEN 4
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_BCAST_PKT_CNT_LO_LBN 384
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_BCAST_PKT_CNT_LO_WIDTH 32
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_BCAST_PKT_CNT_HI_OFST 52
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_BCAST_PKT_CNT_HI_LEN 4
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_BCAST_PKT_CNT_HI_LBN 416
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_BCAST_PKT_CNT_HI_WIDTH 32
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_DROP_BYTE_CNT_OFST 56
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_DROP_BYTE_CNT_LEN 8
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_DROP_BYTE_CNT_LO_OFST 56
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_DROP_BYTE_CNT_LO_LEN 4
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_DROP_BYTE_CNT_LO_LBN 448
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_DROP_BYTE_CNT_LO_WIDTH 32
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_DROP_BYTE_CNT_HI_OFST 60
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_DROP_BYTE_CNT_HI_LEN 4
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_DROP_BYTE_CNT_HI_LBN 480
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_DROP_BYTE_CNT_HI_WIDTH 32
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_DROP_PKT_CNT_OFST 64
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_DROP_PKT_CNT_LEN 8
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_DROP_PKT_CNT_LO_OFST 64
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_DROP_PKT_CNT_LO_LEN 4
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_DROP_PKT_CNT_LO_LBN 512
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_DROP_PKT_CNT_LO_WIDTH 32
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_DROP_PKT_CNT_HI_OFST 68
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_DROP_PKT_CNT_HI_LEN 4
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_DROP_PKT_CNT_HI_LBN 544
#define       MC_CMD_EFTEST_RMON_GET_EF100_STATS_OUT_DROP_PKT_CNT_HI_WIDTH 32

/* MC_CMD_EFTEST_RMON_CLEAR_EF100_STATS_IN msgrequest */
#define    MC_CMD_EFTEST_RMON_CLEAR_EF100_STATS_IN_LEN 12
/* identifies the test */
#define       MC_CMD_EFTEST_RMON_CLEAR_EF100_STATS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RMON_CLEAR_EF100_STATS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_RMON_CLEAR_EF100_STATS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RMON_CLEAR_EF100_STATS_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_RMON_CLEAR_EF100_STATS_IN_CLEAR_EF100_STATS 0x27 /* enum */
/* Identifier for the RMON instance that stats should be cleared from */
#define       MC_CMD_EFTEST_RMON_CLEAR_EF100_STATS_IN_ENGINE_ID_OFST 4
#define       MC_CMD_EFTEST_RMON_CLEAR_EF100_STATS_IN_ENGINE_ID_LEN 4
/*            Enum values, see field(s): */
/*               MC_CMD_EFTEST_RMON_GET_EF100_STATS_IN/ENGINE_ID */
/* The index of the counter set to be cleared. The meaning of this field
 * depends on the ENGINE_ID. ME and N_ME engines are indexed by SRC_MPORT AE
 * and N_AE engines are indexed by DST_MPORT VNRX engine is indexed by
 * INGRESS_MPORT
 */
#define       MC_CMD_EFTEST_RMON_CLEAR_EF100_STATS_IN_COUNTER_SET_INDEX_OFST 8
#define       MC_CMD_EFTEST_RMON_CLEAR_EF100_STATS_IN_COUNTER_SET_INDEX_LEN 4
/*            Enum values, see field(s): */
/*               MC_CMD_EFTEST_RMON_GET_EF100_STATS_IN/COUNTER_SET_INDEX */

/* MC_CMD_EFTEST_RMON_CLEAR_EF100_STATS_OUT msgresponse */
#define    MC_CMD_EFTEST_RMON_CLEAR_EF100_STATS_OUT_LEN 0

/* MC_CMD_EFTEST_TXDPCPU_IN msgrequest */
#define    MC_CMD_EFTEST_TXDPCPU_IN_LEN 2
/* identifies the test */
#define       MC_CMD_EFTEST_TXDPCPU_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_TXDPCPU_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_TXDPCPU_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_TXDPCPU_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_TXDPCPU_IN_SET_MIN_FILL 0x0 /* enum */
#define          MC_CMD_EFTEST_TXDPCPU_IN_SET_TS_MODE 0x1 /* enum */
#define          MC_CMD_EFTEST_TXDPCPU_IN_EVENT_GEN 0x2 /* enum */

/* MC_CMD_EFTEST_TXDPCPU_OUT msgresponse */
#define    MC_CMD_EFTEST_TXDPCPU_OUT_LEN 0

/* MC_CMD_EFTEST_TXDPCPU_SET_MIN_FILL_IN msgrequest */
#define    MC_CMD_EFTEST_TXDPCPU_SET_MIN_FILL_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_TXDPCPU_SET_MIN_FILL_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_TXDPCPU_SET_MIN_FILL_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_TXDPCPU_SET_MIN_FILL_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_TXDPCPU_SET_MIN_FILL_IN_EFTEST_OP_LEN 1
/* The min_fill value to use, or 0 to use the default. */
#define       MC_CMD_EFTEST_TXDPCPU_SET_MIN_FILL_IN_MIN_FILL_OFST 4
#define       MC_CMD_EFTEST_TXDPCPU_SET_MIN_FILL_IN_MIN_FILL_LEN 4

/* MC_CMD_EFTEST_TXDPCPU_SET_TS_MODE_IN msgrequest */
#define    MC_CMD_EFTEST_TXDPCPU_SET_TS_MODE_IN_LEN 12
/* identifies the test */
#define       MC_CMD_EFTEST_TXDPCPU_SET_TS_MODE_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_TXDPCPU_SET_TS_MODE_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_TXDPCPU_SET_TS_MODE_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_TXDPCPU_SET_TS_MODE_IN_EFTEST_OP_LEN 1
/* The TXQ on which to set timestamp mode */
#define       MC_CMD_EFTEST_TXDPCPU_SET_TS_MODE_IN_TARGET_TXQ_OFST 4
#define       MC_CMD_EFTEST_TXDPCPU_SET_TS_MODE_IN_TARGET_TXQ_LEN 4
/* The timestamp mode to select */
#define       MC_CMD_EFTEST_TXDPCPU_SET_TS_MODE_IN_TS_MODE_OFST 8
#define       MC_CMD_EFTEST_TXDPCPU_SET_TS_MODE_IN_TS_MODE_LEN 4
#define          MC_CMD_EFTEST_TXDPCPU_SET_TS_MODE_IN_TS_MODE_DEFAULT 0x0 /* enum */
#define          MC_CMD_EFTEST_TXDPCPU_SET_TS_MODE_IN_TS_MODE_TXDP 0x1 /* enum */
#define          MC_CMD_EFTEST_TXDPCPU_SET_TS_MODE_IN_TS_MODE_MAC 0x2 /* enum */

/* MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_IN msgrequest */
#define    MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_IN_LEN 36
/* identifies the test */
#define       MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_IN_EFTEST_OP_LEN 1
/* Various flags */
#define       MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_IN_FLAGS_OFST 4
#define       MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_IN_FLAGS_LEN 4
#define        MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_IN_FLAG_GET_OFST 4
#define        MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_IN_FLAG_GET_LBN 0
#define        MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_IN_FLAG_GET_WIDTH 1
#define        MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_IN_FLAG_SET_OFST 4
#define        MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_IN_FLAG_SET_LBN 1
#define        MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_IN_FLAG_SET_WIDTH 1
#define        MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_IN_FLAG_FIXUP_OFST 4
#define        MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_IN_FLAG_FIXUP_LBN 2
#define        MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_IN_FLAG_FIXUP_WIDTH 1
/* The TXDP to query/modify */
#define       MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_IN_TXDP_OFST 8
#define       MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_IN_TXDP_LEN 4
/* The EVQ to receive events */
#define       MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_IN_TARGET_EVQ_OFST 12
#define       MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_IN_TARGET_EVQ_LEN 4
/* The low 32 bits of the event */
#define       MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_IN_EVENT_LO_OFST 16
#define       MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_IN_EVENT_LO_LEN 4
/* The high 32 bits of the event */
#define       MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_IN_EVENT_HI_OFST 20
#define       MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_IN_EVENT_HI_LEN 4
/* The number of events to send per batch, 0 to disable */
#define       MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_IN_BATCH_SIZE_OFST 24
#define       MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_IN_BATCH_SIZE_LEN 4
/* The time between batches */
#define       MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_IN_BATCH_PERIOD_OFST 28
#define       MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_IN_BATCH_PERIOD_LEN 4
/* Increment in ESF_DZ_TX_DESCR_INDX between events. */
#define       MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_IN_DESCR_INDX_INCR_OFST 32
#define       MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_IN_DESCR_INDX_INCR_LEN 4

/* MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_OUT msgresponse */
#define    MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_OUT_LEN 28
/* Indicates which flags are supported. */
#define       MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_OUT_SUPPORTED_FLAGS_OFST 0
#define       MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_OUT_SUPPORTED_FLAGS_LEN 4
#define        MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_OUT_SUPPORTED_FLAG_GET_OFST 0
#define        MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_OUT_SUPPORTED_FLAG_GET_LBN 0
#define        MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_OUT_SUPPORTED_FLAG_GET_WIDTH 1
#define        MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_OUT_SUPPORTED_FLAG_SET_OFST 0
#define        MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_OUT_SUPPORTED_FLAG_SET_LBN 1
#define        MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_OUT_SUPPORTED_FLAG_SET_WIDTH 1
#define        MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_OUT_SUPPORTED_FLAG_FIXUP_OFST 0
#define        MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_OUT_SUPPORTED_FLAG_FIXUP_LBN 2
#define        MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_OUT_SUPPORTED_FLAG_FIXUP_WIDTH 1
/* The EVQ to receive events, -1 to disable */
#define       MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_OUT_TARGET_EVQ_OFST 4
#define       MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_OUT_TARGET_EVQ_LEN 4
/* The low 32 bits of the event */
#define       MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_OUT_EVENT_LO_OFST 8
#define       MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_OUT_EVENT_LO_LEN 4
/* The high 32 bits of the event */
#define       MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_OUT_EVENT_HI_OFST 12
#define       MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_OUT_EVENT_HI_LEN 4
/* The number of events to send per batch */
#define       MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_OUT_BATCH_SIZE_OFST 16
#define       MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_OUT_BATCH_SIZE_LEN 4
/* The time between batches */
#define       MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_OUT_BATCH_PERIOD_OFST 20
#define       MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_OUT_BATCH_PERIOD_LEN 4
/* Increment in ESF_DZ_TX_DESCR_INDX between events. */
#define       MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_OUT_DESCR_INDX_INCR_OFST 24
#define       MC_CMD_EFTEST_TXDPCPU_EVENT_GEN_OUT_DESCR_INDX_INCR_LEN 4

/* MC_CMD_EFTEST_ECC_TEST_IN msgrequest */
#define    MC_CMD_EFTEST_ECC_TEST_IN_LEN 16
/* identifies the test */
#define       MC_CMD_EFTEST_ECC_TEST_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_ECC_TEST_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_ECC_TEST_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_ECC_TEST_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_ECC_TEST_IN_SET_ERROR_LIMIT 0x0 /* enum */
#define          MC_CMD_EFTEST_ECC_TEST_IN_SET_ERR_THRESH_REG 0x1 /* enum */
#define          MC_CMD_EFTEST_ECC_TEST_IN_SET_ERR_FORCE_BITS 0x2 /* enum */
#define          MC_CMD_EFTEST_ECC_TEST_IN_DISABLE_FORCE_ERR 0x3 /* enum */
#define          MC_CMD_EFTEST_ECC_TEST_IN_GET_STATUS 0x4 /* enum */
#define          MC_CMD_EFTEST_ECC_TEST_IN_GET_ERROR_STAT 0x5 /* enum */
/* enum: Turn off normal ECC processing by the firmware */
#define          MC_CMD_EFTEST_ECC_TEST_IN_ACQUIRE_ECC_PERIPHERAL 0x6
/* enum: Turn on normal ECC processing by the firmware */
#define          MC_CMD_EFTEST_ECC_TEST_IN_RELEASE_ECC_PERIPHERAL 0x7
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_ECC_TEST_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_ECC_TEST_IN_EFTEST_OP_RSVD_LEN 2
/* Limit of ECC error (use for ECC_TEST_SET_ERROR_LIMIT) */
#define       MC_CMD_EFTEST_ECC_TEST_IN_ERROR_LIMIT_OFST 4
#define       MC_CMD_EFTEST_ECC_TEST_IN_ERROR_LIMIT_LEN 4
/* New value of ERR_THRESH_REH (use for ECC_TEST_SET_ERR_THRESH_REG) */
#define       MC_CMD_EFTEST_ECC_TEST_IN_ERR_THRESH_REG_OFST 4
#define       MC_CMD_EFTEST_ECC_TEST_IN_ERR_THRESH_REG_LEN 4
/* Cleanup statistic or regisetr after read value */
#define       MC_CMD_EFTEST_ECC_TEST_IN_CLEAN_OFST 4
#define       MC_CMD_EFTEST_ECC_TEST_IN_CLEAN_LEN 4
/* New value of ECC_ERROR_FORCE */
#define       MC_CMD_EFTEST_ECC_TEST_IN_ECC_FORCE_OFST 4
#define       MC_CMD_EFTEST_ECC_TEST_IN_ECC_FORCE_LEN 4
/* New value of PAR_FORCE */
#define       MC_CMD_EFTEST_ECC_TEST_IN_PAR_FORCE_OFST 8
#define       MC_CMD_EFTEST_ECC_TEST_IN_PAR_FORCE_LEN 4
/* New value of PAR_FORCE2 */
#define       MC_CMD_EFTEST_ECC_TEST_IN_PAR_FORCE2_OFST 12
#define       MC_CMD_EFTEST_ECC_TEST_IN_PAR_FORCE2_LEN 4

/* MC_CMD_EFTEST_ECC_TEST_OUT msgresponse */
#define    MC_CMD_EFTEST_ECC_TEST_OUT_LEN 28
/* Value of register ECC_ERR_SRC_REGi (in stat acculated value) */
#define       MC_CMD_EFTEST_ECC_TEST_OUT_ECC_ERROR_SRC_OFST 0
#define       MC_CMD_EFTEST_ECC_TEST_OUT_ECC_ERROR_SRC_LEN 4
/* Value of register ECC_ERR_FATAL_REG (in stat acculated value) */
#define       MC_CMD_EFTEST_ECC_TEST_OUT_ECC_FATAL_SRC_OFST 4
#define       MC_CMD_EFTEST_ECC_TEST_OUT_ECC_FATAL_SRC_LEN 4
/* Value of register ECC_PAR_ERR_REG (in stat acculated value) */
#define       MC_CMD_EFTEST_ECC_TEST_OUT_PAR_ERROR_SRC_OFST 8
#define       MC_CMD_EFTEST_ECC_TEST_OUT_PAR_ERROR_SRC_LEN 4
/* Value register ALRT_REG of the first reading (no stat). */
#define       MC_CMD_EFTEST_ECC_TEST_OUT_ALRT_VALUE_OFST 12
#define       MC_CMD_EFTEST_ECC_TEST_OUT_ALRT_VALUE_LEN 4
/* Value register ALRT_REG of the second reading (no stat). */
#define       MC_CMD_EFTEST_ECC_TEST_OUT_ALRT_CLEAN_OFST 16
#define       MC_CMD_EFTEST_ECC_TEST_OUT_ALRT_CLEAN_LEN 4
/* Count handling a ECC_ERROR in NIC */
#define       MC_CMD_EFTEST_ECC_TEST_OUT_ECC_ERROR_CNT_OFST 12
#define       MC_CMD_EFTEST_ECC_TEST_OUT_ECC_ERROR_CNT_LEN 4
/* Count handling a ECC_FATAL in NIC */
#define       MC_CMD_EFTEST_ECC_TEST_OUT_ECC_FATAL_CNT_OFST 16
#define       MC_CMD_EFTEST_ECC_TEST_OUT_ECC_FATAL_CNT_LEN 4
/* Count handling a PAR_ERROR in NIC */
#define       MC_CMD_EFTEST_ECC_TEST_OUT_PAR_ERROR_CNT_OFST 20
#define       MC_CMD_EFTEST_ECC_TEST_OUT_PAR_ERROR_CNT_LEN 4
/* Current value of error limit */
#define       MC_CMD_EFTEST_ECC_TEST_OUT_ERROR_LIMIT_OFST 24
#define       MC_CMD_EFTEST_ECC_TEST_OUT_ERROR_LIMIT_LEN 4

/* MC_CMD_EFTEST_RXDPCPU_IN msgrequest */
#define    MC_CMD_EFTEST_RXDPCPU_IN_LEN 16
/* identifies the test */
#define       MC_CMD_EFTEST_RXDPCPU_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RXDPCPU_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_RXDPCPU_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RXDPCPU_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_RXDPCPU_IN_ADD_DESCRIPTOR 0x0 /* enum */
/* Queue ID */
#define       MC_CMD_EFTEST_RXDPCPU_IN_QID_OFST 4
#define       MC_CMD_EFTEST_RXDPCPU_IN_QID_LEN 4
/* Descriptor to add to the RX cache */
#define       MC_CMD_EFTEST_RXDPCPU_IN_DESCRIPTOR_OFST 8
#define       MC_CMD_EFTEST_RXDPCPU_IN_DESCRIPTOR_LEN 8
#define       MC_CMD_EFTEST_RXDPCPU_IN_DESCRIPTOR_LO_OFST 8
#define       MC_CMD_EFTEST_RXDPCPU_IN_DESCRIPTOR_LO_LEN 4
#define       MC_CMD_EFTEST_RXDPCPU_IN_DESCRIPTOR_LO_LBN 64
#define       MC_CMD_EFTEST_RXDPCPU_IN_DESCRIPTOR_LO_WIDTH 32
#define       MC_CMD_EFTEST_RXDPCPU_IN_DESCRIPTOR_HI_OFST 12
#define       MC_CMD_EFTEST_RXDPCPU_IN_DESCRIPTOR_HI_LEN 4
#define       MC_CMD_EFTEST_RXDPCPU_IN_DESCRIPTOR_HI_LBN 96
#define       MC_CMD_EFTEST_RXDPCPU_IN_DESCRIPTOR_HI_WIDTH 32

/* MC_CMD_EFTEST_DUT_FEATURES_IN msgrequest */
#define    MC_CMD_EFTEST_DUT_FEATURES_IN_LEN 2
/* identifies the test */
#define       MC_CMD_EFTEST_DUT_FEATURES_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_DUT_FEATURES_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_DUT_FEATURES_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_DUT_FEATURES_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_DUT_FEATURES_IN_GET_FEATURES 0x0 /* enum */

/* MC_CMD_EFTEST_DUT_FEATURES_OUT msgresponse */
#define    MC_CMD_EFTEST_DUT_FEATURES_OUT_LEN 4
/* Compiled-in DUT features */
#define       MC_CMD_EFTEST_DUT_FEATURES_OUT_DUT_FEATURES_OFST 0
#define       MC_CMD_EFTEST_DUT_FEATURES_OUT_DUT_FEATURES_LEN 4
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_PM_PRESENT_OFST 0
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_PM_PRESENT_LBN 0
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_PM_PRESENT_WIDTH 1
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_REALMC_PRESENT_OFST 0
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_REALMC_PRESENT_LBN 1
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_REALMC_PRESENT_WIDTH 1
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_FIRST_PKT_PM_OFST 0
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_FIRST_PKT_PM_LBN 2
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_FIRST_PKT_PM_WIDTH 1
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_NO_LUE_PRESENT_OFST 0
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_NO_LUE_PRESENT_LBN 3
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_NO_LUE_PRESENT_WIDTH 1
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_NO_PKT_PREFIX_OFST 0
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_NO_PKT_PREFIX_LBN 4
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_NO_PKT_PREFIX_WIDTH 1
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_NO_CHECKSUMS_OFST 0
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_NO_CHECKSUMS_LBN 5
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_NO_CHECKSUMS_WIDTH 1
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_PTP_SECOND_TIMER_OFST 0
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_PTP_SECOND_TIMER_LBN 6
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_PTP_SECOND_TIMER_WIDTH 1
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_REAL_NETWORK_PORT_OFST 0
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_REAL_NETWORK_PORT_LBN 7
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_REAL_NETWORK_PORT_WIDTH 1
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_PPP_PRESENT_OFST 0
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_PPP_PRESENT_LBN 8
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_PPP_PRESENT_WIDTH 1
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_RMON_PRESENT_OFST 0
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_RMON_PRESENT_LBN 9
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_RMON_PRESENT_WIDTH 1
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_REAL_PCIE_CORE_OFST 0
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_REAL_PCIE_CORE_LBN 10
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_REAL_PCIE_CORE_WIDTH 1
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_DPCPU_PRESENT_OFST 0
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_DPCPU_PRESENT_LBN 11
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_DPCPU_PRESENT_WIDTH 1
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_CMODEL_OFST 0
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_CMODEL_LBN 12
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_CMODEL_WIDTH 1
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_PM_URGENCY_VISIBLE_OFST 0
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_PM_URGENCY_VISIBLE_LBN 13
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_PM_URGENCY_VISIBLE_WIDTH 1
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_PD_PRESENT_OFST 0
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_PD_PRESENT_LBN 14
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_PD_PRESENT_WIDTH 1
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_NO_PKT_PREFIX_VLAN_OFST 0
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_NO_PKT_PREFIX_VLAN_LBN 15
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_NO_PKT_PREFIX_VLAN_WIDTH 1
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_INCLUDES_EFTESTS_GROUP_1_OFST 0
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_INCLUDES_EFTESTS_GROUP_1_LBN 16
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_INCLUDES_EFTESTS_GROUP_1_WIDTH 1
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_INCLUDES_EFTESTS_GROUP_2_OFST 0
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_INCLUDES_EFTESTS_GROUP_2_LBN 17
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_INCLUDES_EFTESTS_GROUP_2_WIDTH 1
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_INCLUDES_EFTESTS_GROUP_3_OFST 0
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_INCLUDES_EFTESTS_GROUP_3_LBN 18
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_INCLUDES_EFTESTS_GROUP_3_WIDTH 1
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_INCLUDES_EFTESTS_GROUP_4_OFST 0
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_INCLUDES_EFTESTS_GROUP_4_LBN 19
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_INCLUDES_EFTESTS_GROUP_4_WIDTH 1
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_PCIE_MONITOR_PRESENT_OFST 0
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_PCIE_MONITOR_PRESENT_LBN 20
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_PCIE_MONITOR_PRESENT_WIDTH 1
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_TX_STRIPING_OFST 0
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_TX_STRIPING_LBN 21
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_TX_STRIPING_WIDTH 1
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_PCIE_X2_OFST 0
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_PCIE_X2_LBN 22
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_PCIE_X2_WIDTH 1
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_PCIE_X4_OFST 0
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_PCIE_X4_LBN 23
#define        MC_CMD_EFTEST_DUT_FEATURES_OUT_PCIE_X4_WIDTH 1
/* First word of flags. */
#define       MC_CMD_EFTEST_DUT_FEATURES_OUT_FLAGS1_OFST 0
#define       MC_CMD_EFTEST_DUT_FEATURES_OUT_FLAGS1_LEN 4

/* MC_CMD_EFTEST_FILTER_RHEAD_IN msgrequest */
#define    MC_CMD_EFTEST_FILTER_RHEAD_IN_LEN 2
/* identifies the test */
#define       MC_CMD_EFTEST_FILTER_RHEAD_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_FILTER_RHEAD_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_FILTER_RHEAD_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_FILTER_RHEAD_IN_EFTEST_OP_LEN 1
/* enum: Start or stop the thread which periodically insert/remove MAC filters
 */
#define          MC_CMD_EFTEST_FILTER_RHEAD_IN_AGITATOR_MAC 0x0

/* MC_CMD_EFTEST_FILTER_RHEAD_AGITATOR_MAC_IN msgrequest */
#define    MC_CMD_EFTEST_FILTER_RHEAD_AGITATOR_MAC_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_FILTER_RHEAD_AGITATOR_MAC_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_FILTER_RHEAD_AGITATOR_MAC_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_FILTER_RHEAD_AGITATOR_MAC_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_FILTER_RHEAD_AGITATOR_MAC_IN_EFTEST_OP_LEN 1
/* Start or stop the MC thread. */
#define       MC_CMD_EFTEST_FILTER_RHEAD_AGITATOR_MAC_IN_OP_OFST 4
#define       MC_CMD_EFTEST_FILTER_RHEAD_AGITATOR_MAC_IN_OP_LEN 4
/* enum: Start MC thread */
#define          MC_CMD_EFTEST_FILTER_RHEAD_AGITATOR_MAC_IN_OP_START 0x0
/* enum: Stop MC thread */
#define          MC_CMD_EFTEST_FILTER_RHEAD_AGITATOR_MAC_IN_OP_STOP 0x1

/* MC_CMD_EFTEST_FILTER_RHEAD_AGITATOR_MAC_OUT msgresponse */
#define    MC_CMD_EFTEST_FILTER_RHEAD_AGITATOR_MAC_OUT_LEN 0

/* MC_CMD_EFTEST_FILTER_RHEAD_AGITATOR_MAC_OP_START_IN msgrequest */
#define    MC_CMD_EFTEST_FILTER_RHEAD_AGITATOR_MAC_OP_START_IN_LEN 26
/* identifies the test */
#define       MC_CMD_EFTEST_FILTER_RHEAD_AGITATOR_MAC_OP_START_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_FILTER_RHEAD_AGITATOR_MAC_OP_START_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_FILTER_RHEAD_AGITATOR_MAC_OP_START_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_FILTER_RHEAD_AGITATOR_MAC_OP_START_IN_EFTEST_OP_LEN 1
/* Start or stop the MC thread. */
#define       MC_CMD_EFTEST_FILTER_RHEAD_AGITATOR_MAC_OP_START_IN_OP_OFST 4
#define       MC_CMD_EFTEST_FILTER_RHEAD_AGITATOR_MAC_OP_START_IN_OP_LEN 4
/* enum: Start MC thread */
#define          MC_CMD_EFTEST_FILTER_RHEAD_AGITATOR_MAC_OP_START_IN_OP_START 0x0
/* enum: Stop MC thread */
#define          MC_CMD_EFTEST_FILTER_RHEAD_AGITATOR_MAC_OP_START_IN_OP_STOP 0x1
/* Delay between batches, microseconds. */
#define       MC_CMD_EFTEST_FILTER_RHEAD_AGITATOR_MAC_OP_START_IN_DELAY_US_OFST 8
#define       MC_CMD_EFTEST_FILTER_RHEAD_AGITATOR_MAC_OP_START_IN_DELAY_US_LEN 4
/* receive queue handle (for multiple queue modes, this is the base queue) */
#define       MC_CMD_EFTEST_FILTER_RHEAD_AGITATOR_MAC_OP_START_IN_RX_QUEUE_OFST 12
#define       MC_CMD_EFTEST_FILTER_RHEAD_AGITATOR_MAC_OP_START_IN_RX_QUEUE_LEN 4
/* Filters number to use in agitator */
#define       MC_CMD_EFTEST_FILTER_RHEAD_AGITATOR_MAC_OP_START_IN_FILTERS_OFST 16
#define       MC_CMD_EFTEST_FILTER_RHEAD_AGITATOR_MAC_OP_START_IN_FILTERS_LEN 4
/* Destination MAC address to match (as bytes in network order). This address
 * and FILTERS are used to set range of consecutive MAC addresses.
 */
#define       MC_CMD_EFTEST_FILTER_RHEAD_AGITATOR_MAC_OP_START_IN_DST_MAC_OFST 20
#define       MC_CMD_EFTEST_FILTER_RHEAD_AGITATOR_MAC_OP_START_IN_DST_MAC_LEN 6

/* MC_CMD_EFTEST_FILTER_RHEAD_AGITATOR_MAC_OP_STOP_IN msgrequest */
#define    MC_CMD_EFTEST_FILTER_RHEAD_AGITATOR_MAC_OP_STOP_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_FILTER_RHEAD_AGITATOR_MAC_OP_STOP_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_FILTER_RHEAD_AGITATOR_MAC_OP_STOP_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_FILTER_RHEAD_AGITATOR_MAC_OP_STOP_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_FILTER_RHEAD_AGITATOR_MAC_OP_STOP_IN_EFTEST_OP_LEN 1
/* Start or stop the MC thread. */
#define       MC_CMD_EFTEST_FILTER_RHEAD_AGITATOR_MAC_OP_STOP_IN_OP_OFST 4
#define       MC_CMD_EFTEST_FILTER_RHEAD_AGITATOR_MAC_OP_STOP_IN_OP_LEN 4
/* enum: Start MC thread */
#define          MC_CMD_EFTEST_FILTER_RHEAD_AGITATOR_MAC_OP_STOP_IN_OP_START 0x0
/* enum: Stop MC thread */
#define          MC_CMD_EFTEST_FILTER_RHEAD_AGITATOR_MAC_OP_STOP_IN_OP_STOP 0x1

/* MC_CMD_EFTEST_FILTER_IN msgrequest */
#define    MC_CMD_EFTEST_FILTER_IN_LEN 2
/* identifies the test */
#define       MC_CMD_EFTEST_FILTER_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_FILTER_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_FILTER_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_FILTER_IN_EFTEST_OP_LEN 1
/* enum: Start or stop the thread which periodically insert/remove MAC filters
 */
#define          MC_CMD_EFTEST_FILTER_IN_AGITATOR_MAC 0x0

/* MC_CMD_EFTEST_FILTER_AGITATOR_MAC_IN msgrequest */
#define    MC_CMD_EFTEST_FILTER_AGITATOR_MAC_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_FILTER_AGITATOR_MAC_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_FILTER_AGITATOR_MAC_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_FILTER_AGITATOR_MAC_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_FILTER_AGITATOR_MAC_IN_EFTEST_OP_LEN 1
/* Start or stop the MC thread. */
#define       MC_CMD_EFTEST_FILTER_AGITATOR_MAC_IN_OP_OFST 4
#define       MC_CMD_EFTEST_FILTER_AGITATOR_MAC_IN_OP_LEN 4
/* enum: Start MC thread */
#define          MC_CMD_EFTEST_FILTER_AGITATOR_MAC_IN_OP_START 0x0
/* enum: Stop MC thread */
#define          MC_CMD_EFTEST_FILTER_AGITATOR_MAC_IN_OP_STOP 0x1

/* MC_CMD_EFTEST_FILTER_AGITATOR_MAC_OUT msgresponse */
#define    MC_CMD_EFTEST_FILTER_AGITATOR_MAC_OUT_LEN 0

/* MC_CMD_EFTEST_FILTER_AGITATOR_MAC_OP_START_IN msgrequest */
#define    MC_CMD_EFTEST_FILTER_AGITATOR_MAC_OP_START_IN_LEN 26
/* identifies the test */
#define       MC_CMD_EFTEST_FILTER_AGITATOR_MAC_OP_START_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_FILTER_AGITATOR_MAC_OP_START_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_FILTER_AGITATOR_MAC_OP_START_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_FILTER_AGITATOR_MAC_OP_START_IN_EFTEST_OP_LEN 1
/* Start or stop the MC thread. */
#define       MC_CMD_EFTEST_FILTER_AGITATOR_MAC_OP_START_IN_OP_OFST 4
#define       MC_CMD_EFTEST_FILTER_AGITATOR_MAC_OP_START_IN_OP_LEN 4
/* enum: Start MC thread */
#define          MC_CMD_EFTEST_FILTER_AGITATOR_MAC_OP_START_IN_OP_START 0x0
/* enum: Stop MC thread */
#define          MC_CMD_EFTEST_FILTER_AGITATOR_MAC_OP_START_IN_OP_STOP 0x1
/* Delay between batches, microseconds. */
#define       MC_CMD_EFTEST_FILTER_AGITATOR_MAC_OP_START_IN_DELAY_US_OFST 8
#define       MC_CMD_EFTEST_FILTER_AGITATOR_MAC_OP_START_IN_DELAY_US_LEN 4
/* receive queue handle (for multiple queue modes, this is the base queue) */
#define       MC_CMD_EFTEST_FILTER_AGITATOR_MAC_OP_START_IN_RX_QUEUE_OFST 12
#define       MC_CMD_EFTEST_FILTER_AGITATOR_MAC_OP_START_IN_RX_QUEUE_LEN 4
/* Filters number to use in agitator */
#define       MC_CMD_EFTEST_FILTER_AGITATOR_MAC_OP_START_IN_FILTERS_OFST 16
#define       MC_CMD_EFTEST_FILTER_AGITATOR_MAC_OP_START_IN_FILTERS_LEN 4
/* Destination MAC address to match (as bytes in network order). This address
 * and FILTERS are used to set range of consecutive MAC addresses.
 */
#define       MC_CMD_EFTEST_FILTER_AGITATOR_MAC_OP_START_IN_DST_MAC_OFST 20
#define       MC_CMD_EFTEST_FILTER_AGITATOR_MAC_OP_START_IN_DST_MAC_LEN 6

/* MC_CMD_EFTEST_FILTER_AGITATOR_MAC_OP_STOP_IN msgrequest */
#define    MC_CMD_EFTEST_FILTER_AGITATOR_MAC_OP_STOP_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_FILTER_AGITATOR_MAC_OP_STOP_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_FILTER_AGITATOR_MAC_OP_STOP_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_FILTER_AGITATOR_MAC_OP_STOP_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_FILTER_AGITATOR_MAC_OP_STOP_IN_EFTEST_OP_LEN 1
/* Start or stop the MC thread. */
#define       MC_CMD_EFTEST_FILTER_AGITATOR_MAC_OP_STOP_IN_OP_OFST 4
#define       MC_CMD_EFTEST_FILTER_AGITATOR_MAC_OP_STOP_IN_OP_LEN 4
/* enum: Start MC thread */
#define          MC_CMD_EFTEST_FILTER_AGITATOR_MAC_OP_STOP_IN_OP_START 0x0
/* enum: Stop MC thread */
#define          MC_CMD_EFTEST_FILTER_AGITATOR_MAC_OP_STOP_IN_OP_STOP 0x1

/* MC_CMD_EFTEST_SSS_AGITATOR_CTL_IN msgrequest */
#define    MC_CMD_EFTEST_SSS_AGITATOR_CTL_IN_LEN 22
/* identifies the test */
#define       MC_CMD_EFTEST_SSS_AGITATOR_CTL_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_SSS_AGITATOR_CTL_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_SSS_AGITATOR_CTL_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_SSS_AGITATOR_CTL_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_SSS_AGITATOR_CTL_IN_SET 0x0 /* enum */
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_SSS_AGITATOR_CTL_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_SSS_AGITATOR_CTL_IN_EFTEST_OP_RSVD_LEN 2
/* Select which hubs are agitated */
#define       MC_CMD_EFTEST_SSS_AGITATOR_CTL_IN_HUB_SELECT_OFST 4
#define       MC_CMD_EFTEST_SSS_AGITATOR_CTL_IN_HUB_SELECT_LEN 4
/* enum: Disable RDY/VLD agitation */
#define          MC_CMD_EFTEST_SSS_AGITATOR_CTL_IN_DISABLED 0x0
/* enum: Agitate RDY/VLD for HUB_HA */
#define          MC_CMD_EFTEST_SSS_AGITATOR_CTL_IN_HUB_HA 0x1
/* enum: Agitate RDY/VLD for HUB_NA */
#define          MC_CMD_EFTEST_SSS_AGITATOR_CTL_IN_HUB_NA 0x2
/* enum: Agitate RDY/VLD for HUB_C_HOST */
#define          MC_CMD_EFTEST_SSS_AGITATOR_CTL_IN_HUB_C_HOST 0x4
/* enum: Agitate RDY/VLD for HUB_C_NET */
#define          MC_CMD_EFTEST_SSS_AGITATOR_CTL_IN_HUB_C_NET 0x8
/* The mode for the selected hub agitators */
#define       MC_CMD_EFTEST_SSS_AGITATOR_CTL_IN_MODE_OFST 8
#define       MC_CMD_EFTEST_SSS_AGITATOR_CTL_IN_MODE_LEN 4
/* enum: No RDY/VLD agitation */
#define          MC_CMD_EFTEST_SSS_AGITATOR_CTL_IN_STATIC 0x0
/* enum: Agitate with periodic pattern */
#define          MC_CMD_EFTEST_SSS_AGITATOR_CTL_IN_PERIODIC 0x1
/* enum: Agitate with random pattern */
#define          MC_CMD_EFTEST_SSS_AGITATOR_CTL_IN_RANDOM 0x2
/* If random mode selected, the first of two 32 bit patterns. 64-bit pattern
 * rotated repeatedly through these two registers with RDY_PATTERN_31_0[0]
 * going into RDY_PATTERN_63_32[31] and RDY_PATTERN_63_32[0] going into
 * RDY_PATTERN_31_0[31]. All other bits shifted right shifted by 1 every clock
 * cycle.
 */
#define       MC_CMD_EFTEST_SSS_AGITATOR_CTL_IN_RDY_PATTERN_31_0_OFST 12
#define       MC_CMD_EFTEST_SSS_AGITATOR_CTL_IN_RDY_PATTERN_31_0_LEN 4
/* If random mode selected, the second of two 32 bit patterns. */
#define       MC_CMD_EFTEST_SSS_AGITATOR_CTL_IN_RDY_PATTERN_63_32_OFST 16
#define       MC_CMD_EFTEST_SSS_AGITATOR_CTL_IN_RDY_PATTERN_63_32_LEN 4
/* If periodic mode selected, the 16 bit periodicity. If periodicity = N,
 * RDY/VLD will be blocked for N cycles, and then unblocked for N cycles, with
 * this pattern repreating. N = 1 is permitted.
 */
#define       MC_CMD_EFTEST_SSS_AGITATOR_CTL_IN_PERIODICITY_OFST 20
#define       MC_CMD_EFTEST_SSS_AGITATOR_CTL_IN_PERIODICITY_LEN 2

/* MC_CMD_EFTEST_SSS_AGITATOR_CTL_OUT msgresponse */
#define    MC_CMD_EFTEST_SSS_AGITATOR_CTL_OUT_LEN 0

/* MC_CMD_EFTEST_PCIE_MONITOR_IN msgrequest */
#define    MC_CMD_EFTEST_PCIE_MONITOR_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_PCIE_MONITOR_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_PCIE_MONITOR_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_PCIE_MONITOR_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_PCIE_MONITOR_IN_EFTEST_OP_LEN 1
/* enum: Enable counting and clearing of PCIE errors and link retrains */
#define          MC_CMD_EFTEST_PCIE_MONITOR_IN_START 0x0
/* enum: Disable counting of PCIE errors and restore normal operation */
#define          MC_CMD_EFTEST_PCIE_MONITOR_IN_STOP 0x1
/* enum: Read PCIE monitor counters */
#define          MC_CMD_EFTEST_PCIE_MONITOR_IN_READ 0x2
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_PCIE_MONITOR_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_PCIE_MONITOR_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_PCIE_MONITOR_OUT msgresponse */
#define    MC_CMD_EFTEST_PCIE_MONITOR_OUT_LEN 328
/* Number of LTSSM transitions that have occurred */
#define       MC_CMD_EFTEST_PCIE_MONITOR_OUT_LTSSM_TRANSITIONS_OFST 0
#define       MC_CMD_EFTEST_PCIE_MONITOR_OUT_LTSSM_TRANSITIONS_LEN 4
/* Number of PHY link up/down transitions that have occurred */
#define       MC_CMD_EFTEST_PCIE_MONITOR_OUT_PHY_LINK_STATE_TRANSITIONS_OFST 4
#define       MC_CMD_EFTEST_PCIE_MONITOR_OUT_PHY_LINK_STATE_TRANSITIONS_LEN 4
/* Error counts for each PCIE lane */
#define       MC_CMD_EFTEST_PCIE_MONITOR_OUT_LANE_ERRORS_OFST 8
#define       MC_CMD_EFTEST_PCIE_MONITOR_OUT_LANE_ERRORS_LEN 4
#define       MC_CMD_EFTEST_PCIE_MONITOR_OUT_LANE_ERRORS_NUM 32
/* Error counts for each bit in the AER uncorrectable error status register */
#define       MC_CMD_EFTEST_PCIE_MONITOR_OUT_AER_UNCORRECTABLE_ERRORS_OFST 136
#define       MC_CMD_EFTEST_PCIE_MONITOR_OUT_AER_UNCORRECTABLE_ERRORS_LEN 4
#define       MC_CMD_EFTEST_PCIE_MONITOR_OUT_AER_UNCORRECTABLE_ERRORS_NUM 32
/* Error counts for each bit in the AER correctable error status register */
#define       MC_CMD_EFTEST_PCIE_MONITOR_OUT_AER_CORRECTABLE_ERRORS_OFST 264
#define       MC_CMD_EFTEST_PCIE_MONITOR_OUT_AER_CORRECTABLE_ERRORS_LEN 4
#define       MC_CMD_EFTEST_PCIE_MONITOR_OUT_AER_CORRECTABLE_ERRORS_NUM 16

/* MC_CMD_EFTEST_UART_IN msgrequest */
#define    MC_CMD_EFTEST_UART_IN_LEN 2
/* identifies the test */
#define       MC_CMD_EFTEST_UART_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_UART_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_UART_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_UART_IN_EFTEST_OP_LEN 1
/* enum: loopback test on uart0 */
#define          MC_CMD_EFTEST_UART_IN_UART0_LOOPBACK 0x0
/* enum: loopback test on uart1 */
#define          MC_CMD_EFTEST_UART_IN_UART1_LOOPBACK 0x1

/* MC_CMD_EFTEST_SMC_STRESS_START_IN msgrequest */
#define    MC_CMD_EFTEST_SMC_STRESS_START_IN_LEN 16
/* identifies the test */
#define       MC_CMD_EFTEST_SMC_STRESS_START_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_SMC_STRESS_START_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_SMC_STRESS_START_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_SMC_STRESS_START_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_SMC_STRESS_START_IN_STRESS_START 0x0 /* enum */
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_SMC_STRESS_START_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_SMC_STRESS_START_IN_EFTEST_OP_RSVD_LEN 2
/* Owner id (VI relative number) */
#define       MC_CMD_EFTEST_SMC_STRESS_START_IN_OWNER_ID_OFST 4
#define       MC_CMD_EFTEST_SMC_STRESS_START_IN_OWNER_ID_LEN 4
/* number of iterations to run */
#define       MC_CMD_EFTEST_SMC_STRESS_START_IN_ITERATIONS_OFST 8
#define       MC_CMD_EFTEST_SMC_STRESS_START_IN_ITERATIONS_LEN 4
/* number of iteration to reschedule after */
#define       MC_CMD_EFTEST_SMC_STRESS_START_IN_SCHEDULE_PERIOD_OFST 12
#define       MC_CMD_EFTEST_SMC_STRESS_START_IN_SCHEDULE_PERIOD_LEN 4

/* MC_CMD_EFTEST_SMC_STRESS_START_OUT msgresponse */
#define    MC_CMD_EFTEST_SMC_STRESS_START_OUT_LEN 4
#define       MC_CMD_EFTEST_SMC_STRESS_START_OUT_THREAD_OFST 0
#define       MC_CMD_EFTEST_SMC_STRESS_START_OUT_THREAD_LEN 4

/* MC_CMD_EFTEST_SMC_STRESS_POLL_IN msgrequest */
#define    MC_CMD_EFTEST_SMC_STRESS_POLL_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_SMC_STRESS_POLL_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_SMC_STRESS_POLL_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_SMC_STRESS_POLL_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_SMC_STRESS_POLL_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_SMC_STRESS_POLL_IN_STRESS_POLL 0x1 /* enum */
#define       MC_CMD_EFTEST_SMC_STRESS_POLL_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_SMC_STRESS_POLL_IN_EFTEST_OP_RSVD_LEN 2
/* pointer to thread structure to poll */
#define       MC_CMD_EFTEST_SMC_STRESS_POLL_IN_THREAD_OFST 4
#define       MC_CMD_EFTEST_SMC_STRESS_POLL_IN_THREAD_LEN 4

/* MC_CMD_EFTEST_SMC_STRESS_POLL_OUT msgresponse */
#define    MC_CMD_EFTEST_SMC_STRESS_POLL_OUT_LEN 4
#define       MC_CMD_EFTEST_SMC_STRESS_POLL_OUT_RESULT_OFST 0
#define       MC_CMD_EFTEST_SMC_STRESS_POLL_OUT_RESULT_LEN 4

/* MC_CMD_EFTEST_PORT_MODE_INFO_IN msgrequest */
#define    MC_CMD_EFTEST_PORT_MODE_INFO_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_PORT_MODE_INFO_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_PORT_MODE_INFO_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_PORT_MODE_INFO_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_PORT_MODE_INFO_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_PORT_MODE_INFO_IN_GET 0x0 /* enum */
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_PORT_MODE_INFO_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_PORT_MODE_INFO_IN_EFTEST_OP_RSVD_LEN 2
/* Port mode */
#define       MC_CMD_EFTEST_PORT_MODE_INFO_IN_MODE_OFST 4
#define       MC_CMD_EFTEST_PORT_MODE_INFO_IN_MODE_LEN 4

/* MC_CMD_EFTEST_PORT_MODE_INFO_OUT msgresponse */
#define    MC_CMD_EFTEST_PORT_MODE_INFO_OUT_LENMIN 20
#define    MC_CMD_EFTEST_PORT_MODE_INFO_OUT_LENMAX 244
#define    MC_CMD_EFTEST_PORT_MODE_INFO_OUT_LENMAX_MCDI2 1012
#define    MC_CMD_EFTEST_PORT_MODE_INFO_OUT_LEN(num) (4+16*(num))
#define    MC_CMD_EFTEST_PORT_MODE_INFO_OUT_PORT_ENTRIES_NUM(len) (((len)-4)/16)
/* Number of ports */
#define       MC_CMD_EFTEST_PORT_MODE_INFO_OUT_PORT_COUNT_OFST 0
#define       MC_CMD_EFTEST_PORT_MODE_INFO_OUT_PORT_COUNT_LEN 4
/* Port info, laid out as PORT_CONFIG_ENTRY */
#define       MC_CMD_EFTEST_PORT_MODE_INFO_OUT_PORT_ENTRIES_OFST 4
#define       MC_CMD_EFTEST_PORT_MODE_INFO_OUT_PORT_ENTRIES_LEN 16
#define       MC_CMD_EFTEST_PORT_MODE_INFO_OUT_PORT_ENTRIES_MINNUM 1
#define       MC_CMD_EFTEST_PORT_MODE_INFO_OUT_PORT_ENTRIES_MAXNUM 15
#define       MC_CMD_EFTEST_PORT_MODE_INFO_OUT_PORT_ENTRIES_MAXNUM_MCDI2 63

/* MC_CMD_EFTEST_PORT_MODE_GET_IN msgrequest */
#define    MC_CMD_EFTEST_PORT_MODE_GET_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_PORT_MODE_GET_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_PORT_MODE_GET_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_PORT_MODE_GET_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_PORT_MODE_GET_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_PORT_MODE_GET_IN_GET 0x1 /* enum */
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_PORT_MODE_GET_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_PORT_MODE_GET_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_PORT_MODE_GET_OUT msgresponse */
#define    MC_CMD_EFTEST_PORT_MODE_GET_OUT_LEN 4
/* Current mode */
#define       MC_CMD_EFTEST_PORT_MODE_GET_OUT_MODE_OFST 0
#define       MC_CMD_EFTEST_PORT_MODE_GET_OUT_MODE_LEN 4

/* MC_CMD_EFTEST_PORT_MODE_SET_IN msgrequest */
#define    MC_CMD_EFTEST_PORT_MODE_SET_IN_LEN 16
/* identifies the test */
#define       MC_CMD_EFTEST_PORT_MODE_SET_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_PORT_MODE_SET_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_PORT_MODE_SET_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_PORT_MODE_SET_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_PORT_MODE_SET_IN_SET 0x2 /* enum */
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_PORT_MODE_SET_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_PORT_MODE_SET_IN_EFTEST_OP_RSVD_LEN 2
/* Port mode */
#define       MC_CMD_EFTEST_PORT_MODE_SET_IN_MODE_OFST 4
#define       MC_CMD_EFTEST_PORT_MODE_SET_IN_MODE_LEN 4
/* If nonzero, don't do TX striping */
#define       MC_CMD_EFTEST_PORT_MODE_SET_IN_FORCE_DISABLE_TX_STRIPING_OFST 8
#define       MC_CMD_EFTEST_PORT_MODE_SET_IN_FORCE_DISABLE_TX_STRIPING_LEN 4
/* If nonzero, go through the change machinery even if the new port mode is the
 * same as the old
 */
#define       MC_CMD_EFTEST_PORT_MODE_SET_IN_FORCE_CHANGE_OFST 12
#define       MC_CMD_EFTEST_PORT_MODE_SET_IN_FORCE_CHANGE_LEN 4

/* MC_CMD_EFTEST_ALL_PORT_MODE_INFO_IN msgrequest */
#define    MC_CMD_EFTEST_ALL_PORT_MODE_INFO_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_ALL_PORT_MODE_INFO_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_ALL_PORT_MODE_INFO_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_ALL_PORT_MODE_INFO_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_ALL_PORT_MODE_INFO_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_ALL_PORT_MODE_INFO_IN_GET 0x3 /* enum */
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_ALL_PORT_MODE_INFO_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_ALL_PORT_MODE_INFO_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_ALL_PORT_MODE_INFO_OUT msgresponse */
#define    MC_CMD_EFTEST_ALL_PORT_MODE_INFO_OUT_LENMIN 36
#define    MC_CMD_EFTEST_ALL_PORT_MODE_INFO_OUT_LENMAX 228
#define    MC_CMD_EFTEST_ALL_PORT_MODE_INFO_OUT_LENMAX_MCDI2 996
#define    MC_CMD_EFTEST_ALL_PORT_MODE_INFO_OUT_LEN(num) (4+32*(num))
#define    MC_CMD_EFTEST_ALL_PORT_MODE_INFO_OUT_MODE_ENTRIES_NUM(len) (((len)-4)/32)
/* Bitmask of port modes available on the board (indexed by TLV_PORT_MODE_*) */
#define       MC_CMD_EFTEST_ALL_PORT_MODE_INFO_OUT_MODES_OFST 0
#define       MC_CMD_EFTEST_ALL_PORT_MODE_INFO_OUT_MODES_LEN 4
/* Mode info, laid out as PORT_MODE_ENTRY - one entry for each bit set in MODES
 * bitmask, ordered lowest to highest available mode (lowest to highest bit
 * set)
 */
#define       MC_CMD_EFTEST_ALL_PORT_MODE_INFO_OUT_MODE_ENTRIES_OFST 4
#define       MC_CMD_EFTEST_ALL_PORT_MODE_INFO_OUT_MODE_ENTRIES_LEN 32
#define       MC_CMD_EFTEST_ALL_PORT_MODE_INFO_OUT_MODE_ENTRIES_MINNUM 1
#define       MC_CMD_EFTEST_ALL_PORT_MODE_INFO_OUT_MODE_ENTRIES_MAXNUM 7
#define       MC_CMD_EFTEST_ALL_PORT_MODE_INFO_OUT_MODE_ENTRIES_MAXNUM_MCDI2 31

/* MC_CMD_EFTEST_LOGICAL_PORTS_INFO_IN msgrequest */
#define    MC_CMD_EFTEST_LOGICAL_PORTS_INFO_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_LOGICAL_PORTS_INFO_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_LOGICAL_PORTS_INFO_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_LOGICAL_PORTS_INFO_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_LOGICAL_PORTS_INFO_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_LOGICAL_PORTS_INFO_IN_GET 0x0 /* enum */
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_LOGICAL_PORTS_INFO_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_LOGICAL_PORTS_INFO_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_LOGICAL_PORTS_INFO_OUT msgrequest */
#define    MC_CMD_EFTEST_LOGICAL_PORTS_INFO_OUT_LENMIN 8
#define    MC_CMD_EFTEST_LOGICAL_PORTS_INFO_OUT_LENMAX 252
#define    MC_CMD_EFTEST_LOGICAL_PORTS_INFO_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_LOGICAL_PORTS_INFO_OUT_LEN(num) (4+4*(num))
#define    MC_CMD_EFTEST_LOGICAL_PORTS_INFO_OUT_PORT_ENTRIES_NUM(len) (((len)-4)/4)
/* Number of logical ports */
#define       MC_CMD_EFTEST_LOGICAL_PORTS_INFO_OUT_PORT_COUNT_OFST 0
#define       MC_CMD_EFTEST_LOGICAL_PORTS_INFO_OUT_PORT_COUNT_LEN 4
/* Port info, laid out as LOGICAL_PORT_ENTRY */
#define       MC_CMD_EFTEST_LOGICAL_PORTS_INFO_OUT_PORT_ENTRIES_OFST 4
#define       MC_CMD_EFTEST_LOGICAL_PORTS_INFO_OUT_PORT_ENTRIES_LEN 4
#define       MC_CMD_EFTEST_LOGICAL_PORTS_INFO_OUT_PORT_ENTRIES_MINNUM 1
#define       MC_CMD_EFTEST_LOGICAL_PORTS_INFO_OUT_PORT_ENTRIES_MAXNUM 62
#define       MC_CMD_EFTEST_LOGICAL_PORTS_INFO_OUT_PORT_ENTRIES_MAXNUM_MCDI2 254

/* MC_CMD_EFTEST_PHYSICAL_PORTS_INFO_IN msgrequest */
#define    MC_CMD_EFTEST_PHYSICAL_PORTS_INFO_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_PHYSICAL_PORTS_INFO_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_PHYSICAL_PORTS_INFO_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_PHYSICAL_PORTS_INFO_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_PHYSICAL_PORTS_INFO_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_PHYSICAL_PORTS_INFO_IN_GET 0x1 /* enum */
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_PHYSICAL_PORTS_INFO_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_PHYSICAL_PORTS_INFO_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_PHYSICAL_PORTS_INFO_OUT msgrequest */
#define    MC_CMD_EFTEST_PHYSICAL_PORTS_INFO_OUT_LENMIN 36
#define    MC_CMD_EFTEST_PHYSICAL_PORTS_INFO_OUT_LENMAX 228
#define    MC_CMD_EFTEST_PHYSICAL_PORTS_INFO_OUT_LENMAX_MCDI2 996
#define    MC_CMD_EFTEST_PHYSICAL_PORTS_INFO_OUT_LEN(num) (4+32*(num))
#define    MC_CMD_EFTEST_PHYSICAL_PORTS_INFO_OUT_PORT_ENTRIES_NUM(len) (((len)-4)/32)
/* Number of logical ports */
#define       MC_CMD_EFTEST_PHYSICAL_PORTS_INFO_OUT_PORT_COUNT_OFST 0
#define       MC_CMD_EFTEST_PHYSICAL_PORTS_INFO_OUT_PORT_COUNT_LEN 4
/* Port info, laid out as PHYSICAL_PORT_ENTRY */
#define       MC_CMD_EFTEST_PHYSICAL_PORTS_INFO_OUT_PORT_ENTRIES_OFST 4
#define       MC_CMD_EFTEST_PHYSICAL_PORTS_INFO_OUT_PORT_ENTRIES_LEN 32
#define       MC_CMD_EFTEST_PHYSICAL_PORTS_INFO_OUT_PORT_ENTRIES_MINNUM 1
#define       MC_CMD_EFTEST_PHYSICAL_PORTS_INFO_OUT_PORT_ENTRIES_MAXNUM 7
#define       MC_CMD_EFTEST_PHYSICAL_PORTS_INFO_OUT_PORT_ENTRIES_MAXNUM_MCDI2 31

/* MC_CMD_EFTEST_PORT_MAPPING_SET_IN msgrequest */
#define    MC_CMD_EFTEST_PORT_MAPPING_SET_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_PORT_MAPPING_SET_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_PORT_MAPPING_SET_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_PORT_MAPPING_SET_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_PORT_MAPPING_SET_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_PORT_MAPPING_SET_IN_SET 0x2 /* enum */
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_PORT_MAPPING_SET_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_PORT_MAPPING_SET_IN_EFTEST_OP_RSVD_LEN 2
/* Logical port number */
#define       MC_CMD_EFTEST_PORT_MAPPING_SET_IN_LOGICAL_NUMBER_OFST 4
#define       MC_CMD_EFTEST_PORT_MAPPING_SET_IN_LOGICAL_NUMBER_LEN 1
/* Physical port number */
#define       MC_CMD_EFTEST_PORT_MAPPING_SET_IN_PHYSICAL_NUMBER_OFST 5
#define       MC_CMD_EFTEST_PORT_MAPPING_SET_IN_PHYSICAL_NUMBER_LEN 1
/*            Enum values, see field(s): */
/*               PORT_MAPPING_ENTRY/PHYSICAL_NUMBER */
#define       MC_CMD_EFTEST_PORT_MAPPING_SET_IN_RXDP_OFST 6
#define       MC_CMD_EFTEST_PORT_MAPPING_SET_IN_RXDP_LEN 1
/*            Enum values, see field(s): */
/*               PORT_CONFIG_ENTRY/RXDP */
#define       MC_CMD_EFTEST_PORT_MAPPING_SET_IN_TXDP_OFST 7
#define       MC_CMD_EFTEST_PORT_MAPPING_SET_IN_TXDP_LEN 1
/*            Enum values, see field(s): */
/*               PORT_CONFIG_ENTRY/RXDP */

/* MC_CMD_EFTEST_PORT_MAPPING_GET_IN msgrequest */
#define    MC_CMD_EFTEST_PORT_MAPPING_GET_IN_LEN 2
/* identifies the test */
#define       MC_CMD_EFTEST_PORT_MAPPING_GET_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_PORT_MAPPING_GET_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_PORT_MAPPING_GET_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_PORT_MAPPING_GET_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_PORT_MAPPING_GET_IN_GET 0x3 /* enum */

/* MC_CMD_EFTEST_PORT_MAPPING_GET_OUT msgrequest */
#define    MC_CMD_EFTEST_PORT_MAPPING_GET_OUT_LENMIN 8
#define    MC_CMD_EFTEST_PORT_MAPPING_GET_OUT_LENMAX 252
#define    MC_CMD_EFTEST_PORT_MAPPING_GET_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_PORT_MAPPING_GET_OUT_LEN(num) (4+4*(num))
#define    MC_CMD_EFTEST_PORT_MAPPING_GET_OUT_MAPPING_ENTRIES_NUM(len) (((len)-4)/4)
/* Number of logical ports */
#define       MC_CMD_EFTEST_PORT_MAPPING_GET_OUT_PORT_COUNT_OFST 0
#define       MC_CMD_EFTEST_PORT_MAPPING_GET_OUT_PORT_COUNT_LEN 4
/* Port mapping, laid out as PORT_MAPPING_ENTRY */
#define       MC_CMD_EFTEST_PORT_MAPPING_GET_OUT_MAPPING_ENTRIES_OFST 4
#define       MC_CMD_EFTEST_PORT_MAPPING_GET_OUT_MAPPING_ENTRIES_LEN 4
#define       MC_CMD_EFTEST_PORT_MAPPING_GET_OUT_MAPPING_ENTRIES_MINNUM 1
#define       MC_CMD_EFTEST_PORT_MAPPING_GET_OUT_MAPPING_ENTRIES_MAXNUM 62
#define       MC_CMD_EFTEST_PORT_MAPPING_GET_OUT_MAPPING_ENTRIES_MAXNUM_MCDI2 254

/* MC_CMD_EFTEST_SPI_DMA_IN msgrequest */
#define    MC_CMD_EFTEST_SPI_DMA_IN_LEN 16
/* identifies the test */
#define       MC_CMD_EFTEST_SPI_DMA_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_SPI_DMA_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_SPI_DMA_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_SPI_DMA_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_SPI_DMA_IN_DMA_SIMPLE 0x0 /* enum */
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_SPI_DMA_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_SPI_DMA_IN_EFTEST_OP_RSVD_LEN 2
/* Flash address to DMA from (ignored for SIMPLE) */
#define       MC_CMD_EFTEST_SPI_DMA_IN_FLASH_ADDR_OFST 4
#define       MC_CMD_EFTEST_SPI_DMA_IN_FLASH_ADDR_LEN 4
/* IMEM address to DMA to (ignored for SIMPLE) */
#define       MC_CMD_EFTEST_SPI_DMA_IN_IMEM_ADDR_OFST 8
#define       MC_CMD_EFTEST_SPI_DMA_IN_IMEM_ADDR_LEN 4
/* transfer length (ignored for SIMPLE) */
#define       MC_CMD_EFTEST_SPI_DMA_IN_LEN_OFST 12
#define       MC_CMD_EFTEST_SPI_DMA_IN_LEN_LEN 4

/* MC_CMD_EFTEST_SPI_DMA_OUT msgresponse */
#define    MC_CMD_EFTEST_SPI_DMA_OUT_LEN 4
#define       MC_CMD_EFTEST_SPI_DMA_OUT_RESULT_OFST 0
#define       MC_CMD_EFTEST_SPI_DMA_OUT_RESULT_LEN 4

/* MC_CMD_EFTEST_MIPS_INSNS_IN msgrequest */
#define    MC_CMD_EFTEST_MIPS_INSNS_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_MIPS_INSNS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_MIPS_INSNS_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_MIPS_INSNS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_MIPS_INSNS_IN_EFTEST_OP_LEN 1
/* enum: test the MUL instruction */
#define          MC_CMD_EFTEST_MIPS_INSNS_IN_INSN_MUL 0x0
/* enum: test CLO and CLZ */
#define          MC_CMD_EFTEST_MIPS_INSNS_IN_INSN_CLO_CLZ 0x1
/* enum: test EXT and INS */
#define          MC_CMD_EFTEST_MIPS_INSNS_IN_INSN_EXT_INS 0x2
/* enum: test that CLO and CLZ have the expected performance (medford2 only) */
#define          MC_CMD_EFTEST_MIPS_INSNS_IN_INSN_CLO_CLZ_SPEED 0x3
/* enum: test MULTU\MFHI\MFLO instructions (medford2 only) */
#define          MC_CMD_EFTEST_MIPS_INSNS_IN_INSN_MULTU 0x4
/* enum: test MULT\MFHI\MFLO instructions (medford2 only) */
#define          MC_CMD_EFTEST_MIPS_INSNS_IN_INSN_MULT 0x5
/* enum: test MTLO/MTHI/MFLO/MFHI instructions (medford2 only) */
#define          MC_CMD_EFTEST_MIPS_INSNS_IN_INSN_LOAD 0x6
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_MIPS_INSNS_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_MIPS_INSNS_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_MIPS_INSNS_OUT msgresponse */
#define    MC_CMD_EFTEST_MIPS_INSNS_OUT_LEN 4
#define       MC_CMD_EFTEST_MIPS_INSNS_OUT_RESULT_OFST 0
#define       MC_CMD_EFTEST_MIPS_INSNS_OUT_RESULT_LEN 4

/* MC_CMD_EFTEST_EF100_SWITCH_IN msgrequest */
#define    MC_CMD_EFTEST_EF100_SWITCH_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_EF100_SWITCH_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_EF100_SWITCH_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_EF100_SWITCH_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_EF100_SWITCH_IN_EFTEST_OP_LEN 1
/* enum: Check buffer state after a test */
#define          MC_CMD_EFTEST_EF100_SWITCH_IN_BUFFER_CHECK 0x0
/* enum: Set a TXQ's target VFIFOs */
#define          MC_CMD_EFTEST_EF100_SWITCH_IN_SET_TX_MAP 0x1
/* enum: Find needed vFIFO */
#define          MC_CMD_EFTEST_EF100_SWITCH_IN_VFIFO_FIND 0x2
/* enum: Initialise and start a VFIFO */
#define          MC_CMD_EFTEST_EF100_SWITCH_IN_VFIFO_SETUP 0x3
/* enum: Tear down a VFIFO */
#define          MC_CMD_EFTEST_EF100_SWITCH_IN_VFIFO_TEARDOWN 0x4
/* enum: Repeatedly set up and tear down a VFIFO */
#define          MC_CMD_EFTEST_EF100_SWITCH_IN_VFIFO_AGITATE 0x5
/* enum: Enable and disable inputs to the eng_epi arbiters */
#define          MC_CMD_EFTEST_EF100_SWITCH_IN_ENG_EPI_VFIFO_ENABLE 0x6
/* enum: Start or stop the thread which toggles the inputs to the eng_epi
 * arbiters
 */
#define          MC_CMD_EFTEST_EF100_SWITCH_IN_ENG_EPI_VFIFO_TOGGLE 0x7
/* enum: Ask the NIC which VFIFOs are reserved for testing purposes. */
#define          MC_CMD_EFTEST_EF100_SWITCH_IN_GET_RESERVED_VFIFOS 0x8
/* enum: Turn VFIFO egress on/off. */
#define          MC_CMD_EFTEST_EF100_SWITCH_IN_VFIFO_EGRESS 0x9
/* enum: Find all VFIFOs attached to a given (ipi, epi) pair. */
#define          MC_CMD_EFTEST_EF100_SWITCH_IN_VFIFO_FIND_ALL 0xa
/* enum: Retrieve parameters for a single VFIFO */
#define          MC_CMD_EFTEST_EF100_SWITCH_IN_VFIFO_QUERY 0xb
/* enum: Enable/disable cut-through mode */
#define          MC_CMD_EFTEST_EF100_SWITCH_IN_SET_CUT_THROUGH 0xc
/* enum: Adjust switch configuration for testing purposes */
#define          MC_CMD_EFTEST_EF100_SWITCH_IN_SET_TEST_MODE 0xd
/* enum: Start or stop the thread which reads the ENG_EPI and NET_EPI VFIFO
 * XON/XOFF registers.
 */
#define          MC_CMD_EFTEST_EF100_SWITCH_IN_EPI_VFIFO_XONXOFF_READ_AGITATOR 0xe
/* enum: Create a common pool */
#define          MC_CMD_EFTEST_EF100_SWITCH_IN_COMMON_POOL_CREATE 0xf
/* enum: Destroy a common pool */
#define          MC_CMD_EFTEST_EF100_SWITCH_IN_COMMON_POOL_DESTROY 0x10
/* enum: Wipe out all switch configuration, optionally setting up the default
 * configuration.
 */
#define          MC_CMD_EFTEST_EF100_SWITCH_IN_CLEAR_CONFIGURATION 0x11
/* enum: Configure the switch arbiter settings. Currently just sets the net
 * mode.
 */
#define          MC_CMD_EFTEST_EF100_SWITCH_IN_CONFIGURE_ARBITER 0x12
/* enum: Make the current configuration ready to pass traffic. Programs FC
 * thresholds and configures pacer.
 */
#define          MC_CMD_EFTEST_EF100_SWITCH_IN_APPLY_CONFIGURATION 0x13
/* enum: Outputs all the common pool and vfifo configuration. */
#define          MC_CMD_EFTEST_EF100_SWITCH_IN_GET_CONFIGURATION 0x14
/* enum: Set up switch bypass (medford2 only) */
#define          MC_CMD_EFTEST_EF100_SWITCH_IN_CONFIGURE_RX_BYPASS 0x15
/* enum: Set port FastPD mode (Medford2 only) */
#define          MC_CMD_EFTEST_EF100_SWITCH_IN_CONFIGURE_FASTPD_MODE 0x16
/* enum: Get port FastPD mode (Medford2 only) */
#define          MC_CMD_EFTEST_EF100_SWITCH_IN_GET_FASTPD_MODE 0x17
/* enum: Start or stop the thread which periodically toggles the FastPD mode on
 * the given port (Medford2 only).
 */
#define          MC_CMD_EFTEST_EF100_SWITCH_IN_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR 0x18
/* enum: Start or stop the thread which periodically toggles drain on/off on
 * the given port.
 */
#define          MC_CMD_EFTEST_EF100_SWITCH_IN_CONFIGURE_MAC_DRAIN_TOGGLE_AGITATOR 0x19
/* enum: Start or stop the thread which periodically reconfigure the steer
 * thresh of FastPD-capable packets (Medford2 only).
 */
#define          MC_CMD_EFTEST_EF100_SWITCH_IN_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR 0x1a
/* enum: Enable (or disable) round robin rx balancing on the port (medford2
 * only)
 */
#define          MC_CMD_EFTEST_EF100_SWITCH_IN_SET_ROUND_ROBIN_RX_BALANCING 0x1b
/* enum: Start or stop the thread which periodically reprograms the net epi
 * arbiter (medford2 only)
 */
#define          MC_CMD_EFTEST_EF100_SWITCH_IN_CONFIGURE_NET_EPI_ARBITER_AGITATOR 0x1c
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_EF100_SWITCH_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_EF100_SWITCH_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_EF100_SWITCH_OUT msgresponse */
#define    MC_CMD_EFTEST_EF100_SWITCH_OUT_LEN 0

/* MC_CMD_EFTEST_EF100_SWITCH_SET_TX_MAP_IN msgrequest */
#define    MC_CMD_EFTEST_EF100_SWITCH_SET_TX_MAP_IN_LEN 20
/* identifies the test */
#define       MC_CMD_EFTEST_EF100_SWITCH_SET_TX_MAP_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_EF100_SWITCH_SET_TX_MAP_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_EF100_SWITCH_SET_TX_MAP_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_EF100_SWITCH_SET_TX_MAP_IN_EFTEST_OP_LEN 1
/* enum: Check buffer state after a test */
#define          MC_CMD_EFTEST_EF100_SWITCH_SET_TX_MAP_IN_BUFFER_CHECK 0x0
/* enum: Set a TXQ's target VFIFOs */
#define          MC_CMD_EFTEST_EF100_SWITCH_SET_TX_MAP_IN_SET_TX_MAP 0x0
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_EF100_SWITCH_SET_TX_MAP_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_EF100_SWITCH_SET_TX_MAP_IN_EFTEST_OP_RSVD_LEN 2
/* Queue ID */
#define       MC_CMD_EFTEST_EF100_SWITCH_SET_TX_MAP_IN_TXQID_OFST 4
#define       MC_CMD_EFTEST_EF100_SWITCH_SET_TX_MAP_IN_TXQID_LEN 4
/* Queue ID */
#define       MC_CMD_EFTEST_EF100_SWITCH_SET_TX_MAP_IN_NET_VF_OFST 8
#define       MC_CMD_EFTEST_EF100_SWITCH_SET_TX_MAP_IN_NET_VF_LEN 4
/* Queue ID */
#define       MC_CMD_EFTEST_EF100_SWITCH_SET_TX_MAP_IN_HOST_VF_OFST 12
#define       MC_CMD_EFTEST_EF100_SWITCH_SET_TX_MAP_IN_HOST_VF_LEN 4
/* Port number */
#define       MC_CMD_EFTEST_EF100_SWITCH_SET_TX_MAP_IN_PORT_NUM_OFST 16
#define       MC_CMD_EFTEST_EF100_SWITCH_SET_TX_MAP_IN_PORT_NUM_LEN 4

/* MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_IN msgrequest */
#define    MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_IN_LEN 24
/* identifies the test */
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_IN_EFTEST_OP_LEN 1
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_IN_EFTEST_OP_RSVD_LEN 2
/* Source */
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_IN_SRC_OFST 4
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_IN_SRC_LEN 4
/* enum: Network */
#define          MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_IN_NET 0x1
/* enum: Engine */
#define          MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_IN_ENG 0x2
/* Interface number */
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_IN_IPI_NUM_OFST 8
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_IN_IPI_NUM_LEN 4
/* Destination */
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_IN_DST_OFST 12
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_IN_DST_LEN 4
/* enum: Network */
/*               MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_IN_NET 0x1 */
/* enum: Engine */
/*               MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_IN_ENG 0x2 */
/* Interface number */
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_IN_EPI_NUM_OFST 16
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_IN_EPI_NUM_LEN 4
/* Associated qbb priority */
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_IN_QBB_PRIORITY_OFST 20
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_IN_QBB_PRIORITY_LEN 4

/* MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_OUT msgresponse */
#define    MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_OUT_LEN 8
/* VFIFO number */
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_OUT_VFIFO_OFST 0
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_OUT_VFIFO_LEN 4
/* Common pool number use by this VFIFO */
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_OUT_CP_OFST 4
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_OUT_CP_LEN 4

/* MC_CMD_EFTEST_EF100_SWITCH_VFIFO_SETUP_IN msgrequest */
#define    MC_CMD_EFTEST_EF100_SWITCH_VFIFO_SETUP_IN_LEN 48
/* identifies the test */
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_SETUP_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_SETUP_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_SETUP_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_SETUP_IN_EFTEST_OP_LEN 1
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_SETUP_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_SETUP_IN_EFTEST_OP_RSVD_LEN 2
/* VFIFO number */
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_SETUP_IN_VFIFO_OFST 4
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_SETUP_IN_VFIFO_LEN 4
/* enum: Firmware chooses a free vFifo number */
#define          MC_CMD_EFTEST_EF100_SWITCH_VFIFO_SETUP_IN_ANY -0x1
/* 1 = net_ipi, 2 = eng_ipi */
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_SETUP_IN_IPI_SIDE_OFST 8
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_SETUP_IN_IPI_SIDE_LEN 4
/* 0 to 3 */
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_SETUP_IN_IPI_NUM_OFST 12
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_SETUP_IN_IPI_NUM_LEN 4
/* 1 = net_ipi, 2 = eng_ipi */
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_SETUP_IN_EPI_SIDE_OFST 16
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_SETUP_IN_EPI_SIDE_LEN 4
/* 0 to 3 */
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_SETUP_IN_EPI_NUM_OFST 20
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_SETUP_IN_EPI_NUM_LEN 4
/* Common pool to allocate buffers from */
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_SETUP_IN_CP_OFST 24
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_SETUP_IN_CP_LEN 4
/* Cut-through threshold */
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_SETUP_IN_CT_THRESH_OFST 28
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_SETUP_IN_CT_THRESH_LEN 4
/* 0 = store & forward, 1 = cut through */
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_SETUP_IN_TX_MODE_OFST 32
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_SETUP_IN_TX_MODE_LEN 4
/* eng_epi arbiter weight */
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_SETUP_IN_FRR_WEIGHT_OFST 36
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_SETUP_IN_FRR_WEIGHT_LEN 4
/* Pause priority (for net EPI) */
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_SETUP_IN_PRI_OFST 40
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_SETUP_IN_PRI_LEN 1
/* enum: Don't point the upconverter at this VFIFO; for testing purposes */
#define          MC_CMD_EFTEST_EF100_SWITCH_VFIFO_SETUP_IN_NONE 0x8
/* If set, also use this vFifo for priority PRI+1 when programming the
 * upconverters
 */
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_SETUP_IN_PRI_SHARED_OFST 41
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_SETUP_IN_PRI_SHARED_LEN 1
/* Padding */
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_SETUP_IN_RSVD_LBN 335
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_SETUP_IN_RSVD_WIDTH 17
/* Number of iterations to execute (VFIFO_AGITATE only) */
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_SETUP_IN_ITERATIONS_OFST 44
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_SETUP_IN_ITERATIONS_LEN 4

/* MC_CMD_EFTEST_EF100_SWITCH_VFIFO_SETUP_OUT msgresponse */
#define    MC_CMD_EFTEST_EF100_SWITCH_VFIFO_SETUP_OUT_LEN 4
/* VFIFO number */
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_SETUP_OUT_VFIFO_OFST 0
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_SETUP_OUT_VFIFO_LEN 4

/* MC_CMD_EFTEST_EF100_SWITCH_VFIFO_TEARDOWN_IN msgrequest: Note that this
 * operation already exists, but uses the same structure as VFIFO_SETUP, which
 * is kind of silly because all it really needs is the vfifo number. The
 * current teardown code doesn't assume that the vFifo is empty, but does
 * assume that we aren't going to add any more packets to it. Removing this
 * assumption is nontrivial - the vFifos that a TXQ will use are chosen when
 * that TXQ is created, so we'll need to iterate over active TXQs and either
 * disable/flush them or tell them to use a different vFifo.
 */
#define    MC_CMD_EFTEST_EF100_SWITCH_VFIFO_TEARDOWN_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_TEARDOWN_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_TEARDOWN_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_TEARDOWN_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_TEARDOWN_IN_EFTEST_OP_LEN 1
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_TEARDOWN_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_TEARDOWN_IN_EFTEST_OP_RSVD_LEN 2
/* VFIFO number */
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_TEARDOWN_IN_VFIFO_OFST 4
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_TEARDOWN_IN_VFIFO_LEN 4

/* MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_ENABLE_IN msgrequest */
#define    MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_ENABLE_IN_LEN 24
/* identifies the test */
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_ENABLE_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_ENABLE_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_ENABLE_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_ENABLE_IN_EFTEST_OP_LEN 1
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_ENABLE_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_ENABLE_IN_EFTEST_OP_RSVD_LEN 2
/* ENG_EPI port (0 or 1; corresponds to RXDP instance) */
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_ENABLE_IN_EPI_OFST 4
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_ENABLE_IN_EPI_LEN 4
/* Which inputs to enable */
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_ENABLE_IN_ENABLE_OFST 8
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_ENABLE_IN_ENABLE_LEN 8
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_ENABLE_IN_ENABLE_LO_OFST 8
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_ENABLE_IN_ENABLE_LO_LEN 4
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_ENABLE_IN_ENABLE_LO_LBN 64
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_ENABLE_IN_ENABLE_LO_WIDTH 32
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_ENABLE_IN_ENABLE_HI_OFST 12
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_ENABLE_IN_ENABLE_HI_LEN 4
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_ENABLE_IN_ENABLE_HI_LBN 96
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_ENABLE_IN_ENABLE_HI_WIDTH 32
/* Which inputs to disable */
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_ENABLE_IN_DISABLE_OFST 16
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_ENABLE_IN_DISABLE_LEN 8
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_ENABLE_IN_DISABLE_LO_OFST 16
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_ENABLE_IN_DISABLE_LO_LEN 4
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_ENABLE_IN_DISABLE_LO_LBN 128
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_ENABLE_IN_DISABLE_LO_WIDTH 32
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_ENABLE_IN_DISABLE_HI_OFST 20
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_ENABLE_IN_DISABLE_HI_LEN 4
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_ENABLE_IN_DISABLE_HI_LBN 160
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_ENABLE_IN_DISABLE_HI_WIDTH 32

/* MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_TOGGLE_IN msgrequest */
#define    MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_TOGGLE_IN_LEN 32
/* identifies the test */
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_TOGGLE_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_TOGGLE_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_TOGGLE_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_TOGGLE_IN_EFTEST_OP_LEN 1
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_TOGGLE_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_TOGGLE_IN_EFTEST_OP_RSVD_LEN 2
/* Start or stop the MC thread. */
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_TOGGLE_IN_OP_OFST 4
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_TOGGLE_IN_OP_LEN 4
/* enum: Start MC thread */
#define          MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_TOGGLE_IN_OP_START 0x0
/* enum: Stop MC thread */
#define          MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_TOGGLE_IN_OP_STOP 0x1
/* ENG_EPI port (0 or 1 - corresponds to RXDP instance, 2 for both RXDPs) */
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_TOGGLE_IN_EPI_OFST 8
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_TOGGLE_IN_EPI_LEN 4
/* VFIFO(s) to toggle. */
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_TOGGLE_IN_VFIFOS_OFST 12
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_TOGGLE_IN_VFIFOS_LEN 8
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_TOGGLE_IN_VFIFOS_LO_OFST 12
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_TOGGLE_IN_VFIFOS_LO_LEN 4
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_TOGGLE_IN_VFIFOS_LO_LBN 96
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_TOGGLE_IN_VFIFOS_LO_WIDTH 32
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_TOGGLE_IN_VFIFOS_HI_OFST 16
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_TOGGLE_IN_VFIFOS_HI_LEN 4
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_TOGGLE_IN_VFIFOS_HI_LBN 128
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_TOGGLE_IN_VFIFOS_HI_WIDTH 32
/* How long to keep VFIFO(s) enabled, microseconds. */
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_TOGGLE_IN_ON_PERIOD_OFST 20
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_TOGGLE_IN_ON_PERIOD_LEN 4
/* How long to keep VFIFO(s) diabled, microseconds. */
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_TOGGLE_IN_OFF_PERIOD_OFST 24
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_TOGGLE_IN_OFF_PERIOD_LEN 4
/* Port number, or -1 for all ports on this RXDP */
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_TOGGLE_IN_PORT_OFST 28
#define       MC_CMD_EFTEST_EF100_SWITCH_ENG_EPI_VFIFO_TOGGLE_IN_PORT_LEN 4

/* MC_CMD_EFTEST_EF100_SWITCH_GET_RESERVED_VFIFOS_OUT msgresponse */
#define    MC_CMD_EFTEST_EF100_SWITCH_GET_RESERVED_VFIFOS_OUT_LEN 80
/* The first ENG_EPI (0-63) VFIFO that snapper can use, or 64 if none are
 * reserved.
 */
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_RESERVED_VFIFOS_OUT_ENG_VFIFO_BASE_OFST 0
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_RESERVED_VFIFOS_OUT_ENG_VFIFO_BASE_LEN 4
/* The first NET_EPI (64-127) VFIFO that snapper can use, or 128 if none are
 * reserved.
 */
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_RESERVED_VFIFOS_OUT_NET_VFIFO_BASE_OFST 4
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_RESERVED_VFIFOS_OUT_NET_VFIFO_BASE_LEN 4
/* Value of EMCR_MEMORY_MODULE_COMMON_POOL_RAM_SELECT register */
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_RESERVED_VFIFOS_OUT_RAM_SELECT_OFST 8
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_RESERVED_VFIFOS_OUT_RAM_SELECT_LEN 4
/* Value of EMCR_SWITCH_FC_CP_KIND register */
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_RESERVED_VFIFOS_OUT_CP_KIND_OFST 12
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_RESERVED_VFIFOS_OUT_CP_KIND_LEN 4
/* Array to store the number of buffers assigned to each of common pools. */
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_RESERVED_VFIFOS_OUT_NUM_BUFS_PER_POOL_OFST 16
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_RESERVED_VFIFOS_OUT_NUM_BUFS_PER_POOL_LEN 4
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_RESERVED_VFIFOS_OUT_NUM_BUFS_PER_POOL_NUM 16

/* MC_CMD_EFTEST_EF100_SWITCH_VFIFO_EGRESS_IN msgrequest */
#define    MC_CMD_EFTEST_EF100_SWITCH_VFIFO_EGRESS_IN_LEN 12
/* identifies the test */
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_EGRESS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_EGRESS_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_EGRESS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_EGRESS_IN_EFTEST_OP_LEN 1
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_EGRESS_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_EGRESS_IN_EFTEST_OP_RSVD_LEN 2
/* VFIFO id */
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_EGRESS_IN_VID_OFST 4
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_EGRESS_IN_VID_LEN 4
/* Egress turned ON/OFF */
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_EGRESS_IN_ON_OFST 8
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_EGRESS_IN_ON_LEN 4

/* MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_ALL_IN msgrequest */
#define    MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_ALL_IN_LEN 20
/* identifies the test */
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_ALL_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_ALL_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_ALL_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_ALL_IN_EFTEST_OP_LEN 1
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_ALL_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_ALL_IN_EFTEST_OP_RSVD_LEN 2
/* Source */
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_ALL_IN_SRC_OFST 4
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_ALL_IN_SRC_LEN 4
/* enum: Network */
#define          MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_ALL_IN_NET 0x1
/* enum: Engine */
#define          MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_ALL_IN_ENG 0x2
/* Interface number */
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_ALL_IN_IPI_NUM_OFST 8
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_ALL_IN_IPI_NUM_LEN 4
/* Destination */
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_ALL_IN_DST_OFST 12
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_ALL_IN_DST_LEN 4
/* enum: Network */
/*               MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_ALL_IN_NET 0x1 */
/* enum: Engine */
/*               MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_ALL_IN_ENG 0x2 */
/* Interface number */
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_ALL_IN_EPI_NUM_OFST 16
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_ALL_IN_EPI_NUM_LEN 4

/* MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_ALL_OUT msgresponse */
#define    MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_ALL_OUT_LEN 264
/* VFIFO number or -1 */
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_ALL_OUT_VFIFO_OFST 0
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_ALL_OUT_VFIFO_LEN 4
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_ALL_OUT_VFIFO_NUM 33
/* VFIFO priority or -1 */
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_ALL_OUT_PRIO_OFST 132
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_ALL_OUT_PRIO_LEN 4
#define       MC_CMD_EFTEST_EF100_SWITCH_VFIFO_FIND_ALL_OUT_PRIO_NUM 33

/* MC_CMD_EFTEST_EF100_SWITCH_SET_CUT_THROUGH_IN msgrequest */
#define    MC_CMD_EFTEST_EF100_SWITCH_SET_CUT_THROUGH_IN_LEN 20
/* identifies the test */
#define       MC_CMD_EFTEST_EF100_SWITCH_SET_CUT_THROUGH_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_EF100_SWITCH_SET_CUT_THROUGH_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_EF100_SWITCH_SET_CUT_THROUGH_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_EF100_SWITCH_SET_CUT_THROUGH_IN_EFTEST_OP_LEN 1
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_EF100_SWITCH_SET_CUT_THROUGH_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_EF100_SWITCH_SET_CUT_THROUGH_IN_EFTEST_OP_RSVD_LEN 2
/* For each VFIFO, 1 to enable cut-through mode or 0 to disable */
#define       MC_CMD_EFTEST_EF100_SWITCH_SET_CUT_THROUGH_IN_ENABLE_OFST 4
#define       MC_CMD_EFTEST_EF100_SWITCH_SET_CUT_THROUGH_IN_ENABLE_LEN 16

/* MC_CMD_EFTEST_EF100_SWITCH_SET_TEST_MODE_IN msgrequest */
#define    MC_CMD_EFTEST_EF100_SWITCH_SET_TEST_MODE_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_EF100_SWITCH_SET_TEST_MODE_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_EF100_SWITCH_SET_TEST_MODE_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_EF100_SWITCH_SET_TEST_MODE_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_EF100_SWITCH_SET_TEST_MODE_IN_EFTEST_OP_LEN 1
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_EF100_SWITCH_SET_TEST_MODE_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_EF100_SWITCH_SET_TEST_MODE_IN_EFTEST_OP_RSVD_LEN 2
/* Which test-specific configuration to select. */
#define       MC_CMD_EFTEST_EF100_SWITCH_SET_TEST_MODE_IN_TEST_MODE_OFST 4
#define       MC_CMD_EFTEST_EF100_SWITCH_SET_TEST_MODE_IN_TEST_MODE_LEN 4
/* enum: Use production configuration (no test-specific adjustments) */
#define          MC_CMD_EFTEST_EF100_SWITCH_SET_TEST_MODE_IN_PRODUCTION 0x0
/* enum: Assign most net-egr buffers to the loopback path */
#define          MC_CMD_EFTEST_EF100_SWITCH_SET_TEST_MODE_IN_LOOPBACK 0x1
/* enum: Test Qbb with a broken transmitter that ignores XOFFs */
#define          MC_CMD_EFTEST_EF100_SWITCH_SET_TEST_MODE_IN_QBB_BROKEN 0x2
/* enum: Test Qbb with preemptive discard enabled */
#define          MC_CMD_EFTEST_EF100_SWITCH_SET_TEST_MODE_IN_QBB_DISCARD 0x3

/* MC_CMD_EFTEST_EF100_BUFFER_CHECK_OUT msgresponse */
#define    MC_CMD_EFTEST_EF100_BUFFER_CHECK_OUT_LEN 4
#define       MC_CMD_EFTEST_EF100_BUFFER_CHECK_OUT_RESULT_OFST 0
#define       MC_CMD_EFTEST_EF100_BUFFER_CHECK_OUT_RESULT_LEN 4
/* enum property: bitmask */
#define          MC_CMD_EFTEST_EF100_BUFFER_CHECK_OUT_MULTI_BUFFS_ON_IDLE_VF 0x1 /* enum */
#define          MC_CMD_EFTEST_EF100_BUFFER_CHECK_OUT_BUFF_ON_DISABLED_VF 0x2 /* enum */
#define          MC_CMD_EFTEST_EF100_BUFFER_CHECK_OUT_NO_BUFF_ON_ENABLED_VF 0x4 /* enum */
#define          MC_CMD_EFTEST_EF100_BUFFER_CHECK_OUT_CP_EXCESS_BUFFS 0x8 /* enum */
#define          MC_CMD_EFTEST_EF100_BUFFER_CHECK_OUT_CP_MISSING_BUFFS 0x10 /* enum */
#define          MC_CMD_EFTEST_EF100_BUFFER_CHECK_OUT_SW_EXCESS_BUFFS 0x20 /* enum */
#define          MC_CMD_EFTEST_EF100_BUFFER_CHECK_OUT_SW_MISSING_BUFFS 0x40 /* enum */
#define          MC_CMD_EFTEST_EF100_BUFFER_CHECK_OUT_FA_URGENCY_ERROR 0x80 /* enum */
#define          MC_CMD_EFTEST_EF100_BUFFER_CHECK_OUT_VF_WORD_CNTR_NONZERO 0x100 /* enum */
#define          MC_CMD_EFTEST_EF100_BUFFER_CHECK_OUT_VF_PKT_CNTR_NONZERO 0x200 /* enum */
#define          MC_CMD_EFTEST_EF100_BUFFER_CHECK_OUT_VF_PKT_START_CNTR_NONZERO 0x400 /* enum */
#define          MC_CMD_EFTEST_EF100_BUFFER_CHECK_OUT_VF_ADV_WORD_CNTR_NONZERO 0x800 /* enum */
#define          MC_CMD_EFTEST_EF100_BUFFER_CHECK_OUT_PF_WORD_CNTR_NONZERO 0x1000 /* enum */

/* MC_CMD_EFTEST_EF100_SWITCH_EPI_VFIFO_XONXOFF_READ_AGITATOR_IN msgrequest */
#define    MC_CMD_EFTEST_EF100_SWITCH_EPI_VFIFO_XONXOFF_READ_AGITATOR_IN_LEN 12
/* identifies the test */
#define       MC_CMD_EFTEST_EF100_SWITCH_EPI_VFIFO_XONXOFF_READ_AGITATOR_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_EF100_SWITCH_EPI_VFIFO_XONXOFF_READ_AGITATOR_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_EF100_SWITCH_EPI_VFIFO_XONXOFF_READ_AGITATOR_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_EF100_SWITCH_EPI_VFIFO_XONXOFF_READ_AGITATOR_IN_EFTEST_OP_LEN 1
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_EF100_SWITCH_EPI_VFIFO_XONXOFF_READ_AGITATOR_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_EF100_SWITCH_EPI_VFIFO_XONXOFF_READ_AGITATOR_IN_EFTEST_OP_RSVD_LEN 2
/* Start or stop the MC thread. */
#define       MC_CMD_EFTEST_EF100_SWITCH_EPI_VFIFO_XONXOFF_READ_AGITATOR_IN_OP_OFST 4
#define       MC_CMD_EFTEST_EF100_SWITCH_EPI_VFIFO_XONXOFF_READ_AGITATOR_IN_OP_LEN 4
/* enum: Start MC thread */
#define          MC_CMD_EFTEST_EF100_SWITCH_EPI_VFIFO_XONXOFF_READ_AGITATOR_IN_OP_START 0x0
/* enum: Stop MC thread */
#define          MC_CMD_EFTEST_EF100_SWITCH_EPI_VFIFO_XONXOFF_READ_AGITATOR_IN_OP_STOP 0x1
/* Delay between read iterations, microseconds. */
#define       MC_CMD_EFTEST_EF100_SWITCH_EPI_VFIFO_XONXOFF_READ_AGITATOR_IN_DELAY_OFST 8
#define       MC_CMD_EFTEST_EF100_SWITCH_EPI_VFIFO_XONXOFF_READ_AGITATOR_IN_DELAY_LEN 4

/* MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN msgrequest */
#define    MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_LEN 20
/* identifies the test */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_EFTEST_OP_LEN 1
/* enum: Check buffer state after a test */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_BUFFER_CHECK 0x0
/* enum: Set a TXQ's target VFIFOs */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_SET_TX_MAP 0x1
/* enum: Find needed vFIFO */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_VFIFO_FIND 0x2
/* enum: Initialise and start a VFIFO */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_VFIFO_SETUP 0x3
/* enum: Tear down a VFIFO */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_VFIFO_TEARDOWN 0x4
/* enum: Repeatedly set up and tear down a VFIFO */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_VFIFO_AGITATE 0x5
/* enum: Enable and disable inputs to the eng_epi arbiters */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_ENG_EPI_VFIFO_ENABLE 0x6
/* enum: Start or stop the thread which toggles the inputs to the eng_epi
 * arbiters
 */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_ENG_EPI_VFIFO_TOGGLE 0x7
/* enum: Ask the NIC which VFIFOs are reserved for testing purposes. */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_GET_RESERVED_VFIFOS 0x8
/* enum: Turn VFIFO egress on/off. */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_VFIFO_EGRESS 0x9
/* enum: Find all VFIFOs attached to a given (ipi, epi) pair. */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_VFIFO_FIND_ALL 0xa
/* enum: Retrieve parameters for a single VFIFO */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_VFIFO_QUERY 0xb
/* enum: Enable/disable cut-through mode */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_SET_CUT_THROUGH 0xc
/* enum: Adjust switch configuration for testing purposes */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_SET_TEST_MODE 0xd
/* enum: Start or stop the thread which reads the ENG_EPI and NET_EPI VFIFO
 * XON/XOFF registers.
 */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_EPI_VFIFO_XONXOFF_READ_AGITATOR 0xe
/* enum: Create a common pool */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_COMMON_POOL_CREATE 0xf
/* enum: Destroy a common pool */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_COMMON_POOL_DESTROY 0x10
/* enum: Wipe out all switch configuration, optionally setting up the default
 * configuration.
 */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_CLEAR_CONFIGURATION 0x11
/* enum: Configure the switch arbiter settings. Currently just sets the net
 * mode.
 */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_CONFIGURE_ARBITER 0x12
/* enum: Make the current configuration ready to pass traffic. Programs FC
 * thresholds and configures pacer.
 */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_APPLY_CONFIGURATION 0x13
/* enum: Outputs all the common pool and vfifo configuration. */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_GET_CONFIGURATION 0x14
/* enum: Set up switch bypass (medford2 only) */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_CONFIGURE_RX_BYPASS 0x15
/* enum: Set port FastPD mode (Medford2 only) */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_CONFIGURE_FASTPD_MODE 0x16
/* enum: Get port FastPD mode (Medford2 only) */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_GET_FASTPD_MODE 0x17
/* enum: Start or stop the thread which periodically toggles the FastPD mode on
 * the given port (Medford2 only).
 */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR 0x18
/* enum: Start or stop the thread which periodically toggles drain on/off on
 * the given port.
 */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_CONFIGURE_MAC_DRAIN_TOGGLE_AGITATOR 0x19
/* enum: Start or stop the thread which periodically reconfigure the steer
 * thresh of FastPD-capable packets (Medford2 only).
 */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR 0x1a
/* enum: Enable (or disable) round robin rx balancing on the port (medford2
 * only)
 */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_SET_ROUND_ROBIN_RX_BALANCING 0x1b
/* enum: Start or stop the thread which periodically reprograms the net epi
 * arbiter (medford2 only)
 */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_CONFIGURE_NET_EPI_ARBITER_AGITATOR 0x1c
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_EFTEST_OP_RSVD_LEN 2
/* Start or stop the MC thread. */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_OP_OFST 4
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_OP_LEN 4
/* enum: Start MC thread */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_OP_START 0x0
/* enum: Stop MC thread */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_OP_STOP 0x1
/* Port to configure */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_PORT_OFST 8
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_PORT_LEN 4
/* Delay between read iterations, microseconds. */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_DELAY_OFST 12
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_DELAY_LEN 4
/* Which FastPD modes to include. */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_MODE_MASK_OFST 16
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_MODE_MASK_LEN 4
#define        MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_MODE_SOFT_ALL_OFST 16
#define        MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_MODE_SOFT_ALL_LBN 0
#define        MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_MODE_SOFT_ALL_WIDTH 1
#define        MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_MODE_FAST_ALL_OFST 16
#define        MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_MODE_FAST_ALL_LBN 1
#define        MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_MODE_FAST_ALL_WIDTH 1
#define        MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_MODE_FAST_SUPPORTED_OFST 16
#define        MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_MODE_FAST_SUPPORTED_LBN 2
#define        MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR_IN_MODE_FAST_SUPPORTED_WIDTH 1

/* MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_MAC_DRAIN_TOGGLE_AGITATOR_IN msgrequest */
#define    MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_MAC_DRAIN_TOGGLE_AGITATOR_IN_LEN 16
/* identifies the test */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_MAC_DRAIN_TOGGLE_AGITATOR_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_MAC_DRAIN_TOGGLE_AGITATOR_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_MAC_DRAIN_TOGGLE_AGITATOR_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_MAC_DRAIN_TOGGLE_AGITATOR_IN_EFTEST_OP_LEN 1
/* enum: Check buffer state after a test */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_MAC_DRAIN_TOGGLE_AGITATOR_IN_BUFFER_CHECK 0x0
/* enum: Set a TXQ's target VFIFOs */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_MAC_DRAIN_TOGGLE_AGITATOR_IN_SET_TX_MAP 0x1
/* enum: Find needed vFIFO */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_MAC_DRAIN_TOGGLE_AGITATOR_IN_VFIFO_FIND 0x2
/* enum: Initialise and start a VFIFO */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_MAC_DRAIN_TOGGLE_AGITATOR_IN_VFIFO_SETUP 0x3
/* enum: Tear down a VFIFO */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_MAC_DRAIN_TOGGLE_AGITATOR_IN_VFIFO_TEARDOWN 0x4
/* enum: Repeatedly set up and tear down a VFIFO */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_MAC_DRAIN_TOGGLE_AGITATOR_IN_VFIFO_AGITATE 0x5
/* enum: Enable and disable inputs to the eng_epi arbiters */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_MAC_DRAIN_TOGGLE_AGITATOR_IN_ENG_EPI_VFIFO_ENABLE 0x6
/* enum: Start or stop the thread which toggles the inputs to the eng_epi
 * arbiters
 */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_MAC_DRAIN_TOGGLE_AGITATOR_IN_ENG_EPI_VFIFO_TOGGLE 0x7
/* enum: Ask the NIC which VFIFOs are reserved for testing purposes. */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_MAC_DRAIN_TOGGLE_AGITATOR_IN_GET_RESERVED_VFIFOS 0x8
/* enum: Turn VFIFO egress on/off. */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_MAC_DRAIN_TOGGLE_AGITATOR_IN_VFIFO_EGRESS 0x9
/* enum: Find all VFIFOs attached to a given (ipi, epi) pair. */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_MAC_DRAIN_TOGGLE_AGITATOR_IN_VFIFO_FIND_ALL 0xa
/* enum: Retrieve parameters for a single VFIFO */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_MAC_DRAIN_TOGGLE_AGITATOR_IN_VFIFO_QUERY 0xb
/* enum: Enable/disable cut-through mode */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_MAC_DRAIN_TOGGLE_AGITATOR_IN_SET_CUT_THROUGH 0xc
/* enum: Adjust switch configuration for testing purposes */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_MAC_DRAIN_TOGGLE_AGITATOR_IN_SET_TEST_MODE 0xd
/* enum: Start or stop the thread which reads the ENG_EPI and NET_EPI VFIFO
 * XON/XOFF registers.
 */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_MAC_DRAIN_TOGGLE_AGITATOR_IN_EPI_VFIFO_XONXOFF_READ_AGITATOR 0xe
/* enum: Create a common pool */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_MAC_DRAIN_TOGGLE_AGITATOR_IN_COMMON_POOL_CREATE 0xf
/* enum: Destroy a common pool */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_MAC_DRAIN_TOGGLE_AGITATOR_IN_COMMON_POOL_DESTROY 0x10
/* enum: Wipe out all switch configuration, optionally setting up the default
 * configuration.
 */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_MAC_DRAIN_TOGGLE_AGITATOR_IN_CLEAR_CONFIGURATION 0x11
/* enum: Configure the switch arbiter settings. Currently just sets the net
 * mode.
 */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_MAC_DRAIN_TOGGLE_AGITATOR_IN_CONFIGURE_ARBITER 0x12
/* enum: Make the current configuration ready to pass traffic. Programs FC
 * thresholds and configures pacer.
 */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_MAC_DRAIN_TOGGLE_AGITATOR_IN_APPLY_CONFIGURATION 0x13
/* enum: Outputs all the common pool and vfifo configuration. */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_MAC_DRAIN_TOGGLE_AGITATOR_IN_GET_CONFIGURATION 0x14
/* enum: Set up switch bypass (medford2 only) */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_MAC_DRAIN_TOGGLE_AGITATOR_IN_CONFIGURE_RX_BYPASS 0x15
/* enum: Set port FastPD mode (Medford2 only) */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_MAC_DRAIN_TOGGLE_AGITATOR_IN_CONFIGURE_FASTPD_MODE 0x16
/* enum: Get port FastPD mode (Medford2 only) */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_MAC_DRAIN_TOGGLE_AGITATOR_IN_GET_FASTPD_MODE 0x17
/* enum: Start or stop the thread which periodically toggles the FastPD mode on
 * the given port (Medford2 only).
 */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_MAC_DRAIN_TOGGLE_AGITATOR_IN_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR 0x18
/* enum: Start or stop the thread which periodically toggles drain on/off on
 * the given port.
 */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_MAC_DRAIN_TOGGLE_AGITATOR_IN_CONFIGURE_MAC_DRAIN_TOGGLE_AGITATOR 0x19
/* enum: Start or stop the thread which periodically reconfigure the steer
 * thresh of FastPD-capable packets (Medford2 only).
 */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_MAC_DRAIN_TOGGLE_AGITATOR_IN_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR 0x1a
/* enum: Enable (or disable) round robin rx balancing on the port (medford2
 * only)
 */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_MAC_DRAIN_TOGGLE_AGITATOR_IN_SET_ROUND_ROBIN_RX_BALANCING 0x1b
/* enum: Start or stop the thread which periodically reprograms the net epi
 * arbiter (medford2 only)
 */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_MAC_DRAIN_TOGGLE_AGITATOR_IN_CONFIGURE_NET_EPI_ARBITER_AGITATOR 0x1c
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_MAC_DRAIN_TOGGLE_AGITATOR_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_MAC_DRAIN_TOGGLE_AGITATOR_IN_EFTEST_OP_RSVD_LEN 2
/* Start or stop the MC thread. */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_MAC_DRAIN_TOGGLE_AGITATOR_IN_OP_OFST 4
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_MAC_DRAIN_TOGGLE_AGITATOR_IN_OP_LEN 4
/* enum: Start MC thread */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_MAC_DRAIN_TOGGLE_AGITATOR_IN_OP_START 0x0
/* enum: Stop MC thread */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_MAC_DRAIN_TOGGLE_AGITATOR_IN_OP_STOP 0x1
/* Port to configure */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_MAC_DRAIN_TOGGLE_AGITATOR_IN_PORT_OFST 8
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_MAC_DRAIN_TOGGLE_AGITATOR_IN_PORT_LEN 4
/* Delay between read iterations, microseconds. */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_MAC_DRAIN_TOGGLE_AGITATOR_IN_DELAY_OFST 12
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_MAC_DRAIN_TOGGLE_AGITATOR_IN_DELAY_LEN 4

/* MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN msgrequest */
#define    MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_LEN 48
/* identifies the test */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_EFTEST_OP_LEN 1
/* enum: Check buffer state after a test */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_BUFFER_CHECK 0x0
/* enum: Set a TXQ's target VFIFOs */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_SET_TX_MAP 0x1
/* enum: Find needed vFIFO */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_VFIFO_FIND 0x2
/* enum: Initialise and start a VFIFO */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_VFIFO_SETUP 0x3
/* enum: Tear down a VFIFO */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_VFIFO_TEARDOWN 0x4
/* enum: Repeatedly set up and tear down a VFIFO */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_VFIFO_AGITATE 0x5
/* enum: Enable and disable inputs to the eng_epi arbiters */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_ENG_EPI_VFIFO_ENABLE 0x6
/* enum: Start or stop the thread which toggles the inputs to the eng_epi
 * arbiters
 */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_ENG_EPI_VFIFO_TOGGLE 0x7
/* enum: Ask the NIC which VFIFOs are reserved for testing purposes. */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_GET_RESERVED_VFIFOS 0x8
/* enum: Turn VFIFO egress on/off. */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_VFIFO_EGRESS 0x9
/* enum: Find all VFIFOs attached to a given (ipi, epi) pair. */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_VFIFO_FIND_ALL 0xa
/* enum: Retrieve parameters for a single VFIFO */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_VFIFO_QUERY 0xb
/* enum: Enable/disable cut-through mode */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_SET_CUT_THROUGH 0xc
/* enum: Adjust switch configuration for testing purposes */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_SET_TEST_MODE 0xd
/* enum: Start or stop the thread which reads the ENG_EPI and NET_EPI VFIFO
 * XON/XOFF registers.
 */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_EPI_VFIFO_XONXOFF_READ_AGITATOR 0xe
/* enum: Create a common pool */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_COMMON_POOL_CREATE 0xf
/* enum: Destroy a common pool */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_COMMON_POOL_DESTROY 0x10
/* enum: Wipe out all switch configuration, optionally setting up the default
 * configuration.
 */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_CLEAR_CONFIGURATION 0x11
/* enum: Configure the switch arbiter settings. Currently just sets the net
 * mode.
 */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_CONFIGURE_ARBITER 0x12
/* enum: Make the current configuration ready to pass traffic. Programs FC
 * thresholds and configures pacer.
 */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_APPLY_CONFIGURATION 0x13
/* enum: Outputs all the common pool and vfifo configuration. */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_GET_CONFIGURATION 0x14
/* enum: Set up switch bypass (medford2 only) */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_CONFIGURE_RX_BYPASS 0x15
/* enum: Set port FastPD mode (Medford2 only) */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_CONFIGURE_FASTPD_MODE 0x16
/* enum: Get port FastPD mode (Medford2 only) */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_GET_FASTPD_MODE 0x17
/* enum: Start or stop the thread which periodically toggles the FastPD mode on
 * the given port (Medford2 only).
 */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR 0x18
/* enum: Start or stop the thread which periodically toggles drain on/off on
 * the given port.
 */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_CONFIGURE_MAC_DRAIN_TOGGLE_AGITATOR 0x19
/* enum: Start or stop the thread which periodically reconfigure the steer
 * thresh of FastPD-capable packets (Medford2 only).
 */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR 0x1a
/* enum: Enable (or disable) round robin rx balancing on the port (medford2
 * only)
 */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_SET_ROUND_ROBIN_RX_BALANCING 0x1b
/* enum: Start or stop the thread which periodically reprograms the net epi
 * arbiter (medford2 only)
 */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_CONFIGURE_NET_EPI_ARBITER_AGITATOR 0x1c
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_EFTEST_OP_RSVD_LEN 2
/* Delay between read iterations, microseconds. */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_DELAY_OFST 4
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_DELAY_LEN 4
/* Start or stop the MC thread. */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_OP_OFST 8
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_OP_LEN 4
/* enum: Start MC thread */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_OP_START 0x0
/* enum: Stop MC thread */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_OP_STOP 0x1
/* Datapath to configure: 0, 1. */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_DATAPATH_OFST 12
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_DATAPATH_LEN 4
/* Minimum limit of steering threshold */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_STEER_THRESH_MIN_OFST 16
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_STEER_THRESH_MIN_LEN 4
/* Maximum limit of steering threshold */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_STEER_THRESH_MAX_OFST 20
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_STEER_THRESH_MAX_LEN 4
/* Proportion of STEER_ALWAYS_BACK occurrence */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_RAND_ALWAYS_PROB_OFST 24
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_RAND_ALWAYS_PROB_LEN 4
/* Proportion of STEER_NEVER_BACK occurrence */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_RAND_NEVER_PROB_OFST 28
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_RAND_NEVER_PROB_LEN 4
/* Proportion of exponential distribution from the minimum limit */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_RAND_EXP_MIN_PROB_OFST 32
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_RAND_EXP_MIN_PROB_LEN 4
/* Proportion of exponential distribution from the maximum limit */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_RAND_EXP_MAX_PROB_OFST 36
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_RAND_EXP_MAX_PROB_LEN 4
/* Proportion of uniform distribution */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_RAND_UNIFORM_PROB_OFST 40
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_RAND_UNIFORM_PROB_LEN 4
/* 0 if receiving a legacy packet should reset the counter, 1 if not. */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_IGNORE_LEGACY_PACKETS_OFST 44
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR_IN_IGNORE_LEGACY_PACKETS_LEN 4

/* MC_CMD_EFTEST_EF100_SWITCH_COMMON_POOL_CREATE_IN msgrequest */
#define    MC_CMD_EFTEST_EF100_SWITCH_COMMON_POOL_CREATE_IN_LEN 28
/* identifies the test */
#define       MC_CMD_EFTEST_EF100_SWITCH_COMMON_POOL_CREATE_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_EF100_SWITCH_COMMON_POOL_CREATE_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_EF100_SWITCH_COMMON_POOL_CREATE_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_EF100_SWITCH_COMMON_POOL_CREATE_IN_EFTEST_OP_LEN 1
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_EF100_SWITCH_COMMON_POOL_CREATE_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_EF100_SWITCH_COMMON_POOL_CREATE_IN_EFTEST_OP_RSVD_LEN 2
/* Which common pool to create (0-15) */
#define       MC_CMD_EFTEST_EF100_SWITCH_COMMON_POOL_CREATE_IN_CP_ID_OFST 4
#define       MC_CMD_EFTEST_EF100_SWITCH_COMMON_POOL_CREATE_IN_CP_ID_LEN 4
/* enum: Firmware chooses a free ID */
#define          MC_CMD_EFTEST_EF100_SWITCH_COMMON_POOL_CREATE_IN_ANY -0x1
/* 1 = net_ipi, 2 = eng_ipi */
#define       MC_CMD_EFTEST_EF100_SWITCH_COMMON_POOL_CREATE_IN_IPI_SIDE_OFST 8
#define       MC_CMD_EFTEST_EF100_SWITCH_COMMON_POOL_CREATE_IN_IPI_SIDE_LEN 4
/* 0 to 3 */
#define       MC_CMD_EFTEST_EF100_SWITCH_COMMON_POOL_CREATE_IN_IPI_NUM_OFST 12
#define       MC_CMD_EFTEST_EF100_SWITCH_COMMON_POOL_CREATE_IN_IPI_NUM_LEN 4
/* 1 = net_epi, 2 = eng_epi */
#define       MC_CMD_EFTEST_EF100_SWITCH_COMMON_POOL_CREATE_IN_EPI_SIDE_OFST 16
#define       MC_CMD_EFTEST_EF100_SWITCH_COMMON_POOL_CREATE_IN_EPI_SIDE_LEN 4
/* 0 to 3 */
#define       MC_CMD_EFTEST_EF100_SWITCH_COMMON_POOL_CREATE_IN_EPI_NUM_OFST 20
#define       MC_CMD_EFTEST_EF100_SWITCH_COMMON_POOL_CREATE_IN_EPI_NUM_LEN 4
/* Number of buffers to allocate to this pool */
#define       MC_CMD_EFTEST_EF100_SWITCH_COMMON_POOL_CREATE_IN_NUM_BUFS_OFST 24
#define       MC_CMD_EFTEST_EF100_SWITCH_COMMON_POOL_CREATE_IN_NUM_BUFS_LEN 4

/* MC_CMD_EFTEST_EF100_SWITCH_COMMON_POOL_CREATE_OUT msgresponse */
#define    MC_CMD_EFTEST_EF100_SWITCH_COMMON_POOL_CREATE_OUT_LEN 4
/* Common pool ID for pool that was created */
#define       MC_CMD_EFTEST_EF100_SWITCH_COMMON_POOL_CREATE_OUT_CP_ID_OFST 0
#define       MC_CMD_EFTEST_EF100_SWITCH_COMMON_POOL_CREATE_OUT_CP_ID_LEN 4

/* MC_CMD_EFTEST_EF100_SWITCH_COMMON_POOL_DESTROY_IN msgrequest */
#define    MC_CMD_EFTEST_EF100_SWITCH_COMMON_POOL_DESTROY_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_EF100_SWITCH_COMMON_POOL_DESTROY_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_EF100_SWITCH_COMMON_POOL_DESTROY_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_EF100_SWITCH_COMMON_POOL_DESTROY_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_EF100_SWITCH_COMMON_POOL_DESTROY_IN_EFTEST_OP_LEN 1
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_EF100_SWITCH_COMMON_POOL_DESTROY_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_EF100_SWITCH_COMMON_POOL_DESTROY_IN_EFTEST_OP_RSVD_LEN 2
/* Which common pool to destroy (0-15) */
#define       MC_CMD_EFTEST_EF100_SWITCH_COMMON_POOL_DESTROY_IN_CP_ID_OFST 4
#define       MC_CMD_EFTEST_EF100_SWITCH_COMMON_POOL_DESTROY_IN_CP_ID_LEN 4

/* MC_CMD_EFTEST_EF100_SWITCH_CLEAR_CONFIGURATION_IN msgrequest */
#define    MC_CMD_EFTEST_EF100_SWITCH_CLEAR_CONFIGURATION_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_EF100_SWITCH_CLEAR_CONFIGURATION_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_EF100_SWITCH_CLEAR_CONFIGURATION_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_EF100_SWITCH_CLEAR_CONFIGURATION_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_EF100_SWITCH_CLEAR_CONFIGURATION_IN_EFTEST_OP_LEN 1
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_EF100_SWITCH_CLEAR_CONFIGURATION_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_EF100_SWITCH_CLEAR_CONFIGURATION_IN_EFTEST_OP_RSVD_LEN 2
/* Whether to return the switch to its default configuration */
#define       MC_CMD_EFTEST_EF100_SWITCH_CLEAR_CONFIGURATION_IN_RESTORE_DEFAULT_OFST 4
#define       MC_CMD_EFTEST_EF100_SWITCH_CLEAR_CONFIGURATION_IN_RESTORE_DEFAULT_LEN 4

/* MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_ARBITER_IN msgrequest */
#define    MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_ARBITER_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_ARBITER_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_ARBITER_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_ARBITER_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_ARBITER_IN_EFTEST_OP_LEN 1
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_ARBITER_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_ARBITER_IN_EFTEST_OP_RSVD_LEN 2
/* Net mode to program switch to */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_ARBITER_IN_NET_MODE_OFST 4
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_ARBITER_IN_NET_MODE_LEN 4
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_ARBITER_IN_NET_MODE_4x10G 0x0 /* enum */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_ARBITER_IN_NET_MODE_40G_2x10G 0x1 /* enum */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_ARBITER_IN_NET_MODE_2x40G 0x2 /* enum */

/* MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_IN msgrequest */
#define    MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_IN_EFTEST_OP_LEN 1
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_IN_EFTEST_OP_RSVD_LEN 2
/* How to return the data */
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_IN_OUTPUT_METHOD_OFST 4
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_IN_OUTPUT_METHOD_LEN 4
#define          MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_IN_OUTPUT_UART_ONLY 0x0 /* enum */
#define          MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_IN_OUTPUT_MCDI_ONLY 0x1 /* enum */
#define          MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_IN_OUTPUT_BOTH 0x2 /* enum */

/* MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_OUT msgresponse */
#define    MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_OUT_LEN 356
/* Is vFifo i enabled */
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_OUT_VF_ENA_LBN 0
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_OUT_VF_ENA_WIDTH 1
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_OUT_VF_ENA_NUM 128
/* vFifo i ipi side. 1 = net_ipi, 2 = eng_ipi */
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_OUT_VF_IPI_SIDE_LBN 128
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_OUT_VF_IPI_SIDE_WIDTH 2
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_OUT_VF_IPI_SIDE_NUM 128
/* vFifo i ingress num (0 to 3) */
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_OUT_VF_IPI_NUM_LBN 384
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_OUT_VF_IPI_NUM_WIDTH 2
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_OUT_VF_IPI_NUM_NUM 128
/* vFifo i epi side. 1 = net_epi, 2 = eng_epi */
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_OUT_VF_EPI_SIDE_LBN 640
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_OUT_VF_EPI_SIDE_WIDTH 2
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_OUT_VF_EPI_SIDE_NUM 128
/* vFifo i egress num (0 to 3) */
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_OUT_VF_EPI_NUM_LBN 896
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_OUT_VF_EPI_NUM_WIDTH 2
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_OUT_VF_EPI_NUM_NUM 128
/* vFifo i common pool id */
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_OUT_VF_CP_ID_LBN 1152
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_OUT_VF_CP_ID_WIDTH 4
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_OUT_VF_CP_ID_NUM 128
/* vFifo i priority */
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_OUT_VF_PRIO_LBN 1664
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_OUT_VF_PRIO_WIDTH 4
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_OUT_VF_PRIO_NUM 128
/* vFifo i priority shared */
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_OUT_VF_PRIO_SHARED_LBN 2176
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_OUT_VF_PRIO_SHARED_WIDTH 1
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_OUT_VF_PRIO_SHARED_NUM 128
/* vFifo i is ultra-low-latency */
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_OUT_VF_ULL_LBN 2304
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_OUT_VF_ULL_WIDTH 1
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_OUT_VF_ULL_NUM 128
/* Is common pool i enabled */
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_OUT_CP_ENA_LBN 2432
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_OUT_CP_ENA_WIDTH 1
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_OUT_CP_ENA_NUM 16
/* CP i ipi side. 1 = net_ipi, 2 = eng_ipi */
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_OUT_CP_IPI_SIDE_LBN 2448
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_OUT_CP_IPI_SIDE_WIDTH 2
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_OUT_CP_IPI_SIDE_NUM 16
/* CP i ipi num */
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_OUT_CP_IPI_NUM_LBN 2480
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_OUT_CP_IPI_NUM_WIDTH 2
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_OUT_CP_IPI_NUM_NUM 16
/* CP i epi side. 1 = net_epi, 2 = eng_epi */
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_OUT_CP_EPI_SIDE_LBN 2512
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_OUT_CP_EPI_SIDE_WIDTH 2
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_OUT_CP_EPI_SIDE_NUM 16
/* CP i epi num */
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_OUT_CP_EPI_NUM_LBN 2544
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_OUT_CP_EPI_NUM_WIDTH 2
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_OUT_CP_EPI_NUM_NUM 16
/* CP i number of buffers allocated */
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_OUT_CP_NUM_BUFS_OFST 322
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_OUT_CP_NUM_BUFS_LEN 2
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_OUT_CP_NUM_BUFS_NUM 16
/* CP i is for ULL */
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_OUT_CP_ULL_LBN 2832
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_OUT_CP_ULL_WIDTH 1
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_CONFIGURATION_OUT_CP_ULL_NUM 16

/* MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_RX_BYPASS_IN msgrequest */
#define    MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_RX_BYPASS_IN_LEN 48
/* identifies the test */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_RX_BYPASS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_RX_BYPASS_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_RX_BYPASS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_RX_BYPASS_IN_EFTEST_OP_LEN 1
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_RX_BYPASS_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_RX_BYPASS_IN_EFTEST_OP_RSVD_LEN 2
/* Enable channel 0 */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_RX_BYPASS_IN_CHN_ENABLE0_OFST 4
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_RX_BYPASS_IN_CHN_ENABLE0_LEN 4
/* Enable channel 1 */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_RX_BYPASS_IN_CHN_ENABLE1_OFST 8
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_RX_BYPASS_IN_CHN_ENABLE1_LEN 4
/* Channel 0 size is (256 >> DPWR_SHIFT0) */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_RX_BYPASS_IN_DPWR_SHIFT0_OFST 12
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_RX_BYPASS_IN_DPWR_SHIFT0_LEN 4
/* Channel 1 size is (256 >> DPWR_SHIFT1) */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_RX_BYPASS_IN_DPWR_SHIFT1_OFST 16
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_RX_BYPASS_IN_DPWR_SHIFT1_LEN 4
/* Channel 0 start address (in 32-byte words) in switch memory */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_RX_BYPASS_IN_MEM_START_ADDR0_OFST 20
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_RX_BYPASS_IN_MEM_START_ADDR0_LEN 4
/* Channel 1 start address (in 32-byte words) in switch memory */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_RX_BYPASS_IN_MEM_START_ADDR1_OFST 24
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_RX_BYPASS_IN_MEM_START_ADDR1_LEN 4
/* If set, use flow control settings from this mcdi call instead of the default
 */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_RX_BYPASS_IN_OVERRIDE_FLOW_CONTROL_OFST 28
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_RX_BYPASS_IN_OVERRIDE_FLOW_CONTROL_LEN 4
/* Fifo 0 level to assert XOFF (if OVERRIDE_FLOW_CONTROL is set) */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_RX_BYPASS_IN_XOFF_ASSERT_THRESH0_OFST 32
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_RX_BYPASS_IN_XOFF_ASSERT_THRESH0_LEN 4
/* Fifo 1 level to assert XOFF (if OVERRIDE_FLOW_CONTROL is set) */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_RX_BYPASS_IN_XOFF_ASSERT_THRESH1_OFST 36
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_RX_BYPASS_IN_XOFF_ASSERT_THRESH1_LEN 4
/* Fifo 0 level to deassert XOFF (if OVERRIDE_FLOW_CONTROL is set) */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_RX_BYPASS_IN_XOFF_DEASSERT_THRESH0_OFST 40
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_RX_BYPASS_IN_XOFF_DEASSERT_THRESH0_LEN 4
/* Fifo 1 level to deassert XOFF (if OVERRIDE_FLOW_CONTROL is set) */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_RX_BYPASS_IN_XOFF_DEASSERT_THRESH1_OFST 44
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_RX_BYPASS_IN_XOFF_DEASSERT_THRESH1_LEN 4

/* MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE msgrequest */
#define    MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_LEN 12
/* identifies the test */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_EFTEST_OP_LEN 1
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_EFTEST_OP_RSVD_LEN 2
/* Port to configure */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_PORT_OFST 4
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_PORT_LEN 4
/* Desired mode */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_MODE_OFST 8
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_MODE_LEN 4
/* enum: All packets to the SoftPD */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_FASTPD_MODE_SOFT_ALL 0x0
/* enum: All packets to the FastPD */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_FASTPD_MODE_FAST_ALL 0x1
/* enum: Supported packet types to the FastPD; everything else to the SoftPD */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE_FASTPD_MODE_FAST_SUPPORTED 0x2

/* MC_CMD_EFTEST_EF100_SWITCH_GET_FASTPD_MODE_IN msgrequest */
#define    MC_CMD_EFTEST_EF100_SWITCH_GET_FASTPD_MODE_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_FASTPD_MODE_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_FASTPD_MODE_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_FASTPD_MODE_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_FASTPD_MODE_IN_EFTEST_OP_LEN 1
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_FASTPD_MODE_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_FASTPD_MODE_IN_EFTEST_OP_RSVD_LEN 2
/* Port to configure */
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_FASTPD_MODE_IN_PORT_OFST 4
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_FASTPD_MODE_IN_PORT_LEN 4

/* MC_CMD_EFTEST_EF100_SWITCH_GET_FASTPD_MODE_OUT msgresponse */
#define    MC_CMD_EFTEST_EF100_SWITCH_GET_FASTPD_MODE_OUT_LEN 4
/* Current mode */
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_FASTPD_MODE_OUT_MODE_OFST 0
#define       MC_CMD_EFTEST_EF100_SWITCH_GET_FASTPD_MODE_OUT_MODE_LEN 4
/*            Enum values, see field(s): */
/*               MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_FASTPD_MODE/MODE */

/* MC_CMD_EFTEST_EF100_SWITCH_SET_ROUND_ROBIN_RX_BALANCING_IN msgrequest */
#define    MC_CMD_EFTEST_EF100_SWITCH_SET_ROUND_ROBIN_RX_BALANCING_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_EF100_SWITCH_SET_ROUND_ROBIN_RX_BALANCING_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_EF100_SWITCH_SET_ROUND_ROBIN_RX_BALANCING_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_EF100_SWITCH_SET_ROUND_ROBIN_RX_BALANCING_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_EF100_SWITCH_SET_ROUND_ROBIN_RX_BALANCING_IN_EFTEST_OP_LEN 1
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_EF100_SWITCH_SET_ROUND_ROBIN_RX_BALANCING_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_EF100_SWITCH_SET_ROUND_ROBIN_RX_BALANCING_IN_EFTEST_OP_RSVD_LEN 2
/* Enable or disable round robin balancing */
#define       MC_CMD_EFTEST_EF100_SWITCH_SET_ROUND_ROBIN_RX_BALANCING_IN_ENABLE_OFST 4
#define       MC_CMD_EFTEST_EF100_SWITCH_SET_ROUND_ROBIN_RX_BALANCING_IN_ENABLE_LEN 4

/* MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_NET_EPI_ARBITER_AGITATOR_IN msgrequest */
#define    MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_NET_EPI_ARBITER_AGITATOR_IN_LEN 16
/* identifies the test */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_NET_EPI_ARBITER_AGITATOR_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_NET_EPI_ARBITER_AGITATOR_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_NET_EPI_ARBITER_AGITATOR_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_NET_EPI_ARBITER_AGITATOR_IN_EFTEST_OP_LEN 1
/* enum: Check buffer state after a test */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_NET_EPI_ARBITER_AGITATOR_IN_BUFFER_CHECK 0x0
/* enum: Set a TXQ's target VFIFOs */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_NET_EPI_ARBITER_AGITATOR_IN_SET_TX_MAP 0x1
/* enum: Find needed vFIFO */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_NET_EPI_ARBITER_AGITATOR_IN_VFIFO_FIND 0x2
/* enum: Initialise and start a VFIFO */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_NET_EPI_ARBITER_AGITATOR_IN_VFIFO_SETUP 0x3
/* enum: Tear down a VFIFO */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_NET_EPI_ARBITER_AGITATOR_IN_VFIFO_TEARDOWN 0x4
/* enum: Repeatedly set up and tear down a VFIFO */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_NET_EPI_ARBITER_AGITATOR_IN_VFIFO_AGITATE 0x5
/* enum: Enable and disable inputs to the eng_epi arbiters */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_NET_EPI_ARBITER_AGITATOR_IN_ENG_EPI_VFIFO_ENABLE 0x6
/* enum: Start or stop the thread which toggles the inputs to the eng_epi
 * arbiters
 */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_NET_EPI_ARBITER_AGITATOR_IN_ENG_EPI_VFIFO_TOGGLE 0x7
/* enum: Ask the NIC which VFIFOs are reserved for testing purposes. */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_NET_EPI_ARBITER_AGITATOR_IN_GET_RESERVED_VFIFOS 0x8
/* enum: Turn VFIFO egress on/off. */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_NET_EPI_ARBITER_AGITATOR_IN_VFIFO_EGRESS 0x9
/* enum: Find all VFIFOs attached to a given (ipi, epi) pair. */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_NET_EPI_ARBITER_AGITATOR_IN_VFIFO_FIND_ALL 0xa
/* enum: Retrieve parameters for a single VFIFO */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_NET_EPI_ARBITER_AGITATOR_IN_VFIFO_QUERY 0xb
/* enum: Enable/disable cut-through mode */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_NET_EPI_ARBITER_AGITATOR_IN_SET_CUT_THROUGH 0xc
/* enum: Adjust switch configuration for testing purposes */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_NET_EPI_ARBITER_AGITATOR_IN_SET_TEST_MODE 0xd
/* enum: Start or stop the thread which reads the ENG_EPI and NET_EPI VFIFO
 * XON/XOFF registers.
 */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_NET_EPI_ARBITER_AGITATOR_IN_EPI_VFIFO_XONXOFF_READ_AGITATOR 0xe
/* enum: Create a common pool */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_NET_EPI_ARBITER_AGITATOR_IN_COMMON_POOL_CREATE 0xf
/* enum: Destroy a common pool */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_NET_EPI_ARBITER_AGITATOR_IN_COMMON_POOL_DESTROY 0x10
/* enum: Wipe out all switch configuration, optionally setting up the default
 * configuration.
 */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_NET_EPI_ARBITER_AGITATOR_IN_CLEAR_CONFIGURATION 0x11
/* enum: Configure the switch arbiter settings. Currently just sets the net
 * mode.
 */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_NET_EPI_ARBITER_AGITATOR_IN_CONFIGURE_ARBITER 0x12
/* enum: Make the current configuration ready to pass traffic. Programs FC
 * thresholds and configures pacer.
 */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_NET_EPI_ARBITER_AGITATOR_IN_APPLY_CONFIGURATION 0x13
/* enum: Outputs all the common pool and vfifo configuration. */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_NET_EPI_ARBITER_AGITATOR_IN_GET_CONFIGURATION 0x14
/* enum: Set up switch bypass (medford2 only) */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_NET_EPI_ARBITER_AGITATOR_IN_CONFIGURE_RX_BYPASS 0x15
/* enum: Set port FastPD mode (Medford2 only) */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_NET_EPI_ARBITER_AGITATOR_IN_CONFIGURE_FASTPD_MODE 0x16
/* enum: Get port FastPD mode (Medford2 only) */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_NET_EPI_ARBITER_AGITATOR_IN_GET_FASTPD_MODE 0x17
/* enum: Start or stop the thread which periodically toggles the FastPD mode on
 * the given port (Medford2 only).
 */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_NET_EPI_ARBITER_AGITATOR_IN_CONFIGURE_FASTPD_MODE_TOGGLE_AGITATOR 0x18
/* enum: Start or stop the thread which periodically toggles drain on/off on
 * the given port.
 */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_NET_EPI_ARBITER_AGITATOR_IN_CONFIGURE_MAC_DRAIN_TOGGLE_AGITATOR 0x19
/* enum: Start or stop the thread which periodically reconfigure the steer
 * thresh of FastPD-capable packets (Medford2 only).
 */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_NET_EPI_ARBITER_AGITATOR_IN_CONFIGURE_FASTPD_STEER_THRESH_AGITATOR 0x1a
/* enum: Enable (or disable) round robin rx balancing on the port (medford2
 * only)
 */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_NET_EPI_ARBITER_AGITATOR_IN_SET_ROUND_ROBIN_RX_BALANCING 0x1b
/* enum: Start or stop the thread which periodically reprograms the net epi
 * arbiter (medford2 only)
 */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_NET_EPI_ARBITER_AGITATOR_IN_CONFIGURE_NET_EPI_ARBITER_AGITATOR 0x1c
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_NET_EPI_ARBITER_AGITATOR_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_NET_EPI_ARBITER_AGITATOR_IN_EFTEST_OP_RSVD_LEN 2
/* Start or stop the MC thread. */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_NET_EPI_ARBITER_AGITATOR_IN_OP_OFST 4
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_NET_EPI_ARBITER_AGITATOR_IN_OP_LEN 4
/* enum: Start MC thread */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_NET_EPI_ARBITER_AGITATOR_IN_OP_START 0x0
/* enum: Stop MC thread */
#define          MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_NET_EPI_ARBITER_AGITATOR_IN_OP_STOP 0x1
/* Number of times to reprogram in a batch */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_NET_EPI_ARBITER_AGITATOR_IN_ITERATIONS_OFST 8
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_NET_EPI_ARBITER_AGITATOR_IN_ITERATIONS_LEN 4
/* Delay between batches, microseconds. */
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_NET_EPI_ARBITER_AGITATOR_IN_DELAY_OFST 12
#define       MC_CMD_EFTEST_EF100_SWITCH_CONFIGURE_NET_EPI_ARBITER_AGITATOR_IN_DELAY_LEN 4

/* MC_CMD_EFTEST_SFFF_IN msgrequest */
#define    MC_CMD_EFTEST_SFFF_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_SFFF_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_SFFF_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_SFFF_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_SFFF_IN_EFTEST_OP_LEN 1
/* enum: Allocate buffers for use by SFFF */
#define          MC_CMD_EFTEST_SFFF_IN_ALLOC_BUFS 0x0
/* enum: Free buffers allocated for use by SFFF */
#define          MC_CMD_EFTEST_SFFF_IN_FREE_BUFS 0x1
/* enum: Allocate a SFFF destination entry */
#define          MC_CMD_EFTEST_SFFF_IN_ALLOC_DEST 0x2
/* enum: Allocate a SFFF destination entry */
#define          MC_CMD_EFTEST_SFFF_IN_FREE_DEST 0x3
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_SFFF_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_SFFF_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_SFFF_OUT msgresponse */
#define    MC_CMD_EFTEST_SFFF_OUT_LEN 0

/* MC_CMD_EFTEST_SFFF_ALLOC_BUFS_IN msgrequest */
#define    MC_CMD_EFTEST_SFFF_ALLOC_BUFS_IN_LEN 12
/* Identifies the test */
#define       MC_CMD_EFTEST_SFFF_ALLOC_BUFS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_SFFF_ALLOC_BUFS_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_SFFF_ALLOC_BUFS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_SFFF_ALLOC_BUFS_IN_EFTEST_OP_LEN 1
/* Padding to align the arguments to 32 bits */
#define       MC_CMD_EFTEST_SFFF_ALLOC_BUFS_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_SFFF_ALLOC_BUFS_IN_EFTEST_OP_RSVD_LEN 2
/* Target TXDP, 0 or 1 */
#define       MC_CMD_EFTEST_SFFF_ALLOC_BUFS_IN_TXDP_OFST 4
#define       MC_CMD_EFTEST_SFFF_ALLOC_BUFS_IN_TXDP_LEN 4
/* The number of buffers to allocate */
#define       MC_CMD_EFTEST_SFFF_ALLOC_BUFS_IN_COUNT_OFST 8
#define       MC_CMD_EFTEST_SFFF_ALLOC_BUFS_IN_COUNT_LEN 4

/* MC_CMD_EFTEST_SFFF_ALLOC_BUFS_OUT msgresponse */
#define    MC_CMD_EFTEST_SFFF_ALLOC_BUFS_OUT_LEN 0

/* MC_CMD_EFTEST_SFFF_FREE_BUFS_IN msgrequest */
#define    MC_CMD_EFTEST_SFFF_FREE_BUFS_IN_LEN 12
/* Identifies the test */
#define       MC_CMD_EFTEST_SFFF_FREE_BUFS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_SFFF_FREE_BUFS_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_SFFF_FREE_BUFS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_SFFF_FREE_BUFS_IN_EFTEST_OP_LEN 1
/* Padding to align the arguments to 32 bits */
#define       MC_CMD_EFTEST_SFFF_FREE_BUFS_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_SFFF_FREE_BUFS_IN_EFTEST_OP_RSVD_LEN 2
/* Target TXDP, 0 or 1 */
#define       MC_CMD_EFTEST_SFFF_FREE_BUFS_IN_TXDP_OFST 4
#define       MC_CMD_EFTEST_SFFF_FREE_BUFS_IN_TXDP_LEN 4
/* The number of buffers to free */
#define       MC_CMD_EFTEST_SFFF_FREE_BUFS_IN_COUNT_OFST 8
#define       MC_CMD_EFTEST_SFFF_FREE_BUFS_IN_COUNT_LEN 4

/* MC_CMD_EFTEST_SFFF_FREE_BUFS_OUT msgresponse */
#define    MC_CMD_EFTEST_SFFF_FREE_BUFS_OUT_LEN 0

/* MC_CMD_EFTEST_SFFF_ALLOC_DEST_IN msgrequest */
#define    MC_CMD_EFTEST_SFFF_ALLOC_DEST_IN_LEN 20
/* Identifies the test */
#define       MC_CMD_EFTEST_SFFF_ALLOC_DEST_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_SFFF_ALLOC_DEST_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_SFFF_ALLOC_DEST_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_SFFF_ALLOC_DEST_IN_EFTEST_OP_LEN 1
/* Padding to align the arguments to 32 bits */
#define       MC_CMD_EFTEST_SFFF_ALLOC_DEST_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_SFFF_ALLOC_DEST_IN_EFTEST_OP_RSVD_LEN 2
/* Target TXDP, 0 or 1. */
#define       MC_CMD_EFTEST_SFFF_ALLOC_DEST_IN_TXDP_OFST 4
#define       MC_CMD_EFTEST_SFFF_ALLOC_DEST_IN_TXDP_LEN 4
/* The target port number. */
#define       MC_CMD_EFTEST_SFFF_ALLOC_DEST_IN_PORT_NUM_OFST 8
#define       MC_CMD_EFTEST_SFFF_ALLOC_DEST_IN_PORT_NUM_LEN 4
/* Various flags fields */
#define       MC_CMD_EFTEST_SFFF_ALLOC_DEST_IN_FLAGS_OFST 12
#define       MC_CMD_EFTEST_SFFF_ALLOC_DEST_IN_FLAGS_LEN 4
#define        MC_CMD_EFTEST_SFFF_ALLOC_DEST_IN_SEND_TO_MAC_OFST 12
#define        MC_CMD_EFTEST_SFFF_ALLOC_DEST_IN_SEND_TO_MAC_LBN 0
#define        MC_CMD_EFTEST_SFFF_ALLOC_DEST_IN_SEND_TO_MAC_WIDTH 1
#define        MC_CMD_EFTEST_SFFF_ALLOC_DEST_IN_SEND_TO_RX_OFST 12
#define        MC_CMD_EFTEST_SFFF_ALLOC_DEST_IN_SEND_TO_RX_LBN 1
#define        MC_CMD_EFTEST_SFFF_ALLOC_DEST_IN_SEND_TO_RX_WIDTH 1
/* The port ID associated with the v-adaptor which should contain this SFFF
 * destination.
 */
#define       MC_CMD_EFTEST_SFFF_ALLOC_DEST_IN_PORT_ID_OFST 16
#define       MC_CMD_EFTEST_SFFF_ALLOC_DEST_IN_PORT_ID_LEN 4

/* MC_CMD_EFTEST_SFFF_ALLOC_DEST_OUT msgresponse */
#define    MC_CMD_EFTEST_SFFF_ALLOC_DEST_OUT_LEN 4
/* Identifies the SFFF destination number. This is used in the RX_QUEUE field
 * in RX filters with RX_DEST set to RX_DEST_TX0 or RX_DEST_TX1. It is also
 * used in the FREE_DEST operation.
 */
#define       MC_CMD_EFTEST_SFFF_ALLOC_DEST_OUT_DEST_ID_OFST 0
#define       MC_CMD_EFTEST_SFFF_ALLOC_DEST_OUT_DEST_ID_LEN 4

/* MC_CMD_EFTEST_SFFF_FREE_DEST_IN msgrequest */
#define    MC_CMD_EFTEST_SFFF_FREE_DEST_IN_LEN 12
/* Identifies the test */
#define       MC_CMD_EFTEST_SFFF_FREE_DEST_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_SFFF_FREE_DEST_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_SFFF_FREE_DEST_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_SFFF_FREE_DEST_IN_EFTEST_OP_LEN 1
/* Padding to align the arguments to 32 bits */
#define       MC_CMD_EFTEST_SFFF_FREE_DEST_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_SFFF_FREE_DEST_IN_EFTEST_OP_RSVD_LEN 2
/* Target TXDP, 0 or 1. */
#define       MC_CMD_EFTEST_SFFF_FREE_DEST_IN_TXDP_OFST 4
#define       MC_CMD_EFTEST_SFFF_FREE_DEST_IN_TXDP_LEN 4
/* The SFFF destination number returned by the ALLOC_DEST operation. */
#define       MC_CMD_EFTEST_SFFF_FREE_DEST_IN_DEST_ID_OFST 8
#define       MC_CMD_EFTEST_SFFF_FREE_DEST_IN_DEST_ID_LEN 4

/* MC_CMD_EFTEST_SFFF_FREE_DEST_OUT msgresponse */
#define    MC_CMD_EFTEST_SFFF_FREE_DEST_OUT_LEN 0

/* MC_CMD_EFTEST_OTP_NVRAM_IN msgrequest */
#define    MC_CMD_EFTEST_OTP_NVRAM_IN_LENMIN 12
#define    MC_CMD_EFTEST_OTP_NVRAM_IN_LENMAX 252
#define    MC_CMD_EFTEST_OTP_NVRAM_IN_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_OTP_NVRAM_IN_LEN(num) (12+4*(num))
#define    MC_CMD_EFTEST_OTP_NVRAM_IN_DATA_NUM(len) (((len)-12)/4)
/* identifies the test */
#define       MC_CMD_EFTEST_OTP_NVRAM_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_OTP_NVRAM_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_OTP_NVRAM_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_OTP_NVRAM_IN_EFTEST_OP_LEN 1
/* enum: Read data as bytes from specified BIT address */
#define          MC_CMD_EFTEST_OTP_NVRAM_IN_READ_BYTES 0x0
/* enum: Write data provided, starting at BIT address specified */
#define          MC_CMD_EFTEST_OTP_NVRAM_IN_WRITE_BITS 0x1
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_OTP_NVRAM_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_OTP_NVRAM_IN_EFTEST_OP_RSVD_LEN 2
/* Bit address of operation */
#define       MC_CMD_EFTEST_OTP_NVRAM_IN_ADDR_OFST 4
#define       MC_CMD_EFTEST_OTP_NVRAM_IN_ADDR_LEN 4
/* number of bytes to read or write */
#define       MC_CMD_EFTEST_OTP_NVRAM_IN_COUNT_OFST 8
#define       MC_CMD_EFTEST_OTP_NVRAM_IN_COUNT_LEN 4
/* data to write (for WRITE_BITS) */
#define       MC_CMD_EFTEST_OTP_NVRAM_IN_DATA_OFST 12
#define       MC_CMD_EFTEST_OTP_NVRAM_IN_DATA_LEN 4
#define       MC_CMD_EFTEST_OTP_NVRAM_IN_DATA_MINNUM 0
#define       MC_CMD_EFTEST_OTP_NVRAM_IN_DATA_MAXNUM 60
#define       MC_CMD_EFTEST_OTP_NVRAM_IN_DATA_MAXNUM_MCDI2 252

/* MC_CMD_EFTEST_OTP_NVRAM_OUT msgresponse */
#define    MC_CMD_EFTEST_OTP_NVRAM_OUT_LENMIN 0
#define    MC_CMD_EFTEST_OTP_NVRAM_OUT_LENMAX 252
#define    MC_CMD_EFTEST_OTP_NVRAM_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_OTP_NVRAM_OUT_LEN(num) (0+4*(num))
#define    MC_CMD_EFTEST_OTP_NVRAM_OUT_DATA_NUM(len) (((len)-0)/4)
/* data read (for READ_BYTES) */
#define       MC_CMD_EFTEST_OTP_NVRAM_OUT_DATA_OFST 0
#define       MC_CMD_EFTEST_OTP_NVRAM_OUT_DATA_LEN 4
#define       MC_CMD_EFTEST_OTP_NVRAM_OUT_DATA_MINNUM 0
#define       MC_CMD_EFTEST_OTP_NVRAM_OUT_DATA_MAXNUM 63
#define       MC_CMD_EFTEST_OTP_NVRAM_OUT_DATA_MAXNUM_MCDI2 255

/* MC_CMD_EFTEST_XIP_IN msgrequest */
#define    MC_CMD_EFTEST_XIP_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_XIP_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_XIP_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_XIP_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_XIP_IN_EFTEST_OP_LEN 1
/* enum: Check we can run a small fragment of XIP code */
#define          MC_CMD_EFTEST_XIP_IN_XIP_TRIVIAL 0x0
/* enum: Check handling of jumps at the end of blocks */
#define          MC_CMD_EFTEST_XIP_IN_XIP_END_BLOCK_JUMP 0x1
/* enum: Check that running a small piece of code with correct CMAC and auth on
 * works
 */
#define          MC_CMD_EFTEST_XIP_IN_XIP_TRIVIAL_AUTHGOOD 0x2
/* enum: Check that running a small piece of code with incorrect CMAC and auth
 * on fails as expected
 */
#define          MC_CMD_EFTEST_XIP_IN_XIP_TRIVIAL_AUTHBAD 0x3
/* enum: Test CMAC calculation in DMA mode */
#define          MC_CMD_EFTEST_XIP_IN_DMA_CMAC_TEST 0x4
/* enum: Test CMAC calculation in FW mode */
#define          MC_CMD_EFTEST_XIP_IN_FW_CMAC_TEST 0x5
/* enum: Test CMAC calculation in DMA mode using NIST test vector rather than
 * CMAC calculated by our tools
 */
#define          MC_CMD_EFTEST_XIP_IN_DMA_NIST_CMAC_TEST 0x6
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_XIP_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_XIP_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_XIP_DMA_CMAC_IN msgrequest */
#define    MC_CMD_EFTEST_XIP_DMA_CMAC_IN_LEN 12
/* identifies the test */
#define       MC_CMD_EFTEST_XIP_DMA_CMAC_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_XIP_DMA_CMAC_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_XIP_DMA_CMAC_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_XIP_DMA_CMAC_IN_EFTEST_OP_LEN 1
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_XIP_DMA_CMAC_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_XIP_DMA_CMAC_IN_EFTEST_OP_RSVD_LEN 2
/* Key length to use */
#define       MC_CMD_EFTEST_XIP_DMA_CMAC_IN_KEYLEN_OFST 4
#define       MC_CMD_EFTEST_XIP_DMA_CMAC_IN_KEYLEN_LEN 4
/* size of data to CMAC */
#define       MC_CMD_EFTEST_XIP_DMA_CMAC_IN_BLOCKSIZE_OFST 8
#define       MC_CMD_EFTEST_XIP_DMA_CMAC_IN_BLOCKSIZE_LEN 4

/* MC_CMD_EFTEST_XIP_OUT msgresponse */
#define    MC_CMD_EFTEST_XIP_OUT_LEN 0

/* MC_CMD_EFTEST_VI_ALLOC_IN msgrequest */
#define    MC_CMD_EFTEST_VI_ALLOC_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_VI_ALLOC_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_VI_ALLOC_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_VI_ALLOC_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_VI_ALLOC_IN_EFTEST_OP_LEN 1
/* enum: Configure VI allocation */
#define          MC_CMD_EFTEST_VI_ALLOC_IN_VI_ALLOC_CONFIGURE 0x0
/* enum: Restore VI allocation */
#define          MC_CMD_EFTEST_VI_ALLOC_IN_VI_ALLOC_RESTORE 0x1
/* align the arguments to 32 bits. */
#define       MC_CMD_EFTEST_VI_ALLOC_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_VI_ALLOC_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_VI_ALLOC_CONFIGURE_IN msgrequest */
#define    MC_CMD_EFTEST_VI_ALLOC_CONFIGURE_IN_LEN 20
/* identifies the test */
#define       MC_CMD_EFTEST_VI_ALLOC_CONFIGURE_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_VI_ALLOC_CONFIGURE_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_VI_ALLOC_CONFIGURE_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_VI_ALLOC_CONFIGURE_IN_EFTEST_OP_LEN 1
/* enum: Configure VI allocation */
#define          MC_CMD_EFTEST_VI_ALLOC_CONFIGURE_IN_VI_ALLOC_CONFIGURE 0x0
/* enum: Restore VI allocation */
#define          MC_CMD_EFTEST_VI_ALLOC_CONFIGURE_IN_VI_ALLOC_RESTORE 0x1
/* align the arguments to 32 bits. */
#define       MC_CMD_EFTEST_VI_ALLOC_CONFIGURE_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_VI_ALLOC_CONFIGURE_IN_EFTEST_OP_RSVD_LEN 2
/* The port number to modify. */
#define       MC_CMD_EFTEST_VI_ALLOC_CONFIGURE_IN_PORT_NUM_OFST 4
#define       MC_CMD_EFTEST_VI_ALLOC_CONFIGURE_IN_PORT_NUM_LEN 4
/* The new base VI number for the port. */
#define       MC_CMD_EFTEST_VI_ALLOC_CONFIGURE_IN_VI_BASE_OFST 8
#define       MC_CMD_EFTEST_VI_ALLOC_CONFIGURE_IN_VI_BASE_LEN 4
/* The number of VIs associated with the port. */
#define       MC_CMD_EFTEST_VI_ALLOC_CONFIGURE_IN_VI_COUNT_OFST 12
#define       MC_CMD_EFTEST_VI_ALLOC_CONFIGURE_IN_VI_COUNT_LEN 4
/* The shift applied to VI indexes. */
#define       MC_CMD_EFTEST_VI_ALLOC_CONFIGURE_IN_VI_SHIFT_OFST 16
#define       MC_CMD_EFTEST_VI_ALLOC_CONFIGURE_IN_VI_SHIFT_LEN 4

/* MC_CMD_EFTEST_VI_ALLOC_RESTORE_IN msgrequest */
#define    MC_CMD_EFTEST_VI_ALLOC_RESTORE_IN_LEN 8
/* The port number to restore. Set to 0xffffffff for all ports. */
#define       MC_CMD_EFTEST_VI_ALLOC_RESTORE_IN_PORT_NUM_OFST 4
#define       MC_CMD_EFTEST_VI_ALLOC_RESTORE_IN_PORT_NUM_LEN 4

/* MC_CMD_EFTEST_VI_ALLOC_OUT msgresponse */
#define    MC_CMD_EFTEST_VI_ALLOC_OUT_LEN 0

/* MC_CMD_EFTEST_CCOM_IN msgrequest */
#define    MC_CMD_EFTEST_CCOM_IN_LEN 2
/* identifies the test */
#define       MC_CMD_EFTEST_CCOM_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_CCOM_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_CCOM_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_CCOM_IN_EFTEST_OP_LEN 1
/* enum: Walking ones test across all CCOM outputs */
#define          MC_CMD_EFTEST_CCOM_IN_CCOM_MANUAL 0x0

/* MC_CMD_EFTEST_CCOM_OUT msgresponse */
#define    MC_CMD_EFTEST_CCOM_OUT_LEN 0

/* MC_CMD_EFTEST_EVB msgrequest */
#define    MC_CMD_EFTEST_EVB_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_EVB_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_EVB_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_EVB_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_EVB_EFTEST_OP_LEN 1
/* enum: Attempt to destroy everything downstream of an evb port, then unassign
 * it
 */
#define          MC_CMD_EFTEST_EVB_EVB_PORT_RESET 0x0
/* enum: As per EVB_PORT_RESET, but each free/unassign is performed as the
 * owner of the object in question
 */
#define          MC_CMD_EFTEST_EVB_EVB_PORT_RESET_AS_OWNER 0x1
/* enum: Create the default vSwitch on a pport */
#define          MC_CMD_EFTEST_EVB_EVB_PORT_CREATE_DEFAULT_VSWITCH 0x2
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_EVB_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_EVB_EFTEST_OP_RSVD_LEN 2
/* The port ID associated to be reset */
#define       MC_CMD_EFTEST_EVB_PORT_ID_OFST 4
#define       MC_CMD_EFTEST_EVB_PORT_ID_LEN 4

/* MC_CMD_EFTEST_EVB_OUT msgresponse */
#define    MC_CMD_EFTEST_EVB_OUT_LEN 0

/* MC_CMD_EFTEST_EF100_NET_EPI_FLOW_CTL_IN msgrequest */
#define    MC_CMD_EFTEST_EF100_NET_EPI_FLOW_CTL_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_EF100_NET_EPI_FLOW_CTL_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_EF100_NET_EPI_FLOW_CTL_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_EF100_NET_EPI_FLOW_CTL_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_EF100_NET_EPI_FLOW_CTL_IN_EFTEST_OP_LEN 1
/* enum: Enable all VFIFOs on network egress port interface. */
#define          MC_CMD_EFTEST_EF100_NET_EPI_FLOW_CTL_IN_XON 0x0
/* enum: Disable all VFIFOs on network egress port interface. */
#define          MC_CMD_EFTEST_EF100_NET_EPI_FLOW_CTL_IN_XOFF 0x1
/* enum: Return all VFIFOs on network egress port interface to normal
 * operation.
 */
#define          MC_CMD_EFTEST_EF100_NET_EPI_FLOW_CTL_IN_NORMAL 0x2
/* align the arguments to 32 bits. */
#define       MC_CMD_EFTEST_EF100_NET_EPI_FLOW_CTL_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_EF100_NET_EPI_FLOW_CTL_IN_EFTEST_OP_RSVD_LEN 2
/* The external port number of network egress port interface to modify. */
#define       MC_CMD_EFTEST_EF100_NET_EPI_FLOW_CTL_IN_PORT_NUM_OFST 4
#define       MC_CMD_EFTEST_EF100_NET_EPI_FLOW_CTL_IN_PORT_NUM_LEN 4

/* MC_CMD_EFTEST_EF100_NET_EPI_FLOW_CTL_OUT msgresponse */
#define    MC_CMD_EFTEST_EF100_NET_EPI_FLOW_CTL_OUT_LEN 0

/* MC_CMD_EFTEST_BUG41963_IN msgrequest */
#define    MC_CMD_EFTEST_BUG41963_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_BUG41963_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_BUG41963_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_BUG41963_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_BUG41963_IN_EFTEST_OP_LEN 1
/* enum: Run the directed test */
#define          MC_CMD_EFTEST_BUG41963_IN_OP_RUN 0x0
/* align the arguments to 32 bits. */
#define       MC_CMD_EFTEST_BUG41963_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_BUG41963_IN_EFTEST_OP_RSVD_LEN 2
/* Flags to control which operations to perform */
#define       MC_CMD_EFTEST_BUG41963_IN_FLAGS_OFST 4
#define       MC_CMD_EFTEST_BUG41963_IN_FLAGS_LEN 4
#define        MC_CMD_EFTEST_BUG41963_IN_IRQ_SCREAM_OFST 4
#define        MC_CMD_EFTEST_BUG41963_IN_IRQ_SCREAM_LBN 0
#define        MC_CMD_EFTEST_BUG41963_IN_IRQ_SCREAM_WIDTH 1
#define        MC_CMD_EFTEST_BUG41963_IN_IRQ_DISABLE_OFST 4
#define        MC_CMD_EFTEST_BUG41963_IN_IRQ_DISABLE_LBN 1
#define        MC_CMD_EFTEST_BUG41963_IN_IRQ_DISABLE_WIDTH 1
#define        MC_CMD_EFTEST_BUG41963_IN_WDOG_DISABLE_OFST 4
#define        MC_CMD_EFTEST_BUG41963_IN_WDOG_DISABLE_LBN 2
#define        MC_CMD_EFTEST_BUG41963_IN_WDOG_DISABLE_WIDTH 1
#define        MC_CMD_EFTEST_BUG41963_IN_LOG_C0_EPC_OFST 4
#define        MC_CMD_EFTEST_BUG41963_IN_LOG_C0_EPC_LBN 3
#define        MC_CMD_EFTEST_BUG41963_IN_LOG_C0_EPC_WIDTH 1
#define        MC_CMD_EFTEST_BUG41963_IN_SPIN_MODE_OFST 4
#define        MC_CMD_EFTEST_BUG41963_IN_SPIN_MODE_LBN 8
#define        MC_CMD_EFTEST_BUG41963_IN_SPIN_MODE_WIDTH 8

/* MC_CMD_EFTEST_BUG41963_OUT msgresponse */
#define    MC_CMD_EFTEST_BUG41963_OUT_LEN 0

/* MC_CMD_EFTEST_HWPKTGEN_INIT_IN msgrequest */
#define    MC_CMD_EFTEST_HWPKTGEN_INIT_IN_LEN 12
/* identifies the test */
#define       MC_CMD_EFTEST_HWPKTGEN_INIT_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_HWPKTGEN_INIT_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_HWPKTGEN_INIT_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_HWPKTGEN_INIT_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_HWPKTGEN_INIT_IN_INIT 0x0 /* enum */
/* align the arguments to 32 bits. */
#define       MC_CMD_EFTEST_HWPKTGEN_INIT_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_HWPKTGEN_INIT_IN_EFTEST_OP_RSVD_LEN 2
/* Generator instance to use */
#define       MC_CMD_EFTEST_HWPKTGEN_INIT_IN_ID_OFST 4
#define       MC_CMD_EFTEST_HWPKTGEN_INIT_IN_ID_LEN 4
/* Number of bytes to clear the control vectors for */
#define       MC_CMD_EFTEST_HWPKTGEN_INIT_IN_DATA_SIZE_OFST 8
#define       MC_CMD_EFTEST_HWPKTGEN_INIT_IN_DATA_SIZE_LEN 4

/* MC_CMD_EFTEST_HWPKTGEN_INIT_OUT msgresponse */
#define    MC_CMD_EFTEST_HWPKTGEN_INIT_OUT_LEN 0

/* MC_CMD_EFTEST_HWPKTGEN_CREATE_PACKET_IN msgrequest */
#define    MC_CMD_EFTEST_HWPKTGEN_CREATE_PACKET_IN_LEN 20
/* identifies the test */
#define       MC_CMD_EFTEST_HWPKTGEN_CREATE_PACKET_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_HWPKTGEN_CREATE_PACKET_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_HWPKTGEN_CREATE_PACKET_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_HWPKTGEN_CREATE_PACKET_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_HWPKTGEN_CREATE_PACKET_IN_CREATE_PACKET 0x1 /* enum */
/* align the arguments to 32 bits. */
#define       MC_CMD_EFTEST_HWPKTGEN_CREATE_PACKET_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_HWPKTGEN_CREATE_PACKET_IN_EFTEST_OP_RSVD_LEN 2
/* Generator instance to use */
#define       MC_CMD_EFTEST_HWPKTGEN_CREATE_PACKET_IN_ID_OFST 4
#define       MC_CMD_EFTEST_HWPKTGEN_CREATE_PACKET_IN_ID_LEN 4
/* Byte offset of start of packet. Must be multiple of 16/32 for 10G/40G. */
#define       MC_CMD_EFTEST_HWPKTGEN_CREATE_PACKET_IN_OFFSET_OFST 8
#define       MC_CMD_EFTEST_HWPKTGEN_CREATE_PACKET_IN_OFFSET_LEN 4
/* Length of packet in bytes */
#define       MC_CMD_EFTEST_HWPKTGEN_CREATE_PACKET_IN_LENGTH_OFST 12
#define       MC_CMD_EFTEST_HWPKTGEN_CREATE_PACKET_IN_LENGTH_LEN 4
/* Error flags for packet */
#define       MC_CMD_EFTEST_HWPKTGEN_CREATE_PACKET_IN_ERRORS_OFST 16
#define       MC_CMD_EFTEST_HWPKTGEN_CREATE_PACKET_IN_ERRORS_LEN 4

/* MC_CMD_EFTEST_HWPKTGEN_CREATE_PACKET_OUT msgresponse */
#define    MC_CMD_EFTEST_HWPKTGEN_CREATE_PACKET_OUT_LEN 0

/* MC_CMD_EFTEST_HWPKTGEN_EDIT_PACKET_IN msgrequest */
#define    MC_CMD_EFTEST_HWPKTGEN_EDIT_PACKET_IN_LEN 144
/* identifies the test */
#define       MC_CMD_EFTEST_HWPKTGEN_EDIT_PACKET_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_HWPKTGEN_EDIT_PACKET_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_HWPKTGEN_EDIT_PACKET_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_HWPKTGEN_EDIT_PACKET_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_HWPKTGEN_EDIT_PACKET_IN_EDIT_PACKET 0x2 /* enum */
/* align the arguments to 32 bits. */
#define       MC_CMD_EFTEST_HWPKTGEN_EDIT_PACKET_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_HWPKTGEN_EDIT_PACKET_IN_EFTEST_OP_RSVD_LEN 2
/* Generator instance to use */
#define       MC_CMD_EFTEST_HWPKTGEN_EDIT_PACKET_IN_ID_OFST 4
#define       MC_CMD_EFTEST_HWPKTGEN_EDIT_PACKET_IN_ID_LEN 4
/* Byte offset of start of edit. Must be multiple of 4 */
#define       MC_CMD_EFTEST_HWPKTGEN_EDIT_PACKET_IN_OFFSET_OFST 8
#define       MC_CMD_EFTEST_HWPKTGEN_EDIT_PACKET_IN_OFFSET_LEN 4
/* Length of edit in bytes (max 128). Must be a multiple of 4 */
#define       MC_CMD_EFTEST_HWPKTGEN_EDIT_PACKET_IN_LENGTH_OFST 12
#define       MC_CMD_EFTEST_HWPKTGEN_EDIT_PACKET_IN_LENGTH_LEN 4
/* New packet data */
#define       MC_CMD_EFTEST_HWPKTGEN_EDIT_PACKET_IN_DATA_OFST 16
#define       MC_CMD_EFTEST_HWPKTGEN_EDIT_PACKET_IN_DATA_LEN 128

/* MC_CMD_EFTEST_HWPKTGEN_EDIT_PACKET_OUT msgresponse */
#define    MC_CMD_EFTEST_HWPKTGEN_EDIT_PACKET_OUT_LEN 0

/* MC_CMD_EFTEST_HWPKTGEN_START_IN msgrequest */
#define    MC_CMD_EFTEST_HWPKTGEN_START_IN_LEN 20
/* identifies the test */
#define       MC_CMD_EFTEST_HWPKTGEN_START_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_HWPKTGEN_START_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_HWPKTGEN_START_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_HWPKTGEN_START_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_HWPKTGEN_START_IN_START 0x3 /* enum */
/* align the arguments to 32 bits. */
#define       MC_CMD_EFTEST_HWPKTGEN_START_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_HWPKTGEN_START_IN_EFTEST_OP_RSVD_LEN 2
/* Generator instance to use */
#define       MC_CMD_EFTEST_HWPKTGEN_START_IN_ID_OFST 4
#define       MC_CMD_EFTEST_HWPKTGEN_START_IN_ID_LEN 4
/* Number of bytes of data to include in loop. Must be multiple of 16/32 for
 * 10G/40G.
 */
#define       MC_CMD_EFTEST_HWPKTGEN_START_IN_DATA_SIZE_OFST 8
#define       MC_CMD_EFTEST_HWPKTGEN_START_IN_DATA_SIZE_LEN 4
/* Number of times to loop. */
#define       MC_CMD_EFTEST_HWPKTGEN_START_IN_FRAME_COUNT_OFST 12
#define       MC_CMD_EFTEST_HWPKTGEN_START_IN_FRAME_COUNT_LEN 4
/* Data injection rate (0=1x, 1=1/2x, 2=1/4x switch clock) */
#define       MC_CMD_EFTEST_HWPKTGEN_START_IN_SAMPLING_RATE_OFST 16
#define       MC_CMD_EFTEST_HWPKTGEN_START_IN_SAMPLING_RATE_LEN 4

/* MC_CMD_EFTEST_HWPKTGEN_START_OUT msgresponse */
#define    MC_CMD_EFTEST_HWPKTGEN_START_OUT_LEN 0

/* MC_CMD_EFTEST_HWPKTGEN_POLL_IN msgrequest */
#define    MC_CMD_EFTEST_HWPKTGEN_POLL_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_HWPKTGEN_POLL_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_HWPKTGEN_POLL_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_HWPKTGEN_POLL_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_HWPKTGEN_POLL_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_HWPKTGEN_POLL_IN_POLL 0x4 /* enum */
/* align the arguments to 32 bits. */
#define       MC_CMD_EFTEST_HWPKTGEN_POLL_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_HWPKTGEN_POLL_IN_EFTEST_OP_RSVD_LEN 2
/* Generator instance to use */
#define       MC_CMD_EFTEST_HWPKTGEN_POLL_IN_ID_OFST 4
#define       MC_CMD_EFTEST_HWPKTGEN_POLL_IN_ID_LEN 4

/* MC_CMD_EFTEST_HWPKTGEN_POLL_OUT msgresponse */
#define    MC_CMD_EFTEST_HWPKTGEN_POLL_OUT_LEN 4
/* Number of times left to loop */
#define       MC_CMD_EFTEST_HWPKTGEN_POLL_OUT_REMAINING_COUNT_OFST 0
#define       MC_CMD_EFTEST_HWPKTGEN_POLL_OUT_REMAINING_COUNT_LEN 4

/* MC_CMD_EFTEST_HWPKTGEN_STOP_IN msgrequest */
#define    MC_CMD_EFTEST_HWPKTGEN_STOP_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_HWPKTGEN_STOP_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_HWPKTGEN_STOP_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_HWPKTGEN_STOP_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_HWPKTGEN_STOP_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_HWPKTGEN_STOP_IN_STOP 0x5 /* enum */
/* align the arguments to 32 bits. */
#define       MC_CMD_EFTEST_HWPKTGEN_STOP_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_HWPKTGEN_STOP_IN_EFTEST_OP_RSVD_LEN 2
/* Generator instance to use */
#define       MC_CMD_EFTEST_HWPKTGEN_STOP_IN_ID_OFST 4
#define       MC_CMD_EFTEST_HWPKTGEN_STOP_IN_ID_LEN 4

/* MC_CMD_EFTEST_HWPKTGEN_STOP_OUT msgresponse */
#define    MC_CMD_EFTEST_HWPKTGEN_STOP_OUT_LEN 0

/* MC_CMD_EFTEST_HWPKTGEN_EDIT_CONTROL_IN msgrequest */
#define    MC_CMD_EFTEST_HWPKTGEN_EDIT_CONTROL_IN_LEN 20
/* identifies the test */
#define       MC_CMD_EFTEST_HWPKTGEN_EDIT_CONTROL_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_HWPKTGEN_EDIT_CONTROL_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_HWPKTGEN_EDIT_CONTROL_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_HWPKTGEN_EDIT_CONTROL_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_HWPKTGEN_EDIT_CONTROL_IN_EDIT_CONTROL 0x6 /* enum */
/* align the arguments to 32 bits. */
#define       MC_CMD_EFTEST_HWPKTGEN_EDIT_CONTROL_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_HWPKTGEN_EDIT_CONTROL_IN_EFTEST_OP_RSVD_LEN 2
/* Generator instance to use */
#define       MC_CMD_EFTEST_HWPKTGEN_EDIT_CONTROL_IN_ID_OFST 4
#define       MC_CMD_EFTEST_HWPKTGEN_EDIT_CONTROL_IN_ID_LEN 4
/* First control word offset */
#define       MC_CMD_EFTEST_HWPKTGEN_EDIT_CONTROL_IN_OFFSET_OFST 8
#define       MC_CMD_EFTEST_HWPKTGEN_EDIT_CONTROL_IN_OFFSET_LEN 4
/* Number of words to edit */
#define       MC_CMD_EFTEST_HWPKTGEN_EDIT_CONTROL_IN_LENGTH_OFST 12
#define       MC_CMD_EFTEST_HWPKTGEN_EDIT_CONTROL_IN_LENGTH_LEN 4
/* Word value to set */
#define       MC_CMD_EFTEST_HWPKTGEN_EDIT_CONTROL_IN_VALUE_OFST 16
#define       MC_CMD_EFTEST_HWPKTGEN_EDIT_CONTROL_IN_VALUE_LEN 4

/* MC_CMD_EFTEST_HWPKTGEN_EDIT_CONTROL_OUT msgresponse */
#define    MC_CMD_EFTEST_HWPKTGEN_EDIT_CONTROL_OUT_LEN 0

/* MC_CMD_EFTEST_JTAG_MBIST_IN msgrequest */
#define    MC_CMD_EFTEST_JTAG_MBIST_IN_LEN 2
/* identifies the test */
#define       MC_CMD_EFTEST_JTAG_MBIST_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_JTAG_MBIST_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_JTAG_MBIST_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_JTAG_MBIST_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_JTAG_MBIST_IN_MBIST 0x0 /* enum */

/* MC_CMD_EFTEST_JTAG_MBIST_OUT msgresponse */
#define    MC_CMD_EFTEST_JTAG_MBIST_OUT_LEN 4
/* Test result (0 = success) */
#define       MC_CMD_EFTEST_JTAG_MBIST_OUT_RESULT_OFST 0
#define       MC_CMD_EFTEST_JTAG_MBIST_OUT_RESULT_LEN 4

/* MC_CMD_EFTEST_JTAG_TAP_IN msgrequest */
#define    MC_CMD_EFTEST_JTAG_TAP_IN_LEN 2
/* identifies the test */
#define       MC_CMD_EFTEST_JTAG_TAP_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_JTAG_TAP_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_JTAG_TAP_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_JTAG_TAP_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_JTAG_TAP_IN_TAP 0x1 /* enum */

/* MC_CMD_EFTEST_JTAG_TAP_OUT msgresponse */
#define    MC_CMD_EFTEST_JTAG_TAP_OUT_LEN 8
/* Test result (0 = success) */
#define       MC_CMD_EFTEST_JTAG_TAP_OUT_RESULT_OFST 0
#define       MC_CMD_EFTEST_JTAG_TAP_OUT_RESULT_LEN 4
/* Instruction tapped out */
#define       MC_CMD_EFTEST_JTAG_TAP_OUT_VALUE_OFST 4
#define       MC_CMD_EFTEST_JTAG_TAP_OUT_VALUE_LEN 4

/* MC_CMD_EFTEST_PACER_IN msgrequest */
#define    MC_CMD_EFTEST_PACER_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_PACER_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_PACER_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_PACER_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_PACER_IN_EFTEST_OP_LEN 1
/* enum: Set and/or get the pacer parameters */
#define          MC_CMD_EFTEST_PACER_IN_ADJUST_PARAMS 0x0
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_PACER_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_PACER_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_PACER_OUT msgresponse */
#define    MC_CMD_EFTEST_PACER_OUT_LEN 0

/* MC_CMD_EFTEST_PACER_ADJUST_PARAMS_IN msgrequest */
#define    MC_CMD_EFTEST_PACER_ADJUST_PARAMS_IN_LEN 24
/* identifies the test */
#define       MC_CMD_EFTEST_PACER_ADJUST_PARAMS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_PACER_ADJUST_PARAMS_IN_EFTEST_ID_LEN 1
/* Test-specific operation */
#define       MC_CMD_EFTEST_PACER_ADJUST_PARAMS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_PACER_ADJUST_PARAMS_IN_EFTEST_OP_LEN 1
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_PACER_ADJUST_PARAMS_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_PACER_ADJUST_PARAMS_IN_EFTEST_OP_RSVD_LEN 2
/* The TXDP number of the pacer to adjust */
#define       MC_CMD_EFTEST_PACER_ADJUST_PARAMS_IN_TXDP_NUM_OFST 4
#define       MC_CMD_EFTEST_PACER_ADJUST_PARAMS_IN_TXDP_NUM_LEN 4
/* Flags to control which operations to perform. */
#define       MC_CMD_EFTEST_PACER_ADJUST_PARAMS_IN_FLAGS_OFST 8
#define       MC_CMD_EFTEST_PACER_ADJUST_PARAMS_IN_FLAGS_LEN 4
#define        MC_CMD_EFTEST_PACER_ADJUST_PARAMS_IN_FLAG_SET_ALERT_MASK_DELAY_OFST 8
#define        MC_CMD_EFTEST_PACER_ADJUST_PARAMS_IN_FLAG_SET_ALERT_MASK_DELAY_LBN 0
#define        MC_CMD_EFTEST_PACER_ADJUST_PARAMS_IN_FLAG_SET_ALERT_MASK_DELAY_WIDTH 1
#define        MC_CMD_EFTEST_PACER_ADJUST_PARAMS_IN_FLAG_SET_ALERT_MASK_THRESHOLD_OFST 8
#define        MC_CMD_EFTEST_PACER_ADJUST_PARAMS_IN_FLAG_SET_ALERT_MASK_THRESHOLD_LBN 1
#define        MC_CMD_EFTEST_PACER_ADJUST_PARAMS_IN_FLAG_SET_ALERT_MASK_THRESHOLD_WIDTH 1
#define        MC_CMD_EFTEST_PACER_ADJUST_PARAMS_IN_FLAG_SET_SNOOPER_THRESHOLD_OFST 8
#define        MC_CMD_EFTEST_PACER_ADJUST_PARAMS_IN_FLAG_SET_SNOOPER_THRESHOLD_LBN 2
#define        MC_CMD_EFTEST_PACER_ADJUST_PARAMS_IN_FLAG_SET_SNOOPER_THRESHOLD_WIDTH 1
/* The new mask delay value to use. See SF-112428-TC for details. */
#define       MC_CMD_EFTEST_PACER_ADJUST_PARAMS_IN_ALERT_MASK_DELAY_OFST 12
#define       MC_CMD_EFTEST_PACER_ADJUST_PARAMS_IN_ALERT_MASK_DELAY_LEN 4
/* The new mask threshold value to use. See SF-112428-TC for details. */
#define       MC_CMD_EFTEST_PACER_ADJUST_PARAMS_IN_ALERT_MASK_THRESHOLD_OFST 16
#define       MC_CMD_EFTEST_PACER_ADJUST_PARAMS_IN_ALERT_MASK_THRESHOLD_LEN 4
/* The new snoop threshold value to use. See SF-112428-TC for details. */
#define       MC_CMD_EFTEST_PACER_ADJUST_PARAMS_IN_SNOOPER_THRESHOLD_OFST 20
#define       MC_CMD_EFTEST_PACER_ADJUST_PARAMS_IN_SNOOPER_THRESHOLD_LEN 4

/* MC_CMD_EFTEST_PACER_ADJUST_PARAMS_OUT msgresponse */
#define    MC_CMD_EFTEST_PACER_ADJUST_PARAMS_OUT_LEN 24
/* The old mask delay value in use. See SF-112428-TC for details. */
#define       MC_CMD_EFTEST_PACER_ADJUST_PARAMS_OUT_ALERT_MASK_DELAY_OFST 12
#define       MC_CMD_EFTEST_PACER_ADJUST_PARAMS_OUT_ALERT_MASK_DELAY_LEN 4
/* The old mask threshold value in use. See SF-112428-TC for details. */
#define       MC_CMD_EFTEST_PACER_ADJUST_PARAMS_OUT_ALERT_MASK_THRESHOLD_OFST 16
#define       MC_CMD_EFTEST_PACER_ADJUST_PARAMS_OUT_ALERT_MASK_THRESHOLD_LEN 4
/* The old snoop threshold value in use. See SF-112428-TC for details. */
#define       MC_CMD_EFTEST_PACER_ADJUST_PARAMS_OUT_SNOOPER_THRESHOLD_OFST 20
#define       MC_CMD_EFTEST_PACER_ADJUST_PARAMS_OUT_SNOOPER_THRESHOLD_LEN 4

/* MC_CMD_EFTEST_CHECK_CLOCKS_IN msgrequest */
#define    MC_CMD_EFTEST_CHECK_CLOCKS_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_CHECK_CLOCKS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_CHECK_CLOCKS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_CHECK_CLOCKS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_CHECK_CLOCKS_IN_EFTEST_OP_LEN 1
/* enum: run the basic test */
#define          MC_CMD_EFTEST_CHECK_CLOCKS_IN_CHECK_CLOCKS 0x0
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_CHECK_CLOCKS_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_CHECK_CLOCKS_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_CHECK_CLOCKS_OUT msgresponse */
#define    MC_CMD_EFTEST_CHECK_CLOCKS_OUT_LENMIN 16
#define    MC_CMD_EFTEST_CHECK_CLOCKS_OUT_LENMAX 240
#define    MC_CMD_EFTEST_CHECK_CLOCKS_OUT_LENMAX_MCDI2 1008
#define    MC_CMD_EFTEST_CHECK_CLOCKS_OUT_LEN(num) (0+16*(num))
#define    MC_CMD_EFTEST_CHECK_CLOCKS_OUT_DATA_NUM(len) (((len)-0)/16)
#define       MC_CMD_EFTEST_CHECK_CLOCKS_OUT_DATA_OFST 0
#define       MC_CMD_EFTEST_CHECK_CLOCKS_OUT_DATA_LEN 16
#define       MC_CMD_EFTEST_CHECK_CLOCKS_OUT_DATA_MINNUM 1
#define       MC_CMD_EFTEST_CHECK_CLOCKS_OUT_DATA_MAXNUM 15
#define       MC_CMD_EFTEST_CHECK_CLOCKS_OUT_DATA_MAXNUM_MCDI2 63
/* The clock we're testing */
#define       MC_CMD_EFTEST_CHECK_CLOCKS_OUT_SOURCE_ID_OFST 0
#define       MC_CMD_EFTEST_CHECK_CLOCKS_OUT_SOURCE_ID_LEN 4
#define          MC_CMD_EFTEST_CHECK_CLOCKS_OUT_XTAL_20MHZ 0x0 /* enum */
/* enum: 10GHz / 100 */
#define          MC_CMD_EFTEST_CHECK_CLOCKS_OUT_MEDFORD_CCOM_FIXED_100MHZ 0x20
/* enum: 10GHz / 30 */
#define          MC_CMD_EFTEST_CHECK_CLOCKS_OUT_MEDFORD_CCOM_FIXED_333MHZ 0x21
/* enum: 10GHz / 26 */
#define          MC_CMD_EFTEST_CHECK_CLOCKS_OUT_MEDFORD_CCOM_FIXED_384MHZ 0x22
/* enum: 10GHz / 24 */
#define          MC_CMD_EFTEST_CHECK_CLOCKS_OUT_MEDFORD_CCOM_FIXED_417MHZ 0x23
/* enum: 10GHz / 22 */
#define          MC_CMD_EFTEST_CHECK_CLOCKS_OUT_MEDFORD_CCOM_FIXED_454MHZ 0x24
/* enum: 10GHz / 20 */
#define          MC_CMD_EFTEST_CHECK_CLOCKS_OUT_MEDFORD_CCOM_FIXED_500MHZ 0x25
/* enum: 10GHz / 19 */
#define          MC_CMD_EFTEST_CHECK_CLOCKS_OUT_MEDFORD_CCOM_FIXED_526MHZ 0x26
/* enum: 10GHz / 18 (Medford A0/A1 only) */
#define          MC_CMD_EFTEST_CHECK_CLOCKS_OUT_MEDFORD_CCOM_FIXED_555MHZ 0x27
/* enum: 10GHz / 17 */
#define          MC_CMD_EFTEST_CHECK_CLOCKS_OUT_MEDFORD_CCOM_FIXED_588MHZ 0x28
/* enum: 10GHz / 16 (Medford A0/A1 only) */
#define          MC_CMD_EFTEST_CHECK_CLOCKS_OUT_MEDFORD_CCOM_FIXED_625MHZ 0x29
/* enum: 10GHz / 15 */
#define          MC_CMD_EFTEST_CHECK_CLOCKS_OUT_MEDFORD_CCOM_FIXED_666MHZ 0x2a
/* enum: 10GHz / 14 */
#define          MC_CMD_EFTEST_CHECK_CLOCKS_OUT_MEDFORD_CCOM_FIXED_714MHZ 0x2b
/* enum: 10GHz / 13.5 */
#define          MC_CMD_EFTEST_CHECK_CLOCKS_OUT_MEDFORD_CCOM_FIXED_740MHZ 0x2c
/* enum: 10GHz / 13 */
#define          MC_CMD_EFTEST_CHECK_CLOCKS_OUT_MEDFORD_CCOM_FIXED_769MHZ 0x2d
/* enum: 10GHz / 12.5 */
#define          MC_CMD_EFTEST_CHECK_CLOCKS_OUT_MEDFORD_CCOM_FIXED_800MHZ 0x2e
/* enum: 10GHz / 12 */
#define          MC_CMD_EFTEST_CHECK_CLOCKS_OUT_MEDFORD_CCOM_FIXED_833MHZ 0x2f
/* enum: 10GHz / 11.5 */
#define          MC_CMD_EFTEST_CHECK_CLOCKS_OUT_MEDFORD_CCOM_FIXED_869MHZ 0x30
/* enum: 10GHz / 9 (Medford A2 only) */
#define          MC_CMD_EFTEST_CHECK_CLOCKS_OUT_MEDFORD_CCOM_FIXED_1111MHZ 0x31
/* enum: 10GHz / 8 (Medford A2 only) */
#define          MC_CMD_EFTEST_CHECK_CLOCKS_OUT_MEDFORD_CCOM_FIXED_1250MHZ 0x32
/* enum: 10GHz / 30 */
#define          MC_CMD_EFTEST_CHECK_CLOCKS_OUT_MEDFORD_CCOM_CPUDIV_333MHZ 0x40
/* enum: 10GHz / 16 */
#define          MC_CMD_EFTEST_CHECK_CLOCKS_OUT_MEDFORD_CCOM_CPUDIV_625MHZ 0x41
/* enum: 10GHz / 15 */
#define          MC_CMD_EFTEST_CHECK_CLOCKS_OUT_MEDFORD_CCOM_CPUDIV_666MHZ 0x42
/* enum: 10GHz / 14 */
#define          MC_CMD_EFTEST_CHECK_CLOCKS_OUT_MEDFORD_CCOM_CPUDIV_714MHZ 0x43
/* enum: 10GHz / 13.5 */
#define          MC_CMD_EFTEST_CHECK_CLOCKS_OUT_MEDFORD_CCOM_CPUDIV_740MHZ 0x44
/* enum: 10GHz / 13 */
#define          MC_CMD_EFTEST_CHECK_CLOCKS_OUT_MEDFORD_CCOM_CPUDIV_769MHZ 0x45
/* enum: 10GHz / 12.5 */
#define          MC_CMD_EFTEST_CHECK_CLOCKS_OUT_MEDFORD_CCOM_CPUDIV_800MHZ 0x46
/* enum: 10GHz / 12 */
#define          MC_CMD_EFTEST_CHECK_CLOCKS_OUT_MEDFORD_CCOM_CPUDIV_833MHZ 0x47
/* enum: 10GHz / 11.5 */
#define          MC_CMD_EFTEST_CHECK_CLOCKS_OUT_MEDFORD_CCOM_CPUDIV_869MHZ 0x48
/* enum: 10GHz / 11 */
#define          MC_CMD_EFTEST_CHECK_CLOCKS_OUT_MEDFORD_CCOM_CPUDIV_909MHZ 0x49
/* enum: 10GHz / 10.5 */
#define          MC_CMD_EFTEST_CHECK_CLOCKS_OUT_MEDFORD_CCOM_CPUDIV_952MHZ 0x4a
/* enum: 10GHz / 10 */
#define          MC_CMD_EFTEST_CHECK_CLOCKS_OUT_MEDFORD_CCOM_CPUDIV_1000MHZ 0x4b
/* enum: 10GHz / 9.5 */
#define          MC_CMD_EFTEST_CHECK_CLOCKS_OUT_MEDFORD_CCOM_CPUDIV_1052MHZ 0x4c
/* enum: 10GHz / 9 */
#define          MC_CMD_EFTEST_CHECK_CLOCKS_OUT_MEDFORD_CCOM_CPUDIV_1111MHZ 0x4d
/* enum: 10GHz / 8.5 */
#define          MC_CMD_EFTEST_CHECK_CLOCKS_OUT_MEDFORD_CCOM_CPUDIV_1176MHZ 0x4e
/* enum: 10GHz / 8 */
#define          MC_CMD_EFTEST_CHECK_CLOCKS_OUT_MEDFORD_CCOM_CPUDIV_1250MHZ 0x4f
/* enum: 10GHz / 7.5 */
#define          MC_CMD_EFTEST_CHECK_CLOCKS_OUT_MEDFORD_CCOM_CPUDIV_1333MHZ 0x50
/* enum: 10GHz / 7 */
#define          MC_CMD_EFTEST_CHECK_CLOCKS_OUT_MEDFORD_CCOM_CPUDIV_1428MHZ 0x51
/* enum: 10GHz / 6.5 */
#define          MC_CMD_EFTEST_CHECK_CLOCKS_OUT_MEDFORD_CCOM_CPUDIV_1538MHZ 0x52
/* enum: 10GHz / 6 */
#define          MC_CMD_EFTEST_CHECK_CLOCKS_OUT_MEDFORD_CCOM_CPUDIV_1666MHZ 0x53
/* The clock we used as an unimpeachable reference for our measurement. IDs are
 * per SOURCE_ID.
 */
#define       MC_CMD_EFTEST_CHECK_CLOCKS_OUT_REFERENCE_ID_OFST 4
#define       MC_CMD_EFTEST_CHECK_CLOCKS_OUT_REFERENCE_ID_LEN 4
#define       MC_CMD_EFTEST_CHECK_CLOCKS_OUT_EXPECTED_FREQUENCY_HZ_OFST 8
#define       MC_CMD_EFTEST_CHECK_CLOCKS_OUT_EXPECTED_FREQUENCY_HZ_LEN 4
#define       MC_CMD_EFTEST_CHECK_CLOCKS_OUT_MEASURED_FREQUENCY_HZ_OFST 12
#define       MC_CMD_EFTEST_CHECK_CLOCKS_OUT_MEASURED_FREQUENCY_HZ_LEN 4

/* MC_CMD_EFTEST_CTPIO_IN msgrequest */
#define    MC_CMD_EFTEST_CTPIO_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_CTPIO_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_CTPIO_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_CTPIO_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_CTPIO_IN_EFTEST_OP_LEN 1
/* enum: Fetch CTPIO statistics */
#define          MC_CMD_EFTEST_CTPIO_IN_GET_STATS 0x0
/* enum: Fetch and clear CTPIO statistics */
#define          MC_CMD_EFTEST_CTPIO_IN_GET_STATS_CLEAR 0x1
/* enum: Set the VI to CTPIO stats bucket mapping for 1 or more VIs */
#define          MC_CMD_EFTEST_CTPIO_IN_MAP_VI_STATS 0x2
/* enum: Set the timeout parameters of CTPIO module */
#define          MC_CMD_EFTEST_CTPIO_IN_SET_TIMEOUT_PARAMS 0x3
/* enum: Set the parameters relating to underrun prediction */
#define          MC_CMD_EFTEST_CTPIO_IN_SET_UNDERRUN_PARAMS 0x4
/* enum: Set the VI window mode. Use one of TLV_BIU_VI_WINDOW_MODE_8K,16K,64K.
 * Note that this has no effect until the next host reboot.
 */
#define          MC_CMD_EFTEST_CTPIO_IN_SET_VI_WINDOW_MODE 0x5
/* enum: Get the hardware state for the specified VI */
#define          MC_CMD_EFTEST_CTPIO_IN_GET_VI_STATE 0x6
/* enum: Get the default values corresponding to SET_TIMEOUT_PARAMS */
#define          MC_CMD_EFTEST_CTPIO_IN_GET_TIMEOUT_DEFAULTS 0x7
/* enum: Get the default values corresponding to SET_UNDERRUN_PARAMS */
#define          MC_CMD_EFTEST_CTPIO_IN_GET_UNDERRUN_DEFAULTS 0x8
/* enum: Enable/disable user threshold for the specified port */
#define          MC_CMD_EFTEST_CTPIO_IN_SET_USER_THRESHOLD 0x9
/* enum: Restore default parameters for timeout, underrun and user threshold
 * and transfer control of cut-through settings from snapper back to firmware
 */
#define          MC_CMD_EFTEST_CTPIO_IN_RESTORE_DEFAULT_PARAMS 0xa
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_CTPIO_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_CTPIO_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_CTPIO_STATS_IN msgrequest */
#define    MC_CMD_EFTEST_CTPIO_STATS_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_CTPIO_STATS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_CTPIO_STATS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_CTPIO_STATS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_CTPIO_STATS_IN_EFTEST_OP_LEN 1
/* enum: Fetch CTPIO statistics */
#define          MC_CMD_EFTEST_CTPIO_STATS_IN_GET_STATS 0x0
/* enum: Fetch and clear CTPIO statistics */
#define          MC_CMD_EFTEST_CTPIO_STATS_IN_GET_STATS_CLEAR 0x1
/* enum: Set the VI to CTPIO stats bucket mapping for 1 or more VIs */
#define          MC_CMD_EFTEST_CTPIO_STATS_IN_MAP_VI_STATS 0x2
/* enum: Set the timeout parameters of CTPIO module */
#define          MC_CMD_EFTEST_CTPIO_STATS_IN_SET_TIMEOUT_PARAMS 0x3
/* enum: Set the parameters relating to underrun prediction */
#define          MC_CMD_EFTEST_CTPIO_STATS_IN_SET_UNDERRUN_PARAMS 0x4
/* enum: Set the VI window mode. Use one of TLV_BIU_VI_WINDOW_MODE_8K,16K,64K.
 * Note that this has no effect until the next host reboot.
 */
#define          MC_CMD_EFTEST_CTPIO_STATS_IN_SET_VI_WINDOW_MODE 0x5
/* enum: Get the hardware state for the specified VI */
#define          MC_CMD_EFTEST_CTPIO_STATS_IN_GET_VI_STATE 0x6
/* enum: Get the default values corresponding to SET_TIMEOUT_PARAMS */
#define          MC_CMD_EFTEST_CTPIO_STATS_IN_GET_TIMEOUT_DEFAULTS 0x7
/* enum: Get the default values corresponding to SET_UNDERRUN_PARAMS */
#define          MC_CMD_EFTEST_CTPIO_STATS_IN_GET_UNDERRUN_DEFAULTS 0x8
/* enum: Enable/disable user threshold for the specified port */
#define          MC_CMD_EFTEST_CTPIO_STATS_IN_SET_USER_THRESHOLD 0x9
/* enum: Restore default parameters for timeout, underrun and user threshold
 * and transfer control of cut-through settings from snapper back to firmware
 */
#define          MC_CMD_EFTEST_CTPIO_STATS_IN_RESTORE_DEFAULT_PARAMS 0xa
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_CTPIO_STATS_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_CTPIO_STATS_IN_EFTEST_OP_RSVD_LEN 2
/* Bitmap of buckets to which the request applies */
#define       MC_CMD_EFTEST_CTPIO_STATS_IN_BUCKETS_OFST 4
#define       MC_CMD_EFTEST_CTPIO_STATS_IN_BUCKETS_LEN 4

/* MC_CMD_EFTEST_CTPIO_MAP_STATS_IN msgrequest */
#define    MC_CMD_EFTEST_CTPIO_MAP_STATS_IN_LENMIN 8
#define    MC_CMD_EFTEST_CTPIO_MAP_STATS_IN_LENMAX 252
#define    MC_CMD_EFTEST_CTPIO_MAP_STATS_IN_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_CTPIO_MAP_STATS_IN_LEN(num) (8+4*(num))
#define    MC_CMD_EFTEST_CTPIO_MAP_STATS_IN_MAPPING_NUM(len) (((len)-8)/4)
/* identifies the test */
#define       MC_CMD_EFTEST_CTPIO_MAP_STATS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_CTPIO_MAP_STATS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_CTPIO_MAP_STATS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_CTPIO_MAP_STATS_IN_EFTEST_OP_LEN 1
/*            Enum values, see field(s): */
/*               MC_CMD_EFTEST_CTPIO_IN/EFTEST_OP */
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_CTPIO_MAP_STATS_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_CTPIO_MAP_STATS_IN_EFTEST_OP_RSVD_LEN 2
/* the number of VIs to map */
#define       MC_CMD_EFTEST_CTPIO_MAP_STATS_IN_NUM_VIS_OFST 4
#define       MC_CMD_EFTEST_CTPIO_MAP_STATS_IN_NUM_VIS_LEN 4
/* VI to bucket mapping, layed out as CTPIO_STATS_MAP */
#define       MC_CMD_EFTEST_CTPIO_MAP_STATS_IN_MAPPING_OFST 8
#define       MC_CMD_EFTEST_CTPIO_MAP_STATS_IN_MAPPING_LEN 4
#define       MC_CMD_EFTEST_CTPIO_MAP_STATS_IN_MAPPING_MINNUM 0
#define       MC_CMD_EFTEST_CTPIO_MAP_STATS_IN_MAPPING_MAXNUM 61
#define       MC_CMD_EFTEST_CTPIO_MAP_STATS_IN_MAPPING_MAXNUM_MCDI2 253

/* MC_CMD_EFTEST_CTPIO_SET_TIMEOUT_PARAMS_IN msgrequest */
#define    MC_CMD_EFTEST_CTPIO_SET_TIMEOUT_PARAMS_IN_LEN 18
/* identifies the test */
#define       MC_CMD_EFTEST_CTPIO_SET_TIMEOUT_PARAMS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_CTPIO_SET_TIMEOUT_PARAMS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_CTPIO_SET_TIMEOUT_PARAMS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_CTPIO_SET_TIMEOUT_PARAMS_IN_EFTEST_OP_LEN 1
/* enum: Fetch CTPIO statistics */
#define          MC_CMD_EFTEST_CTPIO_SET_TIMEOUT_PARAMS_IN_GET_STATS 0x0
/* enum: Fetch and clear CTPIO statistics */
#define          MC_CMD_EFTEST_CTPIO_SET_TIMEOUT_PARAMS_IN_GET_STATS_CLEAR 0x1
/* enum: Set the VI to CTPIO stats bucket mapping for 1 or more VIs */
#define          MC_CMD_EFTEST_CTPIO_SET_TIMEOUT_PARAMS_IN_MAP_VI_STATS 0x2
/* enum: Set the timeout parameters of CTPIO module */
#define          MC_CMD_EFTEST_CTPIO_SET_TIMEOUT_PARAMS_IN_SET_TIMEOUT_PARAMS 0x3
/* enum: Set the parameters relating to underrun prediction */
#define          MC_CMD_EFTEST_CTPIO_SET_TIMEOUT_PARAMS_IN_SET_UNDERRUN_PARAMS 0x4
/* enum: Set the VI window mode. Use one of TLV_BIU_VI_WINDOW_MODE_8K,16K,64K.
 * Note that this has no effect until the next host reboot.
 */
#define          MC_CMD_EFTEST_CTPIO_SET_TIMEOUT_PARAMS_IN_SET_VI_WINDOW_MODE 0x5
/* enum: Get the hardware state for the specified VI */
#define          MC_CMD_EFTEST_CTPIO_SET_TIMEOUT_PARAMS_IN_GET_VI_STATE 0x6
/* enum: Get the default values corresponding to SET_TIMEOUT_PARAMS */
#define          MC_CMD_EFTEST_CTPIO_SET_TIMEOUT_PARAMS_IN_GET_TIMEOUT_DEFAULTS 0x7
/* enum: Get the default values corresponding to SET_UNDERRUN_PARAMS */
#define          MC_CMD_EFTEST_CTPIO_SET_TIMEOUT_PARAMS_IN_GET_UNDERRUN_DEFAULTS 0x8
/* enum: Enable/disable user threshold for the specified port */
#define          MC_CMD_EFTEST_CTPIO_SET_TIMEOUT_PARAMS_IN_SET_USER_THRESHOLD 0x9
/* enum: Restore default parameters for timeout, underrun and user threshold
 * and transfer control of cut-through settings from snapper back to firmware
 */
#define          MC_CMD_EFTEST_CTPIO_SET_TIMEOUT_PARAMS_IN_RESTORE_DEFAULT_PARAMS 0xa
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_CTPIO_SET_TIMEOUT_PARAMS_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_CTPIO_SET_TIMEOUT_PARAMS_IN_EFTEST_OP_RSVD_LEN 2
/* The port number for which to set TIMEOUT_DISABLE */
#define       MC_CMD_EFTEST_CTPIO_SET_TIMEOUT_PARAMS_IN_PORTNUM_OFST 4
#define       MC_CMD_EFTEST_CTPIO_SET_TIMEOUT_PARAMS_IN_PORTNUM_LEN 4
/* Control flags (see below) */
#define       MC_CMD_EFTEST_CTPIO_SET_TIMEOUT_PARAMS_IN_FLAGS_OFST 8
#define       MC_CMD_EFTEST_CTPIO_SET_TIMEOUT_PARAMS_IN_FLAGS_LEN 4
#define        MC_CMD_EFTEST_CTPIO_SET_TIMEOUT_PARAMS_IN_TIMEOUT_DISABLE_OFST 8
#define        MC_CMD_EFTEST_CTPIO_SET_TIMEOUT_PARAMS_IN_TIMEOUT_DISABLE_LBN 0
#define        MC_CMD_EFTEST_CTPIO_SET_TIMEOUT_PARAMS_IN_TIMEOUT_DISABLE_WIDTH 1
/* The timeout value in clk_sys ticks. Note that this is GLOBAL rather than
 * per-port.
 */
#define       MC_CMD_EFTEST_CTPIO_SET_TIMEOUT_PARAMS_IN_TIMEOUT_VAL_OFST 16
#define       MC_CMD_EFTEST_CTPIO_SET_TIMEOUT_PARAMS_IN_TIMEOUT_VAL_LEN 2

/* MC_CMD_EFTEST_CTPIO_SET_UNDERRUN_PARAMS_IN msgrequest */
#define    MC_CMD_EFTEST_CTPIO_SET_UNDERRUN_PARAMS_IN_LEN 25
/* identifies the test */
#define       MC_CMD_EFTEST_CTPIO_SET_UNDERRUN_PARAMS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_CTPIO_SET_UNDERRUN_PARAMS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_CTPIO_SET_UNDERRUN_PARAMS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_CTPIO_SET_UNDERRUN_PARAMS_IN_EFTEST_OP_LEN 1
/* enum: Fetch CTPIO statistics */
#define          MC_CMD_EFTEST_CTPIO_SET_UNDERRUN_PARAMS_IN_GET_STATS 0x0
/* enum: Fetch and clear CTPIO statistics */
#define          MC_CMD_EFTEST_CTPIO_SET_UNDERRUN_PARAMS_IN_GET_STATS_CLEAR 0x1
/* enum: Set the VI to CTPIO stats bucket mapping for 1 or more VIs */
#define          MC_CMD_EFTEST_CTPIO_SET_UNDERRUN_PARAMS_IN_MAP_VI_STATS 0x2
/* enum: Set the timeout parameters of CTPIO module */
#define          MC_CMD_EFTEST_CTPIO_SET_UNDERRUN_PARAMS_IN_SET_TIMEOUT_PARAMS 0x3
/* enum: Set the parameters relating to underrun prediction */
#define          MC_CMD_EFTEST_CTPIO_SET_UNDERRUN_PARAMS_IN_SET_UNDERRUN_PARAMS 0x4
/* enum: Set the VI window mode. Use one of TLV_BIU_VI_WINDOW_MODE_8K,16K,64K.
 * Note that this has no effect until the next host reboot.
 */
#define          MC_CMD_EFTEST_CTPIO_SET_UNDERRUN_PARAMS_IN_SET_VI_WINDOW_MODE 0x5
/* enum: Get the hardware state for the specified VI */
#define          MC_CMD_EFTEST_CTPIO_SET_UNDERRUN_PARAMS_IN_GET_VI_STATE 0x6
/* enum: Get the default values corresponding to SET_TIMEOUT_PARAMS */
#define          MC_CMD_EFTEST_CTPIO_SET_UNDERRUN_PARAMS_IN_GET_TIMEOUT_DEFAULTS 0x7
/* enum: Get the default values corresponding to SET_UNDERRUN_PARAMS */
#define          MC_CMD_EFTEST_CTPIO_SET_UNDERRUN_PARAMS_IN_GET_UNDERRUN_DEFAULTS 0x8
/* enum: Enable/disable user threshold for the specified port */
#define          MC_CMD_EFTEST_CTPIO_SET_UNDERRUN_PARAMS_IN_SET_USER_THRESHOLD 0x9
/* enum: Restore default parameters for timeout, underrun and user threshold
 * and transfer control of cut-through settings from snapper back to firmware
 */
#define          MC_CMD_EFTEST_CTPIO_SET_UNDERRUN_PARAMS_IN_RESTORE_DEFAULT_PARAMS 0xa
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_CTPIO_SET_UNDERRUN_PARAMS_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_CTPIO_SET_UNDERRUN_PARAMS_IN_EFTEST_OP_RSVD_LEN 2
/* The port number for which to set the per-port parameters */
#define       MC_CMD_EFTEST_CTPIO_SET_UNDERRUN_PARAMS_IN_PORTNUM_OFST 4
#define       MC_CMD_EFTEST_CTPIO_SET_UNDERRUN_PARAMS_IN_PORTNUM_LEN 4
/* Port speed */
#define       MC_CMD_EFTEST_CTPIO_SET_UNDERRUN_PARAMS_IN_PORTSPEED_OFST 8
#define       MC_CMD_EFTEST_CTPIO_SET_UNDERRUN_PARAMS_IN_PORTSPEED_LEN 1
#define          MC_CMD_EFTEST_CTPIO_SET_UNDERRUN_PARAMS_IN_SPEED_1G 0x0 /* enum */
#define          MC_CMD_EFTEST_CTPIO_SET_UNDERRUN_PARAMS_IN_SPEED_10G 0x1 /* enum */
#define          MC_CMD_EFTEST_CTPIO_SET_UNDERRUN_PARAMS_IN_SPEED_25G 0x2 /* enum */
#define          MC_CMD_EFTEST_CTPIO_SET_UNDERRUN_PARAMS_IN_SPEED_40G 0x3 /* enum */
#define          MC_CMD_EFTEST_CTPIO_SET_UNDERRUN_PARAMS_IN_SPEED_50G 0x4 /* enum */
#define          MC_CMD_EFTEST_CTPIO_SET_UNDERRUN_PARAMS_IN_SPEED_100G 0x5 /* enum */
/* enum: retain existing setting */
#define          MC_CMD_EFTEST_CTPIO_SET_UNDERRUN_PARAMS_IN_SPEED_UNCHANGED 0xff
/* Control flags (see below) */
#define       MC_CMD_EFTEST_CTPIO_SET_UNDERRUN_PARAMS_IN_FLAGS_OFST 16
#define       MC_CMD_EFTEST_CTPIO_SET_UNDERRUN_PARAMS_IN_FLAGS_LEN 4
#define        MC_CMD_EFTEST_CTPIO_SET_UNDERRUN_PARAMS_IN_UNDERRUN_DIS_OFST 16
#define        MC_CMD_EFTEST_CTPIO_SET_UNDERRUN_PARAMS_IN_UNDERRUN_DIS_LBN 0
#define        MC_CMD_EFTEST_CTPIO_SET_UNDERRUN_PARAMS_IN_UNDERRUN_DIS_WIDTH 1
#define        MC_CMD_EFTEST_CTPIO_SET_UNDERRUN_PARAMS_IN_C1_DIS_OFST 16
#define        MC_CMD_EFTEST_CTPIO_SET_UNDERRUN_PARAMS_IN_C1_DIS_LBN 1
#define        MC_CMD_EFTEST_CTPIO_SET_UNDERRUN_PARAMS_IN_C1_DIS_WIDTH 1
#define        MC_CMD_EFTEST_CTPIO_SET_UNDERRUN_PARAMS_IN_C2_DIS_OFST 16
#define        MC_CMD_EFTEST_CTPIO_SET_UNDERRUN_PARAMS_IN_C2_DIS_LBN 2
#define        MC_CMD_EFTEST_CTPIO_SET_UNDERRUN_PARAMS_IN_C2_DIS_WIDTH 1
/* Value of C2 in units of 32 bytes */
#define       MC_CMD_EFTEST_CTPIO_SET_UNDERRUN_PARAMS_IN_C2_VALUE_OFST 20
#define       MC_CMD_EFTEST_CTPIO_SET_UNDERRUN_PARAMS_IN_C2_VALUE_LEN 1
/* PCIe data rate. Note that this is GLOBAL rather than per-port. */
#define       MC_CMD_EFTEST_CTPIO_SET_UNDERRUN_PARAMS_IN_PCIE_RATE_OFST 24
#define       MC_CMD_EFTEST_CTPIO_SET_UNDERRUN_PARAMS_IN_PCIE_RATE_LEN 1
#define          MC_CMD_EFTEST_CTPIO_SET_UNDERRUN_PARAMS_IN_8Gbps 0x0 /* enum */
#define          MC_CMD_EFTEST_CTPIO_SET_UNDERRUN_PARAMS_IN_16Gbps 0x1 /* enum */
#define          MC_CMD_EFTEST_CTPIO_SET_UNDERRUN_PARAMS_IN_32Gbps 0x2 /* enum */
#define          MC_CMD_EFTEST_CTPIO_SET_UNDERRUN_PARAMS_IN_64Gbps 0x3 /* enum */
#define          MC_CMD_EFTEST_CTPIO_SET_UNDERRUN_PARAMS_IN_128Gbps 0x4 /* enum */
/* enum: retain existing setting */
#define          MC_CMD_EFTEST_CTPIO_SET_UNDERRUN_PARAMS_IN_RATE_UNCHANGED 0xff

/* MC_CMD_EFTEST_CTPIO_SET_VI_WINDOW_MODE_IN msgrequest */
#define    MC_CMD_EFTEST_CTPIO_SET_VI_WINDOW_MODE_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_CTPIO_SET_VI_WINDOW_MODE_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_CTPIO_SET_VI_WINDOW_MODE_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_CTPIO_SET_VI_WINDOW_MODE_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_CTPIO_SET_VI_WINDOW_MODE_IN_EFTEST_OP_LEN 1
/* VI window mode to apply. Use one of TLV_BIU_VI_WINDOW_MODE_8K,16K,64K. */
#define       MC_CMD_EFTEST_CTPIO_SET_VI_WINDOW_MODE_IN_MODE_OFST 4
#define       MC_CMD_EFTEST_CTPIO_SET_VI_WINDOW_MODE_IN_MODE_LEN 4

/* MC_CMD_EFTEST_CTPIO_GET_VI_STATE_IN msgrequest */
#define    MC_CMD_EFTEST_CTPIO_GET_VI_STATE_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_CTPIO_GET_VI_STATE_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_CTPIO_GET_VI_STATE_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_CTPIO_GET_VI_STATE_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_CTPIO_GET_VI_STATE_IN_EFTEST_OP_LEN 1
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_CTPIO_GET_VI_STATE_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_CTPIO_GET_VI_STATE_IN_EFTEST_OP_RSVD_LEN 2
/* The absolute VI number */
#define       MC_CMD_EFTEST_CTPIO_GET_VI_STATE_IN_VI_NUM_OFST 4
#define       MC_CMD_EFTEST_CTPIO_GET_VI_STATE_IN_VI_NUM_LEN 4

/* MC_CMD_EFTEST_CTPIO_SET_USER_THRESHOLD_IN msgrequest */
#define    MC_CMD_EFTEST_CTPIO_SET_USER_THRESHOLD_IN_LEN 12
/* identifies the test */
#define       MC_CMD_EFTEST_CTPIO_SET_USER_THRESHOLD_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_CTPIO_SET_USER_THRESHOLD_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_CTPIO_SET_USER_THRESHOLD_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_CTPIO_SET_USER_THRESHOLD_IN_EFTEST_OP_LEN 1
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_CTPIO_SET_USER_THRESHOLD_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_CTPIO_SET_USER_THRESHOLD_IN_EFTEST_OP_RSVD_LEN 2
/* The internal port number */
#define       MC_CMD_EFTEST_CTPIO_SET_USER_THRESHOLD_IN_PORT_OFST 4
#define       MC_CMD_EFTEST_CTPIO_SET_USER_THRESHOLD_IN_PORT_LEN 4
/* Set to 1 to enable, 0 to disable */
#define       MC_CMD_EFTEST_CTPIO_SET_USER_THRESHOLD_IN_ENABLE_OFST 8
#define       MC_CMD_EFTEST_CTPIO_SET_USER_THRESHOLD_IN_ENABLE_LEN 4

/* MC_CMD_EFTEST_CTPIO_GET_TIMEOUT_DEFAULTS_IN msgrequest */
#define    MC_CMD_EFTEST_CTPIO_GET_TIMEOUT_DEFAULTS_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_CTPIO_GET_TIMEOUT_DEFAULTS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_CTPIO_GET_TIMEOUT_DEFAULTS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_CTPIO_GET_TIMEOUT_DEFAULTS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_CTPIO_GET_TIMEOUT_DEFAULTS_IN_EFTEST_OP_LEN 1
/* enum: Fetch CTPIO statistics */
#define          MC_CMD_EFTEST_CTPIO_GET_TIMEOUT_DEFAULTS_IN_GET_STATS 0x0
/* enum: Fetch and clear CTPIO statistics */
#define          MC_CMD_EFTEST_CTPIO_GET_TIMEOUT_DEFAULTS_IN_GET_STATS_CLEAR 0x1
/* enum: Set the VI to CTPIO stats bucket mapping for 1 or more VIs */
#define          MC_CMD_EFTEST_CTPIO_GET_TIMEOUT_DEFAULTS_IN_MAP_VI_STATS 0x2
/* enum: Set the timeout parameters of CTPIO module */
#define          MC_CMD_EFTEST_CTPIO_GET_TIMEOUT_DEFAULTS_IN_SET_TIMEOUT_PARAMS 0x3
/* enum: Set the parameters relating to underrun prediction */
#define          MC_CMD_EFTEST_CTPIO_GET_TIMEOUT_DEFAULTS_IN_SET_UNDERRUN_PARAMS 0x4
/* enum: Set the VI window mode. Use one of TLV_BIU_VI_WINDOW_MODE_8K,16K,64K.
 * Note that this has no effect until the next host reboot.
 */
#define          MC_CMD_EFTEST_CTPIO_GET_TIMEOUT_DEFAULTS_IN_SET_VI_WINDOW_MODE 0x5
/* enum: Get the hardware state for the specified VI */
#define          MC_CMD_EFTEST_CTPIO_GET_TIMEOUT_DEFAULTS_IN_GET_VI_STATE 0x6
/* enum: Get the default values corresponding to SET_TIMEOUT_PARAMS */
#define          MC_CMD_EFTEST_CTPIO_GET_TIMEOUT_DEFAULTS_IN_GET_TIMEOUT_DEFAULTS 0x7
/* enum: Get the default values corresponding to SET_UNDERRUN_PARAMS */
#define          MC_CMD_EFTEST_CTPIO_GET_TIMEOUT_DEFAULTS_IN_GET_UNDERRUN_DEFAULTS 0x8
/* enum: Enable/disable user threshold for the specified port */
#define          MC_CMD_EFTEST_CTPIO_GET_TIMEOUT_DEFAULTS_IN_SET_USER_THRESHOLD 0x9
/* enum: Restore default parameters for timeout, underrun and user threshold
 * and transfer control of cut-through settings from snapper back to firmware
 */
#define          MC_CMD_EFTEST_CTPIO_GET_TIMEOUT_DEFAULTS_IN_RESTORE_DEFAULT_PARAMS 0xa
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_CTPIO_GET_TIMEOUT_DEFAULTS_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_CTPIO_GET_TIMEOUT_DEFAULTS_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_CTPIO_GET_UNDERRUN_DEFAULTS_IN msgrequest */
#define    MC_CMD_EFTEST_CTPIO_GET_UNDERRUN_DEFAULTS_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_CTPIO_GET_UNDERRUN_DEFAULTS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_CTPIO_GET_UNDERRUN_DEFAULTS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_CTPIO_GET_UNDERRUN_DEFAULTS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_CTPIO_GET_UNDERRUN_DEFAULTS_IN_EFTEST_OP_LEN 1
/* enum: Fetch CTPIO statistics */
#define          MC_CMD_EFTEST_CTPIO_GET_UNDERRUN_DEFAULTS_IN_GET_STATS 0x0
/* enum: Fetch and clear CTPIO statistics */
#define          MC_CMD_EFTEST_CTPIO_GET_UNDERRUN_DEFAULTS_IN_GET_STATS_CLEAR 0x1
/* enum: Set the VI to CTPIO stats bucket mapping for 1 or more VIs */
#define          MC_CMD_EFTEST_CTPIO_GET_UNDERRUN_DEFAULTS_IN_MAP_VI_STATS 0x2
/* enum: Set the timeout parameters of CTPIO module */
#define          MC_CMD_EFTEST_CTPIO_GET_UNDERRUN_DEFAULTS_IN_SET_TIMEOUT_PARAMS 0x3
/* enum: Set the parameters relating to underrun prediction */
#define          MC_CMD_EFTEST_CTPIO_GET_UNDERRUN_DEFAULTS_IN_SET_UNDERRUN_PARAMS 0x4
/* enum: Set the VI window mode. Use one of TLV_BIU_VI_WINDOW_MODE_8K,16K,64K.
 * Note that this has no effect until the next host reboot.
 */
#define          MC_CMD_EFTEST_CTPIO_GET_UNDERRUN_DEFAULTS_IN_SET_VI_WINDOW_MODE 0x5
/* enum: Get the hardware state for the specified VI */
#define          MC_CMD_EFTEST_CTPIO_GET_UNDERRUN_DEFAULTS_IN_GET_VI_STATE 0x6
/* enum: Get the default values corresponding to SET_TIMEOUT_PARAMS */
#define          MC_CMD_EFTEST_CTPIO_GET_UNDERRUN_DEFAULTS_IN_GET_TIMEOUT_DEFAULTS 0x7
/* enum: Get the default values corresponding to SET_UNDERRUN_PARAMS */
#define          MC_CMD_EFTEST_CTPIO_GET_UNDERRUN_DEFAULTS_IN_GET_UNDERRUN_DEFAULTS 0x8
/* enum: Enable/disable user threshold for the specified port */
#define          MC_CMD_EFTEST_CTPIO_GET_UNDERRUN_DEFAULTS_IN_SET_USER_THRESHOLD 0x9
/* enum: Restore default parameters for timeout, underrun and user threshold
 * and transfer control of cut-through settings from snapper back to firmware
 */
#define          MC_CMD_EFTEST_CTPIO_GET_UNDERRUN_DEFAULTS_IN_RESTORE_DEFAULT_PARAMS 0xa
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_CTPIO_GET_UNDERRUN_DEFAULTS_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_CTPIO_GET_UNDERRUN_DEFAULTS_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_CTPIO_RESTORE_DEFAULT_PARAMS_IN msgrequest */
#define    MC_CMD_EFTEST_CTPIO_RESTORE_DEFAULT_PARAMS_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_CTPIO_RESTORE_DEFAULT_PARAMS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_CTPIO_RESTORE_DEFAULT_PARAMS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_CTPIO_RESTORE_DEFAULT_PARAMS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_CTPIO_RESTORE_DEFAULT_PARAMS_IN_EFTEST_OP_LEN 1
/* enum: Fetch CTPIO statistics */
#define          MC_CMD_EFTEST_CTPIO_RESTORE_DEFAULT_PARAMS_IN_GET_STATS 0x0
/* enum: Fetch and clear CTPIO statistics */
#define          MC_CMD_EFTEST_CTPIO_RESTORE_DEFAULT_PARAMS_IN_GET_STATS_CLEAR 0x1
/* enum: Set the VI to CTPIO stats bucket mapping for 1 or more VIs */
#define          MC_CMD_EFTEST_CTPIO_RESTORE_DEFAULT_PARAMS_IN_MAP_VI_STATS 0x2
/* enum: Set the timeout parameters of CTPIO module */
#define          MC_CMD_EFTEST_CTPIO_RESTORE_DEFAULT_PARAMS_IN_SET_TIMEOUT_PARAMS 0x3
/* enum: Set the parameters relating to underrun prediction */
#define          MC_CMD_EFTEST_CTPIO_RESTORE_DEFAULT_PARAMS_IN_SET_UNDERRUN_PARAMS 0x4
/* enum: Set the VI window mode. Use one of TLV_BIU_VI_WINDOW_MODE_8K,16K,64K.
 * Note that this has no effect until the next host reboot.
 */
#define          MC_CMD_EFTEST_CTPIO_RESTORE_DEFAULT_PARAMS_IN_SET_VI_WINDOW_MODE 0x5
/* enum: Get the hardware state for the specified VI */
#define          MC_CMD_EFTEST_CTPIO_RESTORE_DEFAULT_PARAMS_IN_GET_VI_STATE 0x6
/* enum: Get the default values corresponding to SET_TIMEOUT_PARAMS */
#define          MC_CMD_EFTEST_CTPIO_RESTORE_DEFAULT_PARAMS_IN_GET_TIMEOUT_DEFAULTS 0x7
/* enum: Get the default values corresponding to SET_UNDERRUN_PARAMS */
#define          MC_CMD_EFTEST_CTPIO_RESTORE_DEFAULT_PARAMS_IN_GET_UNDERRUN_DEFAULTS 0x8
/* enum: Enable/disable user threshold for the specified port */
#define          MC_CMD_EFTEST_CTPIO_RESTORE_DEFAULT_PARAMS_IN_SET_USER_THRESHOLD 0x9
/* enum: Restore default parameters for timeout, underrun and user threshold
 * and transfer control of cut-through settings from snapper back to firmware
 */
#define          MC_CMD_EFTEST_CTPIO_RESTORE_DEFAULT_PARAMS_IN_RESTORE_DEFAULT_PARAMS 0xa
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_CTPIO_RESTORE_DEFAULT_PARAMS_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_CTPIO_RESTORE_DEFAULT_PARAMS_IN_EFTEST_OP_RSVD_LEN 2
/* The port number for which to restore defaults */
#define       MC_CMD_EFTEST_CTPIO_RESTORE_DEFAULT_PARAMS_IN_PORTNUM_OFST 4
#define       MC_CMD_EFTEST_CTPIO_RESTORE_DEFAULT_PARAMS_IN_PORTNUM_LEN 4

/* MC_CMD_EFTEST_CTPIO_OUT msgresponse */
#define    MC_CMD_EFTEST_CTPIO_OUT_LEN 128
/* Number of successful CTPIO sends */
#define       MC_CMD_EFTEST_CTPIO_OUT_SUCCESS_OFST 0
#define       MC_CMD_EFTEST_CTPIO_OUT_SUCCESS_LEN 4
#define       MC_CMD_EFTEST_CTPIO_OUT_SUCCESS_NUM 8
/* Number of CTPIO sends that fell back to DMA */
#define       MC_CMD_EFTEST_CTPIO_OUT_FALLBACK_OFST 32
#define       MC_CMD_EFTEST_CTPIO_OUT_FALLBACK_LEN 4
#define       MC_CMD_EFTEST_CTPIO_OUT_FALLBACK_NUM 8
/* Number of CTPIO sends that were poisoned */
#define       MC_CMD_EFTEST_CTPIO_OUT_POISON_OFST 64
#define       MC_CMD_EFTEST_CTPIO_OUT_POISON_LEN 4
#define       MC_CMD_EFTEST_CTPIO_OUT_POISON_NUM 8
/* Number of CTPIO sends that were erased */
#define       MC_CMD_EFTEST_CTPIO_OUT_ERASE_OFST 96
#define       MC_CMD_EFTEST_CTPIO_OUT_ERASE_LEN 4
#define       MC_CMD_EFTEST_CTPIO_OUT_ERASE_NUM 8

/* MC_CMD_EFTEST_CTPIO_GET_VI_STATE_OUT msgresponse */
#define    MC_CMD_EFTEST_CTPIO_GET_VI_STATE_OUT_LEN 16
/* The producer index of the VI, as tracked by the hw */
#define       MC_CMD_EFTEST_CTPIO_GET_VI_STATE_OUT_PRODUCER_IDX_OFST 0
#define       MC_CMD_EFTEST_CTPIO_GET_VI_STATE_OUT_PRODUCER_IDX_LEN 4
/* The consumer index of the VI, as tracked by the hw */
#define       MC_CMD_EFTEST_CTPIO_GET_VI_STATE_OUT_CONSUMER_IDX_OFST 4
#define       MC_CMD_EFTEST_CTPIO_GET_VI_STATE_OUT_CONSUMER_IDX_LEN 4
/* The count of packets in flight, as tracked by the hw */
#define       MC_CMD_EFTEST_CTPIO_GET_VI_STATE_OUT_IN_FLIGHT_OFST 8
#define       MC_CMD_EFTEST_CTPIO_GET_VI_STATE_OUT_IN_FLIGHT_LEN 4
/* The per-VI state of the hardware */
#define       MC_CMD_EFTEST_CTPIO_GET_VI_STATE_OUT_HW_STATE_OFST 12
#define       MC_CMD_EFTEST_CTPIO_GET_VI_STATE_OUT_HW_STATE_LEN 4

/* MC_CMD_EFTEST_CTPIO_GET_TIMEOUT_DEFAULTS_OUT msgresponse */
#define    MC_CMD_EFTEST_CTPIO_GET_TIMEOUT_DEFAULTS_OUT_LEN 6
/* Control flags (see below) */
#define       MC_CMD_EFTEST_CTPIO_GET_TIMEOUT_DEFAULTS_OUT_FLAGS_OFST 0
#define       MC_CMD_EFTEST_CTPIO_GET_TIMEOUT_DEFAULTS_OUT_FLAGS_LEN 4
#define        MC_CMD_EFTEST_CTPIO_GET_TIMEOUT_DEFAULTS_OUT_TIMEOUT_DISABLE_OFST 0
#define        MC_CMD_EFTEST_CTPIO_GET_TIMEOUT_DEFAULTS_OUT_TIMEOUT_DISABLE_LBN 0
#define        MC_CMD_EFTEST_CTPIO_GET_TIMEOUT_DEFAULTS_OUT_TIMEOUT_DISABLE_WIDTH 1
/* The timeout value in clk_sys ticks. */
#define       MC_CMD_EFTEST_CTPIO_GET_TIMEOUT_DEFAULTS_OUT_TIMEOUT_VAL_OFST 4
#define       MC_CMD_EFTEST_CTPIO_GET_TIMEOUT_DEFAULTS_OUT_TIMEOUT_VAL_LEN 2

/* MC_CMD_EFTEST_CTPIO_GET_UNDERRUN_DEFAULTS_OUT msgresponse */
#define    MC_CMD_EFTEST_CTPIO_GET_UNDERRUN_DEFAULTS_OUT_LEN 9
/* Control flags (see below) */
#define       MC_CMD_EFTEST_CTPIO_GET_UNDERRUN_DEFAULTS_OUT_FLAGS_OFST 0
#define       MC_CMD_EFTEST_CTPIO_GET_UNDERRUN_DEFAULTS_OUT_FLAGS_LEN 4
#define        MC_CMD_EFTEST_CTPIO_GET_UNDERRUN_DEFAULTS_OUT_UNDERRUN_DIS_OFST 0
#define        MC_CMD_EFTEST_CTPIO_GET_UNDERRUN_DEFAULTS_OUT_UNDERRUN_DIS_LBN 0
#define        MC_CMD_EFTEST_CTPIO_GET_UNDERRUN_DEFAULTS_OUT_UNDERRUN_DIS_WIDTH 1
#define        MC_CMD_EFTEST_CTPIO_GET_UNDERRUN_DEFAULTS_OUT_C1_DIS_OFST 0
#define        MC_CMD_EFTEST_CTPIO_GET_UNDERRUN_DEFAULTS_OUT_C1_DIS_LBN 1
#define        MC_CMD_EFTEST_CTPIO_GET_UNDERRUN_DEFAULTS_OUT_C1_DIS_WIDTH 1
#define        MC_CMD_EFTEST_CTPIO_GET_UNDERRUN_DEFAULTS_OUT_C2_DIS_OFST 0
#define        MC_CMD_EFTEST_CTPIO_GET_UNDERRUN_DEFAULTS_OUT_C2_DIS_LBN 2
#define        MC_CMD_EFTEST_CTPIO_GET_UNDERRUN_DEFAULTS_OUT_C2_DIS_WIDTH 1
/* Value of C2 in units of 32 bytes */
#define       MC_CMD_EFTEST_CTPIO_GET_UNDERRUN_DEFAULTS_OUT_C2_VALUE_OFST 4
#define       MC_CMD_EFTEST_CTPIO_GET_UNDERRUN_DEFAULTS_OUT_C2_VALUE_LEN 1
/* PCIe data rate. */
#define       MC_CMD_EFTEST_CTPIO_GET_UNDERRUN_DEFAULTS_OUT_PCIE_RATE_OFST 8
#define       MC_CMD_EFTEST_CTPIO_GET_UNDERRUN_DEFAULTS_OUT_PCIE_RATE_LEN 1
#define          MC_CMD_EFTEST_CTPIO_GET_UNDERRUN_DEFAULTS_OUT_8Gbps 0x0 /* enum */
#define          MC_CMD_EFTEST_CTPIO_GET_UNDERRUN_DEFAULTS_OUT_16Gbps 0x1 /* enum */
#define          MC_CMD_EFTEST_CTPIO_GET_UNDERRUN_DEFAULTS_OUT_32Gbps 0x2 /* enum */
#define          MC_CMD_EFTEST_CTPIO_GET_UNDERRUN_DEFAULTS_OUT_64Gbps 0x3 /* enum */
#define          MC_CMD_EFTEST_CTPIO_GET_UNDERRUN_DEFAULTS_OUT_128Gbps 0x4 /* enum */

/* MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_IN msgrequest: Notification of FLR
 * completion via host memory. See bug62413 comment
 */
#define    MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_IN_EFTEST_OP_LEN 1
/* enum: Begin FLR completion notification delivery by this function. These
 * completions will continue until MC reboot, PERST or until explictly ended
 * with FINI. They will not stop as a result of an FLR on this function.
 */
#define          MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_IN_INIT_NOTIFICATIONS 0x0
/* enum: End FLR completion notifications delivery by this function */
#define          MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_IN_FINI_NOTIFICATIONS 0x1
/* enum: Flush FLR completion notification for this function */
#define          MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_IN_FLUSH_NOTIFICATIONS 0x2
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_OUT msgresponse */
#define    MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_OUT_LEN 0

/* MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_INIT_IN msgrequest */
#define    MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_INIT_IN_LEN 12
/* identifies the test */
#define       MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_INIT_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_INIT_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_INIT_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_INIT_IN_EFTEST_OP_LEN 1
/* enum: Begin FLR completion notification delivery by this function. These
 * completions will continue until MC reboot, PERST or until explictly ended
 * with FINI. They will not stop as a result of an FLR on this function.
 */
#define          MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_INIT_IN_INIT_NOTIFICATIONS 0x0
/* enum: End FLR completion notifications delivery by this function */
#define          MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_INIT_IN_FINI_NOTIFICATIONS 0x1
/* enum: Flush FLR completion notification for this function */
#define          MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_INIT_IN_FLUSH_NOTIFICATIONS 0x2
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_INIT_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_INIT_IN_EFTEST_OP_RSVD_LEN 2
/* DMA address of the buffer in host memory to which to deliver FLR completion
 * notifications. The buffer should be sized for 256 entries of each size 32
 * bits. The buffer must not span a 4GiB boundary.
 */
#define       MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_INIT_IN_BUFFER_DMA_ADDR_OFST 4
#define       MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_INIT_IN_BUFFER_DMA_ADDR_LEN 8
#define       MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_INIT_IN_BUFFER_DMA_ADDR_LO_OFST 4
#define       MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_INIT_IN_BUFFER_DMA_ADDR_LO_LEN 4
#define       MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_INIT_IN_BUFFER_DMA_ADDR_LO_LBN 32
#define       MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_INIT_IN_BUFFER_DMA_ADDR_LO_WIDTH 32
#define       MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_INIT_IN_BUFFER_DMA_ADDR_HI_OFST 8
#define       MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_INIT_IN_BUFFER_DMA_ADDR_HI_LEN 4
#define       MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_INIT_IN_BUFFER_DMA_ADDR_HI_LBN 64
#define       MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_INIT_IN_BUFFER_DMA_ADDR_HI_WIDTH 32

/* MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_INIT_OUT msgresponse */
#define    MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_INIT_OUT_LEN 0

/* MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_FINI_IN msgrequest */
#define    MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_FINI_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_FINI_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_FINI_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_FINI_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_FINI_IN_EFTEST_OP_LEN 1
/* enum: Begin FLR completion notification delivery by this function. These
 * completions will continue until MC reboot, PERST or until explictly ended
 * with FINI. They will not stop as a result of an FLR on this function.
 */
#define          MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_FINI_IN_INIT_NOTIFICATIONS 0x0
/* enum: End FLR completion notifications delivery by this function */
#define          MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_FINI_IN_FINI_NOTIFICATIONS 0x1
/* enum: Flush FLR completion notification for this function */
#define          MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_FINI_IN_FLUSH_NOTIFICATIONS 0x2
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_FINI_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_FINI_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_FINI_OUT msgresponse */
#define    MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_FINI_OUT_LEN 0

/* MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_FLUSH_IN msgrequest */
#define    MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_FLUSH_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_FLUSH_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_FLUSH_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_FLUSH_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_FLUSH_IN_EFTEST_OP_LEN 1
/* enum: Begin FLR completion notification delivery by this function. These
 * completions will continue until MC reboot, PERST or until explictly ended
 * with FINI. They will not stop as a result of an FLR on this function.
 */
#define          MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_FLUSH_IN_INIT_NOTIFICATIONS 0x0
/* enum: End FLR completion notifications delivery by this function */
#define          MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_FLUSH_IN_FINI_NOTIFICATIONS 0x1
/* enum: Flush FLR completion notification for this function */
#define          MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_FLUSH_IN_FLUSH_NOTIFICATIONS 0x2
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_FLUSH_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_FLUSH_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_FLUSH_OUT msgresponse */
#define    MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_FLUSH_OUT_LEN 4
/* Non-zero if this function has been FLRed since the most recent of, PERST, MC
 * reboot, last time this MCDI command was called on this function. Zero
 * otherwise.
 */
#define       MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_FLUSH_OUT_FLR_PERFORMED_OFST 0
#define       MC_CMD_EFTEST_FLR_COMPLETION_NOTIFICATION_FLUSH_OUT_FLR_PERFORMED_LEN 4

/* MC_CMD_EFTEST_SLOW_RXFW_IN msgrequest: Control RXDP firmware which
 * introduces delays
 */
#define    MC_CMD_EFTEST_SLOW_RXFW_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_SLOW_RXFW_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_SLOW_RXFW_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_SLOW_RXFW_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_SLOW_RXFW_IN_EFTEST_OP_LEN 1
/* enum: Set the global parameters for RX delays */
#define          MC_CMD_EFTEST_SLOW_RXFW_IN_SET_PARAMS 0x0
/* enum: Configure delays for a queue */
#define          MC_CMD_EFTEST_SLOW_RXFW_IN_CONFIGURE_QUEUE 0x1
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_SLOW_RXFW_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_SLOW_RXFW_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_SLOW_RXFW_SET_PARAMS_IN msgrequest */
#define    MC_CMD_EFTEST_SLOW_RXFW_SET_PARAMS_IN_LEN 24
/* identifies the test */
#define       MC_CMD_EFTEST_SLOW_RXFW_SET_PARAMS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_SLOW_RXFW_SET_PARAMS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_SLOW_RXFW_SET_PARAMS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_SLOW_RXFW_SET_PARAMS_IN_EFTEST_OP_LEN 1
/* enum: Set the global parameters for RX delays */
#define          MC_CMD_EFTEST_SLOW_RXFW_SET_PARAMS_IN_SET_PARAMS 0x0
/* enum: Configure delays for a queue */
#define          MC_CMD_EFTEST_SLOW_RXFW_SET_PARAMS_IN_CONFIGURE_QUEUE 0x1
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_SLOW_RXFW_SET_PARAMS_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_SLOW_RXFW_SET_PARAMS_IN_EFTEST_OP_RSVD_LEN 2
/* In periodic mode, delay 1/N packets */
#define       MC_CMD_EFTEST_SLOW_RXFW_SET_PARAMS_IN_PERIODIC_N_OFST 4
#define       MC_CMD_EFTEST_SLOW_RXFW_SET_PARAMS_IN_PERIODIC_N_LEN 4
/* In random chance mode, delay with probabilty 2^SHIFT / 65536 */
#define       MC_CMD_EFTEST_SLOW_RXFW_SET_PARAMS_IN_RANDOM_CHANCE_SHIFT_OFST 8
#define       MC_CMD_EFTEST_SLOW_RXFW_SET_PARAMS_IN_RANDOM_CHANCE_SHIFT_LEN 4
/* How many cycles to spin for with a long delay */
#define       MC_CMD_EFTEST_SLOW_RXFW_SET_PARAMS_IN_LONG_DELAY_OFST 12
#define       MC_CMD_EFTEST_SLOW_RXFW_SET_PARAMS_IN_LONG_DELAY_LEN 4
/* How many cycles to spin for with a short delay */
#define       MC_CMD_EFTEST_SLOW_RXFW_SET_PARAMS_IN_SHORT_DELAY_OFST 16
#define       MC_CMD_EFTEST_SLOW_RXFW_SET_PARAMS_IN_SHORT_DELAY_LEN 4
/* A random-length delay is up to 65536 / 2^SHIFT */
#define       MC_CMD_EFTEST_SLOW_RXFW_SET_PARAMS_IN_RANDOM_DELAY_SHIFT_OFST 20
#define       MC_CMD_EFTEST_SLOW_RXFW_SET_PARAMS_IN_RANDOM_DELAY_SHIFT_LEN 4

/* MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN msgrequest */
#define    MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_LEN 12
/* identifies the test */
#define       MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_EFTEST_OP_LEN 1
/* enum: Set the global parameters for RX delays */
#define          MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_SET_PARAMS 0x0
/* enum: Configure delays for a queue */
#define          MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_CONFIGURE_QUEUE 0x1
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_EFTEST_OP_RSVD_LEN 2
/* Function-relative queue ID to configure */
#define       MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_QUEUE_ID_OFST 4
#define       MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_QUEUE_ID_LEN 4
/* The whole configuration */
#define       MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_CONFIGURATION_OFST 8
#define       MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_CONFIGURATION_LEN 4
#define        MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_DESCRIPTOR_OFST 8
#define        MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_DESCRIPTOR_LBN 8
#define        MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_DESCRIPTOR_WIDTH 4
#define        MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_DOORBELL_OFST 8
#define        MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_DOORBELL_LBN 4
#define        MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_DOORBELL_WIDTH 4
#define        MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_PACKET_OFST 8
#define        MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_PACKET_LBN 0
#define        MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_PACKET_WIDTH 4
#define        MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_PACKET_DELAY_TYPE_OFST 8
#define        MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_PACKET_DELAY_TYPE_LBN 0
#define        MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_PACKET_DELAY_TYPE_WIDTH 2
/* enum: No delay */
#define          MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_DELAY_TYPE_NONE 0x0
/* enum: Randomly decide whether to delay (default probability 1/8) */
#define          MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_DELAY_TYPE_RANDOM 0x1
/* enum: Delay every N'th time (default N=10) */
#define          MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_DELAY_TYPE_PERIODIC 0x2
/* enum: Always delay */
#define          MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_DELAY_TYPE_ALWAYS 0x3
#define        MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_PACKET_DELAY_LENGTH_OFST 8
#define        MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_PACKET_DELAY_LENGTH_LBN 2
#define        MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_PACKET_DELAY_LENGTH_WIDTH 2
/* enum: Delay for a short (default 1000 cycles) time */
#define          MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_DELAY_LENGTH_SHORT 0x0
/* enum: Delay for a long (default 10000 cycles) time */
#define          MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_DELAY_LENGTH_LONG 0x1
/* enum: Delay for a random (default from 0-32767 cycles) time */
#define          MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_DELAY_LENGTH_RANDOM 0x2
#define        MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_DOORBELL_DELAY_TYPE_OFST 8
#define        MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_DOORBELL_DELAY_TYPE_LBN 4
#define        MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_DOORBELL_DELAY_TYPE_WIDTH 2
/* enum: No delay */
/*               MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_DELAY_TYPE_NONE 0x0 */
/* enum: Randomly decide whether to delay (default probability 1/8) */
/*               MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_DELAY_TYPE_RANDOM 0x1 */
/* enum: Delay every N'th time (default N=10) */
/*               MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_DELAY_TYPE_PERIODIC 0x2 */
/* enum: Always delay */
/*               MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_DELAY_TYPE_ALWAYS 0x3 */
#define        MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_DOORBELL_DELAY_LENGTH_OFST 8
#define        MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_DOORBELL_DELAY_LENGTH_LBN 6
#define        MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_DOORBELL_DELAY_LENGTH_WIDTH 2
/* enum: Delay for a short (default 1000 cycles) time */
/*               MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_DELAY_LENGTH_SHORT 0x0 */
/* enum: Delay for a long (default 10000 cycles) time */
/*               MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_DELAY_LENGTH_LONG 0x1 */
/* enum: Delay for a random (default from 0-32767 cycles) time */
/*               MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_DELAY_LENGTH_RANDOM 0x2 */
#define        MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_DESCRIPTOR_DELAY_TYPE_OFST 8
#define        MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_DESCRIPTOR_DELAY_TYPE_LBN 8
#define        MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_DESCRIPTOR_DELAY_TYPE_WIDTH 2
/* enum: No delay */
/*               MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_DELAY_TYPE_NONE 0x0 */
/* enum: Randomly decide whether to delay (default probability 1/8) */
/*               MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_DELAY_TYPE_RANDOM 0x1 */
/* enum: Delay every N'th time (default N=10) */
/*               MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_DELAY_TYPE_PERIODIC 0x2 */
/* enum: Always delay */
/*               MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_DELAY_TYPE_ALWAYS 0x3 */
#define        MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_DESCRIPTOR_DELAY_LENGTH_OFST 8
#define        MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_DESCRIPTOR_DELAY_LENGTH_LBN 10
#define        MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_DESCRIPTOR_DELAY_LENGTH_WIDTH 2
/* enum: Delay for a short (default 1000 cycles) time */
/*               MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_DELAY_LENGTH_SHORT 0x0 */
/* enum: Delay for a long (default 10000 cycles) time */
/*               MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_DELAY_LENGTH_LONG 0x1 */
/* enum: Delay for a random (default from 0-32767 cycles) time */
/*               MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_DELAY_LENGTH_RANDOM 0x2 */
#define        MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_PADDING_OFST 8
#define        MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_PADDING_LBN 12
#define        MC_CMD_EFTEST_SLOW_RXFW_CONFIGURE_QUEUE_IN_PADDING_WIDTH 20

/* MC_CMD_EFTEST_VDM_IN msgrequest */
#define    MC_CMD_EFTEST_VDM_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_VDM_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_VDM_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_VDM_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_VDM_IN_EFTEST_OP_LEN 1
/* enum: Set up a payloadless VDM test */
#define          MC_CMD_EFTEST_VDM_IN_PAYLOADLESS_START 0x0
/* enum: Query the payloadless VDMs seen by the MC */
#define          MC_CMD_EFTEST_VDM_IN_PAYLOADLESS_QUERY 0x1
/* enum: Stop the test */
#define          MC_CMD_EFTEST_VDM_IN_PAYLOADLESS_STOP 0x2
/* enum: Send some payloadless VDMs from the DUT */
#define          MC_CMD_EFTEST_VDM_IN_PAYLOADLESS_SEND 0x3
/* enum: Send some VDMs with payloads from the DUT */
#define          MC_CMD_EFTEST_VDM_IN_SEND_WITH_PAYLOAD 0x4
#define       MC_CMD_EFTEST_VDM_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_VDM_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_VDM_OUT msgresponse */
#define    MC_CMD_EFTEST_VDM_OUT_LEN 0

/* MC_CMD_EFTEST_VDM_PAYLOADLESS_START_IN msgrequest */
#define    MC_CMD_EFTEST_VDM_PAYLOADLESS_START_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_VDM_PAYLOADLESS_START_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_VDM_PAYLOADLESS_START_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_VDM_PAYLOADLESS_START_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_VDM_PAYLOADLESS_START_IN_EFTEST_OP_LEN 1
/* enum: Set up a payloadless VDM test */
#define          MC_CMD_EFTEST_VDM_PAYLOADLESS_START_IN_PAYLOADLESS_START 0x0
/* enum: Query the payloadless VDMs seen by the MC */
#define          MC_CMD_EFTEST_VDM_PAYLOADLESS_START_IN_PAYLOADLESS_QUERY 0x1
/* enum: Stop the test */
#define          MC_CMD_EFTEST_VDM_PAYLOADLESS_START_IN_PAYLOADLESS_STOP 0x2
/* enum: Send some payloadless VDMs from the DUT */
#define          MC_CMD_EFTEST_VDM_PAYLOADLESS_START_IN_PAYLOADLESS_SEND 0x3
/* enum: Send some VDMs with payloads from the DUT */
#define          MC_CMD_EFTEST_VDM_PAYLOADLESS_START_IN_SEND_WITH_PAYLOAD 0x4
#define       MC_CMD_EFTEST_VDM_PAYLOADLESS_START_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_VDM_PAYLOADLESS_START_IN_EFTEST_OP_RSVD_LEN 2
/* Delay between polls on the MC thread */
#define       MC_CMD_EFTEST_VDM_PAYLOADLESS_START_IN_DELAY_OFST 4
#define       MC_CMD_EFTEST_VDM_PAYLOADLESS_START_IN_DELAY_LEN 4

/* MC_CMD_EFTEST_VDM_PAYLOADLESS_SEND_IN msgrequest */
#define    MC_CMD_EFTEST_VDM_PAYLOADLESS_SEND_IN_LEN 20
/* identifies the test */
#define       MC_CMD_EFTEST_VDM_PAYLOADLESS_SEND_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_VDM_PAYLOADLESS_SEND_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_VDM_PAYLOADLESS_SEND_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_VDM_PAYLOADLESS_SEND_IN_EFTEST_OP_LEN 1
/* enum: Set up a payloadless VDM test */
#define          MC_CMD_EFTEST_VDM_PAYLOADLESS_SEND_IN_PAYLOADLESS_START 0x0
/* enum: Query the payloadless VDMs seen by the MC */
#define          MC_CMD_EFTEST_VDM_PAYLOADLESS_SEND_IN_PAYLOADLESS_QUERY 0x1
/* enum: Stop the test */
#define          MC_CMD_EFTEST_VDM_PAYLOADLESS_SEND_IN_PAYLOADLESS_STOP 0x2
/* enum: Send some payloadless VDMs from the DUT */
#define          MC_CMD_EFTEST_VDM_PAYLOADLESS_SEND_IN_PAYLOADLESS_SEND 0x3
/* enum: Send some VDMs with payloads from the DUT */
#define          MC_CMD_EFTEST_VDM_PAYLOADLESS_SEND_IN_SEND_WITH_PAYLOAD 0x4
#define       MC_CMD_EFTEST_VDM_PAYLOADLESS_SEND_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_VDM_PAYLOADLESS_SEND_IN_EFTEST_OP_RSVD_LEN 2
/* Number to send */
#define       MC_CMD_EFTEST_VDM_PAYLOADLESS_SEND_IN_COUNT_OFST 4
#define       MC_CMD_EFTEST_VDM_PAYLOADLESS_SEND_IN_COUNT_LEN 4
/* Data pattern to use */
#define       MC_CMD_EFTEST_VDM_PAYLOADLESS_SEND_IN_PATTERN_OFST 8
#define       MC_CMD_EFTEST_VDM_PAYLOADLESS_SEND_IN_PATTERN_LEN 4
/* What to put in the tag field. If in doubt use 0 */
#define       MC_CMD_EFTEST_VDM_PAYLOADLESS_SEND_IN_TAG_OFST 12
#define       MC_CMD_EFTEST_VDM_PAYLOADLESS_SEND_IN_TAG_LEN 4
/* what to put in the attrs field. If in doubt use 0 */
#define       MC_CMD_EFTEST_VDM_PAYLOADLESS_SEND_IN_ATTRS_OFST 16
#define       MC_CMD_EFTEST_VDM_PAYLOADLESS_SEND_IN_ATTRS_LEN 4

/* MC_CMD_EFTEST_VDM_SEND_WITH_PAYLOAD_IN msgrequest */
#define    MC_CMD_EFTEST_VDM_SEND_WITH_PAYLOAD_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_VDM_SEND_WITH_PAYLOAD_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_VDM_SEND_WITH_PAYLOAD_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_VDM_SEND_WITH_PAYLOAD_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_VDM_SEND_WITH_PAYLOAD_IN_EFTEST_OP_LEN 1
/* enum: Set up a payloadless VDM test */
#define          MC_CMD_EFTEST_VDM_SEND_WITH_PAYLOAD_IN_PAYLOADLESS_START 0x0
/* enum: Query the payloadless VDMs seen by the MC */
#define          MC_CMD_EFTEST_VDM_SEND_WITH_PAYLOAD_IN_PAYLOADLESS_QUERY 0x1
/* enum: Stop the test */
#define          MC_CMD_EFTEST_VDM_SEND_WITH_PAYLOAD_IN_PAYLOADLESS_STOP 0x2
/* enum: Send some payloadless VDMs from the DUT */
#define          MC_CMD_EFTEST_VDM_SEND_WITH_PAYLOAD_IN_PAYLOADLESS_SEND 0x3
/* enum: Send some VDMs with payloads from the DUT */
#define          MC_CMD_EFTEST_VDM_SEND_WITH_PAYLOAD_IN_SEND_WITH_PAYLOAD 0x4
#define       MC_CMD_EFTEST_VDM_SEND_WITH_PAYLOAD_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_VDM_SEND_WITH_PAYLOAD_IN_EFTEST_OP_RSVD_LEN 2
/* Number to send */
#define       MC_CMD_EFTEST_VDM_SEND_WITH_PAYLOAD_IN_COUNT_OFST 4
#define       MC_CMD_EFTEST_VDM_SEND_WITH_PAYLOAD_IN_COUNT_LEN 4

/* MC_CMD_EFTEST_VDM_PAYLOADLESS_QUERY_OUT msgrequest */
#define    MC_CMD_EFTEST_VDM_PAYLOADLESS_QUERY_OUT_LENMIN 8
#define    MC_CMD_EFTEST_VDM_PAYLOADLESS_QUERY_OUT_LENMAX 252
#define    MC_CMD_EFTEST_VDM_PAYLOADLESS_QUERY_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_VDM_PAYLOADLESS_QUERY_OUT_LEN(num) (4+4*(num))
#define    MC_CMD_EFTEST_VDM_PAYLOADLESS_QUERY_OUT_DATA_NUM(len) (((len)-4)/4)
/* The number of entries */
#define       MC_CMD_EFTEST_VDM_PAYLOADLESS_QUERY_OUT_NUM_VDMS_OFST 0
#define       MC_CMD_EFTEST_VDM_PAYLOADLESS_QUERY_OUT_NUM_VDMS_LEN 4
/* Captured VDM data */
#define       MC_CMD_EFTEST_VDM_PAYLOADLESS_QUERY_OUT_DATA_OFST 4
#define       MC_CMD_EFTEST_VDM_PAYLOADLESS_QUERY_OUT_DATA_LEN 4
#define       MC_CMD_EFTEST_VDM_PAYLOADLESS_QUERY_OUT_DATA_MINNUM 1
#define       MC_CMD_EFTEST_VDM_PAYLOADLESS_QUERY_OUT_DATA_MAXNUM 62
#define       MC_CMD_EFTEST_VDM_PAYLOADLESS_QUERY_OUT_DATA_MAXNUM_MCDI2 254

/* MC_CMD_EFTEST_TSA_IN msgrequest */
#define    MC_CMD_EFTEST_TSA_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_TSA_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_TSA_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_TSA_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_TSA_IN_EFTEST_OP_LEN 1
/* enum: Poll the RF dump FIFOs */
#define          MC_CMD_EFTEST_TSA_IN_RF_DUMP_POLL 0x0
/* enum: Set up a rule. This is a version of MC_CMD_SET_SECURITY_RULE with
 * extra features for testing.
 */
#define          MC_CMD_EFTEST_TSA_IN_SET_RULE 0x1
/* enum: Read and optionally clear one or more LUE entry counters. */
#define          MC_CMD_EFTEST_TSA_IN_READ_HW_COUNTERS 0x2
/* enum: Set the TX / RX counting configuration */
#define          MC_CMD_EFTEST_TSA_IN_SET_COUNT_CONFIG 0x3
/* enum: Prime one or more LUE entry counters with a particular counter value
 * (e.g. for testing counter saturation)
 */
#define          MC_CMD_EFTEST_TSA_IN_PRIME_HW_COUNTERS 0x4
/* enum: Set the TX and RX DICPU TEST_CONTROL configuration for special
 * directed tests
 */
#define          MC_CMD_EFTEST_TSA_IN_SET_DICPU_TEST_CONTROL 0x5
/* enum: Clear the RF dump FIFO drop counters */
#define          MC_CMD_EFTEST_TSA_IN_RF_DUMP_CLEAR_COUNTERS 0x6
/* enum: Control the RF dump thread */
#define          MC_CMD_EFTEST_TSA_IN_RF_DUMP_THREAD_CTL 0x7
#define       MC_CMD_EFTEST_TSA_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_TSA_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_TSA_OUT msgresponse */
#define    MC_CMD_EFTEST_TSA_OUT_LEN 0

/* MC_CMD_EFTEST_TSA_RF_DUMP_POLL_IN msgrequest */
#define    MC_CMD_EFTEST_TSA_RF_DUMP_POLL_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_TSA_RF_DUMP_POLL_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_TSA_RF_DUMP_POLL_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_TSA_RF_DUMP_POLL_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_TSA_RF_DUMP_POLL_IN_EFTEST_OP_LEN 1
/* enum: Poll the RF dump FIFOs */
#define          MC_CMD_EFTEST_TSA_RF_DUMP_POLL_IN_RF_DUMP_POLL 0x0
/* enum: Set up a rule. This is a version of MC_CMD_SET_SECURITY_RULE with
 * extra features for testing.
 */
#define          MC_CMD_EFTEST_TSA_RF_DUMP_POLL_IN_SET_RULE 0x1
/* enum: Read and optionally clear one or more LUE entry counters. */
#define          MC_CMD_EFTEST_TSA_RF_DUMP_POLL_IN_READ_HW_COUNTERS 0x2
/* enum: Set the TX / RX counting configuration */
#define          MC_CMD_EFTEST_TSA_RF_DUMP_POLL_IN_SET_COUNT_CONFIG 0x3
/* enum: Prime one or more LUE entry counters with a particular counter value
 * (e.g. for testing counter saturation)
 */
#define          MC_CMD_EFTEST_TSA_RF_DUMP_POLL_IN_PRIME_HW_COUNTERS 0x4
/* enum: Set the TX and RX DICPU TEST_CONTROL configuration for special
 * directed tests
 */
#define          MC_CMD_EFTEST_TSA_RF_DUMP_POLL_IN_SET_DICPU_TEST_CONTROL 0x5
/* enum: Clear the RF dump FIFO drop counters */
#define          MC_CMD_EFTEST_TSA_RF_DUMP_POLL_IN_RF_DUMP_CLEAR_COUNTERS 0x6
/* enum: Control the RF dump thread */
#define          MC_CMD_EFTEST_TSA_RF_DUMP_POLL_IN_RF_DUMP_THREAD_CTL 0x7
#define       MC_CMD_EFTEST_TSA_RF_DUMP_POLL_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_TSA_RF_DUMP_POLL_IN_EFTEST_OP_RSVD_LEN 2
/* Instance to poll (0 or 1) */
#define       MC_CMD_EFTEST_TSA_RF_DUMP_POLL_IN_INSTANCE_OFST 4
#define       MC_CMD_EFTEST_TSA_RF_DUMP_POLL_IN_INSTANCE_LEN 4

/* MC_CMD_EFTEST_TSA_RF_DUMP_POLL_OUT msgresponse */
#define    MC_CMD_EFTEST_TSA_RF_DUMP_POLL_OUT_LENMIN 104
#define    MC_CMD_EFTEST_TSA_RF_DUMP_POLL_OUT_LENMAX 200
#define    MC_CMD_EFTEST_TSA_RF_DUMP_POLL_OUT_LENMAX_MCDI2 968
#define    MC_CMD_EFTEST_TSA_RF_DUMP_POLL_OUT_LEN(num) (8+96*(num))
#define    MC_CMD_EFTEST_TSA_RF_DUMP_POLL_OUT_ENTRY_NUM(len) (((len)-8)/96)
/* The current value of the dropped message counter (not reset) */
#define       MC_CMD_EFTEST_TSA_RF_DUMP_POLL_OUT_DROP_COUNTER_OFST 0
#define       MC_CMD_EFTEST_TSA_RF_DUMP_POLL_OUT_DROP_COUNTER_LEN 4
/* The number of entries returned in this poll */
#define       MC_CMD_EFTEST_TSA_RF_DUMP_POLL_OUT_NUM_ENTRIES_OFST 4
#define       MC_CMD_EFTEST_TSA_RF_DUMP_POLL_OUT_NUM_ENTRIES_LEN 4
/* Entries popped from the FIFO in order (96 bytes each). Some of this data
 * contains interesting packet fields when the dump has been triggered by a TSA
 * rule with the SAMPLE action bit set; see the TSA_SAMPLE_DUMP structure
 * elsewhere. For directed tests, the data is expected to contain specific data
 * patterns as described by the individial test cases.
 */
#define       MC_CMD_EFTEST_TSA_RF_DUMP_POLL_OUT_ENTRY_OFST 8
#define       MC_CMD_EFTEST_TSA_RF_DUMP_POLL_OUT_ENTRY_LEN 96
#define       MC_CMD_EFTEST_TSA_RF_DUMP_POLL_OUT_ENTRY_MINNUM 1
#define       MC_CMD_EFTEST_TSA_RF_DUMP_POLL_OUT_ENTRY_MAXNUM 2
#define       MC_CMD_EFTEST_TSA_RF_DUMP_POLL_OUT_ENTRY_MAXNUM_MCDI2 10

/* MC_CMD_EFTEST_TSA_SET_RULE_IN msgrequest */
#define    MC_CMD_EFTEST_TSA_SET_RULE_IN_LEN 96
/* identifies the test */
#define       MC_CMD_EFTEST_TSA_SET_RULE_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_TSA_SET_RULE_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_TSA_SET_RULE_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_TSA_SET_RULE_IN_EFTEST_OP_LEN 1
/* enum: Poll the RF dump FIFOs */
#define          MC_CMD_EFTEST_TSA_SET_RULE_IN_RF_DUMP_POLL 0x0
/* enum: Set up a rule. This is a version of MC_CMD_SET_SECURITY_RULE with
 * extra features for testing.
 */
#define          MC_CMD_EFTEST_TSA_SET_RULE_IN_SET_RULE 0x1
/* enum: Read and optionally clear one or more LUE entry counters. */
#define          MC_CMD_EFTEST_TSA_SET_RULE_IN_READ_HW_COUNTERS 0x2
/* enum: Set the TX / RX counting configuration */
#define          MC_CMD_EFTEST_TSA_SET_RULE_IN_SET_COUNT_CONFIG 0x3
/* enum: Prime one or more LUE entry counters with a particular counter value
 * (e.g. for testing counter saturation)
 */
#define          MC_CMD_EFTEST_TSA_SET_RULE_IN_PRIME_HW_COUNTERS 0x4
/* enum: Set the TX and RX DICPU TEST_CONTROL configuration for special
 * directed tests
 */
#define          MC_CMD_EFTEST_TSA_SET_RULE_IN_SET_DICPU_TEST_CONTROL 0x5
/* enum: Clear the RF dump FIFO drop counters */
#define          MC_CMD_EFTEST_TSA_SET_RULE_IN_RF_DUMP_CLEAR_COUNTERS 0x6
/* enum: Control the RF dump thread */
#define          MC_CMD_EFTEST_TSA_SET_RULE_IN_RF_DUMP_THREAD_CTL 0x7
#define       MC_CMD_EFTEST_TSA_SET_RULE_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_TSA_SET_RULE_IN_EFTEST_OP_RSVD_LEN 2
/* fields to include in match criteria */
#define       MC_CMD_EFTEST_TSA_SET_RULE_IN_MATCH_FIELDS_OFST 4
#define       MC_CMD_EFTEST_TSA_SET_RULE_IN_MATCH_FIELDS_LEN 4
#define        MC_CMD_EFTEST_TSA_SET_RULE_IN_MATCH_REMOTE_IP_OFST 4
#define        MC_CMD_EFTEST_TSA_SET_RULE_IN_MATCH_REMOTE_IP_LBN 0
#define        MC_CMD_EFTEST_TSA_SET_RULE_IN_MATCH_REMOTE_IP_WIDTH 1
#define        MC_CMD_EFTEST_TSA_SET_RULE_IN_MATCH_LOCAL_IP_OFST 4
#define        MC_CMD_EFTEST_TSA_SET_RULE_IN_MATCH_LOCAL_IP_LBN 1
#define        MC_CMD_EFTEST_TSA_SET_RULE_IN_MATCH_LOCAL_IP_WIDTH 1
#define        MC_CMD_EFTEST_TSA_SET_RULE_IN_MATCH_REMOTE_MAC_OFST 4
#define        MC_CMD_EFTEST_TSA_SET_RULE_IN_MATCH_REMOTE_MAC_LBN 2
#define        MC_CMD_EFTEST_TSA_SET_RULE_IN_MATCH_REMOTE_MAC_WIDTH 1
#define        MC_CMD_EFTEST_TSA_SET_RULE_IN_MATCH_REMOTE_PORT_OFST 4
#define        MC_CMD_EFTEST_TSA_SET_RULE_IN_MATCH_REMOTE_PORT_LBN 3
#define        MC_CMD_EFTEST_TSA_SET_RULE_IN_MATCH_REMOTE_PORT_WIDTH 1
#define        MC_CMD_EFTEST_TSA_SET_RULE_IN_MATCH_LOCAL_MAC_OFST 4
#define        MC_CMD_EFTEST_TSA_SET_RULE_IN_MATCH_LOCAL_MAC_LBN 4
#define        MC_CMD_EFTEST_TSA_SET_RULE_IN_MATCH_LOCAL_MAC_WIDTH 1
#define        MC_CMD_EFTEST_TSA_SET_RULE_IN_MATCH_LOCAL_PORT_OFST 4
#define        MC_CMD_EFTEST_TSA_SET_RULE_IN_MATCH_LOCAL_PORT_LBN 5
#define        MC_CMD_EFTEST_TSA_SET_RULE_IN_MATCH_LOCAL_PORT_WIDTH 1
#define        MC_CMD_EFTEST_TSA_SET_RULE_IN_MATCH_ETHER_TYPE_OFST 4
#define        MC_CMD_EFTEST_TSA_SET_RULE_IN_MATCH_ETHER_TYPE_LBN 6
#define        MC_CMD_EFTEST_TSA_SET_RULE_IN_MATCH_ETHER_TYPE_WIDTH 1
#define        MC_CMD_EFTEST_TSA_SET_RULE_IN_MATCH_INNER_VLAN_OFST 4
#define        MC_CMD_EFTEST_TSA_SET_RULE_IN_MATCH_INNER_VLAN_LBN 7
#define        MC_CMD_EFTEST_TSA_SET_RULE_IN_MATCH_INNER_VLAN_WIDTH 1
#define        MC_CMD_EFTEST_TSA_SET_RULE_IN_MATCH_OUTER_VLAN_OFST 4
#define        MC_CMD_EFTEST_TSA_SET_RULE_IN_MATCH_OUTER_VLAN_LBN 8
#define        MC_CMD_EFTEST_TSA_SET_RULE_IN_MATCH_OUTER_VLAN_WIDTH 1
#define        MC_CMD_EFTEST_TSA_SET_RULE_IN_MATCH_IP_PROTO_OFST 4
#define        MC_CMD_EFTEST_TSA_SET_RULE_IN_MATCH_IP_PROTO_LBN 9
#define        MC_CMD_EFTEST_TSA_SET_RULE_IN_MATCH_IP_PROTO_WIDTH 1
#define        MC_CMD_EFTEST_TSA_SET_RULE_IN_MATCH_PHYSICAL_PORT_OFST 4
#define        MC_CMD_EFTEST_TSA_SET_RULE_IN_MATCH_PHYSICAL_PORT_LBN 10
#define        MC_CMD_EFTEST_TSA_SET_RULE_IN_MATCH_PHYSICAL_PORT_WIDTH 1
#define        MC_CMD_EFTEST_TSA_SET_RULE_IN_MATCH_RESERVED_OFST 4
#define        MC_CMD_EFTEST_TSA_SET_RULE_IN_MATCH_RESERVED_LBN 11
#define        MC_CMD_EFTEST_TSA_SET_RULE_IN_MATCH_RESERVED_WIDTH 1
#define        MC_CMD_EFTEST_TSA_SET_RULE_IN_MATCH_REMOTE_SUBNET_ID_OFST 4
#define        MC_CMD_EFTEST_TSA_SET_RULE_IN_MATCH_REMOTE_SUBNET_ID_LBN 12
#define        MC_CMD_EFTEST_TSA_SET_RULE_IN_MATCH_REMOTE_SUBNET_ID_WIDTH 1
#define        MC_CMD_EFTEST_TSA_SET_RULE_IN_MATCH_REMOTE_PORTRANGE_ID_OFST 4
#define        MC_CMD_EFTEST_TSA_SET_RULE_IN_MATCH_REMOTE_PORTRANGE_ID_LBN 13
#define        MC_CMD_EFTEST_TSA_SET_RULE_IN_MATCH_REMOTE_PORTRANGE_ID_WIDTH 1
#define        MC_CMD_EFTEST_TSA_SET_RULE_IN_MATCH_LOCAL_PORTRANGE_ID_OFST 4
#define        MC_CMD_EFTEST_TSA_SET_RULE_IN_MATCH_LOCAL_PORTRANGE_ID_LBN 14
#define        MC_CMD_EFTEST_TSA_SET_RULE_IN_MATCH_LOCAL_PORTRANGE_ID_WIDTH 1
/* remote MAC address to match (as bytes in network order) */
#define       MC_CMD_EFTEST_TSA_SET_RULE_IN_REMOTE_MAC_OFST 8
#define       MC_CMD_EFTEST_TSA_SET_RULE_IN_REMOTE_MAC_LEN 6
/* remote port to match (as bytes in network order) */
#define       MC_CMD_EFTEST_TSA_SET_RULE_IN_REMOTE_PORT_OFST 14
#define       MC_CMD_EFTEST_TSA_SET_RULE_IN_REMOTE_PORT_LEN 2
/* local MAC address to match (as bytes in network order) */
#define       MC_CMD_EFTEST_TSA_SET_RULE_IN_LOCAL_MAC_OFST 16
#define       MC_CMD_EFTEST_TSA_SET_RULE_IN_LOCAL_MAC_LEN 6
/* local port to match (as bytes in network order) */
#define       MC_CMD_EFTEST_TSA_SET_RULE_IN_LOCAL_PORT_OFST 22
#define       MC_CMD_EFTEST_TSA_SET_RULE_IN_LOCAL_PORT_LEN 2
/* Ethernet type to match (as bytes in network order) */
#define       MC_CMD_EFTEST_TSA_SET_RULE_IN_ETHER_TYPE_OFST 24
#define       MC_CMD_EFTEST_TSA_SET_RULE_IN_ETHER_TYPE_LEN 2
/* Inner VLAN tag to match (as bytes in network order) */
#define       MC_CMD_EFTEST_TSA_SET_RULE_IN_INNER_VLAN_OFST 26
#define       MC_CMD_EFTEST_TSA_SET_RULE_IN_INNER_VLAN_LEN 2
/* Outer VLAN tag to match (as bytes in network order) */
#define       MC_CMD_EFTEST_TSA_SET_RULE_IN_OUTER_VLAN_OFST 28
#define       MC_CMD_EFTEST_TSA_SET_RULE_IN_OUTER_VLAN_LEN 2
/* IP protocol to match (in low byte; set high byte to 0) */
#define       MC_CMD_EFTEST_TSA_SET_RULE_IN_IP_PROTO_OFST 30
#define       MC_CMD_EFTEST_TSA_SET_RULE_IN_IP_PROTO_LEN 2
/* Physical port to match (as little-endian 32-bit value) */
#define       MC_CMD_EFTEST_TSA_SET_RULE_IN_PHYSICAL_PORT_OFST 32
#define       MC_CMD_EFTEST_TSA_SET_RULE_IN_PHYSICAL_PORT_LEN 4
/* Reserved; set to 0 */
#define       MC_CMD_EFTEST_TSA_SET_RULE_IN_RESERVED_OFST 36
#define       MC_CMD_EFTEST_TSA_SET_RULE_IN_RESERVED_LEN 4
/* remote IP address to match (as bytes in network order; set last 12 bytes to
 * 0 for IPv4 address)
 */
#define       MC_CMD_EFTEST_TSA_SET_RULE_IN_REMOTE_IP_OFST 40
#define       MC_CMD_EFTEST_TSA_SET_RULE_IN_REMOTE_IP_LEN 16
/* local IP address to match (as bytes in network order; set last 12 bytes to 0
 * for IPv4 address)
 */
#define       MC_CMD_EFTEST_TSA_SET_RULE_IN_LOCAL_IP_OFST 56
#define       MC_CMD_EFTEST_TSA_SET_RULE_IN_LOCAL_IP_LEN 16
/* remote subnet ID to match (as little-endian 32-bit value); note that remote
 * subnets are matched by mapping the remote IP address to a "subnet ID" via a
 * data structure which must already have been configured using
 * MC_CMD_SUBNET_MAP_SET_NODE appropriately
 */
#define       MC_CMD_EFTEST_TSA_SET_RULE_IN_REMOTE_SUBNET_ID_OFST 72
#define       MC_CMD_EFTEST_TSA_SET_RULE_IN_REMOTE_SUBNET_ID_LEN 4
/* remote portrange ID to match (as little-endian 32-bit value); note that
 * remote port ranges are matched by mapping the remote port to a "portrange
 * ID" via a data structure which must already have been configured using
 * MC_CMD_REMOTE_PORTRANGE_MAP_SET_TREE
 */
#define       MC_CMD_EFTEST_TSA_SET_RULE_IN_REMOTE_PORTRANGE_ID_OFST 76
#define       MC_CMD_EFTEST_TSA_SET_RULE_IN_REMOTE_PORTRANGE_ID_LEN 4
/* local portrange ID to match (as little-endian 32-bit value); note that local
 * port ranges are matched by mapping the local port to a "portrange ID" via a
 * data structure which must already have been configured using
 * MC_CMD_LOCAL_PORTRANGE_MAP_SET_TREE
 */
#define       MC_CMD_EFTEST_TSA_SET_RULE_IN_LOCAL_PORTRANGE_ID_OFST 80
#define       MC_CMD_EFTEST_TSA_SET_RULE_IN_LOCAL_PORTRANGE_ID_LEN 4
/* set the action for transmitted packets matching this rule */
#define       MC_CMD_EFTEST_TSA_SET_RULE_IN_TX_ACTION_OFST 84
#define       MC_CMD_EFTEST_TSA_SET_RULE_IN_TX_ACTION_LEN 4
/* enum: make no decision */
#define          MC_CMD_EFTEST_TSA_SET_RULE_IN_TX_ACTION_NONE 0x0
/* enum: decide to accept the packet */
#define          MC_CMD_EFTEST_TSA_SET_RULE_IN_TX_ACTION_WHITELIST 0x1
/* enum: decide to drop the packet */
#define          MC_CMD_EFTEST_TSA_SET_RULE_IN_TX_ACTION_BLACKLIST 0x2
/* enum: send copy of packet headers to MC (this action bit will not take
 * effect if specified on its own; it must be bitwise-ORed with either the
 * WHITELIST or BLACKLIST action)
 */
#define          MC_CMD_EFTEST_TSA_SET_RULE_IN_TX_ACTION_SAMPLE 0x4
/* enum: do not change the current TX action */
#define          MC_CMD_EFTEST_TSA_SET_RULE_IN_TX_ACTION_UNCHANGED 0xffffffff
/* set the action for received packets matching this rule */
#define       MC_CMD_EFTEST_TSA_SET_RULE_IN_RX_ACTION_OFST 88
#define       MC_CMD_EFTEST_TSA_SET_RULE_IN_RX_ACTION_LEN 4
/* enum: make no decision */
#define          MC_CMD_EFTEST_TSA_SET_RULE_IN_RX_ACTION_NONE 0x0
/* enum: decide to accept the packet */
#define          MC_CMD_EFTEST_TSA_SET_RULE_IN_RX_ACTION_WHITELIST 0x1
/* enum: decide to drop the packet */
#define          MC_CMD_EFTEST_TSA_SET_RULE_IN_RX_ACTION_BLACKLIST 0x2
/* enum: send copy of packet headers to MC (this action bit will not take
 * effect if specified on its own; it must be bitwise-ORed with either the
 * WHITELIST or BLACKLIST action)
 */
#define          MC_CMD_EFTEST_TSA_SET_RULE_IN_RX_ACTION_SAMPLE 0x4
/* enum: do not change the current RX action */
#define          MC_CMD_EFTEST_TSA_SET_RULE_IN_RX_ACTION_UNCHANGED 0xffffffff
/* counter ID to associate with this rule; explicit counter IDs may be
 * allocated using MC_CMD_SECURITY_RULE_COUNTER_ALLOC, or (for Medford2 only)
 * an implicit hardware counter may be used by specifying
 * MC_CMD_EFTEST_TSA_SET_RULE_IN_COUNTER_ID_HW.
 */
#define       MC_CMD_EFTEST_TSA_SET_RULE_IN_COUNTER_ID_OFST 92
#define       MC_CMD_EFTEST_TSA_SET_RULE_IN_COUNTER_ID_LEN 4
/* enum: special value for the null counter ID */
#define          MC_CMD_EFTEST_TSA_SET_RULE_IN_COUNTER_ID_NONE 0x0
/* enum: special value to request use of hardware counter (Medford2 only) */
#define          MC_CMD_EFTEST_TSA_SET_RULE_IN_COUNTER_ID_HW 0xffffffff

/* MC_CMD_EFTEST_TSA_SET_RULE_OUT msgresponse */
#define    MC_CMD_EFTEST_TSA_SET_RULE_OUT_LEN 32
/* new reference count for uses of counter ID (for soft counters only) */
#define       MC_CMD_EFTEST_TSA_SET_RULE_OUT_COUNTER_REFCNT_OFST 0
#define       MC_CMD_EFTEST_TSA_SET_RULE_OUT_COUNTER_REFCNT_LEN 4
/* constructed match bits for this rule (as a tracing aid only) */
#define       MC_CMD_EFTEST_TSA_SET_RULE_OUT_LUE_MATCH_BITS_OFST 4
#define       MC_CMD_EFTEST_TSA_SET_RULE_OUT_LUE_MATCH_BITS_LEN 12
/* constructed discriminator bits for this rule (as a tracing aid only) */
#define       MC_CMD_EFTEST_TSA_SET_RULE_OUT_LUE_DISCRIMINATOR_OFST 16
#define       MC_CMD_EFTEST_TSA_SET_RULE_OUT_LUE_DISCRIMINATOR_LEN 4
/* base location for probes for this rule (as a tracing aid only) */
#define       MC_CMD_EFTEST_TSA_SET_RULE_OUT_LUE_PROBE_BASE_OFST 20
#define       MC_CMD_EFTEST_TSA_SET_RULE_OUT_LUE_PROBE_BASE_LEN 4
/* step for probes for this rule (as a tracing aid only) */
#define       MC_CMD_EFTEST_TSA_SET_RULE_OUT_LUE_PROBE_STEP_OFST 24
#define       MC_CMD_EFTEST_TSA_SET_RULE_OUT_LUE_PROBE_STEP_LEN 4
/* ID for reading back the counter if a hardware counter was requested */
#define       MC_CMD_EFTEST_TSA_SET_RULE_OUT_HW_COUNTER_ID_OFST 28
#define       MC_CMD_EFTEST_TSA_SET_RULE_OUT_HW_COUNTER_ID_LEN 4

/* MC_CMD_EFTEST_TSA_READ_HW_COUNTERS_IN msgrequest */
#define    MC_CMD_EFTEST_TSA_READ_HW_COUNTERS_IN_LENMIN 16
#define    MC_CMD_EFTEST_TSA_READ_HW_COUNTERS_IN_LENMAX 252
#define    MC_CMD_EFTEST_TSA_READ_HW_COUNTERS_IN_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_TSA_READ_HW_COUNTERS_IN_LEN(num) (12+4*(num))
#define    MC_CMD_EFTEST_TSA_READ_HW_COUNTERS_IN_HW_COUNTER_ID_NUM(len) (((len)-12)/4)
/* identifies the test */
#define       MC_CMD_EFTEST_TSA_READ_HW_COUNTERS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_TSA_READ_HW_COUNTERS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_TSA_READ_HW_COUNTERS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_TSA_READ_HW_COUNTERS_IN_EFTEST_OP_LEN 1
/* enum: Poll the RF dump FIFOs */
#define          MC_CMD_EFTEST_TSA_READ_HW_COUNTERS_IN_RF_DUMP_POLL 0x0
/* enum: Set up a rule. This is a version of MC_CMD_SET_SECURITY_RULE with
 * extra features for testing.
 */
#define          MC_CMD_EFTEST_TSA_READ_HW_COUNTERS_IN_SET_RULE 0x1
/* enum: Read and optionally clear one or more LUE entry counters. */
#define          MC_CMD_EFTEST_TSA_READ_HW_COUNTERS_IN_READ_HW_COUNTERS 0x2
/* enum: Set the TX / RX counting configuration */
#define          MC_CMD_EFTEST_TSA_READ_HW_COUNTERS_IN_SET_COUNT_CONFIG 0x3
/* enum: Prime one or more LUE entry counters with a particular counter value
 * (e.g. for testing counter saturation)
 */
#define          MC_CMD_EFTEST_TSA_READ_HW_COUNTERS_IN_PRIME_HW_COUNTERS 0x4
/* enum: Set the TX and RX DICPU TEST_CONTROL configuration for special
 * directed tests
 */
#define          MC_CMD_EFTEST_TSA_READ_HW_COUNTERS_IN_SET_DICPU_TEST_CONTROL 0x5
/* enum: Clear the RF dump FIFO drop counters */
#define          MC_CMD_EFTEST_TSA_READ_HW_COUNTERS_IN_RF_DUMP_CLEAR_COUNTERS 0x6
/* enum: Control the RF dump thread */
#define          MC_CMD_EFTEST_TSA_READ_HW_COUNTERS_IN_RF_DUMP_THREAD_CTL 0x7
#define       MC_CMD_EFTEST_TSA_READ_HW_COUNTERS_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_TSA_READ_HW_COUNTERS_IN_EFTEST_OP_RSVD_LEN 2
/* The number of counters to read */
#define       MC_CMD_EFTEST_TSA_READ_HW_COUNTERS_IN_NUM_COUNTERS_OFST 4
#define       MC_CMD_EFTEST_TSA_READ_HW_COUNTERS_IN_NUM_COUNTERS_LEN 4
#define       MC_CMD_EFTEST_TSA_READ_HW_COUNTERS_IN_FLAGS_OFST 8
#define       MC_CMD_EFTEST_TSA_READ_HW_COUNTERS_IN_FLAGS_LEN 4
#define        MC_CMD_EFTEST_TSA_READ_HW_COUNTERS_IN_CLEAR_OFST 8
#define        MC_CMD_EFTEST_TSA_READ_HW_COUNTERS_IN_CLEAR_LBN 0
#define        MC_CMD_EFTEST_TSA_READ_HW_COUNTERS_IN_CLEAR_WIDTH 1
/* Hardware counter ID, as returned by MC_CMD_EFTEST_TSA_SET_RULE */
#define       MC_CMD_EFTEST_TSA_READ_HW_COUNTERS_IN_HW_COUNTER_ID_OFST 12
#define       MC_CMD_EFTEST_TSA_READ_HW_COUNTERS_IN_HW_COUNTER_ID_LEN 4
#define       MC_CMD_EFTEST_TSA_READ_HW_COUNTERS_IN_HW_COUNTER_ID_MINNUM 1
#define       MC_CMD_EFTEST_TSA_READ_HW_COUNTERS_IN_HW_COUNTER_ID_MAXNUM 60
#define       MC_CMD_EFTEST_TSA_READ_HW_COUNTERS_IN_HW_COUNTER_ID_MAXNUM_MCDI2 252

/* MC_CMD_EFTEST_TSA_READ_HW_COUNTERS_OUT msgresponse */
#define    MC_CMD_EFTEST_TSA_READ_HW_COUNTERS_OUT_LENMIN 4
#define    MC_CMD_EFTEST_TSA_READ_HW_COUNTERS_OUT_LENMAX 252
#define    MC_CMD_EFTEST_TSA_READ_HW_COUNTERS_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_TSA_READ_HW_COUNTERS_OUT_LEN(num) (0+4*(num))
#define    MC_CMD_EFTEST_TSA_READ_HW_COUNTERS_OUT_COUNT_NUM(len) (((len)-0)/4)
/* The count(s) read from the counter(s), in the requested order */
#define       MC_CMD_EFTEST_TSA_READ_HW_COUNTERS_OUT_COUNT_OFST 0
#define       MC_CMD_EFTEST_TSA_READ_HW_COUNTERS_OUT_COUNT_LEN 4
#define       MC_CMD_EFTEST_TSA_READ_HW_COUNTERS_OUT_COUNT_MINNUM 1
#define       MC_CMD_EFTEST_TSA_READ_HW_COUNTERS_OUT_COUNT_MAXNUM 63
#define       MC_CMD_EFTEST_TSA_READ_HW_COUNTERS_OUT_COUNT_MAXNUM_MCDI2 255

/* MC_CMD_EFTEST_TSA_SET_COUNT_CONFIG_IN msgrequest */
#define    MC_CMD_EFTEST_TSA_SET_COUNT_CONFIG_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_TSA_SET_COUNT_CONFIG_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_TSA_SET_COUNT_CONFIG_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_TSA_SET_COUNT_CONFIG_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_TSA_SET_COUNT_CONFIG_IN_EFTEST_OP_LEN 1
/* enum: Poll the RF dump FIFOs */
#define          MC_CMD_EFTEST_TSA_SET_COUNT_CONFIG_IN_RF_DUMP_POLL 0x0
/* enum: Set up a rule. This is a version of MC_CMD_SET_SECURITY_RULE with
 * extra features for testing.
 */
#define          MC_CMD_EFTEST_TSA_SET_COUNT_CONFIG_IN_SET_RULE 0x1
/* enum: Read and optionally clear one or more LUE entry counters. */
#define          MC_CMD_EFTEST_TSA_SET_COUNT_CONFIG_IN_READ_HW_COUNTERS 0x2
/* enum: Set the TX / RX counting configuration */
#define          MC_CMD_EFTEST_TSA_SET_COUNT_CONFIG_IN_SET_COUNT_CONFIG 0x3
/* enum: Prime one or more LUE entry counters with a particular counter value
 * (e.g. for testing counter saturation)
 */
#define          MC_CMD_EFTEST_TSA_SET_COUNT_CONFIG_IN_PRIME_HW_COUNTERS 0x4
/* enum: Set the TX and RX DICPU TEST_CONTROL configuration for special
 * directed tests
 */
#define          MC_CMD_EFTEST_TSA_SET_COUNT_CONFIG_IN_SET_DICPU_TEST_CONTROL 0x5
/* enum: Clear the RF dump FIFO drop counters */
#define          MC_CMD_EFTEST_TSA_SET_COUNT_CONFIG_IN_RF_DUMP_CLEAR_COUNTERS 0x6
/* enum: Control the RF dump thread */
#define          MC_CMD_EFTEST_TSA_SET_COUNT_CONFIG_IN_RF_DUMP_THREAD_CTL 0x7
#define       MC_CMD_EFTEST_TSA_SET_COUNT_CONFIG_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_TSA_SET_COUNT_CONFIG_IN_EFTEST_OP_RSVD_LEN 2
#define       MC_CMD_EFTEST_TSA_SET_COUNT_CONFIG_IN_FLAGS_OFST 4
#define       MC_CMD_EFTEST_TSA_SET_COUNT_CONFIG_IN_FLAGS_LEN 4
#define        MC_CMD_EFTEST_TSA_SET_COUNT_CONFIG_IN_TX_COUNT_EN_OFST 4
#define        MC_CMD_EFTEST_TSA_SET_COUNT_CONFIG_IN_TX_COUNT_EN_LBN 0
#define        MC_CMD_EFTEST_TSA_SET_COUNT_CONFIG_IN_TX_COUNT_EN_WIDTH 1
#define        MC_CMD_EFTEST_TSA_SET_COUNT_CONFIG_IN_RX_COUNT_EN_OFST 4
#define        MC_CMD_EFTEST_TSA_SET_COUNT_CONFIG_IN_RX_COUNT_EN_LBN 1
#define        MC_CMD_EFTEST_TSA_SET_COUNT_CONFIG_IN_RX_COUNT_EN_WIDTH 1
#define        MC_CMD_EFTEST_TSA_SET_COUNT_CONFIG_IN_ALWAYS_SEPARATE_TX_RX_RULES_OFST 4
#define        MC_CMD_EFTEST_TSA_SET_COUNT_CONFIG_IN_ALWAYS_SEPARATE_TX_RX_RULES_LBN 2
#define        MC_CMD_EFTEST_TSA_SET_COUNT_CONFIG_IN_ALWAYS_SEPARATE_TX_RX_RULES_WIDTH 1

/* MC_CMD_EFTEST_TSA_SET_COUNT_CONFIG_OUT msgresponse */
#define    MC_CMD_EFTEST_TSA_SET_COUNT_CONFIG_OUT_LEN 0

/* MC_CMD_EFTEST_TSA_PRIME_HW_COUNTERS_IN msgrequest */
#define    MC_CMD_EFTEST_TSA_PRIME_HW_COUNTERS_IN_LENMIN 16
#define    MC_CMD_EFTEST_TSA_PRIME_HW_COUNTERS_IN_LENMAX 252
#define    MC_CMD_EFTEST_TSA_PRIME_HW_COUNTERS_IN_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_TSA_PRIME_HW_COUNTERS_IN_LEN(num) (12+4*(num))
#define    MC_CMD_EFTEST_TSA_PRIME_HW_COUNTERS_IN_HW_COUNTER_ID_NUM(len) (((len)-12)/4)
/* identifies the test */
#define       MC_CMD_EFTEST_TSA_PRIME_HW_COUNTERS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_TSA_PRIME_HW_COUNTERS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_TSA_PRIME_HW_COUNTERS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_TSA_PRIME_HW_COUNTERS_IN_EFTEST_OP_LEN 1
/* enum: Poll the RF dump FIFOs */
#define          MC_CMD_EFTEST_TSA_PRIME_HW_COUNTERS_IN_RF_DUMP_POLL 0x0
/* enum: Set up a rule. This is a version of MC_CMD_SET_SECURITY_RULE with
 * extra features for testing.
 */
#define          MC_CMD_EFTEST_TSA_PRIME_HW_COUNTERS_IN_SET_RULE 0x1
/* enum: Read and optionally clear one or more LUE entry counters. */
#define          MC_CMD_EFTEST_TSA_PRIME_HW_COUNTERS_IN_READ_HW_COUNTERS 0x2
/* enum: Set the TX / RX counting configuration */
#define          MC_CMD_EFTEST_TSA_PRIME_HW_COUNTERS_IN_SET_COUNT_CONFIG 0x3
/* enum: Prime one or more LUE entry counters with a particular counter value
 * (e.g. for testing counter saturation)
 */
#define          MC_CMD_EFTEST_TSA_PRIME_HW_COUNTERS_IN_PRIME_HW_COUNTERS 0x4
/* enum: Set the TX and RX DICPU TEST_CONTROL configuration for special
 * directed tests
 */
#define          MC_CMD_EFTEST_TSA_PRIME_HW_COUNTERS_IN_SET_DICPU_TEST_CONTROL 0x5
/* enum: Clear the RF dump FIFO drop counters */
#define          MC_CMD_EFTEST_TSA_PRIME_HW_COUNTERS_IN_RF_DUMP_CLEAR_COUNTERS 0x6
/* enum: Control the RF dump thread */
#define          MC_CMD_EFTEST_TSA_PRIME_HW_COUNTERS_IN_RF_DUMP_THREAD_CTL 0x7
#define       MC_CMD_EFTEST_TSA_PRIME_HW_COUNTERS_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_TSA_PRIME_HW_COUNTERS_IN_EFTEST_OP_RSVD_LEN 2
/* The number of counters to prime */
#define       MC_CMD_EFTEST_TSA_PRIME_HW_COUNTERS_IN_NUM_COUNTERS_OFST 4
#define       MC_CMD_EFTEST_TSA_PRIME_HW_COUNTERS_IN_NUM_COUNTERS_LEN 4
/* The counter value to prime the counters with */
#define       MC_CMD_EFTEST_TSA_PRIME_HW_COUNTERS_IN_COUNT_OFST 8
#define       MC_CMD_EFTEST_TSA_PRIME_HW_COUNTERS_IN_COUNT_LEN 4
/* Hardware counter ID, as returned by MC_CMD_EFTEST_TSA_SET_RULE */
#define       MC_CMD_EFTEST_TSA_PRIME_HW_COUNTERS_IN_HW_COUNTER_ID_OFST 12
#define       MC_CMD_EFTEST_TSA_PRIME_HW_COUNTERS_IN_HW_COUNTER_ID_LEN 4
#define       MC_CMD_EFTEST_TSA_PRIME_HW_COUNTERS_IN_HW_COUNTER_ID_MINNUM 1
#define       MC_CMD_EFTEST_TSA_PRIME_HW_COUNTERS_IN_HW_COUNTER_ID_MAXNUM 60
#define       MC_CMD_EFTEST_TSA_PRIME_HW_COUNTERS_IN_HW_COUNTER_ID_MAXNUM_MCDI2 252

/* MC_CMD_EFTEST_TSA_PRIME_HW_COUNTERS_OUT msgresponse */
#define    MC_CMD_EFTEST_TSA_PRIME_HW_COUNTERS_OUT_LEN 0

/* MC_CMD_EFTEST_TSA_SET_DICPU_TEST_CONTROL_IN msgrequest: Note that the
 * TEST_CONTROL configuration is intended for special directed tests only, and
 * cause global behaviour changes that may affect other tests. Tests which
 * change these MUST reconfigure them both back to 0 when the test is complete.
 */
#define    MC_CMD_EFTEST_TSA_SET_DICPU_TEST_CONTROL_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_TSA_SET_DICPU_TEST_CONTROL_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_TSA_SET_DICPU_TEST_CONTROL_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_TSA_SET_DICPU_TEST_CONTROL_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_TSA_SET_DICPU_TEST_CONTROL_IN_EFTEST_OP_LEN 1
/* enum: Poll the RF dump FIFOs */
#define          MC_CMD_EFTEST_TSA_SET_DICPU_TEST_CONTROL_IN_RF_DUMP_POLL 0x0
/* enum: Set up a rule. This is a version of MC_CMD_SET_SECURITY_RULE with
 * extra features for testing.
 */
#define          MC_CMD_EFTEST_TSA_SET_DICPU_TEST_CONTROL_IN_SET_RULE 0x1
/* enum: Read and optionally clear one or more LUE entry counters. */
#define          MC_CMD_EFTEST_TSA_SET_DICPU_TEST_CONTROL_IN_READ_HW_COUNTERS 0x2
/* enum: Set the TX / RX counting configuration */
#define          MC_CMD_EFTEST_TSA_SET_DICPU_TEST_CONTROL_IN_SET_COUNT_CONFIG 0x3
/* enum: Prime one or more LUE entry counters with a particular counter value
 * (e.g. for testing counter saturation)
 */
#define          MC_CMD_EFTEST_TSA_SET_DICPU_TEST_CONTROL_IN_PRIME_HW_COUNTERS 0x4
/* enum: Set the TX and RX DICPU TEST_CONTROL configuration for special
 * directed tests
 */
#define          MC_CMD_EFTEST_TSA_SET_DICPU_TEST_CONTROL_IN_SET_DICPU_TEST_CONTROL 0x5
/* enum: Clear the RF dump FIFO drop counters */
#define          MC_CMD_EFTEST_TSA_SET_DICPU_TEST_CONTROL_IN_RF_DUMP_CLEAR_COUNTERS 0x6
/* enum: Control the RF dump thread */
#define          MC_CMD_EFTEST_TSA_SET_DICPU_TEST_CONTROL_IN_RF_DUMP_THREAD_CTL 0x7
#define       MC_CMD_EFTEST_TSA_SET_DICPU_TEST_CONTROL_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_TSA_SET_DICPU_TEST_CONTROL_IN_EFTEST_OP_RSVD_LEN 2
/* TX DICPU TEST_CONTROL configuration. This is the raw 16-bit value written to
 * DICPU DMEM; the meanings of the bits are defined in the
 * TXDI_TEST_CONTROL_xxx constants elsewhere.
 */
#define       MC_CMD_EFTEST_TSA_SET_DICPU_TEST_CONTROL_IN_TXDI_TEST_CONTROL_OFST 4
#define       MC_CMD_EFTEST_TSA_SET_DICPU_TEST_CONTROL_IN_TXDI_TEST_CONTROL_LEN 2
/* RX DICPU TEST_CONTROL configuration. This is the raw 16-bit value written to
 * DICPU DMEM; the meanings of the bits are defined in the
 * RXDI_TEST_CONTROL_xxx constants elsewhere.
 */
#define       MC_CMD_EFTEST_TSA_SET_DICPU_TEST_CONTROL_IN_RXDI_TEST_CONTROL_OFST 6
#define       MC_CMD_EFTEST_TSA_SET_DICPU_TEST_CONTROL_IN_RXDI_TEST_CONTROL_LEN 2

/* MC_CMD_EFTEST_TSA_SET_DICPU_TEST_CONTROL_OUT msgresponse */
#define    MC_CMD_EFTEST_TSA_SET_DICPU_TEST_CONTROL_OUT_LEN 0

/* MC_CMD_EFTEST_TSA_RF_DUMP_CLEAR_COUNTERS_IN msgrequest */
#define    MC_CMD_EFTEST_TSA_RF_DUMP_CLEAR_COUNTERS_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_TSA_RF_DUMP_CLEAR_COUNTERS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_TSA_RF_DUMP_CLEAR_COUNTERS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_TSA_RF_DUMP_CLEAR_COUNTERS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_TSA_RF_DUMP_CLEAR_COUNTERS_IN_EFTEST_OP_LEN 1
/* enum: Poll the RF dump FIFOs */
#define          MC_CMD_EFTEST_TSA_RF_DUMP_CLEAR_COUNTERS_IN_RF_DUMP_POLL 0x0
/* enum: Set up a rule. This is a version of MC_CMD_SET_SECURITY_RULE with
 * extra features for testing.
 */
#define          MC_CMD_EFTEST_TSA_RF_DUMP_CLEAR_COUNTERS_IN_SET_RULE 0x1
/* enum: Read and optionally clear one or more LUE entry counters. */
#define          MC_CMD_EFTEST_TSA_RF_DUMP_CLEAR_COUNTERS_IN_READ_HW_COUNTERS 0x2
/* enum: Set the TX / RX counting configuration */
#define          MC_CMD_EFTEST_TSA_RF_DUMP_CLEAR_COUNTERS_IN_SET_COUNT_CONFIG 0x3
/* enum: Prime one or more LUE entry counters with a particular counter value
 * (e.g. for testing counter saturation)
 */
#define          MC_CMD_EFTEST_TSA_RF_DUMP_CLEAR_COUNTERS_IN_PRIME_HW_COUNTERS 0x4
/* enum: Set the TX and RX DICPU TEST_CONTROL configuration for special
 * directed tests
 */
#define          MC_CMD_EFTEST_TSA_RF_DUMP_CLEAR_COUNTERS_IN_SET_DICPU_TEST_CONTROL 0x5
/* enum: Clear the RF dump FIFO drop counters */
#define          MC_CMD_EFTEST_TSA_RF_DUMP_CLEAR_COUNTERS_IN_RF_DUMP_CLEAR_COUNTERS 0x6
/* enum: Control the RF dump thread */
#define          MC_CMD_EFTEST_TSA_RF_DUMP_CLEAR_COUNTERS_IN_RF_DUMP_THREAD_CTL 0x7
#define       MC_CMD_EFTEST_TSA_RF_DUMP_CLEAR_COUNTERS_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_TSA_RF_DUMP_CLEAR_COUNTERS_IN_EFTEST_OP_RSVD_LEN 2
#define       MC_CMD_EFTEST_TSA_RF_DUMP_CLEAR_COUNTERS_IN_FLAGS_OFST 4
#define       MC_CMD_EFTEST_TSA_RF_DUMP_CLEAR_COUNTERS_IN_FLAGS_LEN 4
#define        MC_CMD_EFTEST_TSA_RF_DUMP_CLEAR_COUNTERS_IN_CLEAR_DROP_COUNT_0_OFST 4
#define        MC_CMD_EFTEST_TSA_RF_DUMP_CLEAR_COUNTERS_IN_CLEAR_DROP_COUNT_0_LBN 0
#define        MC_CMD_EFTEST_TSA_RF_DUMP_CLEAR_COUNTERS_IN_CLEAR_DROP_COUNT_0_WIDTH 1
#define        MC_CMD_EFTEST_TSA_RF_DUMP_CLEAR_COUNTERS_IN_CLEAR_DROP_COUNT_1_OFST 4
#define        MC_CMD_EFTEST_TSA_RF_DUMP_CLEAR_COUNTERS_IN_CLEAR_DROP_COUNT_1_LBN 1
#define        MC_CMD_EFTEST_TSA_RF_DUMP_CLEAR_COUNTERS_IN_CLEAR_DROP_COUNT_1_WIDTH 1

/* MC_CMD_EFTEST_TSA_RF_DUMP_CLEAR_COUNTERS_OUT msgresponse */
#define    MC_CMD_EFTEST_TSA_RF_DUMP_CLEAR_COUNTERS_OUT_LEN 0

/* MC_CMD_EFTEST_TSA_RF_DUMP_THREAD_CTL_IN msgrequest */
#define    MC_CMD_EFTEST_TSA_RF_DUMP_THREAD_CTL_IN_LEN 12
/* identifies the test */
#define       MC_CMD_EFTEST_TSA_RF_DUMP_THREAD_CTL_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_TSA_RF_DUMP_THREAD_CTL_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_TSA_RF_DUMP_THREAD_CTL_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_TSA_RF_DUMP_THREAD_CTL_IN_EFTEST_OP_LEN 1
/* enum: Poll the RF dump FIFOs */
#define          MC_CMD_EFTEST_TSA_RF_DUMP_THREAD_CTL_IN_RF_DUMP_POLL 0x0
/* enum: Set up a rule. This is a version of MC_CMD_SET_SECURITY_RULE with
 * extra features for testing.
 */
#define          MC_CMD_EFTEST_TSA_RF_DUMP_THREAD_CTL_IN_SET_RULE 0x1
/* enum: Read and optionally clear one or more LUE entry counters. */
#define          MC_CMD_EFTEST_TSA_RF_DUMP_THREAD_CTL_IN_READ_HW_COUNTERS 0x2
/* enum: Set the TX / RX counting configuration */
#define          MC_CMD_EFTEST_TSA_RF_DUMP_THREAD_CTL_IN_SET_COUNT_CONFIG 0x3
/* enum: Prime one or more LUE entry counters with a particular counter value
 * (e.g. for testing counter saturation)
 */
#define          MC_CMD_EFTEST_TSA_RF_DUMP_THREAD_CTL_IN_PRIME_HW_COUNTERS 0x4
/* enum: Set the TX and RX DICPU TEST_CONTROL configuration for special
 * directed tests
 */
#define          MC_CMD_EFTEST_TSA_RF_DUMP_THREAD_CTL_IN_SET_DICPU_TEST_CONTROL 0x5
/* enum: Clear the RF dump FIFO drop counters */
#define          MC_CMD_EFTEST_TSA_RF_DUMP_THREAD_CTL_IN_RF_DUMP_CLEAR_COUNTERS 0x6
/* enum: Control the RF dump thread */
#define          MC_CMD_EFTEST_TSA_RF_DUMP_THREAD_CTL_IN_RF_DUMP_THREAD_CTL 0x7
#define       MC_CMD_EFTEST_TSA_RF_DUMP_THREAD_CTL_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_TSA_RF_DUMP_THREAD_CTL_IN_EFTEST_OP_RSVD_LEN 2
/* RF dump thread mode, which defaults to disabled. An active RF dump thread is
 * incompatible with the original polling scheme and so will break any tests
 * using MC_CMD_EFTEST_TSA_RF_DUMP_POLL_IN. Note that in the read-and-pop mode,
 * the content of the RF dump is read by the MC, but there is no mechanism for
 * delivering it to the host.
 */
#define       MC_CMD_EFTEST_TSA_RF_DUMP_THREAD_CTL_IN_MODE_OFST 4
#define       MC_CMD_EFTEST_TSA_RF_DUMP_THREAD_CTL_IN_MODE_LEN 4
/* enum: Disable the RF dump thread. */
#define          MC_CMD_EFTEST_TSA_RF_DUMP_THREAD_CTL_IN_DISABLED 0x0
/* enum: Pop messages as fast as possible without reading any content. */
#define          MC_CMD_EFTEST_TSA_RF_DUMP_THREAD_CTL_IN_POP_ONLY 0x1
/* enum: Read message content before popping. */
#define          MC_CMD_EFTEST_TSA_RF_DUMP_THREAD_CTL_IN_READ_AND_POP 0x2
/* Maximum number of pops (of both instances, if both are active) before
 * scheduling. Too high a value is likely to trip the watchdog.
 */
#define       MC_CMD_EFTEST_TSA_RF_DUMP_THREAD_CTL_IN_MAX_POPS_OFST 8
#define       MC_CMD_EFTEST_TSA_RF_DUMP_THREAD_CTL_IN_MAX_POPS_LEN 4

/* MC_CMD_EFTEST_TSA_RF_DUMP_THREAD_CTL_OUT msgresponse */
#define    MC_CMD_EFTEST_TSA_RF_DUMP_THREAD_CTL_OUT_LEN 0

/* MC_CMD_EFTEST_FASTPD_IN msgrequest */
#define    MC_CMD_EFTEST_FASTPD_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_FASTPD_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_FASTPD_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_FASTPD_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_FASTPD_IN_EFTEST_OP_LEN 1
/* enum: Control whether RX events say whether the fastPD was used for a packet
 */
#define          MC_CMD_EFTEST_FASTPD_IN_SET_INDICATOR 0x0
/* enum: Configure the steering of fastPD-capable packets to the legacy PD */
#define          MC_CMD_EFTEST_FASTPD_IN_CONFIGURE_STEERING 0x1
/* enum: Retrieve the fastPD statistics. Read-clear counters will be cleared.
 */
#define          MC_CMD_EFTEST_FASTPD_IN_GET_STATS 0x2
/* enum: Control whether or not packet checks must complete before LUE requests
 * are issude by fastPD
 */
#define          MC_CMD_EFTEST_FASTPD_IN_SET_PACKET_CHECK_MODE 0x3
/* enum: Set or clear the fastPD validity check, if set only MAC/MAC+VLAN
 * lookups occur
 */
#define          MC_CMD_EFTEST_FASTPD_IN_SET_PACKET_VALIDITY_CHECK 0x4
/* enum: Set or clear the mode which reduces delay per packet, if set only
 * MAC/MAC+VLAN match requests occur
 */
#define          MC_CMD_EFTEST_FASTPD_IN_SET_LUE_MAC_ONLY 0x5
#define       MC_CMD_EFTEST_FASTPD_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_FASTPD_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_FASTPD_SET_INDICATOR_IN msgrequest */
#define    MC_CMD_EFTEST_FASTPD_SET_INDICATOR_IN_LEN 12
/* identifies the test */
#define       MC_CMD_EFTEST_FASTPD_SET_INDICATOR_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_FASTPD_SET_INDICATOR_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_FASTPD_SET_INDICATOR_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_FASTPD_SET_INDICATOR_IN_EFTEST_OP_LEN 1
/* enum: Control whether RX events say whether the fastPD was used for a packet
 */
#define          MC_CMD_EFTEST_FASTPD_SET_INDICATOR_IN_SET_INDICATOR 0x0
/* enum: Configure the steering of fastPD-capable packets to the legacy PD */
#define          MC_CMD_EFTEST_FASTPD_SET_INDICATOR_IN_CONFIGURE_STEERING 0x1
/* enum: Retrieve the fastPD statistics. Read-clear counters will be cleared.
 */
#define          MC_CMD_EFTEST_FASTPD_SET_INDICATOR_IN_GET_STATS 0x2
/* enum: Control whether or not packet checks must complete before LUE requests
 * are issude by fastPD
 */
#define          MC_CMD_EFTEST_FASTPD_SET_INDICATOR_IN_SET_PACKET_CHECK_MODE 0x3
/* enum: Set or clear the fastPD validity check, if set only MAC/MAC+VLAN
 * lookups occur
 */
#define          MC_CMD_EFTEST_FASTPD_SET_INDICATOR_IN_SET_PACKET_VALIDITY_CHECK 0x4
/* enum: Set or clear the mode which reduces delay per packet, if set only
 * MAC/MAC+VLAN match requests occur
 */
#define          MC_CMD_EFTEST_FASTPD_SET_INDICATOR_IN_SET_LUE_MAC_ONLY 0x5
#define       MC_CMD_EFTEST_FASTPD_SET_INDICATOR_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_FASTPD_SET_INDICATOR_IN_EFTEST_OP_RSVD_LEN 2
/* Which datapath (0/1) to configure */
#define       MC_CMD_EFTEST_FASTPD_SET_INDICATOR_IN_DATAPATH_OFST 4
#define       MC_CMD_EFTEST_FASTPD_SET_INDICATOR_IN_DATAPATH_LEN 4
/* Whether to enable the indicator */
#define       MC_CMD_EFTEST_FASTPD_SET_INDICATOR_IN_INDICATOR_OFST 8
#define       MC_CMD_EFTEST_FASTPD_SET_INDICATOR_IN_INDICATOR_LEN 4

/* MC_CMD_EFTEST_FASTPD_CONFIGURE_STEERING_IN msgrequest */
#define    MC_CMD_EFTEST_FASTPD_CONFIGURE_STEERING_IN_LEN 16
/* identifies the test */
#define       MC_CMD_EFTEST_FASTPD_CONFIGURE_STEERING_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_FASTPD_CONFIGURE_STEERING_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_FASTPD_CONFIGURE_STEERING_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_FASTPD_CONFIGURE_STEERING_IN_EFTEST_OP_LEN 1
/* enum: Control whether RX events say whether the fastPD was used for a packet
 */
#define          MC_CMD_EFTEST_FASTPD_CONFIGURE_STEERING_IN_SET_INDICATOR 0x0
/* enum: Configure the steering of fastPD-capable packets to the legacy PD */
#define          MC_CMD_EFTEST_FASTPD_CONFIGURE_STEERING_IN_CONFIGURE_STEERING 0x1
/* enum: Retrieve the fastPD statistics. Read-clear counters will be cleared.
 */
#define          MC_CMD_EFTEST_FASTPD_CONFIGURE_STEERING_IN_GET_STATS 0x2
/* enum: Control whether or not packet checks must complete before LUE requests
 * are issude by fastPD
 */
#define          MC_CMD_EFTEST_FASTPD_CONFIGURE_STEERING_IN_SET_PACKET_CHECK_MODE 0x3
/* enum: Set or clear the fastPD validity check, if set only MAC/MAC+VLAN
 * lookups occur
 */
#define          MC_CMD_EFTEST_FASTPD_CONFIGURE_STEERING_IN_SET_PACKET_VALIDITY_CHECK 0x4
/* enum: Set or clear the mode which reduces delay per packet, if set only
 * MAC/MAC+VLAN match requests occur
 */
#define          MC_CMD_EFTEST_FASTPD_CONFIGURE_STEERING_IN_SET_LUE_MAC_ONLY 0x5
#define       MC_CMD_EFTEST_FASTPD_CONFIGURE_STEERING_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_FASTPD_CONFIGURE_STEERING_IN_EFTEST_OP_RSVD_LEN 2
/* Which datapath (0/1) to configure */
#define       MC_CMD_EFTEST_FASTPD_CONFIGURE_STEERING_IN_DATAPATH_OFST 4
#define       MC_CMD_EFTEST_FASTPD_CONFIGURE_STEERING_IN_DATAPATH_LEN 4
/* Number of fastPD packets redirected to legacy PD before pausing to steer
 * back. Some values are special.
 */
#define       MC_CMD_EFTEST_FASTPD_CONFIGURE_STEERING_IN_STEER_THRESH_OFST 8
#define       MC_CMD_EFTEST_FASTPD_CONFIGURE_STEERING_IN_STEER_THRESH_LEN 4
/* enum: Always pause rather than send a fastPD packet to legacy */
#define          MC_CMD_EFTEST_FASTPD_CONFIGURE_STEERING_IN_ALWAYS_STEER_BACK 0x0
/* enum: Never pause to allow a fastPD packet to be steered back */
#define          MC_CMD_EFTEST_FASTPD_CONFIGURE_STEERING_IN_NEVER_STEER_BACK 0xffff
/* 0 if receiving a legacy packet should reset the counter, 1 if not. */
#define       MC_CMD_EFTEST_FASTPD_CONFIGURE_STEERING_IN_IGNORE_LEGACY_PACKETS_OFST 12
#define       MC_CMD_EFTEST_FASTPD_CONFIGURE_STEERING_IN_IGNORE_LEGACY_PACKETS_LEN 4

/* MC_CMD_EFTEST_FASTPD_GET_STATS_IN msgrequest */
#define    MC_CMD_EFTEST_FASTPD_GET_STATS_IN_LEN 12
/* identifies the test */
#define       MC_CMD_EFTEST_FASTPD_GET_STATS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_FASTPD_GET_STATS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_FASTPD_GET_STATS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_FASTPD_GET_STATS_IN_EFTEST_OP_LEN 1
/* enum: Control whether RX events say whether the fastPD was used for a packet
 */
#define          MC_CMD_EFTEST_FASTPD_GET_STATS_IN_SET_INDICATOR 0x0
/* enum: Configure the steering of fastPD-capable packets to the legacy PD */
#define          MC_CMD_EFTEST_FASTPD_GET_STATS_IN_CONFIGURE_STEERING 0x1
/* enum: Retrieve the fastPD statistics. Read-clear counters will be cleared.
 */
#define          MC_CMD_EFTEST_FASTPD_GET_STATS_IN_GET_STATS 0x2
/* enum: Control whether or not packet checks must complete before LUE requests
 * are issude by fastPD
 */
#define          MC_CMD_EFTEST_FASTPD_GET_STATS_IN_SET_PACKET_CHECK_MODE 0x3
/* enum: Set or clear the fastPD validity check, if set only MAC/MAC+VLAN
 * lookups occur
 */
#define          MC_CMD_EFTEST_FASTPD_GET_STATS_IN_SET_PACKET_VALIDITY_CHECK 0x4
/* enum: Set or clear the mode which reduces delay per packet, if set only
 * MAC/MAC+VLAN match requests occur
 */
#define          MC_CMD_EFTEST_FASTPD_GET_STATS_IN_SET_LUE_MAC_ONLY 0x5
#define       MC_CMD_EFTEST_FASTPD_GET_STATS_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_FASTPD_GET_STATS_IN_EFTEST_OP_RSVD_LEN 2
/* Which datapath to fetch stats for */
#define       MC_CMD_EFTEST_FASTPD_GET_STATS_IN_DATAPATH_OFST 4
#define       MC_CMD_EFTEST_FASTPD_GET_STATS_IN_DATAPATH_LEN 4
#define       MC_CMD_EFTEST_FASTPD_GET_STATS_IN_FLAGS_OFST 8
#define       MC_CMD_EFTEST_FASTPD_GET_STATS_IN_FLAGS_LEN 4
#define        MC_CMD_EFTEST_FASTPD_GET_STATS_IN_FLUSH_HIST_OFST 8
#define        MC_CMD_EFTEST_FASTPD_GET_STATS_IN_FLUSH_HIST_LBN 0
#define        MC_CMD_EFTEST_FASTPD_GET_STATS_IN_FLUSH_HIST_WIDTH 1

/* MC_CMD_EFTEST_FASTPD_SET_PACKET_CHECK_MODE_IN msgrequest */
#define    MC_CMD_EFTEST_FASTPD_SET_PACKET_CHECK_MODE_IN_LEN 12
/* identifies the test */
#define       MC_CMD_EFTEST_FASTPD_SET_PACKET_CHECK_MODE_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_FASTPD_SET_PACKET_CHECK_MODE_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_FASTPD_SET_PACKET_CHECK_MODE_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_FASTPD_SET_PACKET_CHECK_MODE_IN_EFTEST_OP_LEN 1
/* enum: Control whether RX events say whether the fastPD was used for a packet
 */
#define          MC_CMD_EFTEST_FASTPD_SET_PACKET_CHECK_MODE_IN_SET_INDICATOR 0x0
/* enum: Configure the steering of fastPD-capable packets to the legacy PD */
#define          MC_CMD_EFTEST_FASTPD_SET_PACKET_CHECK_MODE_IN_CONFIGURE_STEERING 0x1
/* enum: Retrieve the fastPD statistics. Read-clear counters will be cleared.
 */
#define          MC_CMD_EFTEST_FASTPD_SET_PACKET_CHECK_MODE_IN_GET_STATS 0x2
/* enum: Control whether or not packet checks must complete before LUE requests
 * are issude by fastPD
 */
#define          MC_CMD_EFTEST_FASTPD_SET_PACKET_CHECK_MODE_IN_SET_PACKET_CHECK_MODE 0x3
/* enum: Set or clear the fastPD validity check, if set only MAC/MAC+VLAN
 * lookups occur
 */
#define          MC_CMD_EFTEST_FASTPD_SET_PACKET_CHECK_MODE_IN_SET_PACKET_VALIDITY_CHECK 0x4
/* enum: Set or clear the mode which reduces delay per packet, if set only
 * MAC/MAC+VLAN match requests occur
 */
#define          MC_CMD_EFTEST_FASTPD_SET_PACKET_CHECK_MODE_IN_SET_LUE_MAC_ONLY 0x5
#define       MC_CMD_EFTEST_FASTPD_SET_PACKET_CHECK_MODE_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_FASTPD_SET_PACKET_CHECK_MODE_IN_EFTEST_OP_RSVD_LEN 2
/* Which datapath (0/1) to configure */
#define       MC_CMD_EFTEST_FASTPD_SET_PACKET_CHECK_MODE_IN_DATAPATH_OFST 4
#define       MC_CMD_EFTEST_FASTPD_SET_PACKET_CHECK_MODE_IN_DATAPATH_LEN 4
/* The selected mode */
#define       MC_CMD_EFTEST_FASTPD_SET_PACKET_CHECK_MODE_IN_MODE_OFST 8
#define       MC_CMD_EFTEST_FASTPD_SET_PACKET_CHECK_MODE_IN_MODE_LEN 4
/* enum: The packet validity checks block the issuing of LUE requests */
#define          MC_CMD_EFTEST_FASTPD_SET_PACKET_CHECK_MODE_IN_PV_CHECK_BLOCKING 0x0
/* enum: LUE requests happen in parallel with packet validity checks */
#define          MC_CMD_EFTEST_FASTPD_SET_PACKET_CHECK_MODE_IN_PV_CHECK_NONBLOCKING 0x1

/* MC_CMD_EFTEST_FASTPD_OUT msgresponse: Empty response to keep submessage
 * processing happy
 */
#define    MC_CMD_EFTEST_FASTPD_OUT_LEN 0

/* MC_CMD_EFTEST_FASTPD_GET_STATS_OUT msgresponse */
#define    MC_CMD_EFTEST_FASTPD_GET_STATS_OUT_LEN 188
/* Counter of number of FastPD packets steered to LegacyPD processor. Not
 * cleared on read.
 */
#define       MC_CMD_EFTEST_FASTPD_GET_STATS_OUT_FASTPD_PKT_STEER_CNT_OFST 0
#define       MC_CMD_EFTEST_FASTPD_GET_STATS_OUT_FASTPD_PKT_STEER_CNT_LEN 4
/* The number of times packet steering was changed between SoftPD and FastPD
 * engine, cleared on read.
 */
#define       MC_CMD_EFTEST_FASTPD_GET_STATS_OUT_FASTPD_SWITCH_COUNT_OFST 4
#define       MC_CMD_EFTEST_FASTPD_GET_STATS_OUT_FASTPD_SWITCH_COUNT_LEN 4
/* Number of packets processed by fastPD, per port, cleared on read */
#define       MC_CMD_EFTEST_FASTPD_GET_STATS_OUT_FAST_PD_PACKET_COUNTS_OFST 8
#define       MC_CMD_EFTEST_FASTPD_GET_STATS_OUT_FAST_PD_PACKET_COUNTS_LEN 8
#define       MC_CMD_EFTEST_FASTPD_GET_STATS_OUT_FAST_PD_PACKET_COUNTS_LO_OFST 8
#define       MC_CMD_EFTEST_FASTPD_GET_STATS_OUT_FAST_PD_PACKET_COUNTS_LO_LEN 4
#define       MC_CMD_EFTEST_FASTPD_GET_STATS_OUT_FAST_PD_PACKET_COUNTS_LO_LBN 64
#define       MC_CMD_EFTEST_FASTPD_GET_STATS_OUT_FAST_PD_PACKET_COUNTS_LO_WIDTH 32
#define       MC_CMD_EFTEST_FASTPD_GET_STATS_OUT_FAST_PD_PACKET_COUNTS_HI_OFST 12
#define       MC_CMD_EFTEST_FASTPD_GET_STATS_OUT_FAST_PD_PACKET_COUNTS_HI_LEN 4
#define       MC_CMD_EFTEST_FASTPD_GET_STATS_OUT_FAST_PD_PACKET_COUNTS_HI_LBN 96
#define       MC_CMD_EFTEST_FASTPD_GET_STATS_OUT_FAST_PD_PACKET_COUNTS_HI_WIDTH 32
#define       MC_CMD_EFTEST_FASTPD_GET_STATS_OUT_FAST_PD_PACKET_COUNTS_NUM 4
/* The number of times the history fifo overflow bit has been seen. Not cleared
 * on read.
 */
#define       MC_CMD_EFTEST_FASTPD_GET_STATS_OUT_HIST_FIFO_OFLOW_COUNT_OFST 40
#define       MC_CMD_EFTEST_FASTPD_GET_STATS_OUT_HIST_FIFO_OFLOW_COUNT_LEN 4
/* Buckets of counts for consecutive packets processed by fastPD. Bucket 0
 * counts zeros, Bucket n covers [ 2**(n-1) , 2**n ). Cleared on read.
 */
#define       MC_CMD_EFTEST_FASTPD_GET_STATS_OUT_FASTPD_COUNT_BUCKETS_OFST 44
#define       MC_CMD_EFTEST_FASTPD_GET_STATS_OUT_FASTPD_COUNT_BUCKETS_LEN 4
#define       MC_CMD_EFTEST_FASTPD_GET_STATS_OUT_FASTPD_COUNT_BUCKETS_NUM 16
/* Buckets of counts for consecutive packets processed by fastPD. Bucket 0
 * counts zeros, Bucket n covers [ 2**(n-1) , 2**n ). Cleared on read.
 */
#define       MC_CMD_EFTEST_FASTPD_GET_STATS_OUT_SOFTPD_COUNT_BUCKETS_OFST 108
#define       MC_CMD_EFTEST_FASTPD_GET_STATS_OUT_SOFTPD_COUNT_BUCKETS_LEN 4
#define       MC_CMD_EFTEST_FASTPD_GET_STATS_OUT_SOFTPD_COUNT_BUCKETS_NUM 16
/* Total of all the counts from HIST_FIFO_DATA that were for the fastPD.
 * Cleared on read.
 */
#define       MC_CMD_EFTEST_FASTPD_GET_STATS_OUT_FASTPD_COUNTS_TOTAL_OFST 172
#define       MC_CMD_EFTEST_FASTPD_GET_STATS_OUT_FASTPD_COUNTS_TOTAL_LEN 4
/* Total of all the counts from HIST_FIFO_DATA that were for the softPD.
 * Cleared on read.
 */
#define       MC_CMD_EFTEST_FASTPD_GET_STATS_OUT_SOFTPD_COUNTS_TOTAL_OFST 176
#define       MC_CMD_EFTEST_FASTPD_GET_STATS_OUT_SOFTPD_COUNTS_TOTAL_LEN 4
/* Number of times count from HIST_FIFO_DATA for the fastPD was maximum value.
 * Cleared on read.
 */
#define       MC_CMD_EFTEST_FASTPD_GET_STATS_OUT_FASTPD_SATUR_COUNT_OFST 180
#define       MC_CMD_EFTEST_FASTPD_GET_STATS_OUT_FASTPD_SATUR_COUNT_LEN 4
/* Number of times count from HIST_FIFO_DATA for the softPD was maximum value.
 * Cleared on read.
 */
#define       MC_CMD_EFTEST_FASTPD_GET_STATS_OUT_SOFTPD_SATUR_COUNT_OFST 184
#define       MC_CMD_EFTEST_FASTPD_GET_STATS_OUT_SOFTPD_SATUR_COUNT_LEN 4

/* MC_CMD_EFTEST_MEM_TEST_IN msgrequest */
#define    MC_CMD_EFTEST_MEM_TEST_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_MEM_TEST_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_MEM_TEST_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_MEM_TEST_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_MEM_TEST_IN_EFTEST_OP_LEN 1
/* enum: Test dpcpu/dicpu memory */
#define          MC_CMD_EFTEST_MEM_TEST_IN_SATELLITE_TEST 0x0
/* enum: Test SMC memory */
#define          MC_CMD_EFTEST_MEM_TEST_IN_SMC_TEST 0x1
#define       MC_CMD_EFTEST_MEM_TEST_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_MEM_TEST_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN msgrequest */
#define    MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_LEN 12
/* identifies the test */
#define       MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_EFTEST_OP_LEN 1
/* enum: Test dpcpu/dicpu memory */
#define          MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_SATELLITE_TEST 0x0
/* enum: Test SMC memory */
#define          MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_SMC_TEST 0x1
#define       MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_EFTEST_OP_RSVD_LEN 2
/* Which CPUs to test the DMEM of (overlaps following bitfield) */
#define       MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_DMEM_TESTS_OFST 4
#define       MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_DMEM_TESTS_LEN 4
#define        MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_RXDP0_DMEM_OFST 4
#define        MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_RXDP0_DMEM_LBN 0
#define        MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_RXDP0_DMEM_WIDTH 1
#define        MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_RXDP1_DMEM_OFST 4
#define        MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_RXDP1_DMEM_LBN 1
#define        MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_RXDP1_DMEM_WIDTH 1
#define        MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_TXDP0_DMEM_OFST 4
#define        MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_TXDP0_DMEM_LBN 2
#define        MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_TXDP0_DMEM_WIDTH 1
#define        MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_TXDP1_DMEM_OFST 4
#define        MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_TXDP1_DMEM_LBN 3
#define        MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_TXDP1_DMEM_WIDTH 1
#define        MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_RXDI0_DMEM_OFST 4
#define        MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_RXDI0_DMEM_LBN 4
#define        MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_RXDI0_DMEM_WIDTH 1
#define        MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_RXDI1_DMEM_OFST 4
#define        MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_RXDI1_DMEM_LBN 5
#define        MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_RXDI1_DMEM_WIDTH 1
#define        MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_TXDI_DMEM_OFST 4
#define        MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_TXDI_DMEM_LBN 6
#define        MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_TXDI_DMEM_WIDTH 1
/* Which CPUs to test the IMEM of (overlaps following bitfield) */
#define       MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_IMEM_TESTS_OFST 8
#define       MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_IMEM_TESTS_LEN 4
#define        MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_RXDP0_IMEM_OFST 8
#define        MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_RXDP0_IMEM_LBN 0
#define        MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_RXDP0_IMEM_WIDTH 1
#define        MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_RXDP1_IMEM_OFST 8
#define        MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_RXDP1_IMEM_LBN 1
#define        MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_RXDP1_IMEM_WIDTH 1
#define        MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_TXDP0_IMEM_OFST 8
#define        MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_TXDP0_IMEM_LBN 2
#define        MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_TXDP0_IMEM_WIDTH 1
#define        MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_TXDP1_IMEM_OFST 8
#define        MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_TXDP1_IMEM_LBN 3
#define        MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_TXDP1_IMEM_WIDTH 1
#define        MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_RXDI0_IMEM_OFST 8
#define        MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_RXDI0_IMEM_LBN 4
#define        MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_RXDI0_IMEM_WIDTH 1
#define        MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_RXDI1_IMEM_OFST 8
#define        MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_RXDI1_IMEM_LBN 5
#define        MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_RXDI1_IMEM_WIDTH 1
#define        MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_TXDI_IMEM_OFST 8
#define        MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_TXDI_IMEM_LBN 6
#define        MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_IN_TXDI_IMEM_WIDTH 1

/* MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_OUT msgresponse */
#define    MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_OUT_LEN 12
/* Number of failing tests */
#define       MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_OUT_RESULT_OFST 0
#define       MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_OUT_RESULT_LEN 4
/* Bitfield of failed DMEM tests (same order as in input) */
#define       MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_OUT_DMEM_FAILURES_OFST 4
#define       MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_OUT_DMEM_FAILURES_LEN 4
/* Bitfield of failed IMEM tests (same order as in input) */
#define       MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_OUT_IMEM_FAILURES_OFST 8
#define       MC_CMD_EFTEST_MEM_TEST_SATELLITE_TEST_OUT_IMEM_FAILURES_LEN 4

/* MC_CMD_EFTEST_FASTPD_SET_PACKET_VALIDITY_CHECK_IN msgrequest */
#define    MC_CMD_EFTEST_FASTPD_SET_PACKET_VALIDITY_CHECK_IN_LEN 12
/* identifies the test */
#define       MC_CMD_EFTEST_FASTPD_SET_PACKET_VALIDITY_CHECK_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_FASTPD_SET_PACKET_VALIDITY_CHECK_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_FASTPD_SET_PACKET_VALIDITY_CHECK_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_FASTPD_SET_PACKET_VALIDITY_CHECK_IN_EFTEST_OP_LEN 1
/* enum: Control whether RX events say whether the fastPD was used for a packet
 */
#define          MC_CMD_EFTEST_FASTPD_SET_PACKET_VALIDITY_CHECK_IN_SET_INDICATOR 0x0
/* enum: Configure the steering of fastPD-capable packets to the legacy PD */
#define          MC_CMD_EFTEST_FASTPD_SET_PACKET_VALIDITY_CHECK_IN_CONFIGURE_STEERING 0x1
/* enum: Retrieve the fastPD statistics. Read-clear counters will be cleared.
 */
#define          MC_CMD_EFTEST_FASTPD_SET_PACKET_VALIDITY_CHECK_IN_GET_STATS 0x2
/* enum: Control whether or not packet checks must complete before LUE requests
 * are issude by fastPD
 */
#define          MC_CMD_EFTEST_FASTPD_SET_PACKET_VALIDITY_CHECK_IN_SET_PACKET_CHECK_MODE 0x3
/* enum: Set or clear the fastPD validity check, if set only MAC/MAC+VLAN
 * lookups occur
 */
#define          MC_CMD_EFTEST_FASTPD_SET_PACKET_VALIDITY_CHECK_IN_SET_PACKET_VALIDITY_CHECK 0x4
/* enum: Set or clear the mode which reduces delay per packet, if set only
 * MAC/MAC+VLAN match requests occur
 */
#define          MC_CMD_EFTEST_FASTPD_SET_PACKET_VALIDITY_CHECK_IN_SET_LUE_MAC_ONLY 0x5
#define       MC_CMD_EFTEST_FASTPD_SET_PACKET_VALIDITY_CHECK_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_FASTPD_SET_PACKET_VALIDITY_CHECK_IN_EFTEST_OP_RSVD_LEN 2
/* Which datapath (0/1) to configure */
#define       MC_CMD_EFTEST_FASTPD_SET_PACKET_VALIDITY_CHECK_IN_DATAPATH_OFST 4
#define       MC_CMD_EFTEST_FASTPD_SET_PACKET_VALIDITY_CHECK_IN_DATAPATH_LEN 4
/* Indicate if we want to set or clear the feature */
#define       MC_CMD_EFTEST_FASTPD_SET_PACKET_VALIDITY_CHECK_IN_ENABLE_N_OFST 8
#define       MC_CMD_EFTEST_FASTPD_SET_PACKET_VALIDITY_CHECK_IN_ENABLE_N_LEN 4
/* enum: This is the default value, all lookups will be done. */
#define          MC_CMD_EFTEST_FASTPD_SET_PACKET_VALIDITY_CHECK_IN_ENABLE 0x0
/* enum: Just MAC and VLAN lookups will be done. */
#define          MC_CMD_EFTEST_FASTPD_SET_PACKET_VALIDITY_CHECK_IN_DISABLE 0x1

/* MC_CMD_EFTEST_FASTPD_SET_LUE_MAC_ONLY_IN msgrequest */
#define    MC_CMD_EFTEST_FASTPD_SET_LUE_MAC_ONLY_IN_LEN 16
/* identifies the test */
#define       MC_CMD_EFTEST_FASTPD_SET_LUE_MAC_ONLY_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_FASTPD_SET_LUE_MAC_ONLY_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_FASTPD_SET_LUE_MAC_ONLY_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_FASTPD_SET_LUE_MAC_ONLY_IN_EFTEST_OP_LEN 1
/* enum: Control whether RX events say whether the fastPD was used for a packet
 */
#define          MC_CMD_EFTEST_FASTPD_SET_LUE_MAC_ONLY_IN_SET_INDICATOR 0x0
/* enum: Configure the steering of fastPD-capable packets to the legacy PD */
#define          MC_CMD_EFTEST_FASTPD_SET_LUE_MAC_ONLY_IN_CONFIGURE_STEERING 0x1
/* enum: Retrieve the fastPD statistics. Read-clear counters will be cleared.
 */
#define          MC_CMD_EFTEST_FASTPD_SET_LUE_MAC_ONLY_IN_GET_STATS 0x2
/* enum: Control whether or not packet checks must complete before LUE requests
 * are issude by fastPD
 */
#define          MC_CMD_EFTEST_FASTPD_SET_LUE_MAC_ONLY_IN_SET_PACKET_CHECK_MODE 0x3
/* enum: Set or clear the fastPD validity check, if set only MAC/MAC+VLAN
 * lookups occur
 */
#define          MC_CMD_EFTEST_FASTPD_SET_LUE_MAC_ONLY_IN_SET_PACKET_VALIDITY_CHECK 0x4
/* enum: Set or clear the mode which reduces delay per packet, if set only
 * MAC/MAC+VLAN match requests occur
 */
#define          MC_CMD_EFTEST_FASTPD_SET_LUE_MAC_ONLY_IN_SET_LUE_MAC_ONLY 0x5
#define       MC_CMD_EFTEST_FASTPD_SET_LUE_MAC_ONLY_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_FASTPD_SET_LUE_MAC_ONLY_IN_EFTEST_OP_RSVD_LEN 2
/* Which datapath (0/1) to configure */
#define       MC_CMD_EFTEST_FASTPD_SET_LUE_MAC_ONLY_IN_DATAPATH_OFST 4
#define       MC_CMD_EFTEST_FASTPD_SET_LUE_MAC_ONLY_IN_DATAPATH_LEN 4
/* The requested port */
#define       MC_CMD_EFTEST_FASTPD_SET_LUE_MAC_ONLY_IN_PORT_OFST 8
#define       MC_CMD_EFTEST_FASTPD_SET_LUE_MAC_ONLY_IN_PORT_LEN 4
/* Indicate if we want to set or clear the feature */
#define       MC_CMD_EFTEST_FASTPD_SET_LUE_MAC_ONLY_IN_ENABLE_OFST 12
#define       MC_CMD_EFTEST_FASTPD_SET_LUE_MAC_ONLY_IN_ENABLE_LEN 4
/* enum: This is the default value, all match requests will be done. */
#define          MC_CMD_EFTEST_FASTPD_SET_LUE_MAC_ONLY_IN_DISABLE 0x0
/* enum: Just MAC and MAC+VLAN match requests will be done. */
#define          MC_CMD_EFTEST_FASTPD_SET_LUE_MAC_ONLY_IN_ENABLE 0x1

/* MC_CMD_EFTEST_MP_MRR_IN msgrequest */
#define    MC_CMD_EFTEST_MP_MRR_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_MP_MRR_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_MP_MRR_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_MP_MRR_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_MP_MRR_IN_EFTEST_OP_LEN 1
/* enum: Maybe set the masks that control which PFs contribute the device-wide
 * MP and MRR
 */
#define          MC_CMD_EFTEST_MP_MRR_IN_SET_MP_MRR 0x0
#define       MC_CMD_EFTEST_MP_MRR_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_MP_MRR_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_MP_MRR_SET_MP_MRR_IN msgrequest */
#define    MC_CMD_EFTEST_MP_MRR_SET_MP_MRR_IN_LEN 16
/* identifies the test */
#define       MC_CMD_EFTEST_MP_MRR_SET_MP_MRR_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_MP_MRR_SET_MP_MRR_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_MP_MRR_SET_MP_MRR_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_MP_MRR_SET_MP_MRR_IN_EFTEST_OP_LEN 1
/* enum: Maybe set the masks that control which PFs contribute the device-wide
 * MP and MRR
 */
#define          MC_CMD_EFTEST_MP_MRR_SET_MP_MRR_IN_SET_MP_MRR 0x0
#define       MC_CMD_EFTEST_MP_MRR_SET_MP_MRR_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_MP_MRR_SET_MP_MRR_IN_EFTEST_OP_RSVD_LEN 2
/* which masks to set */
#define       MC_CMD_EFTEST_MP_MRR_SET_MP_MRR_IN_SET_MASK_OFST 4
#define       MC_CMD_EFTEST_MP_MRR_SET_MP_MRR_IN_SET_MASK_LEN 4
#define        MC_CMD_EFTEST_MP_MRR_SET_MP_MRR_IN_SET_MP_OFST 4
#define        MC_CMD_EFTEST_MP_MRR_SET_MP_MRR_IN_SET_MP_LBN 0
#define        MC_CMD_EFTEST_MP_MRR_SET_MP_MRR_IN_SET_MP_WIDTH 1
#define        MC_CMD_EFTEST_MP_MRR_SET_MP_MRR_IN_SET_MRR_OFST 4
#define        MC_CMD_EFTEST_MP_MRR_SET_MP_MRR_IN_SET_MRR_LBN 1
#define        MC_CMD_EFTEST_MP_MRR_SET_MP_MRR_IN_SET_MRR_WIDTH 1
/* Masks indicating which PFs should contribute to the device-wide MaxPayload.
 * A value of 1 indicates that the PF does contribute. Don't care value if
 * SET_MP isn't set.
 */
#define       MC_CMD_EFTEST_MP_MRR_SET_MP_MRR_IN_MP_MASK_OFST 8
#define       MC_CMD_EFTEST_MP_MRR_SET_MP_MRR_IN_MP_MASK_LEN 4
/* As per MP_MASK, but for MaxReadRequest */
#define       MC_CMD_EFTEST_MP_MRR_SET_MP_MRR_IN_MRR_MASK_OFST 12
#define       MC_CMD_EFTEST_MP_MRR_SET_MP_MRR_IN_MRR_MASK_LEN 4

/* MC_CMD_EFTEST_MP_MRR_SET_MP_MRR_OUT msgresponse */
#define    MC_CMD_EFTEST_MP_MRR_SET_MP_MRR_OUT_LEN 16
/* Mask indicating which PFs do contribute to the device-wide MaxPayload. A
 * value of 1 indicates that the PF does contribute.
 */
#define       MC_CMD_EFTEST_MP_MRR_SET_MP_MRR_OUT_MP_MASK_OFST 0
#define       MC_CMD_EFTEST_MP_MRR_SET_MP_MRR_OUT_MP_MASK_LEN 4
/* As per MP_MASK, but for MaxReadRequest */
#define       MC_CMD_EFTEST_MP_MRR_SET_MP_MRR_OUT_MRR_MASK_OFST 4
#define       MC_CMD_EFTEST_MP_MRR_SET_MP_MRR_OUT_MRR_MASK_LEN 4
/* The current device-wide MaxPayload */
#define       MC_CMD_EFTEST_MP_MRR_SET_MP_MRR_OUT_MP_OFST 8
#define       MC_CMD_EFTEST_MP_MRR_SET_MP_MRR_OUT_MP_LEN 4
/* The current device-wide MaxReadRequest */
#define       MC_CMD_EFTEST_MP_MRR_SET_MP_MRR_OUT_MRR_OFST 12
#define       MC_CMD_EFTEST_MP_MRR_SET_MP_MRR_OUT_MRR_LEN 4

/* MC_CMD_EFTEST_PTM_IN msgrequest */
#define    MC_CMD_EFTEST_PTM_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_PTM_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_PTM_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_PTM_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_PTM_IN_EFTEST_OP_LEN 1
/* enum: start */
#define          MC_CMD_EFTEST_PTM_IN_START 0x0
/* enum: query */
#define          MC_CMD_EFTEST_PTM_IN_QUERY 0x1
/* enum: stop */
#define          MC_CMD_EFTEST_PTM_IN_STOP 0x2
/* enum: start toggling test */
#define          MC_CMD_EFTEST_PTM_IN_START_TOGGLING 0x3
/* enum: PTM manual update request */
#define          MC_CMD_EFTEST_PTM_IN_UPDATE_REQ 0x4
#define       MC_CMD_EFTEST_PTM_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_PTM_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_PTM_QUERY_IN msgrequest */
#define    MC_CMD_EFTEST_PTM_QUERY_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_PTM_QUERY_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_PTM_QUERY_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_PTM_QUERY_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_PTM_QUERY_IN_EFTEST_OP_LEN 1
/* enum: start */
#define          MC_CMD_EFTEST_PTM_QUERY_IN_START 0x0
/* enum: query */
#define          MC_CMD_EFTEST_PTM_QUERY_IN_QUERY 0x1
/* enum: stop */
#define          MC_CMD_EFTEST_PTM_QUERY_IN_STOP 0x2
/* enum: start toggling test */
#define          MC_CMD_EFTEST_PTM_QUERY_IN_START_TOGGLING 0x3
/* enum: PTM manual update request */
#define          MC_CMD_EFTEST_PTM_QUERY_IN_UPDATE_REQ 0x4
#define       MC_CMD_EFTEST_PTM_QUERY_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_PTM_QUERY_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_PTM_OUT msgresponse */
#define    MC_CMD_EFTEST_PTM_OUT_LEN 0

/* MC_CMD_EFTEST_PTM_QUERY_OUT msgresponse */
#define    MC_CMD_EFTEST_PTM_QUERY_OUT_LEN 12
/* requests */
#define       MC_CMD_EFTEST_PTM_QUERY_OUT_REQUESTS_OFST 0
#define       MC_CMD_EFTEST_PTM_QUERY_OUT_REQUESTS_LEN 4
/* responses */
#define       MC_CMD_EFTEST_PTM_QUERY_OUT_RESPONSES_OFST 4
#define       MC_CMD_EFTEST_PTM_QUERY_OUT_RESPONSES_LEN 4
/* insane responses */
#define       MC_CMD_EFTEST_PTM_QUERY_OUT_INSANE_RESPONSES_OFST 8
#define       MC_CMD_EFTEST_PTM_QUERY_OUT_INSANE_RESPONSES_LEN 4

/* MC_CMD_EFTEST_PTP_IN msgrequest */
#define    MC_CMD_EFTEST_PTP_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_PTP_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_PTP_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_PTP_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_PTP_IN_EFTEST_OP_LEN 1
/* enum: Medford2 only. Configure the PTP peripherals for PPS testing. This is
 * used to configure the PTP peripherals to loop the PPS output of each to the
 * input of the other and to configure a non-standard Minor wrap value.
 */
#define          MC_CMD_EFTEST_PTP_IN_PPS_START 0x0
/* enum: Medford2 only. Stop the PPS test and reconfigure the PTP peripherals
 * back into normal mode of operation.
 */
#define          MC_CMD_EFTEST_PTP_IN_PPS_STOP 0x1
/* enum: Medford2 only. Read the times of the recent PPS input events */
#define          MC_CMD_EFTEST_PTP_IN_PPS_READ 0x2
/* enum: Medford2 only. Apply an offset to the clock when using a non-default
 * minor register limit for testing i.e. not the firmware default value.
 */
#define          MC_CMD_EFTEST_PTP_IN_APPLY_OFFSET 0x3
/* enum: Medford2 only. Get a snapshot of the PTM and PTP clocks taken at the
 * same point in time.
 */
#define          MC_CMD_EFTEST_PTP_IN_PTM_SNAPSHOT 0x4
#define       MC_CMD_EFTEST_PTP_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_PTP_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_PTP_PPS_START_IN msgrequest */
#define    MC_CMD_EFTEST_PTP_PPS_START_IN_LEN 12
/* identifies the test */
#define       MC_CMD_EFTEST_PTP_PPS_START_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_PTP_PPS_START_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_PTP_PPS_START_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_PTP_PPS_START_IN_EFTEST_OP_LEN 1
/* enum: Medford2 only. Configure the PTP peripherals for PPS testing. This is
 * used to configure the PTP peripherals to loop the PPS output of each to the
 * input of the other and to configure a non-standard Minor wrap value.
 */
#define          MC_CMD_EFTEST_PTP_PPS_START_IN_PPS_START 0x0
/* enum: Medford2 only. Stop the PPS test and reconfigure the PTP peripherals
 * back into normal mode of operation.
 */
#define          MC_CMD_EFTEST_PTP_PPS_START_IN_PPS_STOP 0x1
/* enum: Medford2 only. Read the times of the recent PPS input events */
#define          MC_CMD_EFTEST_PTP_PPS_START_IN_PPS_READ 0x2
/* enum: Medford2 only. Apply an offset to the clock when using a non-default
 * minor register limit for testing i.e. not the firmware default value.
 */
#define          MC_CMD_EFTEST_PTP_PPS_START_IN_APPLY_OFFSET 0x3
/* enum: Medford2 only. Get a snapshot of the PTM and PTP clocks taken at the
 * same point in time.
 */
#define          MC_CMD_EFTEST_PTP_PPS_START_IN_PTM_SNAPSHOT 0x4
#define       MC_CMD_EFTEST_PTP_PPS_START_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_PTP_PPS_START_IN_EFTEST_OP_RSVD_LEN 2
/* Bitmask of control flags */
#define       MC_CMD_EFTEST_PTP_PPS_START_IN_CONTROL_OFST 4
#define       MC_CMD_EFTEST_PTP_PPS_START_IN_CONTROL_LEN 4
#define        MC_CMD_EFTEST_PTP_PPS_START_IN_PPS_LOOPBACK_OFST 4
#define        MC_CMD_EFTEST_PTP_PPS_START_IN_PPS_LOOPBACK_LBN 0
#define        MC_CMD_EFTEST_PTP_PPS_START_IN_PPS_LOOPBACK_WIDTH 1
#define        MC_CMD_EFTEST_PTP_PPS_START_IN_PPS_DAISYCHAIN_PERIPH0_OFST 4
#define        MC_CMD_EFTEST_PTP_PPS_START_IN_PPS_DAISYCHAIN_PERIPH0_LBN 1
#define        MC_CMD_EFTEST_PTP_PPS_START_IN_PPS_DAISYCHAIN_PERIPH0_WIDTH 1
#define        MC_CMD_EFTEST_PTP_PPS_START_IN_PPS_DAISYCHAIN_PERIPH1_OFST 4
#define        MC_CMD_EFTEST_PTP_PPS_START_IN_PPS_DAISYCHAIN_PERIPH1_LBN 2
#define        MC_CMD_EFTEST_PTP_PPS_START_IN_PPS_DAISYCHAIN_PERIPH1_WIDTH 1
/* Specifies the wrap point of the PTP minor register i.e. the value that will
 * be programmed into the PTP_MAXCOUNT_REG register of each peripheral.
 */
#define       MC_CMD_EFTEST_PTP_PPS_START_IN_MINOR_LIMIT_OFST 8
#define       MC_CMD_EFTEST_PTP_PPS_START_IN_MINOR_LIMIT_LEN 4

/* MC_CMD_EFTEST_PTP_PPS_READ_IN msgrequest */
#define    MC_CMD_EFTEST_PTP_PPS_READ_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_PTP_PPS_READ_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_PTP_PPS_READ_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_PTP_PPS_READ_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_PTP_PPS_READ_IN_EFTEST_OP_LEN 1
/* enum: Medford2 only. Configure the PTP peripherals for PPS testing. This is
 * used to configure the PTP peripherals to loop the PPS output of each to the
 * input of the other and to configure a non-standard Minor wrap value.
 */
#define          MC_CMD_EFTEST_PTP_PPS_READ_IN_PPS_START 0x0
/* enum: Medford2 only. Stop the PPS test and reconfigure the PTP peripherals
 * back into normal mode of operation.
 */
#define          MC_CMD_EFTEST_PTP_PPS_READ_IN_PPS_STOP 0x1
/* enum: Medford2 only. Read the times of the recent PPS input events */
#define          MC_CMD_EFTEST_PTP_PPS_READ_IN_PPS_READ 0x2
/* enum: Medford2 only. Apply an offset to the clock when using a non-default
 * minor register limit for testing i.e. not the firmware default value.
 */
#define          MC_CMD_EFTEST_PTP_PPS_READ_IN_APPLY_OFFSET 0x3
/* enum: Medford2 only. Get a snapshot of the PTM and PTP clocks taken at the
 * same point in time.
 */
#define          MC_CMD_EFTEST_PTP_PPS_READ_IN_PTM_SNAPSHOT 0x4
#define       MC_CMD_EFTEST_PTP_PPS_READ_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_PTP_PPS_READ_IN_EFTEST_OP_RSVD_LEN 2
/* Index of PTP peripheral */
#define       MC_CMD_EFTEST_PTP_PPS_READ_IN_PERIPH_ID_OFST 4
#define       MC_CMD_EFTEST_PTP_PPS_READ_IN_PERIPH_ID_LEN 4

/* MC_CMD_EFTEST_PTP_APPLY_OFFSET_IN msgrequest */
#define    MC_CMD_EFTEST_PTP_APPLY_OFFSET_IN_LEN 24
/* identifies the test */
#define       MC_CMD_EFTEST_PTP_APPLY_OFFSET_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_PTP_APPLY_OFFSET_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_PTP_APPLY_OFFSET_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_PTP_APPLY_OFFSET_IN_EFTEST_OP_LEN 1
/* enum: Medford2 only. Configure the PTP peripherals for PPS testing. This is
 * used to configure the PTP peripherals to loop the PPS output of each to the
 * input of the other and to configure a non-standard Minor wrap value.
 */
#define          MC_CMD_EFTEST_PTP_APPLY_OFFSET_IN_PPS_START 0x0
/* enum: Medford2 only. Stop the PPS test and reconfigure the PTP peripherals
 * back into normal mode of operation.
 */
#define          MC_CMD_EFTEST_PTP_APPLY_OFFSET_IN_PPS_STOP 0x1
/* enum: Medford2 only. Read the times of the recent PPS input events */
#define          MC_CMD_EFTEST_PTP_APPLY_OFFSET_IN_PPS_READ 0x2
/* enum: Medford2 only. Apply an offset to the clock when using a non-default
 * minor register limit for testing i.e. not the firmware default value.
 */
#define          MC_CMD_EFTEST_PTP_APPLY_OFFSET_IN_APPLY_OFFSET 0x3
/* enum: Medford2 only. Get a snapshot of the PTM and PTP clocks taken at the
 * same point in time.
 */
#define          MC_CMD_EFTEST_PTP_APPLY_OFFSET_IN_PTM_SNAPSHOT 0x4
#define       MC_CMD_EFTEST_PTP_APPLY_OFFSET_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_PTP_APPLY_OFFSET_IN_EFTEST_OP_RSVD_LEN 2
/* Index of PTP peripheral */
#define       MC_CMD_EFTEST_PTP_APPLY_OFFSET_IN_PERIPH_ID_OFST 4
#define       MC_CMD_EFTEST_PTP_APPLY_OFFSET_IN_PERIPH_ID_LEN 4
/* Minor register limit to use when determining wrap. Use 0 to represent the
 * value 2^32.
 */
#define       MC_CMD_EFTEST_PTP_APPLY_OFFSET_IN_LIMIT_OFST 8
#define       MC_CMD_EFTEST_PTP_APPLY_OFFSET_IN_LIMIT_LEN 4
/* Adjustment minor value */
#define       MC_CMD_EFTEST_PTP_APPLY_OFFSET_IN_MINOR_OFST 12
#define       MC_CMD_EFTEST_PTP_APPLY_OFFSET_IN_MINOR_LEN 4
/* Adjustment major value (low part) */
#define       MC_CMD_EFTEST_PTP_APPLY_OFFSET_IN_MAJOR_LO_OFST 16
#define       MC_CMD_EFTEST_PTP_APPLY_OFFSET_IN_MAJOR_LO_LEN 4
/* Adjustment major value (high part) */
#define       MC_CMD_EFTEST_PTP_APPLY_OFFSET_IN_MAJOR_HI_OFST 20
#define       MC_CMD_EFTEST_PTP_APPLY_OFFSET_IN_MAJOR_HI_LEN 4

/* MC_CMD_EFTEST_PTP_PTM_SNAPSHOT_IN msgrequest */
#define    MC_CMD_EFTEST_PTP_PTM_SNAPSHOT_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_PTP_PTM_SNAPSHOT_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_PTP_PTM_SNAPSHOT_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_PTP_PTM_SNAPSHOT_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_PTP_PTM_SNAPSHOT_IN_EFTEST_OP_LEN 1
/* enum: Medford2 only. Configure the PTP peripherals for PPS testing. This is
 * used to configure the PTP peripherals to loop the PPS output of each to the
 * input of the other and to configure a non-standard Minor wrap value.
 */
#define          MC_CMD_EFTEST_PTP_PTM_SNAPSHOT_IN_PPS_START 0x0
/* enum: Medford2 only. Stop the PPS test and reconfigure the PTP peripherals
 * back into normal mode of operation.
 */
#define          MC_CMD_EFTEST_PTP_PTM_SNAPSHOT_IN_PPS_STOP 0x1
/* enum: Medford2 only. Read the times of the recent PPS input events */
#define          MC_CMD_EFTEST_PTP_PTM_SNAPSHOT_IN_PPS_READ 0x2
/* enum: Medford2 only. Apply an offset to the clock when using a non-default
 * minor register limit for testing i.e. not the firmware default value.
 */
#define          MC_CMD_EFTEST_PTP_PTM_SNAPSHOT_IN_APPLY_OFFSET 0x3
/* enum: Medford2 only. Get a snapshot of the PTM and PTP clocks taken at the
 * same point in time.
 */
#define          MC_CMD_EFTEST_PTP_PTM_SNAPSHOT_IN_PTM_SNAPSHOT 0x4
#define       MC_CMD_EFTEST_PTP_PTM_SNAPSHOT_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_PTP_PTM_SNAPSHOT_IN_EFTEST_OP_RSVD_LEN 2
/* Index of PTP peripheral */
#define       MC_CMD_EFTEST_PTP_PTM_SNAPSHOT_IN_PERIPH_ID_OFST 4
#define       MC_CMD_EFTEST_PTP_PTM_SNAPSHOT_IN_PERIPH_ID_LEN 4

/* MC_CMD_EFTEST_PTP_OUT msgresponse */
#define    MC_CMD_EFTEST_PTP_OUT_LEN 0

/* MC_CMD_EFTEST_PTP_PPS_READ_OUT msgresponse */
#define    MC_CMD_EFTEST_PTP_PPS_READ_OUT_LENMIN 16
#define    MC_CMD_EFTEST_PTP_PPS_READ_OUT_LENMAX 244
#define    MC_CMD_EFTEST_PTP_PPS_READ_OUT_LENMAX_MCDI2 1012
#define    MC_CMD_EFTEST_PTP_PPS_READ_OUT_LEN(num) (4+12*(num))
#define    MC_CMD_EFTEST_PTP_PPS_READ_OUT_SAMPLES_NUM(len) (((len)-4)/12)
/* The number of PPS samples in this response */
#define       MC_CMD_EFTEST_PTP_PPS_READ_OUT_NUM_SAMPLES_OFST 0
#define       MC_CMD_EFTEST_PTP_PPS_READ_OUT_NUM_SAMPLES_LEN 4
/* An array of times at which the PPS pulses occurred */
#define       MC_CMD_EFTEST_PTP_PPS_READ_OUT_SAMPLES_OFST 4
#define       MC_CMD_EFTEST_PTP_PPS_READ_OUT_SAMPLES_LEN 12
#define       MC_CMD_EFTEST_PTP_PPS_READ_OUT_SAMPLES_MINNUM 1
#define       MC_CMD_EFTEST_PTP_PPS_READ_OUT_SAMPLES_MAXNUM 20
#define       MC_CMD_EFTEST_PTP_PPS_READ_OUT_SAMPLES_MAXNUM_MCDI2 84
/* PTP clock minor register at PPS event */
#define       MC_CMD_EFTEST_PTP_PPS_READ_OUT_MINOR_OFST 4
#define       MC_CMD_EFTEST_PTP_PPS_READ_OUT_MINOR_LEN 4
/* PTP clock major register at PPS event (low part) */
#define       MC_CMD_EFTEST_PTP_PPS_READ_OUT_MAJOR_LO_OFST 8
#define       MC_CMD_EFTEST_PTP_PPS_READ_OUT_MAJOR_LO_LEN 4
/* PTP clock major register at PPS event (high part) */
#define       MC_CMD_EFTEST_PTP_PPS_READ_OUT_MAJOR_HI_OFST 12
#define       MC_CMD_EFTEST_PTP_PPS_READ_OUT_MAJOR_HI_LEN 4

/* MC_CMD_EFTEST_PTP_PTM_SNAPSHOT_OUT msgresponse */
#define    MC_CMD_EFTEST_PTP_PTM_SNAPSHOT_OUT_LEN 20
/* Low part of PTM timer snapshot */
#define       MC_CMD_EFTEST_PTP_PTM_SNAPSHOT_OUT_PTM_LO_OFST 0
#define       MC_CMD_EFTEST_PTP_PTM_SNAPSHOT_OUT_PTM_LO_LEN 4
/* High part of PTM timer snapshot */
#define       MC_CMD_EFTEST_PTP_PTM_SNAPSHOT_OUT_PTM_HI_OFST 4
#define       MC_CMD_EFTEST_PTP_PTM_SNAPSHOT_OUT_PTM_HI_LEN 4
/* PTP minor register snapshot */
#define       MC_CMD_EFTEST_PTP_PTM_SNAPSHOT_OUT_PTP_MINOR_OFST 8
#define       MC_CMD_EFTEST_PTP_PTM_SNAPSHOT_OUT_PTP_MINOR_LEN 4
/* PTP major register snapshot (low part) */
#define       MC_CMD_EFTEST_PTP_PTM_SNAPSHOT_OUT_PTP_MAJOR_LO_OFST 12
#define       MC_CMD_EFTEST_PTP_PTM_SNAPSHOT_OUT_PTP_MAJOR_LO_LEN 4
/* PTP major register snapshot (high part) */
#define       MC_CMD_EFTEST_PTP_PTM_SNAPSHOT_OUT_PTP_MAJOR_HI_OFST 16
#define       MC_CMD_EFTEST_PTP_PTM_SNAPSHOT_OUT_PTP_MAJOR_HI_LEN 4

/* MC_CMD_EFTEST_HW_PERF_MON_IN msgrequest */
#define    MC_CMD_EFTEST_HW_PERF_MON_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_HW_PERF_MON_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_HW_PERF_MON_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_HW_PERF_MON_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_HW_PERF_MON_IN_EFTEST_OP_LEN 1
/* enum: controls HW performance monitors */
#define          MC_CMD_EFTEST_HW_PERF_MON_IN_CTRL 0x0
/* enum: saves a snapshot of counters */
#define          MC_CMD_EFTEST_HW_PERF_MON_IN_SNAPSHOT 0x1
#define       MC_CMD_EFTEST_HW_PERF_MON_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_HW_PERF_MON_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_HW_PERF_MON_CTRL_IN msgrequest */
#define    MC_CMD_EFTEST_HW_PERF_MON_CTRL_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_HW_PERF_MON_CTRL_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_HW_PERF_MON_CTRL_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_HW_PERF_MON_CTRL_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_HW_PERF_MON_CTRL_IN_EFTEST_OP_LEN 1
/* enum: controls HW performance monitors */
#define          MC_CMD_EFTEST_HW_PERF_MON_CTRL_IN_CTRL 0x0
/* enum: saves a snapshot of counters */
#define          MC_CMD_EFTEST_HW_PERF_MON_CTRL_IN_SNAPSHOT 0x1
#define       MC_CMD_EFTEST_HW_PERF_MON_CTRL_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_HW_PERF_MON_CTRL_IN_EFTEST_OP_RSVD_LEN 2
/* Turn on HW performance monitors */
#define       MC_CMD_EFTEST_HW_PERF_MON_CTRL_IN_ON_OFST 4
#define       MC_CMD_EFTEST_HW_PERF_MON_CTRL_IN_ON_LEN 4
/* enum: Turn on. */
#define          MC_CMD_EFTEST_HW_PERF_MON_CTRL_IN_ENABLE 0x1
/* enum: Turn off. */
#define          MC_CMD_EFTEST_HW_PERF_MON_CTRL_IN_DISABLE 0x0

/* MC_CMD_EFTEST_HW_PERF_MON_SNAPSHOT_OUT msgrequest */
#define    MC_CMD_EFTEST_HW_PERF_MON_SNAPSHOT_OUT_LEN 16
/* BIU_PCIE_BW_INI_TBASE_LO */
#define       MC_CMD_EFTEST_HW_PERF_MON_SNAPSHOT_OUT_BIU_PCIE_BW_INI_TBASE_LO_OFST 0
#define       MC_CMD_EFTEST_HW_PERF_MON_SNAPSHOT_OUT_BIU_PCIE_BW_INI_TBASE_LO_LEN 4
/* BIU_PCIE_BW_CPL_TBASE_LO */
#define       MC_CMD_EFTEST_HW_PERF_MON_SNAPSHOT_OUT_BIU_PCIE_BW_CPL_TBASE_LO_OFST 4
#define       MC_CMD_EFTEST_HW_PERF_MON_SNAPSHOT_OUT_BIU_PCIE_BW_CPL_TBASE_LO_LEN 4
/* DWN0_PKT_RATE_TBASE_LO */
#define       MC_CMD_EFTEST_HW_PERF_MON_SNAPSHOT_OUT_DWN0_PKT_RATE_TBASE_LO_OFST 8
#define       MC_CMD_EFTEST_HW_PERF_MON_SNAPSHOT_OUT_DWN0_PKT_RATE_TBASE_LO_LEN 4
/* DWN1_PKT_RATE_TBASE_LO */
#define       MC_CMD_EFTEST_HW_PERF_MON_SNAPSHOT_OUT_DWN1_PKT_RATE_TBASE_LO_OFST 12
#define       MC_CMD_EFTEST_HW_PERF_MON_SNAPSHOT_OUT_DWN1_PKT_RATE_TBASE_LO_LEN 4

/* MC_CMD_EFTEST_PORT_ERRORS_IN msgrequest */
#define    MC_CMD_EFTEST_PORT_ERRORS_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_PORT_ERRORS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_PORT_ERRORS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_PORT_ERRORS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_PORT_ERRORS_IN_EFTEST_OP_LEN 1
/* enum: Get accumulated port errors */
#define          MC_CMD_EFTEST_PORT_ERRORS_IN_GET 0x0
#define       MC_CMD_EFTEST_PORT_ERRORS_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_PORT_ERRORS_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_PORT_ERRORS_GET_IN msgrequest */
#define    MC_CMD_EFTEST_PORT_ERRORS_GET_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_PORT_ERRORS_GET_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_PORT_ERRORS_GET_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_PORT_ERRORS_GET_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_PORT_ERRORS_GET_IN_EFTEST_OP_LEN 1
#define       MC_CMD_EFTEST_PORT_ERRORS_GET_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_PORT_ERRORS_GET_IN_EFTEST_OP_RSVD_LEN 2
/* If nonzero, clear the port errors after getting them */
#define       MC_CMD_EFTEST_PORT_ERRORS_GET_IN_RESET_OFST 4
#define       MC_CMD_EFTEST_PORT_ERRORS_GET_IN_RESET_LEN 4

/* MC_CMD_EFTEST_PORT_ERRORS_GET_OUT msgresponse */
#define    MC_CMD_EFTEST_PORT_ERRORS_GET_OUT_LEN 4
/* Port errors. Same layout as NP_ALERT_REG2. */
#define       MC_CMD_EFTEST_PORT_ERRORS_GET_OUT_ERRORS_OFST 0
#define       MC_CMD_EFTEST_PORT_ERRORS_GET_OUT_ERRORS_LEN 4

/* MC_CMD_EFTEST_MAC_TX_AUTOPAD_IN msgrequest */
#define    MC_CMD_EFTEST_MAC_TX_AUTOPAD_IN_LEN 4
/* identified the test */
#define       MC_CMD_EFTEST_MAC_TX_AUTOPAD_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_MAC_TX_AUTOPAD_IN_EFTEST_ID_LEN 1
/* the opreation requested */
#define       MC_CMD_EFTEST_MAC_TX_AUTOPAD_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_MAC_TX_AUTOPAD_IN_EFTEST_OP_LEN 1
/* enum: Get TX autopadding configuration */
#define          MC_CMD_EFTEST_MAC_TX_AUTOPAD_IN_GET 0x0
/* enum: Set TX autopadding configuration */
#define          MC_CMD_EFTEST_MAC_TX_AUTOPAD_IN_SET 0x1
/* Used to be port number, now unused. The port to be configured is the one
 * associated with the calling function
 */
#define       MC_CMD_EFTEST_MAC_TX_AUTOPAD_IN_EFTEST_PORT_NUMBER_OFST 2
#define       MC_CMD_EFTEST_MAC_TX_AUTOPAD_IN_EFTEST_PORT_NUMBER_LEN 1
/* Selected TX_PAD_EN state, 1 for enabled, 0 for disabled */
#define       MC_CMD_EFTEST_MAC_TX_AUTOPAD_IN_EFTEST_TX_PAD_EN_OFST 3
#define       MC_CMD_EFTEST_MAC_TX_AUTOPAD_IN_EFTEST_TX_PAD_EN_LEN 1

/* MC_CMD_EFTEST_MAC_TX_AUTOPAD_OUT msgresponse */
#define    MC_CMD_EFTEST_MAC_TX_AUTOPAD_OUT_LEN 4
/* Current configuration state of TX_PAD_EN field */
#define       MC_CMD_EFTEST_MAC_TX_AUTOPAD_OUT_EFTEST_TX_PAD_EN_OFST 0
#define       MC_CMD_EFTEST_MAC_TX_AUTOPAD_OUT_EFTEST_TX_PAD_EN_LEN 4

/* MC_CMD_EFTEST_CRAGIT_START_IN msgrequest */
#define    MC_CMD_EFTEST_CRAGIT_START_IN_LEN 25
/* identifies the test */
#define       MC_CMD_EFTEST_CRAGIT_START_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_CRAGIT_START_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_CRAGIT_START_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_CRAGIT_START_IN_EFTEST_OP_LEN 1
/* enum: Start CTPIO Agitator */
#define          MC_CMD_EFTEST_CRAGIT_START_IN_START 0x0
#define       MC_CMD_EFTEST_CRAGIT_START_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_CRAGIT_START_IN_EFTEST_OP_RSVD_LEN 2
/* Access pattern */
#define       MC_CMD_EFTEST_CRAGIT_START_IN_PATTERN_OFST 4
#define       MC_CMD_EFTEST_CRAGIT_START_IN_PATTERN_LEN 4
#define        MC_CMD_EFTEST_CRAGIT_START_IN_PATTERN_RANDOM_DELAY_OFST 4
#define        MC_CMD_EFTEST_CRAGIT_START_IN_PATTERN_RANDOM_DELAY_LBN 0
#define        MC_CMD_EFTEST_CRAGIT_START_IN_PATTERN_RANDOM_DELAY_WIDTH 1
#define        MC_CMD_EFTEST_CRAGIT_START_IN_PATTERN_RANDOM_STEP_OFST 4
#define        MC_CMD_EFTEST_CRAGIT_START_IN_PATTERN_RANDOM_STEP_LBN 1
#define        MC_CMD_EFTEST_CRAGIT_START_IN_PATTERN_RANDOM_STEP_WIDTH 1
#define        MC_CMD_EFTEST_CRAGIT_START_IN_PATTERN_UNDERRUN_DIS_ITER_OFST 4
#define        MC_CMD_EFTEST_CRAGIT_START_IN_PATTERN_UNDERRUN_DIS_ITER_LBN 2
#define        MC_CMD_EFTEST_CRAGIT_START_IN_PATTERN_UNDERRUN_DIS_ITER_WIDTH 1
#define        MC_CMD_EFTEST_CRAGIT_START_IN_PATTERN_C1_DIS_ITER_OFST 4
#define        MC_CMD_EFTEST_CRAGIT_START_IN_PATTERN_C1_DIS_ITER_LBN 3
#define        MC_CMD_EFTEST_CRAGIT_START_IN_PATTERN_C1_DIS_ITER_WIDTH 1
#define        MC_CMD_EFTEST_CRAGIT_START_IN_PATTERN_C2_DIS_ITER_OFST 4
#define        MC_CMD_EFTEST_CRAGIT_START_IN_PATTERN_C2_DIS_ITER_LBN 4
#define        MC_CMD_EFTEST_CRAGIT_START_IN_PATTERN_C2_DIS_ITER_WIDTH 1
#define        MC_CMD_EFTEST_CRAGIT_START_IN_PATTERN_C2_ITER_OFST 4
#define        MC_CMD_EFTEST_CRAGIT_START_IN_PATTERN_C2_ITER_LBN 5
#define        MC_CMD_EFTEST_CRAGIT_START_IN_PATTERN_C2_ITER_WIDTH 1
#define        MC_CMD_EFTEST_CRAGIT_START_IN_PATTERN_NET_LINK_EN_OFST 4
#define        MC_CMD_EFTEST_CRAGIT_START_IN_PATTERN_NET_LINK_EN_LBN 6
#define        MC_CMD_EFTEST_CRAGIT_START_IN_PATTERN_NET_LINK_EN_WIDTH 1
#define        MC_CMD_EFTEST_CRAGIT_START_IN_PATTERN_PCI_LINK_EN_OFST 4
#define        MC_CMD_EFTEST_CRAGIT_START_IN_PATTERN_PCI_LINK_EN_LBN 7
#define        MC_CMD_EFTEST_CRAGIT_START_IN_PATTERN_PCI_LINK_EN_WIDTH 1
#define        MC_CMD_EFTEST_CRAGIT_START_IN_PATTERN_NET_LINK_BETTER_OFST 4
#define        MC_CMD_EFTEST_CRAGIT_START_IN_PATTERN_NET_LINK_BETTER_LBN 8
#define        MC_CMD_EFTEST_CRAGIT_START_IN_PATTERN_NET_LINK_BETTER_WIDTH 1
#define        MC_CMD_EFTEST_CRAGIT_START_IN_PATTERN_PCI_LINK_WORSE_OFST 4
#define        MC_CMD_EFTEST_CRAGIT_START_IN_PATTERN_PCI_LINK_WORSE_LBN 9
#define        MC_CMD_EFTEST_CRAGIT_START_IN_PATTERN_PCI_LINK_WORSE_WIDTH 1
/* Operation requested */
#define       MC_CMD_EFTEST_CRAGIT_START_IN_OPERATION_OFST 8
#define       MC_CMD_EFTEST_CRAGIT_START_IN_OPERATION_LEN 4
/* enum: Do link reconfiguration */
#define          MC_CMD_EFTEST_CRAGIT_START_IN_LINK_RECONF 0x0
/* enum: Do underrun reconfigurations */
#define          MC_CMD_EFTEST_CRAGIT_START_IN_UNDERRUN_RECONF 0x1
/* Delays between operations (in us) */
#define       MC_CMD_EFTEST_CRAGIT_START_IN_DELAY_OFST 12
#define       MC_CMD_EFTEST_CRAGIT_START_IN_DELAY_LEN 4
/* Requested port number */
#define       MC_CMD_EFTEST_CRAGIT_START_IN_PORT_NUM_OFST 16
#define       MC_CMD_EFTEST_CRAGIT_START_IN_PORT_NUM_LEN 4
/* Flags for CTPIO underrun configuration */
#define       MC_CMD_EFTEST_CRAGIT_START_IN_FLAGS_OFST 20
#define       MC_CMD_EFTEST_CRAGIT_START_IN_FLAGS_LEN 4
/* Initial state of C2 value */
#define       MC_CMD_EFTEST_CRAGIT_START_IN_C2_VALUE_OFST 24
#define       MC_CMD_EFTEST_CRAGIT_START_IN_C2_VALUE_LEN 1

/* MC_CMD_EFTEST_CRAGIT_START_OUT msgresponse */
#define    MC_CMD_EFTEST_CRAGIT_START_OUT_LEN 0

/* MC_CMD_EFTEST_CRAGIT_STOP_IN msgrequest */
#define    MC_CMD_EFTEST_CRAGIT_STOP_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_CRAGIT_STOP_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_CRAGIT_STOP_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_CRAGIT_STOP_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_CRAGIT_STOP_IN_EFTEST_OP_LEN 1
/* enum: Stop CTPIO Agitator */
#define          MC_CMD_EFTEST_CRAGIT_STOP_IN_STOP 0x1
#define       MC_CMD_EFTEST_CRAGIT_STOP_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_CRAGIT_STOP_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_PBMX_IN msgrequest */
#define    MC_CMD_EFTEST_PBMX_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_PBMX_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_PBMX_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_PBMX_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_PBMX_IN_EFTEST_OP_LEN 1
/* enum: Set a block to continually trigger, count triggers */
#define          MC_CMD_EFTEST_PBMX_IN_COUNT_TRIGGERS 0x0
/* enum: Trigger a block, check that it triggered and that capture memory
 * contains the trigger event
 */
#define          MC_CMD_EFTEST_PBMX_IN_CHECK_TRIGGER 0x1
#define       MC_CMD_EFTEST_PBMX_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_PBMX_IN_EFTEST_OP_RSVD_LEN 2
/* Which block the test is for (enum is same as in pbmx.h) */
#define       MC_CMD_EFTEST_PBMX_IN_BLOCK_OFST 4
#define       MC_CMD_EFTEST_PBMX_IN_BLOCK_LEN 4
#define          MC_CMD_EFTEST_PBMX_IN_PCIE 0x0 /* enum */
#define          MC_CMD_EFTEST_PBMX_IN_BIU 0x1 /* enum */
#define          MC_CMD_EFTEST_PBMX_IN_MC 0x2 /* enum */
#define          MC_CMD_EFTEST_PBMX_IN_NWKENG 0x3 /* enum */
#define          MC_CMD_EFTEST_PBMX_IN_NWKROUTER 0x4 /* enum */
#define          MC_CMD_EFTEST_PBMX_IN_SYSSERV 0x5 /* enum */
#define          MC_CMD_EFTEST_PBMX_IN_EV 0x6 /* enum */
#define          MC_CMD_EFTEST_PBMX_IN_NWKENG_TX 0x7 /* enum */

/* MC_CMD_EFTEST_PBMX_COUNT_TRIGGERS_IN msgrequest */
#define    MC_CMD_EFTEST_PBMX_COUNT_TRIGGERS_IN_LEN 16
/* identifies the test */
#define       MC_CMD_EFTEST_PBMX_COUNT_TRIGGERS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_PBMX_COUNT_TRIGGERS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_PBMX_COUNT_TRIGGERS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_PBMX_COUNT_TRIGGERS_IN_EFTEST_OP_LEN 1
#define       MC_CMD_EFTEST_PBMX_COUNT_TRIGGERS_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_PBMX_COUNT_TRIGGERS_IN_EFTEST_OP_RSVD_LEN 2
/* Which block the test is for (enum is same as in pbmx.h) */
#define       MC_CMD_EFTEST_PBMX_COUNT_TRIGGERS_IN_BLOCK_OFST 4
#define       MC_CMD_EFTEST_PBMX_COUNT_TRIGGERS_IN_BLOCK_LEN 4
/* How many iterations to run the test for */
#define       MC_CMD_EFTEST_PBMX_COUNT_TRIGGERS_IN_ITERATIONS_OFST 8
#define       MC_CMD_EFTEST_PBMX_COUNT_TRIGGERS_IN_ITERATIONS_LEN 4
/* How long to run an iteration for (in usec) */
#define       MC_CMD_EFTEST_PBMX_COUNT_TRIGGERS_IN_DURATION_OFST 12
#define       MC_CMD_EFTEST_PBMX_COUNT_TRIGGERS_IN_DURATION_LEN 4

/* MC_CMD_EFTEST_PBMX_CHECK_TRIGGER_IN msgrequest */
#define    MC_CMD_EFTEST_PBMX_CHECK_TRIGGER_IN_LEN 20
/* identifies the test */
#define       MC_CMD_EFTEST_PBMX_CHECK_TRIGGER_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_PBMX_CHECK_TRIGGER_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_PBMX_CHECK_TRIGGER_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_PBMX_CHECK_TRIGGER_IN_EFTEST_OP_LEN 1
#define       MC_CMD_EFTEST_PBMX_CHECK_TRIGGER_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_PBMX_CHECK_TRIGGER_IN_EFTEST_OP_RSVD_LEN 2
/* Which block the test is for (enum is same as in pbmx.h). */
#define       MC_CMD_EFTEST_PBMX_CHECK_TRIGGER_IN_BLOCK_OFST 4
#define       MC_CMD_EFTEST_PBMX_CHECK_TRIGGER_IN_BLOCK_LEN 4
/* How many iterations to run the test for */
#define       MC_CMD_EFTEST_PBMX_CHECK_TRIGGER_IN_ITERATIONS_OFST 8
#define       MC_CMD_EFTEST_PBMX_CHECK_TRIGGER_IN_ITERATIONS_LEN 4
/* How long to run an iteration for (in usec) */
#define       MC_CMD_EFTEST_PBMX_CHECK_TRIGGER_IN_DURATION_OFST 12
#define       MC_CMD_EFTEST_PBMX_CHECK_TRIGGER_IN_DURATION_LEN 4
/* Allow pcie link to go down during test (relevant for PCIe block test only.
 * Allowing it gives a slightly more thorough test)
 */
#define       MC_CMD_EFTEST_PBMX_CHECK_TRIGGER_IN_ALLOW_LINK_DOWN_OFST 16
#define       MC_CMD_EFTEST_PBMX_CHECK_TRIGGER_IN_ALLOW_LINK_DOWN_LEN 4

/* MC_CMD_EFTEST_PBMX_OUT msgresponse */
#define    MC_CMD_EFTEST_PBMX_OUT_LEN 0

/* MC_CMD_EFTEST_SLOW_TXFW_IN msgrequest: Control TXDP firmware which
 * introduces delays
 */
#define    MC_CMD_EFTEST_SLOW_TXFW_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_SLOW_TXFW_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_SLOW_TXFW_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_SLOW_TXFW_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_SLOW_TXFW_IN_EFTEST_OP_LEN 1
/* enum: Set the global parameters for RX delays */
#define          MC_CMD_EFTEST_SLOW_TXFW_IN_SET_PARAMS 0x0
/* enum: Configure delays for a queue */
#define          MC_CMD_EFTEST_SLOW_TXFW_IN_CONFIGURE_QUEUE 0x1
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_SLOW_TXFW_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_SLOW_TXFW_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_SLOW_TXFW_SET_PARAMS_IN msgrequest */
#define    MC_CMD_EFTEST_SLOW_TXFW_SET_PARAMS_IN_LEN 24
/* identifies the test */
#define       MC_CMD_EFTEST_SLOW_TXFW_SET_PARAMS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_SLOW_TXFW_SET_PARAMS_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_SLOW_TXFW_SET_PARAMS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_SLOW_TXFW_SET_PARAMS_IN_EFTEST_OP_LEN 1
/* enum: Set the global parameters for RX delays */
#define          MC_CMD_EFTEST_SLOW_TXFW_SET_PARAMS_IN_SET_PARAMS 0x0
/* enum: Configure delays for a queue */
#define          MC_CMD_EFTEST_SLOW_TXFW_SET_PARAMS_IN_CONFIGURE_QUEUE 0x1
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_SLOW_TXFW_SET_PARAMS_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_SLOW_TXFW_SET_PARAMS_IN_EFTEST_OP_RSVD_LEN 2
/* In periodic mode, delay 1/N packets */
#define       MC_CMD_EFTEST_SLOW_TXFW_SET_PARAMS_IN_PERIODIC_N_OFST 4
#define       MC_CMD_EFTEST_SLOW_TXFW_SET_PARAMS_IN_PERIODIC_N_LEN 4
/* In random chance mode, delay with probabilty 2^SHIFT / 65536 */
#define       MC_CMD_EFTEST_SLOW_TXFW_SET_PARAMS_IN_RANDOM_CHANCE_SHIFT_OFST 8
#define       MC_CMD_EFTEST_SLOW_TXFW_SET_PARAMS_IN_RANDOM_CHANCE_SHIFT_LEN 4
/* How many cycles to spin for with a long delay */
#define       MC_CMD_EFTEST_SLOW_TXFW_SET_PARAMS_IN_LONG_DELAY_OFST 12
#define       MC_CMD_EFTEST_SLOW_TXFW_SET_PARAMS_IN_LONG_DELAY_LEN 4
/* How many cycles to spin for with a short delay */
#define       MC_CMD_EFTEST_SLOW_TXFW_SET_PARAMS_IN_SHORT_DELAY_OFST 16
#define       MC_CMD_EFTEST_SLOW_TXFW_SET_PARAMS_IN_SHORT_DELAY_LEN 4
/* A random-length delay is up to 65536 / 2^SHIFT */
#define       MC_CMD_EFTEST_SLOW_TXFW_SET_PARAMS_IN_RANDOM_DELAY_SHIFT_OFST 20
#define       MC_CMD_EFTEST_SLOW_TXFW_SET_PARAMS_IN_RANDOM_DELAY_SHIFT_LEN 4

/* MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN msgrequest */
#define    MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_LEN 12
/* identifies the test */
#define       MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_EFTEST_OP_LEN 1
/* enum: Set the global parameters for RX delays */
#define          MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_SET_PARAMS 0x0
/* enum: Configure delays for a queue */
#define          MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_CONFIGURE_QUEUE 0x1
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_EFTEST_OP_RSVD_LEN 2
/* Function-relative queue ID to configure */
#define       MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_QUEUE_ID_OFST 4
#define       MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_QUEUE_ID_LEN 4
/* The whole configuration */
#define       MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_CONFIGURATION_OFST 8
#define       MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_CONFIGURATION_LEN 4
#define        MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_DESCRIPTOR_OFST 8
#define        MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_DESCRIPTOR_LBN 8
#define        MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_DESCRIPTOR_WIDTH 4
#define        MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_DOORBELL_OFST 8
#define        MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_DOORBELL_LBN 4
#define        MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_DOORBELL_WIDTH 4
#define        MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_PACKET_OFST 8
#define        MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_PACKET_LBN 0
#define        MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_PACKET_WIDTH 4
#define        MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_PACKET_DELAY_TYPE_OFST 8
#define        MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_PACKET_DELAY_TYPE_LBN 0
#define        MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_PACKET_DELAY_TYPE_WIDTH 2
/* enum: No delay */
#define          MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_DELAY_TYPE_NONE 0x0
/* enum: Randomly decide whether to delay (default probability 1/8) */
#define          MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_DELAY_TYPE_RANDOM 0x1
/* enum: Delay every N'th time (default N=10) */
#define          MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_DELAY_TYPE_PERIODIC 0x2
/* enum: Always delay */
#define          MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_DELAY_TYPE_ALWAYS 0x3
#define        MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_PACKET_DELAY_LENGTH_OFST 8
#define        MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_PACKET_DELAY_LENGTH_LBN 2
#define        MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_PACKET_DELAY_LENGTH_WIDTH 2
/* enum: Delay for a short (default 1000 cycles) time */
#define          MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_DELAY_LENGTH_SHORT 0x0
/* enum: Delay for a long (default 10000 cycles) time */
#define          MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_DELAY_LENGTH_LONG 0x1
/* enum: Delay for a random (default from 0-32767 cycles) time */
#define          MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_DELAY_LENGTH_RANDOM 0x2
#define        MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_DOORBELL_DELAY_TYPE_OFST 8
#define        MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_DOORBELL_DELAY_TYPE_LBN 4
#define        MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_DOORBELL_DELAY_TYPE_WIDTH 2
/* enum: No delay */
/*               MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_DELAY_TYPE_NONE 0x0 */
/* enum: Randomly decide whether to delay (default probability 1/8) */
/*               MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_DELAY_TYPE_RANDOM 0x1 */
/* enum: Delay every N'th time (default N=10) */
/*               MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_DELAY_TYPE_PERIODIC 0x2 */
/* enum: Always delay */
/*               MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_DELAY_TYPE_ALWAYS 0x3 */
#define        MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_DOORBELL_DELAY_LENGTH_OFST 8
#define        MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_DOORBELL_DELAY_LENGTH_LBN 6
#define        MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_DOORBELL_DELAY_LENGTH_WIDTH 2
/* enum: Delay for a short (default 1000 cycles) time */
/*               MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_DELAY_LENGTH_SHORT 0x0 */
/* enum: Delay for a long (default 10000 cycles) time */
/*               MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_DELAY_LENGTH_LONG 0x1 */
/* enum: Delay for a random (default from 0-32767 cycles) time */
/*               MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_DELAY_LENGTH_RANDOM 0x2 */
#define        MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_DESCRIPTOR_DELAY_TYPE_OFST 8
#define        MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_DESCRIPTOR_DELAY_TYPE_LBN 8
#define        MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_DESCRIPTOR_DELAY_TYPE_WIDTH 2
/* enum: No delay */
/*               MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_DELAY_TYPE_NONE 0x0 */
/* enum: Randomly decide whether to delay (default probability 1/8) */
/*               MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_DELAY_TYPE_RANDOM 0x1 */
/* enum: Delay every N'th time (default N=10) */
/*               MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_DELAY_TYPE_PERIODIC 0x2 */
/* enum: Always delay */
/*               MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_DELAY_TYPE_ALWAYS 0x3 */
#define        MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_DESCRIPTOR_DELAY_LENGTH_OFST 8
#define        MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_DESCRIPTOR_DELAY_LENGTH_LBN 10
#define        MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_DESCRIPTOR_DELAY_LENGTH_WIDTH 2
/* enum: Delay for a short (default 1000 cycles) time */
/*               MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_DELAY_LENGTH_SHORT 0x0 */
/* enum: Delay for a long (default 10000 cycles) time */
/*               MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_DELAY_LENGTH_LONG 0x1 */
/* enum: Delay for a random (default from 0-32767 cycles) time */
/*               MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_DELAY_LENGTH_RANDOM 0x2 */
#define        MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_PADDING_OFST 8
#define        MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_PADDING_LBN 12
#define        MC_CMD_EFTEST_SLOW_TXFW_CONFIGURE_QUEUE_IN_PADDING_WIDTH 20

/* MC_CMD_EFTEST_PCIE_TEST_IN msgrequest */
#define    MC_CMD_EFTEST_PCIE_TEST_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_PCIE_TEST_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_PCIE_TEST_IN_EFTEST_ID_LEN 1
/* the operation requested. */
#define       MC_CMD_EFTEST_PCIE_TEST_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_PCIE_TEST_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_PCIE_TEST_IN_START 0x0 /* enum */
#define          MC_CMD_EFTEST_PCIE_TEST_IN_STOP 0x1 /* enum */
#define          MC_CMD_EFTEST_PCIE_TEST_IN_SETUP 0x2 /* enum */
#define       MC_CMD_EFTEST_PCIE_TEST_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_PCIE_TEST_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_PCIE_TEST_START_IN msgrequest */
#define    MC_CMD_EFTEST_PCIE_TEST_START_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_PCIE_TEST_START_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_PCIE_TEST_START_IN_EFTEST_ID_LEN 1
/* the operation requested. */
#define       MC_CMD_EFTEST_PCIE_TEST_START_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_PCIE_TEST_START_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_PCIE_TEST_START_IN_START 0x0 /* enum */
#define          MC_CMD_EFTEST_PCIE_TEST_START_IN_STOP 0x1 /* enum */
#define          MC_CMD_EFTEST_PCIE_TEST_START_IN_SETUP 0x2 /* enum */
#define       MC_CMD_EFTEST_PCIE_TEST_START_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_PCIE_TEST_START_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_PCIE_TEST_STOP_IN msgrequest */
#define    MC_CMD_EFTEST_PCIE_TEST_STOP_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_PCIE_TEST_STOP_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_PCIE_TEST_STOP_IN_EFTEST_ID_LEN 1
/* the operation requested. */
#define       MC_CMD_EFTEST_PCIE_TEST_STOP_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_PCIE_TEST_STOP_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_PCIE_TEST_STOP_IN_START 0x0 /* enum */
#define          MC_CMD_EFTEST_PCIE_TEST_STOP_IN_STOP 0x1 /* enum */
#define          MC_CMD_EFTEST_PCIE_TEST_STOP_IN_SETUP 0x2 /* enum */
#define       MC_CMD_EFTEST_PCIE_TEST_STOP_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_PCIE_TEST_STOP_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_PCIE_TEST_SETUP_IN msgrequest */
#define    MC_CMD_EFTEST_PCIE_TEST_SETUP_IN_LEN 16
/* identifies the test */
#define       MC_CMD_EFTEST_PCIE_TEST_SETUP_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_PCIE_TEST_SETUP_IN_EFTEST_ID_LEN 1
/* the operation requested. */
#define       MC_CMD_EFTEST_PCIE_TEST_SETUP_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_PCIE_TEST_SETUP_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_PCIE_TEST_SETUP_IN_START 0x0 /* enum */
#define          MC_CMD_EFTEST_PCIE_TEST_SETUP_IN_STOP 0x1 /* enum */
#define          MC_CMD_EFTEST_PCIE_TEST_SETUP_IN_SETUP 0x2 /* enum */
#define       MC_CMD_EFTEST_PCIE_TEST_SETUP_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_PCIE_TEST_SETUP_IN_EFTEST_OP_RSVD_LEN 2
/* Select which test to run. */
#define       MC_CMD_EFTEST_PCIE_TEST_SETUP_IN_TEST_OFST 4
#define       MC_CMD_EFTEST_PCIE_TEST_SETUP_IN_TEST_LEN 4
#define          MC_CMD_EFTEST_PCIE_TEST_SETUP_IN_TOGGLE_ERROR_FORWARDING 0x0 /* enum */
/* Test dependent. For toggle error forwarding test, this indicates the number
 * of toggles to do in each iteration.
 */
#define       MC_CMD_EFTEST_PCIE_TEST_SETUP_IN_PARAMETER0_OFST 8
#define       MC_CMD_EFTEST_PCIE_TEST_SETUP_IN_PARAMETER0_LEN 4
/* Test dependent. For toggle error forwarding test, this indicates the number
 * of useconds to wait between iterations.
 */
#define       MC_CMD_EFTEST_PCIE_TEST_SETUP_IN_PARAMETER1_OFST 12
#define       MC_CMD_EFTEST_PCIE_TEST_SETUP_IN_PARAMETER1_LEN 4

/* MC_CMD_EFTEST_KRSERDES_STRESS_IN msgrequest */
#define    MC_CMD_EFTEST_KRSERDES_STRESS_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_KRSERDES_STRESS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_KRSERDES_STRESS_IN_EFTEST_ID_LEN 1
/* the operation requested. */
#define       MC_CMD_EFTEST_KRSERDES_STRESS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_KRSERDES_STRESS_IN_EFTEST_OP_LEN 1
/* enum: Start reset toggling on serdes associated with current port */
#define          MC_CMD_EFTEST_KRSERDES_STRESS_IN_RESET_TOGGLE_AGITATOR_START 0x0
/* enum: Stop reset toggling */
#define          MC_CMD_EFTEST_KRSERDES_STRESS_IN_RESET_TOGGLE_AGITATOR_STOP 0x1
#define       MC_CMD_EFTEST_KRSERDES_STRESS_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_KRSERDES_STRESS_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_KRSERDES_STRESS_RESET_TOGGLE_AGITATOR_START_IN msgrequest */
#define    MC_CMD_EFTEST_KRSERDES_STRESS_RESET_TOGGLE_AGITATOR_START_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_KRSERDES_STRESS_RESET_TOGGLE_AGITATOR_START_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_KRSERDES_STRESS_RESET_TOGGLE_AGITATOR_START_IN_EFTEST_ID_LEN 1
/* the operation requested. */
#define       MC_CMD_EFTEST_KRSERDES_STRESS_RESET_TOGGLE_AGITATOR_START_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_KRSERDES_STRESS_RESET_TOGGLE_AGITATOR_START_IN_EFTEST_OP_LEN 1
/* enum: Start reset toggling on serdes associated with current port */
#define          MC_CMD_EFTEST_KRSERDES_STRESS_RESET_TOGGLE_AGITATOR_START_IN_RESET_TOGGLE_AGITATOR_START 0x0
/* enum: Stop reset toggling */
#define          MC_CMD_EFTEST_KRSERDES_STRESS_RESET_TOGGLE_AGITATOR_START_IN_RESET_TOGGLE_AGITATOR_STOP 0x1
#define       MC_CMD_EFTEST_KRSERDES_STRESS_RESET_TOGGLE_AGITATOR_START_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_KRSERDES_STRESS_RESET_TOGGLE_AGITATOR_START_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_KRSERDES_STRESS_RESET_TOGGLE_AGITATOR_START_OUT msgrequest */
#define    MC_CMD_EFTEST_KRSERDES_STRESS_RESET_TOGGLE_AGITATOR_START_OUT_LEN 4
/* pointer to thread structure */
#define       MC_CMD_EFTEST_KRSERDES_STRESS_RESET_TOGGLE_AGITATOR_START_OUT_THREAD_OFST 0
#define       MC_CMD_EFTEST_KRSERDES_STRESS_RESET_TOGGLE_AGITATOR_START_OUT_THREAD_LEN 4

/* MC_CMD_EFTEST_KRSERDES_STRESS_RESET_TOGGLE_AGITATOR_STOP_IN msgrequest */
#define    MC_CMD_EFTEST_KRSERDES_STRESS_RESET_TOGGLE_AGITATOR_STOP_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_KRSERDES_STRESS_RESET_TOGGLE_AGITATOR_STOP_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_KRSERDES_STRESS_RESET_TOGGLE_AGITATOR_STOP_IN_EFTEST_ID_LEN 1
/* the operation requested. */
#define       MC_CMD_EFTEST_KRSERDES_STRESS_RESET_TOGGLE_AGITATOR_STOP_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_KRSERDES_STRESS_RESET_TOGGLE_AGITATOR_STOP_IN_EFTEST_OP_LEN 1
/* enum: Start reset toggling on serdes associated with current port */
#define          MC_CMD_EFTEST_KRSERDES_STRESS_RESET_TOGGLE_AGITATOR_STOP_IN_RESET_TOGGLE_AGITATOR_START 0x0
/* enum: Stop reset toggling */
#define          MC_CMD_EFTEST_KRSERDES_STRESS_RESET_TOGGLE_AGITATOR_STOP_IN_RESET_TOGGLE_AGITATOR_STOP 0x1
#define       MC_CMD_EFTEST_KRSERDES_STRESS_RESET_TOGGLE_AGITATOR_STOP_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_KRSERDES_STRESS_RESET_TOGGLE_AGITATOR_STOP_IN_EFTEST_OP_RSVD_LEN 2
/* Thread to stop */
#define       MC_CMD_EFTEST_KRSERDES_STRESS_RESET_TOGGLE_AGITATOR_STOP_IN_THREAD_OFST 4
#define       MC_CMD_EFTEST_KRSERDES_STRESS_RESET_TOGGLE_AGITATOR_STOP_IN_THREAD_LEN 4

/* MC_CMD_EFTEST_THREAD_MGMT_IN msgrequest */
#define    MC_CMD_EFTEST_THREAD_MGMT_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_THREAD_MGMT_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_THREAD_MGMT_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_THREAD_MGMT_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_THREAD_MGMT_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_THREAD_MGMT_IN_STATUS 0x0 /* enum */
#define          MC_CMD_EFTEST_THREAD_MGMT_IN_ABORT 0x1 /* enum */
#define       MC_CMD_EFTEST_THREAD_MGMT_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_THREAD_MGMT_IN_EFTEST_OP_RSVD_LEN 6

/* MC_CMD_EFTEST_THREAD_MGMT_OUT msgresponse */
#define    MC_CMD_EFTEST_THREAD_MGMT_OUT_LEN 2
/* Number of still running eftest threads */
#define       MC_CMD_EFTEST_THREAD_MGMT_OUT_THREAD_RUNNING_COUNT_OFST 0
#define       MC_CMD_EFTEST_THREAD_MGMT_OUT_THREAD_RUNNING_COUNT_LEN 1
/* Number of aborted eftest threads (only for ABORT action) */
#define       MC_CMD_EFTEST_THREAD_MGMT_OUT_THREAD_ABORTED_COUNT_OFST 1
#define       MC_CMD_EFTEST_THREAD_MGMT_OUT_THREAD_ABORTED_COUNT_LEN 1

/* MC_CMD_EFTEST_SPHINX_IN msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_LEN 4
/* Identifies the test. */
#define       MC_CMD_EFTEST_SPHINX_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_SPHINX_IN_EFTEST_ID_LEN 1
/* The SPHINX service to use. */
#define       MC_CMD_EFTEST_SPHINX_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_SPHINX_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_SPHINX_IN_DEFAULT 0x0 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_DEBUG 0x1 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW 0x2 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_RESET 0x3 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_CONFIG 0x4 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_QDMA 0x5 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_FLASH 0x6 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_SENSOR_MANAGEMENT 0x7 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL 0x8 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_MCTP 0x9 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_PLDM 0xa /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_PLDM_MONITORING 0xb /* enum */
/* Align the arguments to 32 bits. */
#define       MC_CMD_EFTEST_SPHINX_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_SPHINX_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_SPHINX_IN_DEFAULT msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_DEFAULT_LENMIN 8
#define    MC_CMD_EFTEST_SPHINX_IN_DEFAULT_LENMAX 252
#define    MC_CMD_EFTEST_SPHINX_IN_DEFAULT_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_SPHINX_IN_DEFAULT_LEN(num) (8+1*(num))
#define    MC_CMD_EFTEST_SPHINX_IN_DEFAULT_DATA_NUM(len) (((len)-8)/1)
#define       MC_CMD_EFTEST_SPHINX_IN_DEFAULT_SPHINX_OP_OFST 4
#define       MC_CMD_EFTEST_SPHINX_IN_DEFAULT_SPHINX_OP_LEN 4
#define       MC_CMD_EFTEST_SPHINX_IN_DEFAULT_DATA_OFST 8
#define       MC_CMD_EFTEST_SPHINX_IN_DEFAULT_DATA_LEN 1
#define       MC_CMD_EFTEST_SPHINX_IN_DEFAULT_DATA_MINNUM 0
#define       MC_CMD_EFTEST_SPHINX_IN_DEFAULT_DATA_MAXNUM 244
#define       MC_CMD_EFTEST_SPHINX_IN_DEFAULT_DATA_MAXNUM_MCDI2 1012

/* MC_CMD_EFTEST_SPHINX_OUT_DEFAULT msgresponse */
#define    MC_CMD_EFTEST_SPHINX_OUT_DEFAULT_LENMIN 0
#define    MC_CMD_EFTEST_SPHINX_OUT_DEFAULT_LENMAX 252
#define    MC_CMD_EFTEST_SPHINX_OUT_DEFAULT_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_SPHINX_OUT_DEFAULT_LEN(num) (0+1*(num))
#define    MC_CMD_EFTEST_SPHINX_OUT_DEFAULT_DATA_NUM(len) (((len)-0)/1)
#define       MC_CMD_EFTEST_SPHINX_OUT_DEFAULT_DATA_OFST 0
#define       MC_CMD_EFTEST_SPHINX_OUT_DEFAULT_DATA_LEN 1
#define       MC_CMD_EFTEST_SPHINX_OUT_DEFAULT_DATA_MINNUM 0
#define       MC_CMD_EFTEST_SPHINX_OUT_DEFAULT_DATA_MAXNUM 252
#define       MC_CMD_EFTEST_SPHINX_OUT_DEFAULT_DATA_MAXNUM_MCDI2 1020

/* MC_CMD_EFTEST_SPHINX_IN_DEBUG msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_DEBUG_LEN 8
/* The service API function to call. */
#define       MC_CMD_EFTEST_SPHINX_IN_DEBUG_SPHINX_OP_OFST 4
#define       MC_CMD_EFTEST_SPHINX_IN_DEBUG_SPHINX_OP_LEN 4
#define          MC_CMD_EFTEST_SPHINX_IN_DEBUG_ECHO 0x1 /* enum */

/* MC_CMD_EFTEST_SPHINX_IN_DEBUG_ECHO msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_DEBUG_ECHO_LENMIN 8
#define    MC_CMD_EFTEST_SPHINX_IN_DEBUG_ECHO_LENMAX 252
#define    MC_CMD_EFTEST_SPHINX_IN_DEBUG_ECHO_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_SPHINX_IN_DEBUG_ECHO_LEN(num) (8+1*(num))
#define    MC_CMD_EFTEST_SPHINX_IN_DEBUG_ECHO_DATA_NUM(len) (((len)-8)/1)
/* A string to echo back and forth. */
#define       MC_CMD_EFTEST_SPHINX_IN_DEBUG_ECHO_DATA_OFST 8
#define       MC_CMD_EFTEST_SPHINX_IN_DEBUG_ECHO_DATA_LEN 1
#define       MC_CMD_EFTEST_SPHINX_IN_DEBUG_ECHO_DATA_MINNUM 0
#define       MC_CMD_EFTEST_SPHINX_IN_DEBUG_ECHO_DATA_MAXNUM 244
#define       MC_CMD_EFTEST_SPHINX_IN_DEBUG_ECHO_DATA_MAXNUM_MCDI2 1012

/* MC_CMD_EFTEST_SPHINX_OUT_DEBUG_ECHO msgresponse */
#define    MC_CMD_EFTEST_SPHINX_OUT_DEBUG_ECHO_LENMIN 0
#define    MC_CMD_EFTEST_SPHINX_OUT_DEBUG_ECHO_LENMAX 252
#define    MC_CMD_EFTEST_SPHINX_OUT_DEBUG_ECHO_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_SPHINX_OUT_DEBUG_ECHO_LEN(num) (0+1*(num))
#define    MC_CMD_EFTEST_SPHINX_OUT_DEBUG_ECHO_DATA_NUM(len) (((len)-0)/1)
/* The echoed string. */
#define       MC_CMD_EFTEST_SPHINX_OUT_DEBUG_ECHO_DATA_OFST 0
#define       MC_CMD_EFTEST_SPHINX_OUT_DEBUG_ECHO_DATA_LEN 1
#define       MC_CMD_EFTEST_SPHINX_OUT_DEBUG_ECHO_DATA_MINNUM 0
#define       MC_CMD_EFTEST_SPHINX_OUT_DEBUG_ECHO_DATA_MAXNUM 252
#define       MC_CMD_EFTEST_SPHINX_OUT_DEBUG_ECHO_DATA_MAXNUM_MCDI2 1020

/* MC_CMD_EFTEST_SPHINX_IN_RAW msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_RAW_LEN 8
/* Identifies the test. */
#define       MC_CMD_EFTEST_SPHINX_IN_RAW_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_SPHINX_IN_RAW_EFTEST_ID_LEN 1
/* The SPHINX service to use. */
#define       MC_CMD_EFTEST_SPHINX_IN_RAW_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_SPHINX_IN_RAW_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_DEFAULT 0x0 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_DEBUG 0x1 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_RAW 0x2 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_RESET 0x3 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_CONFIG 0x4 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_QDMA 0x5 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_FLASH 0x6 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_SENSOR_MANAGEMENT 0x7 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_CAGE_CONTROL 0x8 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_MCTP 0x9 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_PLDM 0xa /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_PLDM_MONITORING 0xb /* enum */
/* Align the arguments to 32 bits. */
#define       MC_CMD_EFTEST_SPHINX_IN_RAW_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_SPHINX_IN_RAW_EFTEST_OP_RSVD_LEN 2
/* Operation to perform */
#define       MC_CMD_EFTEST_SPHINX_IN_RAW_RAW_OP_OFST 4
#define       MC_CMD_EFTEST_SPHINX_IN_RAW_RAW_OP_LEN 4
/* enum: Send a request; block until the response is received (Corresponds to
 * MC_CMD_EFTEST_SPHINX_OUT_RAW_BYTES)
 */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_EXECUTE_REQUEST 0x0
/* enum: Poll for received requests */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_POLL_REQUESTS 0x3
/* enum: Send a response to a received request */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_SEND_RESPONSE 0x4

/* MC_CMD_EFTEST_SPHINX_IN_RAW_BYTES msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_RAW_BYTES_LENMIN 8
#define    MC_CMD_EFTEST_SPHINX_IN_RAW_BYTES_LENMAX 252
#define    MC_CMD_EFTEST_SPHINX_IN_RAW_BYTES_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_SPHINX_IN_RAW_BYTES_LEN(num) (8+1*(num))
#define    MC_CMD_EFTEST_SPHINX_IN_RAW_BYTES_DATA_NUM(len) (((len)-8)/1)
/* Identifies the test. */
#define       MC_CMD_EFTEST_SPHINX_IN_RAW_BYTES_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_SPHINX_IN_RAW_BYTES_EFTEST_ID_LEN 1
/* The SPHINX service to use. */
#define       MC_CMD_EFTEST_SPHINX_IN_RAW_BYTES_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_SPHINX_IN_RAW_BYTES_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_BYTES_DEFAULT 0x0 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_BYTES_DEBUG 0x1 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_BYTES_RAW 0x2 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_BYTES_RESET 0x3 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_BYTES_CONFIG 0x4 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_BYTES_QDMA 0x5 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_BYTES_FLASH 0x6 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_BYTES_SENSOR_MANAGEMENT 0x7 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_BYTES_CAGE_CONTROL 0x8 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_BYTES_MCTP 0x9 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_BYTES_PLDM 0xa /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_BYTES_PLDM_MONITORING 0xb /* enum */
/* Align the arguments to 32 bits. */
#define       MC_CMD_EFTEST_SPHINX_IN_RAW_BYTES_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_SPHINX_IN_RAW_BYTES_EFTEST_OP_RSVD_LEN 2
/* Operation to perform */
#define       MC_CMD_EFTEST_SPHINX_IN_RAW_BYTES_RAW_OP_OFST 4
#define       MC_CMD_EFTEST_SPHINX_IN_RAW_BYTES_RAW_OP_LEN 4
/* enum: Send a request; block until the response is received (Corresponds to
 * MC_CMD_EFTEST_SPHINX_OUT_RAW_BYTES)
 */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_BYTES_EXECUTE_REQUEST 0x0
/* enum: Poll for received requests */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_BYTES_POLL_REQUESTS 0x3
/* enum: Send a response to a received request */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_BYTES_SEND_RESPONSE 0x4
/* The SPHINX-encoded bytes to send over the IPC. You should encode your
 * message before using this field.
 */
#define       MC_CMD_EFTEST_SPHINX_IN_RAW_BYTES_DATA_OFST 8
#define       MC_CMD_EFTEST_SPHINX_IN_RAW_BYTES_DATA_LEN 1
#define       MC_CMD_EFTEST_SPHINX_IN_RAW_BYTES_DATA_MINNUM 0
#define       MC_CMD_EFTEST_SPHINX_IN_RAW_BYTES_DATA_MAXNUM 244
#define       MC_CMD_EFTEST_SPHINX_IN_RAW_BYTES_DATA_MAXNUM_MCDI2 1012

/* MC_CMD_EFTEST_SPHINX_OUT_RAW_BYTES msgresponse */
#define    MC_CMD_EFTEST_SPHINX_OUT_RAW_BYTES_LENMIN 0
#define    MC_CMD_EFTEST_SPHINX_OUT_RAW_BYTES_LENMAX 252
#define    MC_CMD_EFTEST_SPHINX_OUT_RAW_BYTES_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_SPHINX_OUT_RAW_BYTES_LEN(num) (0+1*(num))
#define    MC_CMD_EFTEST_SPHINX_OUT_RAW_BYTES_DATA_NUM(len) (((len)-0)/1)
/* The SPHINX-encoded bytes returned by the SPHINX_OP function. You should
 * decode these bytes to get the actual message. No bytes may be returned.
 */
#define       MC_CMD_EFTEST_SPHINX_OUT_RAW_BYTES_DATA_OFST 0
#define       MC_CMD_EFTEST_SPHINX_OUT_RAW_BYTES_DATA_LEN 1
#define       MC_CMD_EFTEST_SPHINX_OUT_RAW_BYTES_DATA_MINNUM 0
#define       MC_CMD_EFTEST_SPHINX_OUT_RAW_BYTES_DATA_MAXNUM 252
#define       MC_CMD_EFTEST_SPHINX_OUT_RAW_BYTES_DATA_MAXNUM_MCDI2 1020

/* MC_CMD_EFTEST_SPHINX_IN_RAW_POLL_REQUESTS msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_RAW_POLL_REQUESTS_LEN 8
/* Identifies the test. */
#define       MC_CMD_EFTEST_SPHINX_IN_RAW_POLL_REQUESTS_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_SPHINX_IN_RAW_POLL_REQUESTS_EFTEST_ID_LEN 1
/* The SPHINX service to use. */
#define       MC_CMD_EFTEST_SPHINX_IN_RAW_POLL_REQUESTS_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_SPHINX_IN_RAW_POLL_REQUESTS_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_POLL_REQUESTS_DEFAULT 0x0 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_POLL_REQUESTS_DEBUG 0x1 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_POLL_REQUESTS_RAW 0x2 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_POLL_REQUESTS_RESET 0x3 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_POLL_REQUESTS_CONFIG 0x4 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_POLL_REQUESTS_QDMA 0x5 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_POLL_REQUESTS_FLASH 0x6 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_POLL_REQUESTS_SENSOR_MANAGEMENT 0x7 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_POLL_REQUESTS_CAGE_CONTROL 0x8 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_POLL_REQUESTS_MCTP 0x9 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_POLL_REQUESTS_PLDM 0xa /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_POLL_REQUESTS_PLDM_MONITORING 0xb /* enum */
/* Align the arguments to 32 bits. */
#define       MC_CMD_EFTEST_SPHINX_IN_RAW_POLL_REQUESTS_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_SPHINX_IN_RAW_POLL_REQUESTS_EFTEST_OP_RSVD_LEN 2
/* Operation to perform */
#define       MC_CMD_EFTEST_SPHINX_IN_RAW_POLL_REQUESTS_RAW_OP_OFST 4
#define       MC_CMD_EFTEST_SPHINX_IN_RAW_POLL_REQUESTS_RAW_OP_LEN 4
/* enum: Send a request; block until the response is received (Corresponds to
 * MC_CMD_EFTEST_SPHINX_OUT_RAW_BYTES)
 */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_POLL_REQUESTS_EXECUTE_REQUEST 0x0
/* enum: Poll for received requests */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_POLL_REQUESTS_POLL_REQUESTS 0x3
/* enum: Send a response to a received request */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_POLL_REQUESTS_SEND_RESPONSE 0x4

/* MC_CMD_EFTEST_SPHINX_OUT_RAW_POLL_REQUESTS msgresponse: Response will be
 * zero length if there are no waiting requests.
 */
#define    MC_CMD_EFTEST_SPHINX_OUT_RAW_POLL_REQUESTS_LENMIN 4
#define    MC_CMD_EFTEST_SPHINX_OUT_RAW_POLL_REQUESTS_LENMAX 252
#define    MC_CMD_EFTEST_SPHINX_OUT_RAW_POLL_REQUESTS_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_SPHINX_OUT_RAW_POLL_REQUESTS_LEN(num) (4+1*(num))
#define    MC_CMD_EFTEST_SPHINX_OUT_RAW_POLL_REQUESTS_DATA_NUM(len) (((len)-4)/1)
/* An opaque value used to identify this request when sending a response. */
#define       MC_CMD_EFTEST_SPHINX_OUT_RAW_POLL_REQUESTS_TAG_OFST 0
#define       MC_CMD_EFTEST_SPHINX_OUT_RAW_POLL_REQUESTS_TAG_LEN 4
/* The SPHINX-encoded bytes recevied in the request. */
#define       MC_CMD_EFTEST_SPHINX_OUT_RAW_POLL_REQUESTS_DATA_OFST 4
#define       MC_CMD_EFTEST_SPHINX_OUT_RAW_POLL_REQUESTS_DATA_LEN 1
#define       MC_CMD_EFTEST_SPHINX_OUT_RAW_POLL_REQUESTS_DATA_MINNUM 0
#define       MC_CMD_EFTEST_SPHINX_OUT_RAW_POLL_REQUESTS_DATA_MAXNUM 248
#define       MC_CMD_EFTEST_SPHINX_OUT_RAW_POLL_REQUESTS_DATA_MAXNUM_MCDI2 1016

/* MC_CMD_EFTEST_SPHINX_IN_RAW_SEND_RESPONSE msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_RAW_SEND_RESPONSE_LENMIN 24
#define    MC_CMD_EFTEST_SPHINX_IN_RAW_SEND_RESPONSE_LENMAX 252
#define    MC_CMD_EFTEST_SPHINX_IN_RAW_SEND_RESPONSE_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_SPHINX_IN_RAW_SEND_RESPONSE_LEN(num) (24+1*(num))
#define    MC_CMD_EFTEST_SPHINX_IN_RAW_SEND_RESPONSE_DATA_NUM(len) (((len)-24)/1)
/* Identifies the test. */
#define       MC_CMD_EFTEST_SPHINX_IN_RAW_SEND_RESPONSE_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_SPHINX_IN_RAW_SEND_RESPONSE_EFTEST_ID_LEN 1
/* The SPHINX service to use. */
#define       MC_CMD_EFTEST_SPHINX_IN_RAW_SEND_RESPONSE_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_SPHINX_IN_RAW_SEND_RESPONSE_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_SEND_RESPONSE_DEFAULT 0x0 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_SEND_RESPONSE_DEBUG 0x1 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_SEND_RESPONSE_RAW 0x2 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_SEND_RESPONSE_RESET 0x3 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_SEND_RESPONSE_CONFIG 0x4 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_SEND_RESPONSE_QDMA 0x5 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_SEND_RESPONSE_FLASH 0x6 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_SEND_RESPONSE_SENSOR_MANAGEMENT 0x7 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_SEND_RESPONSE_CAGE_CONTROL 0x8 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_SEND_RESPONSE_MCTP 0x9 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_SEND_RESPONSE_PLDM 0xa /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_SEND_RESPONSE_PLDM_MONITORING 0xb /* enum */
/* Align the arguments to 32 bits. */
#define       MC_CMD_EFTEST_SPHINX_IN_RAW_SEND_RESPONSE_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_SPHINX_IN_RAW_SEND_RESPONSE_EFTEST_OP_RSVD_LEN 2
/* Operation to perform */
#define       MC_CMD_EFTEST_SPHINX_IN_RAW_SEND_RESPONSE_RAW_OP_OFST 4
#define       MC_CMD_EFTEST_SPHINX_IN_RAW_SEND_RESPONSE_RAW_OP_LEN 4
/* enum: Send a request; block until the response is received (Corresponds to
 * MC_CMD_EFTEST_SPHINX_OUT_RAW_BYTES)
 */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_SEND_RESPONSE_EXECUTE_REQUEST 0x0
/* enum: Poll for received requests */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_SEND_RESPONSE_POLL_REQUESTS 0x3
/* enum: Send a response to a received request */
#define          MC_CMD_EFTEST_SPHINX_IN_RAW_SEND_RESPONSE_SEND_RESPONSE 0x4
/* The tag associated with the request being responded to. */
#define       MC_CMD_EFTEST_SPHINX_IN_RAW_SEND_RESPONSE_TAG_OFST 8
#define       MC_CMD_EFTEST_SPHINX_IN_RAW_SEND_RESPONSE_TAG_LEN 4
#define       MC_CMD_EFTEST_SPHINX_IN_RAW_SEND_RESPONSE_FLAGS_OFST 12
#define       MC_CMD_EFTEST_SPHINX_IN_RAW_SEND_RESPONSE_FLAGS_LEN 4
#define        MC_CMD_EFTEST_SPHINX_IN_RAW_SEND_RESPONSE_IS_ERROR_OFST 12
#define        MC_CMD_EFTEST_SPHINX_IN_RAW_SEND_RESPONSE_IS_ERROR_LBN 0
#define        MC_CMD_EFTEST_SPHINX_IN_RAW_SEND_RESPONSE_IS_ERROR_WIDTH 1
#define       MC_CMD_EFTEST_SPHINX_IN_RAW_SEND_RESPONSE_ERR_CODE_OFST 16
#define       MC_CMD_EFTEST_SPHINX_IN_RAW_SEND_RESPONSE_ERR_CODE_LEN 4
#define       MC_CMD_EFTEST_SPHINX_IN_RAW_SEND_RESPONSE_ERR_ARG_OFST 20
#define       MC_CMD_EFTEST_SPHINX_IN_RAW_SEND_RESPONSE_ERR_ARG_LEN 4
/* The SPHINX-encoded bytes to send in the response */
#define       MC_CMD_EFTEST_SPHINX_IN_RAW_SEND_RESPONSE_DATA_OFST 24
#define       MC_CMD_EFTEST_SPHINX_IN_RAW_SEND_RESPONSE_DATA_LEN 1
#define       MC_CMD_EFTEST_SPHINX_IN_RAW_SEND_RESPONSE_DATA_MINNUM 0
#define       MC_CMD_EFTEST_SPHINX_IN_RAW_SEND_RESPONSE_DATA_MAXNUM 228
#define       MC_CMD_EFTEST_SPHINX_IN_RAW_SEND_RESPONSE_DATA_MAXNUM_MCDI2 996

/* MC_CMD_EFTEST_SPHINX_OUT_RAW_SEND_RESPONSE msgresponse */
#define    MC_CMD_EFTEST_SPHINX_OUT_RAW_SEND_RESPONSE_LEN 0

/* MC_CMD_EFTEST_SPHINX_IN_CONFIG msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_CONFIG_LEN 8
#define       MC_CMD_EFTEST_SPHINX_IN_CONFIG_SPHINX_OP_OFST 4
#define       MC_CMD_EFTEST_SPHINX_IN_CONFIG_SPHINX_OP_LEN 4
#define          MC_CMD_EFTEST_SPHINX_IN_CONFIG_GET_PCI_FN_ASSIGNMENT 0x1 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_CONFIG_GET_IDENTITY 0x2 /* enum */

/* MC_CMD_EFTEST_SPHINX_IN_CONFIG_GET_PCI_FN_ASSIGNMENT msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_CONFIG_GET_PCI_FN_ASSIGNMENT_LEN 8
#define       MC_CMD_EFTEST_SPHINX_IN_CONFIG_GET_PCI_FN_ASSIGNMENT_SPHINX_OP_OFST 4
#define       MC_CMD_EFTEST_SPHINX_IN_CONFIG_GET_PCI_FN_ASSIGNMENT_SPHINX_OP_LEN 4
#define          MC_CMD_EFTEST_SPHINX_IN_CONFIG_GET_PCI_FN_ASSIGNMENT_GET_PCI_FN_ASSIGNMENT 0x1 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_CONFIG_GET_PCI_FN_ASSIGNMENT_GET_IDENTITY 0x2 /* enum */

/* MC_CMD_EFTEST_SPHINX_OUT_CONFIG_GET_PCI_FN_ASSIGNMENT msgresponse: A list of
 * sub-lists, where each sub-list is a pf followed by the number of vfs for
 * this pf. Suggest using a sentinel value to delimit the sublists.
 */
#define    MC_CMD_EFTEST_SPHINX_OUT_CONFIG_GET_PCI_FN_ASSIGNMENT_LENMIN 0
#define    MC_CMD_EFTEST_SPHINX_OUT_CONFIG_GET_PCI_FN_ASSIGNMENT_LENMAX 252
#define    MC_CMD_EFTEST_SPHINX_OUT_CONFIG_GET_PCI_FN_ASSIGNMENT_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_SPHINX_OUT_CONFIG_GET_PCI_FN_ASSIGNMENT_LEN(num) (0+4*(num))
#define    MC_CMD_EFTEST_SPHINX_OUT_CONFIG_GET_PCI_FN_ASSIGNMENT_DATA_NUM(len) (((len)-0)/4)
#define       MC_CMD_EFTEST_SPHINX_OUT_CONFIG_GET_PCI_FN_ASSIGNMENT_DATA_OFST 0
#define       MC_CMD_EFTEST_SPHINX_OUT_CONFIG_GET_PCI_FN_ASSIGNMENT_DATA_LEN 4
#define       MC_CMD_EFTEST_SPHINX_OUT_CONFIG_GET_PCI_FN_ASSIGNMENT_DATA_MINNUM 0
#define       MC_CMD_EFTEST_SPHINX_OUT_CONFIG_GET_PCI_FN_ASSIGNMENT_DATA_MAXNUM 63
#define       MC_CMD_EFTEST_SPHINX_OUT_CONFIG_GET_PCI_FN_ASSIGNMENT_DATA_MAXNUM_MCDI2 255

/* MC_CMD_EFTEST_SPHINX_IN_CONFIG_GET_IDENTITY msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_CONFIG_GET_IDENTITY_LEN 8
#define       MC_CMD_EFTEST_SPHINX_IN_CONFIG_GET_IDENTITY_SPHINX_OP_OFST 4
#define       MC_CMD_EFTEST_SPHINX_IN_CONFIG_GET_IDENTITY_SPHINX_OP_LEN 4
#define          MC_CMD_EFTEST_SPHINX_IN_CONFIG_GET_IDENTITY_GET_PCI_FN_ASSIGNMENT 0x1 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_CONFIG_GET_IDENTITY_GET_IDENTITY 0x2 /* enum */

/* MC_CMD_EFTEST_SPHINX_OUT_CONFIG_GET_IDENTITY msgresponse */
#define    MC_CMD_EFTEST_SPHINX_OUT_CONFIG_GET_IDENTITY_LENMIN 42
#define    MC_CMD_EFTEST_SPHINX_OUT_CONFIG_GET_IDENTITY_LENMAX 106
#define    MC_CMD_EFTEST_SPHINX_OUT_CONFIG_GET_IDENTITY_LENMAX_MCDI2 106
#define    MC_CMD_EFTEST_SPHINX_OUT_CONFIG_GET_IDENTITY_LEN(num) (42+1*(num))
#define    MC_CMD_EFTEST_SPHINX_OUT_CONFIG_GET_IDENTITY_SERIAL_NUM_NUM(len) (((len)-42)/1)
#define       MC_CMD_EFTEST_SPHINX_OUT_CONFIG_GET_IDENTITY_NUM_MAC_ADDRS_OFST 0
#define       MC_CMD_EFTEST_SPHINX_OUT_CONFIG_GET_IDENTITY_NUM_MAC_ADDRS_LEN 4
#define       MC_CMD_EFTEST_SPHINX_OUT_CONFIG_GET_IDENTITY_MAC_ADDR_BASE_OFST 4
#define       MC_CMD_EFTEST_SPHINX_OUT_CONFIG_GET_IDENTITY_MAC_ADDR_BASE_LEN 1
#define       MC_CMD_EFTEST_SPHINX_OUT_CONFIG_GET_IDENTITY_MAC_ADDR_BASE_MINNUM 0
#define       MC_CMD_EFTEST_SPHINX_OUT_CONFIG_GET_IDENTITY_MAC_ADDR_BASE_MAXNUM 6
#define       MC_CMD_EFTEST_SPHINX_OUT_CONFIG_GET_IDENTITY_MAC_ADDR_BASE_MAXNUM_MCDI2 6
/* A single VERSION structure for the FPGA. */
#define       MC_CMD_EFTEST_SPHINX_OUT_CONFIG_GET_IDENTITY_FPGA_VERSION_OFST 10
#define       MC_CMD_EFTEST_SPHINX_OUT_CONFIG_GET_IDENTITY_FPGA_VERSION_LEN 4
#define       MC_CMD_EFTEST_SPHINX_OUT_CONFIG_GET_IDENTITY_FPGA_VERSION_NUM 4
/* A single VERSION structure for the XMC. */
#define       MC_CMD_EFTEST_SPHINX_OUT_CONFIG_GET_IDENTITY_XMC_VERSION_OFST 26
#define       MC_CMD_EFTEST_SPHINX_OUT_CONFIG_GET_IDENTITY_XMC_VERSION_LEN 4
#define       MC_CMD_EFTEST_SPHINX_OUT_CONFIG_GET_IDENTITY_XMC_VERSION_NUM 4
#define       MC_CMD_EFTEST_SPHINX_OUT_CONFIG_GET_IDENTITY_SERIAL_NUM_OFST 42
#define       MC_CMD_EFTEST_SPHINX_OUT_CONFIG_GET_IDENTITY_SERIAL_NUM_LEN 1
#define       MC_CMD_EFTEST_SPHINX_OUT_CONFIG_GET_IDENTITY_SERIAL_NUM_MINNUM 0
#define       MC_CMD_EFTEST_SPHINX_OUT_CONFIG_GET_IDENTITY_SERIAL_NUM_MAXNUM 64
#define       MC_CMD_EFTEST_SPHINX_OUT_CONFIG_GET_IDENTITY_SERIAL_NUM_MAXNUM_MCDI2 64

/* MC_CMD_EFTEST_SPHINX_IN_QDMA msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_QDMA_LEN 8
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_SPHINX_OP_OFST 4
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_SPHINX_OP_LEN 4
#define          MC_CMD_EFTEST_SPHINX_IN_QDMA_RESOURCES_INIT 0x1 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_QDMA_COUNTERS_ALLOC 0x2 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_QDMA_TIMERS_ALLOC 0x3 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_QDMA_INTERRUPT_RINGS_ALLOC 0x4 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_QDMA_QSETS_ALLOC 0x5 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_QDMA_BUFFER_SIZES_INIT 0x6 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_QDMA_RING_SIZES_INIT 0x7 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_QDMA_COUNTERS_FREE 0x8 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_QDMA_TIMERS_FREE 0x9 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_QDMA_INTERRUPT_RINGS_FREE 0xb /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_QDMA_QSETS_FREE 0xc /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_QDMA_COUNTER_INIT 0xd /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_QDMA_TIMER_INIT 0xe /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_QDMA_INTERRUPT_RING_INIT 0xf /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_QDMA_WRITEBACK_QUEUE_INIT 0x10 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_QDMA_C2H_QUEUE_INIT 0x11 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_QDMA_H2C_QUEUE_INIT 0x12 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_QDMA_INTERRUPT_RING_FINI 0x13 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_QDMA_WRITEBACK_QUEUE_FINI 0x14 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_QDMA_C2H_QUEUE_FINI 0x15 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_QDMA_H2C_QUEUE_FINI 0x16 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_QDMA_BUFFER_SIZES_ALLOC 0x17 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_QDMA_BUFFER_SIZES_FREE 0x18 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_QDMA_BUFFER_SIZES_SET 0x19 /* enum */

/* MC_CMD_EFTEST_SPHINX_IN_QDMA_RESOURCES_INIT msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_QDMA_RESOURCES_INIT_LEN 8
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_RESOURCES_INIT_SPHINX_OP_OFST 4
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_RESOURCES_INIT_SPHINX_OP_LEN 4
#define          MC_CMD_EFTEST_SPHINX_IN_QDMA_RESOURCES_INIT_GET_PCI_FN_ASSIGNMENT 0x1 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_QDMA_RESOURCES_INIT_GET_IDENTITY 0x2 /* enum */

/* MC_CMD_EFTEST_SPHINX_OUT_QDMA_RESOURCES_INIT msgresponse */
#define    MC_CMD_EFTEST_SPHINX_OUT_QDMA_RESOURCES_INIT_LEN 0

/* MC_CMD_EFTEST_SPHINX_IN_QDMA_COUNTERS_ALLOC msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_QDMA_COUNTERS_ALLOC_LEN 12
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_COUNTERS_ALLOC_NUM_COUNTERS_OFST 8
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_COUNTERS_ALLOC_NUM_COUNTERS_LEN 4

/* MC_CMD_EFTEST_SPHINX_OUT_QDMA_COUNTERS_ALLOC msgresponse */
#define    MC_CMD_EFTEST_SPHINX_OUT_QDMA_COUNTERS_ALLOC_LENMIN 0
#define    MC_CMD_EFTEST_SPHINX_OUT_QDMA_COUNTERS_ALLOC_LENMAX 252
#define    MC_CMD_EFTEST_SPHINX_OUT_QDMA_COUNTERS_ALLOC_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_SPHINX_OUT_QDMA_COUNTERS_ALLOC_LEN(num) (0+4*(num))
#define    MC_CMD_EFTEST_SPHINX_OUT_QDMA_COUNTERS_ALLOC_COUNTERS_NUM(len) (((len)-0)/4)
#define       MC_CMD_EFTEST_SPHINX_OUT_QDMA_COUNTERS_ALLOC_COUNTERS_OFST 0
#define       MC_CMD_EFTEST_SPHINX_OUT_QDMA_COUNTERS_ALLOC_COUNTERS_LEN 4
#define       MC_CMD_EFTEST_SPHINX_OUT_QDMA_COUNTERS_ALLOC_COUNTERS_MINNUM 0
#define       MC_CMD_EFTEST_SPHINX_OUT_QDMA_COUNTERS_ALLOC_COUNTERS_MAXNUM 63
#define       MC_CMD_EFTEST_SPHINX_OUT_QDMA_COUNTERS_ALLOC_COUNTERS_MAXNUM_MCDI2 255

/* MC_CMD_EFTEST_SPHINX_IN_QDMA_TIMERS_ALLOC msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_QDMA_TIMERS_ALLOC_LEN 12
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_TIMERS_ALLOC_NUM_TIMERS_OFST 8
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_TIMERS_ALLOC_NUM_TIMERS_LEN 4

/* MC_CMD_EFTEST_SPHINX_OUT_QDMA_TIMERS_ALLOC msgresponse */
#define    MC_CMD_EFTEST_SPHINX_OUT_QDMA_TIMERS_ALLOC_LENMIN 0
#define    MC_CMD_EFTEST_SPHINX_OUT_QDMA_TIMERS_ALLOC_LENMAX 252
#define    MC_CMD_EFTEST_SPHINX_OUT_QDMA_TIMERS_ALLOC_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_SPHINX_OUT_QDMA_TIMERS_ALLOC_LEN(num) (0+4*(num))
#define    MC_CMD_EFTEST_SPHINX_OUT_QDMA_TIMERS_ALLOC_TIMERS_NUM(len) (((len)-0)/4)
#define       MC_CMD_EFTEST_SPHINX_OUT_QDMA_TIMERS_ALLOC_TIMERS_OFST 0
#define       MC_CMD_EFTEST_SPHINX_OUT_QDMA_TIMERS_ALLOC_TIMERS_LEN 4
#define       MC_CMD_EFTEST_SPHINX_OUT_QDMA_TIMERS_ALLOC_TIMERS_MINNUM 0
#define       MC_CMD_EFTEST_SPHINX_OUT_QDMA_TIMERS_ALLOC_TIMERS_MAXNUM 63
#define       MC_CMD_EFTEST_SPHINX_OUT_QDMA_TIMERS_ALLOC_TIMERS_MAXNUM_MCDI2 255

/* MC_CMD_EFTEST_SPHINX_IN_QDMA_INTERRUPT_RINGS_ALLOC msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_QDMA_INTERRUPT_RINGS_ALLOC_LEN 16
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_INTERRUPT_RINGS_ALLOC_PF_OFST 8
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_INTERRUPT_RINGS_ALLOC_PF_LEN 2
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_INTERRUPT_RINGS_ALLOC_VF_OFST 10
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_INTERRUPT_RINGS_ALLOC_VF_LEN 2
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_INTERRUPT_RINGS_ALLOC_NUM_RINGS_OFST 12
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_INTERRUPT_RINGS_ALLOC_NUM_RINGS_LEN 4

/* MC_CMD_EFTEST_SPHINX_OUT_QDMA_INTERRUPT_RINGS_ALLOC msgresponse */
#define    MC_CMD_EFTEST_SPHINX_OUT_QDMA_INTERRUPT_RINGS_ALLOC_LEN 4
#define       MC_CMD_EFTEST_SPHINX_OUT_QDMA_INTERRUPT_RINGS_ALLOC_RING_BASE_OFST 0
#define       MC_CMD_EFTEST_SPHINX_OUT_QDMA_INTERRUPT_RINGS_ALLOC_RING_BASE_LEN 4

/* MC_CMD_EFTEST_SPHINX_IN_QDMA_QSETS_ALLOC msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_QDMA_QSETS_ALLOC_LEN 20
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_QSETS_ALLOC_PF_OFST 8
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_QSETS_ALLOC_PF_LEN 2
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_QSETS_ALLOC_VF_OFST 10
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_QSETS_ALLOC_VF_LEN 2
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_QSETS_ALLOC_MIN_QUEUES_OFST 12
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_QSETS_ALLOC_MIN_QUEUES_LEN 4
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_QSETS_ALLOC_BEST_QUEUES_OFST 16
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_QSETS_ALLOC_BEST_QUEUES_LEN 4

/* MC_CMD_EFTEST_SPHINX_OUT_QDMA_QSETS_ALLOC msgresponse */
#define    MC_CMD_EFTEST_SPHINX_OUT_QDMA_QSETS_ALLOC_LEN 8
#define       MC_CMD_EFTEST_SPHINX_OUT_QDMA_QSETS_ALLOC_NUM_QUEUES_OFST 0
#define       MC_CMD_EFTEST_SPHINX_OUT_QDMA_QSETS_ALLOC_NUM_QUEUES_LEN 4
#define       MC_CMD_EFTEST_SPHINX_OUT_QDMA_QSETS_ALLOC_QUEUE_BASE_OFST 4
#define       MC_CMD_EFTEST_SPHINX_OUT_QDMA_QSETS_ALLOC_QUEUE_BASE_LEN 4

/* MC_CMD_EFTEST_SPHINX_IN_QDMA_BUFFER_SIZES_INIT msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_QDMA_BUFFER_SIZES_INIT_LENMIN 8
#define    MC_CMD_EFTEST_SPHINX_IN_QDMA_BUFFER_SIZES_INIT_LENMAX 252
#define    MC_CMD_EFTEST_SPHINX_IN_QDMA_BUFFER_SIZES_INIT_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_SPHINX_IN_QDMA_BUFFER_SIZES_INIT_LEN(num) (8+4*(num))
#define    MC_CMD_EFTEST_SPHINX_IN_QDMA_BUFFER_SIZES_INIT_SIZES_NUM(len) (((len)-8)/4)
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_BUFFER_SIZES_INIT_SIZES_OFST 8
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_BUFFER_SIZES_INIT_SIZES_LEN 4
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_BUFFER_SIZES_INIT_SIZES_MINNUM 0
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_BUFFER_SIZES_INIT_SIZES_MAXNUM 61
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_BUFFER_SIZES_INIT_SIZES_MAXNUM_MCDI2 253

/* MC_CMD_EFTEST_SPHINX_OUT_QDMA_BUFFER_SIZES_INIT msgresponse */
#define    MC_CMD_EFTEST_SPHINX_OUT_QDMA_BUFFER_SIZES_INIT_LEN 0

/* MC_CMD_EFTEST_SPHINX_IN_QDMA_RING_SIZES_INIT msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_QDMA_RING_SIZES_INIT_LENMIN 8
#define    MC_CMD_EFTEST_SPHINX_IN_QDMA_RING_SIZES_INIT_LENMAX 252
#define    MC_CMD_EFTEST_SPHINX_IN_QDMA_RING_SIZES_INIT_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_SPHINX_IN_QDMA_RING_SIZES_INIT_LEN(num) (8+4*(num))
#define    MC_CMD_EFTEST_SPHINX_IN_QDMA_RING_SIZES_INIT_SIZES_NUM(len) (((len)-8)/4)
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_RING_SIZES_INIT_SIZES_OFST 8
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_RING_SIZES_INIT_SIZES_LEN 4
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_RING_SIZES_INIT_SIZES_MINNUM 0
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_RING_SIZES_INIT_SIZES_MAXNUM 61
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_RING_SIZES_INIT_SIZES_MAXNUM_MCDI2 253

/* MC_CMD_EFTEST_SPHINX_OUT_QDMA_RING_SIZES_INIT msgresponse */
#define    MC_CMD_EFTEST_SPHINX_OUT_QDMA_RING_SIZES_INIT_LEN 0

/* MC_CMD_EFTEST_SPHINX_IN_QDMA_COUNTERS_FREE msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_QDMA_COUNTERS_FREE_LEN 8
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_COUNTERS_FREE_SPHINX_OP_OFST 4
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_COUNTERS_FREE_SPHINX_OP_LEN 4
#define          MC_CMD_EFTEST_SPHINX_IN_QDMA_COUNTERS_FREE_GET_PCI_FN_ASSIGNMENT 0x1 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_QDMA_COUNTERS_FREE_GET_IDENTITY 0x2 /* enum */

/* MC_CMD_EFTEST_SPHINX_OUT_QDMA_COUNTERS_FREE msgresponse */
#define    MC_CMD_EFTEST_SPHINX_OUT_QDMA_COUNTERS_FREE_LEN 0

/* MC_CMD_EFTEST_SPHINX_IN_QDMA_TIMERS_FREE msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_QDMA_TIMERS_FREE_LEN 8
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_TIMERS_FREE_SPHINX_OP_OFST 4
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_TIMERS_FREE_SPHINX_OP_LEN 4
#define          MC_CMD_EFTEST_SPHINX_IN_QDMA_TIMERS_FREE_GET_PCI_FN_ASSIGNMENT 0x1 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_QDMA_TIMERS_FREE_GET_IDENTITY 0x2 /* enum */

/* MC_CMD_EFTEST_SPHINX_OUT_QDMA_TIMERS_FREE msgresponse */
#define    MC_CMD_EFTEST_SPHINX_OUT_QDMA_TIMERS_FREE_LEN 0

/* MC_CMD_EFTEST_SPHINX_IN_QDMA_INTERRUPT_RINGS_FREE msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_QDMA_INTERRUPT_RINGS_FREE_LEN 12
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_INTERRUPT_RINGS_FREE_PF_OFST 8
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_INTERRUPT_RINGS_FREE_PF_LEN 2
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_INTERRUPT_RINGS_FREE_VF_OFST 10
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_INTERRUPT_RINGS_FREE_VF_LEN 2

/* MC_CMD_EFTEST_SPHINX_OUT_QDMA_INTERRUPT_RINGS_FREE msgresponse */
#define    MC_CMD_EFTEST_SPHINX_OUT_QDMA_INTERRUPT_RINGS_FREE_LEN 0

/* MC_CMD_EFTEST_SPHINX_IN_QDMA_QSETS_FREE msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_QDMA_QSETS_FREE_LEN 12
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_QSETS_FREE_PF_OFST 8
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_QSETS_FREE_PF_LEN 2
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_QSETS_FREE_VF_OFST 10
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_QSETS_FREE_VF_LEN 2

/* MC_CMD_EFTEST_SPHINX_OUT_QDMA_QSETS_FREE msgresponse */
#define    MC_CMD_EFTEST_SPHINX_OUT_QDMA_QSETS_FREE_LEN 0

/* MC_CMD_EFTEST_SPHINX_IN_QDMA_COUNTER_INIT msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_QDMA_COUNTER_INIT_LEN 16
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_COUNTER_INIT_COUNTER_IDX_OFST 8
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_COUNTER_INIT_COUNTER_IDX_LEN 4
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_COUNTER_INIT_COUNTER_VALUE_OFST 12
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_COUNTER_INIT_COUNTER_VALUE_LEN 4

/* MC_CMD_EFTEST_SPHINX_OUT_QDMA_COUNTER_INIT msgresponse */
#define    MC_CMD_EFTEST_SPHINX_OUT_QDMA_COUNTER_INIT_LEN 0

/* MC_CMD_EFTEST_SPHINX_IN_QDMA_TIMER_INIT msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_QDMA_TIMER_INIT_LEN 16
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_TIMER_INIT_TIMER_IDX_OFST 8
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_TIMER_INIT_TIMER_IDX_LEN 4
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_TIMER_INIT_TIMER_VALUE_OFST 12
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_TIMER_INIT_TIMER_VALUE_LEN 4

/* MC_CMD_EFTEST_SPHINX_OUT_QDMA_TIMER_INIT msgresponse */
#define    MC_CMD_EFTEST_SPHINX_OUT_QDMA_TIMER_INIT_LEN 0

/* MC_CMD_EFTEST_SPHINX_IN_QDMA_INTERRUPT_RING_INIT msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_QDMA_INTERRUPT_RING_INIT_LEN 32
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_INTERRUPT_RING_INIT_VECTOR_OFST 8
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_INTERRUPT_RING_INIT_VECTOR_LEN 4
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_INTERRUPT_RING_INIT_BASE_ADDR_OFST 12
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_INTERRUPT_RING_INIT_BASE_ADDR_LEN 8
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_INTERRUPT_RING_INIT_BASE_ADDR_LO_OFST 12
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_INTERRUPT_RING_INIT_BASE_ADDR_LO_LEN 4
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_INTERRUPT_RING_INIT_BASE_ADDR_LO_LBN 96
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_INTERRUPT_RING_INIT_BASE_ADDR_LO_WIDTH 32
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_INTERRUPT_RING_INIT_BASE_ADDR_HI_OFST 16
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_INTERRUPT_RING_INIT_BASE_ADDR_HI_LEN 4
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_INTERRUPT_RING_INIT_BASE_ADDR_HI_LBN 128
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_INTERRUPT_RING_INIT_BASE_ADDR_HI_WIDTH 32
/* An enum of type SPHINX_QDMA_INTERRUPT_RING_SIZE. */
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_INTERRUPT_RING_INIT_RING_SIZE_OFST 20
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_INTERRUPT_RING_INIT_RING_SIZE_LEN 4
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_INTERRUPT_RING_INIT_RING_ID_OFST 24
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_INTERRUPT_RING_INIT_RING_ID_LEN 4
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_INTERRUPT_RING_INIT_PF_OFST 28
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_INTERRUPT_RING_INIT_PF_LEN 2
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_INTERRUPT_RING_INIT_VF_OFST 30
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_INTERRUPT_RING_INIT_VF_LEN 2

/* MC_CMD_EFTEST_SPHINX_OUT_QDMA_INTERRUPT_RING_INIT msgresponse */
#define    MC_CMD_EFTEST_SPHINX_OUT_QDMA_INTERRUPT_RING_INIT_LEN 0

/* MC_CMD_EFTEST_SPHINX_IN_QDMA_WRITEBACK_QUEUE_INIT msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_QDMA_WRITEBACK_QUEUE_INIT_LEN 48
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_WRITEBACK_QUEUE_INIT_QUEUE_ID_OFST 8
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_WRITEBACK_QUEUE_INIT_QUEUE_ID_LEN 4
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_WRITEBACK_QUEUE_INIT_BASE_ADDR_OFST 12
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_WRITEBACK_QUEUE_INIT_BASE_ADDR_LEN 8
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_WRITEBACK_QUEUE_INIT_BASE_ADDR_LO_OFST 12
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_WRITEBACK_QUEUE_INIT_BASE_ADDR_LO_LEN 4
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_WRITEBACK_QUEUE_INIT_BASE_ADDR_LO_LBN 96
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_WRITEBACK_QUEUE_INIT_BASE_ADDR_LO_WIDTH 32
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_WRITEBACK_QUEUE_INIT_BASE_ADDR_HI_OFST 16
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_WRITEBACK_QUEUE_INIT_BASE_ADDR_HI_LEN 4
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_WRITEBACK_QUEUE_INIT_BASE_ADDR_HI_LBN 128
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_WRITEBACK_QUEUE_INIT_BASE_ADDR_HI_WIDTH 32
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_WRITEBACK_QUEUE_INIT_RING_SIZE_OFST 20
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_WRITEBACK_QUEUE_INIT_RING_SIZE_LEN 4
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_WRITEBACK_QUEUE_INIT_INTERRUPT_FLAGS_OFST 24
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_WRITEBACK_QUEUE_INIT_INTERRUPT_FLAGS_LEN 4
#define        MC_CMD_EFTEST_SPHINX_IN_QDMA_WRITEBACK_QUEUE_INIT_INTERRUPT_ENABLE_OFST 24
#define        MC_CMD_EFTEST_SPHINX_IN_QDMA_WRITEBACK_QUEUE_INIT_INTERRUPT_ENABLE_LBN 0
#define        MC_CMD_EFTEST_SPHINX_IN_QDMA_WRITEBACK_QUEUE_INIT_INTERRUPT_ENABLE_WIDTH 1
#define        MC_CMD_EFTEST_SPHINX_IN_QDMA_WRITEBACK_QUEUE_INIT_INTERRUPT_COALESCE_OFST 24
#define        MC_CMD_EFTEST_SPHINX_IN_QDMA_WRITEBACK_QUEUE_INIT_INTERRUPT_COALESCE_LBN 1
#define        MC_CMD_EFTEST_SPHINX_IN_QDMA_WRITEBACK_QUEUE_INIT_INTERRUPT_COALESCE_WIDTH 1
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_WRITEBACK_QUEUE_INIT_INTERRUPT_VECTOR_OFST 28
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_WRITEBACK_QUEUE_INIT_INTERRUPT_VECTOR_LEN 4
/* An enum of type SPHINX_QDMA_WRITEBACK_QUEUE_TRIGGER_MODE. */
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_WRITEBACK_QUEUE_INIT_MODE_OFST 32
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_WRITEBACK_QUEUE_INIT_MODE_LEN 4
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_WRITEBACK_QUEUE_INIT_COUNTER_IDX_OFST 36
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_WRITEBACK_QUEUE_INIT_COUNTER_IDX_LEN 4
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_WRITEBACK_QUEUE_INIT_TIMER_IDX_OFST 40
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_WRITEBACK_QUEUE_INIT_TIMER_IDX_LEN 4
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_WRITEBACK_QUEUE_INIT_PF_OFST 44
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_WRITEBACK_QUEUE_INIT_PF_LEN 2
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_WRITEBACK_QUEUE_INIT_VF_OFST 46
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_WRITEBACK_QUEUE_INIT_VF_LEN 2

/* MC_CMD_EFTEST_SPHINX_OUT_QDMA_WRITEBACK_QUEUE_INIT msgresponse */
#define    MC_CMD_EFTEST_SPHINX_OUT_QDMA_WRITEBACK_QUEUE_INIT_LEN 0

/* MC_CMD_EFTEST_SPHINX_IN_QDMA_C2H_QUEUE_INIT msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_QDMA_C2H_QUEUE_INIT_LEN 36
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_C2H_QUEUE_INIT_QUEUE_ID_OFST 8
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_C2H_QUEUE_INIT_QUEUE_ID_LEN 4
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_C2H_QUEUE_INIT_BASE_ADDR_OFST 12
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_C2H_QUEUE_INIT_BASE_ADDR_LEN 8
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_C2H_QUEUE_INIT_BASE_ADDR_LO_OFST 12
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_C2H_QUEUE_INIT_BASE_ADDR_LO_LEN 4
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_C2H_QUEUE_INIT_BASE_ADDR_LO_LBN 96
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_C2H_QUEUE_INIT_BASE_ADDR_LO_WIDTH 32
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_C2H_QUEUE_INIT_BASE_ADDR_HI_OFST 16
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_C2H_QUEUE_INIT_BASE_ADDR_HI_LEN 4
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_C2H_QUEUE_INIT_BASE_ADDR_HI_LBN 128
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_C2H_QUEUE_INIT_BASE_ADDR_HI_WIDTH 32
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_C2H_QUEUE_INIT_RING_SIZE_OFST 20
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_C2H_QUEUE_INIT_RING_SIZE_LEN 4
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_C2H_QUEUE_INIT_PF_OFST 24
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_C2H_QUEUE_INIT_PF_LEN 2
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_C2H_QUEUE_INIT_VF_OFST 26
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_C2H_QUEUE_INIT_VF_LEN 2
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_C2H_QUEUE_INIT_BUFFER_SIZE_OFST 28
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_C2H_QUEUE_INIT_BUFFER_SIZE_LEN 4
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_C2H_QUEUE_INIT_FLAGS_OFST 32
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_C2H_QUEUE_INIT_FLAGS_LEN 4
#define        MC_CMD_EFTEST_SPHINX_IN_QDMA_C2H_QUEUE_INIT_BYPASS_OFST 32
#define        MC_CMD_EFTEST_SPHINX_IN_QDMA_C2H_QUEUE_INIT_BYPASS_LBN 0
#define        MC_CMD_EFTEST_SPHINX_IN_QDMA_C2H_QUEUE_INIT_BYPASS_WIDTH 1
#define        MC_CMD_EFTEST_SPHINX_IN_QDMA_C2H_QUEUE_INIT_PREFETCH_OFST 32
#define        MC_CMD_EFTEST_SPHINX_IN_QDMA_C2H_QUEUE_INIT_PREFETCH_LBN 1
#define        MC_CMD_EFTEST_SPHINX_IN_QDMA_C2H_QUEUE_INIT_PREFETCH_WIDTH 1

/* MC_CMD_EFTEST_SPHINX_OUT_QDMA_C2H_QUEUE_INIT msgresponse */
#define    MC_CMD_EFTEST_SPHINX_OUT_QDMA_C2H_QUEUE_INIT_LEN 0

/* MC_CMD_EFTEST_SPHINX_IN_QDMA_H2C_QUEUE_INIT msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_QDMA_H2C_QUEUE_INIT_LEN 40
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_H2C_QUEUE_INIT_QUEUE_ID_OFST 8
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_H2C_QUEUE_INIT_QUEUE_ID_LEN 4
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_H2C_QUEUE_INIT_BASE_ADDR_OFST 12
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_H2C_QUEUE_INIT_BASE_ADDR_LEN 8
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_H2C_QUEUE_INIT_BASE_ADDR_LO_OFST 12
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_H2C_QUEUE_INIT_BASE_ADDR_LO_LEN 4
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_H2C_QUEUE_INIT_BASE_ADDR_LO_LBN 96
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_H2C_QUEUE_INIT_BASE_ADDR_LO_WIDTH 32
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_H2C_QUEUE_INIT_BASE_ADDR_HI_OFST 16
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_H2C_QUEUE_INIT_BASE_ADDR_HI_LEN 4
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_H2C_QUEUE_INIT_BASE_ADDR_HI_LBN 128
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_H2C_QUEUE_INIT_BASE_ADDR_HI_WIDTH 32
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_H2C_QUEUE_INIT_RING_SIZE_OFST 20
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_H2C_QUEUE_INIT_RING_SIZE_LEN 4
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_H2C_QUEUE_INIT_PF_OFST 24
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_H2C_QUEUE_INIT_PF_LEN 2
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_H2C_QUEUE_INIT_VF_OFST 26
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_H2C_QUEUE_INIT_VF_LEN 2
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_H2C_QUEUE_INIT_INTERRUPT_FLAGS_OFST 28
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_H2C_QUEUE_INIT_INTERRUPT_FLAGS_LEN 4
#define        MC_CMD_EFTEST_SPHINX_IN_QDMA_H2C_QUEUE_INIT_INTERRUPT_ENABLE_OFST 28
#define        MC_CMD_EFTEST_SPHINX_IN_QDMA_H2C_QUEUE_INIT_INTERRUPT_ENABLE_LBN 0
#define        MC_CMD_EFTEST_SPHINX_IN_QDMA_H2C_QUEUE_INIT_INTERRUPT_ENABLE_WIDTH 1
#define        MC_CMD_EFTEST_SPHINX_IN_QDMA_H2C_QUEUE_INIT_INTERRUPT_COALESCE_OFST 28
#define        MC_CMD_EFTEST_SPHINX_IN_QDMA_H2C_QUEUE_INIT_INTERRUPT_COALESCE_LBN 1
#define        MC_CMD_EFTEST_SPHINX_IN_QDMA_H2C_QUEUE_INIT_INTERRUPT_COALESCE_WIDTH 1
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_H2C_QUEUE_INIT_INTERRUPT_VECTOR_OFST 32
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_H2C_QUEUE_INIT_INTERRUPT_VECTOR_LEN 4
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_H2C_QUEUE_INIT_WRITEBACK_FLAGS_OFST 36
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_H2C_QUEUE_INIT_WRITEBACK_FLAGS_LEN 4
#define        MC_CMD_EFTEST_SPHINX_IN_QDMA_H2C_QUEUE_INIT_WRITEBACK_ENABLE_OFST 36
#define        MC_CMD_EFTEST_SPHINX_IN_QDMA_H2C_QUEUE_INIT_WRITEBACK_ENABLE_LBN 0
#define        MC_CMD_EFTEST_SPHINX_IN_QDMA_H2C_QUEUE_INIT_WRITEBACK_ENABLE_WIDTH 1

/* MC_CMD_EFTEST_SPHINX_OUT_QDMA_H2C_QUEUE_INIT msgresponse */
#define    MC_CMD_EFTEST_SPHINX_OUT_QDMA_H2C_QUEUE_INIT_LEN 0

/* MC_CMD_EFTEST_SPHINX_IN_QDMA_INTERRUPT_RING_FINI msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_QDMA_INTERRUPT_RING_FINI_LEN 16
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_INTERRUPT_RING_FINI_RING_ID_OFST 8
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_INTERRUPT_RING_FINI_RING_ID_LEN 4
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_INTERRUPT_RING_FINI_PF_OFST 12
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_INTERRUPT_RING_FINI_PF_LEN 2
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_INTERRUPT_RING_FINI_VF_OFST 14
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_INTERRUPT_RING_FINI_VF_LEN 2

/* MC_CMD_EFTEST_SPHINX_OUT_QDMA_INTERRUPT_RING_FINI msgresponse */
#define    MC_CMD_EFTEST_SPHINX_OUT_QDMA_INTERRUPT_RING_FINI_LEN 0

/* MC_CMD_EFTEST_SPHINX_IN_QDMA_WRITEBACK_QUEUE_FINI msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_QDMA_WRITEBACK_QUEUE_FINI_LEN 16
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_WRITEBACK_QUEUE_FINI_QUEUE_ID_OFST 8
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_WRITEBACK_QUEUE_FINI_QUEUE_ID_LEN 4
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_WRITEBACK_QUEUE_FINI_PF_OFST 12
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_WRITEBACK_QUEUE_FINI_PF_LEN 2
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_WRITEBACK_QUEUE_FINI_VF_OFST 14
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_WRITEBACK_QUEUE_FINI_VF_LEN 2

/* MC_CMD_EFTEST_SPHINX_OUT_QDMA_WRITEBACK_QUEUE_FINI msgresponse */
#define    MC_CMD_EFTEST_SPHINX_OUT_QDMA_WRITEBACK_QUEUE_FINI_LEN 0

/* MC_CMD_EFTEST_SPHINX_IN_QDMA_C2H_QUEUE_FINI msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_QDMA_C2H_QUEUE_FINI_LEN 16
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_C2H_QUEUE_FINI_QUEUE_ID_OFST 8
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_C2H_QUEUE_FINI_QUEUE_ID_LEN 4
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_C2H_QUEUE_FINI_PF_OFST 12
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_C2H_QUEUE_FINI_PF_LEN 2
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_C2H_QUEUE_FINI_VF_OFST 14
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_C2H_QUEUE_FINI_VF_LEN 2

/* MC_CMD_EFTEST_SPHINX_OUT_QDMA_C2H_QUEUE_FINI msgresponse */
#define    MC_CMD_EFTEST_SPHINX_OUT_QDMA_C2H_QUEUE_FINI_LEN 0

/* MC_CMD_EFTEST_SPHINX_IN_QDMA_H2C_QUEUE_FINI msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_QDMA_H2C_QUEUE_FINI_LEN 16
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_H2C_QUEUE_FINI_QUEUE_ID_OFST 8
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_H2C_QUEUE_FINI_QUEUE_ID_LEN 4
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_H2C_QUEUE_FINI_PF_OFST 12
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_H2C_QUEUE_FINI_PF_LEN 2
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_H2C_QUEUE_FINI_VF_OFST 14
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_H2C_QUEUE_FINI_VF_LEN 2

/* MC_CMD_EFTEST_SPHINX_OUT_QDMA_H2C_QUEUE_FINI msgresponse */
#define    MC_CMD_EFTEST_SPHINX_OUT_QDMA_H2C_QUEUE_FINI_LEN 0

/* MC_CMD_EFTEST_SPHINX_IN_QDMA_BUFFER_SIZES_ALLOC msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_QDMA_BUFFER_SIZES_ALLOC_LEN 12
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_BUFFER_SIZES_ALLOC_NUM_SIZES_OFST 8
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_BUFFER_SIZES_ALLOC_NUM_SIZES_LEN 4

/* MC_CMD_EFTEST_SPHINX_OUT_QDMA_BUFFER_SIZES_ALLOC msgresponse */
#define    MC_CMD_EFTEST_SPHINX_OUT_QDMA_BUFFER_SIZES_ALLOC_LEN 4
#define       MC_CMD_EFTEST_SPHINX_OUT_QDMA_BUFFER_SIZES_ALLOC_INDEX_OFST 0
#define       MC_CMD_EFTEST_SPHINX_OUT_QDMA_BUFFER_SIZES_ALLOC_INDEX_LEN 4

/* MC_CMD_EFTEST_SPHINX_IN_QDMA_BUFFER_SIZES_FREE msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_QDMA_BUFFER_SIZES_FREE_LEN 12
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_BUFFER_SIZES_FREE_INDEX_OFST 8
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_BUFFER_SIZES_FREE_INDEX_LEN 4

/* MC_CMD_EFTEST_SPHINX_OUT_QDMA_BUFFER_SIZES_FREE msgresponse */
#define    MC_CMD_EFTEST_SPHINX_OUT_QDMA_BUFFER_SIZES_FREE_LEN 0

/* MC_CMD_EFTEST_SPHINX_IN_QDMA_BUFFER_SIZES_SET msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_QDMA_BUFFER_SIZES_SET_LENMIN 16
#define    MC_CMD_EFTEST_SPHINX_IN_QDMA_BUFFER_SIZES_SET_LENMAX 252
#define    MC_CMD_EFTEST_SPHINX_IN_QDMA_BUFFER_SIZES_SET_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_SPHINX_IN_QDMA_BUFFER_SIZES_SET_LEN(num) (16+4*(num))
#define    MC_CMD_EFTEST_SPHINX_IN_QDMA_BUFFER_SIZES_SET_SIZES_NUM(len) (((len)-16)/4)
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_BUFFER_SIZES_SET_INDEX_OFST 8
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_BUFFER_SIZES_SET_INDEX_LEN 4
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_BUFFER_SIZES_SET_NUM_SIZES_OFST 12
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_BUFFER_SIZES_SET_NUM_SIZES_LEN 4
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_BUFFER_SIZES_SET_SIZES_OFST 16
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_BUFFER_SIZES_SET_SIZES_LEN 4
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_BUFFER_SIZES_SET_SIZES_MINNUM 0
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_BUFFER_SIZES_SET_SIZES_MAXNUM 59
#define       MC_CMD_EFTEST_SPHINX_IN_QDMA_BUFFER_SIZES_SET_SIZES_MAXNUM_MCDI2 251

/* MC_CMD_EFTEST_SPHINX_OUT_QDMA_BUFFER_SIZES_SET msgresponse */
#define    MC_CMD_EFTEST_SPHINX_OUT_QDMA_BUFFER_SIZES_SET_LEN 0

/* MC_CMD_EFTEST_SPHINX_IN_FLASH msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_FLASH_LEN 8
#define       MC_CMD_EFTEST_SPHINX_IN_FLASH_SPHINX_OP_OFST 4
#define       MC_CMD_EFTEST_SPHINX_IN_FLASH_SPHINX_OP_LEN 4
#define          MC_CMD_EFTEST_SPHINX_IN_FLASH_READ 0x1 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_FLASH_WRITE 0x2 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_FLASH_ERASE 0x3 /* enum */

/* MC_CMD_EFTEST_SPHINX_IN_FLASH_READ msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_FLASH_READ_LEN 16
#define       MC_CMD_EFTEST_SPHINX_IN_FLASH_READ_OFFSET_OFST 8
#define       MC_CMD_EFTEST_SPHINX_IN_FLASH_READ_OFFSET_LEN 4
#define       MC_CMD_EFTEST_SPHINX_IN_FLASH_READ_LENGTH_OFST 12
#define       MC_CMD_EFTEST_SPHINX_IN_FLASH_READ_LENGTH_LEN 4

/* MC_CMD_EFTEST_SPHINX_OUT_FLASH_READ msgresponse */
#define    MC_CMD_EFTEST_SPHINX_OUT_FLASH_READ_LENMIN 0
#define    MC_CMD_EFTEST_SPHINX_OUT_FLASH_READ_LENMAX 252
#define    MC_CMD_EFTEST_SPHINX_OUT_FLASH_READ_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_SPHINX_OUT_FLASH_READ_LEN(num) (0+1*(num))
#define    MC_CMD_EFTEST_SPHINX_OUT_FLASH_READ_DATA_NUM(len) (((len)-0)/1)
/* The bytes returned by a flash read. */
#define       MC_CMD_EFTEST_SPHINX_OUT_FLASH_READ_DATA_OFST 0
#define       MC_CMD_EFTEST_SPHINX_OUT_FLASH_READ_DATA_LEN 1
#define       MC_CMD_EFTEST_SPHINX_OUT_FLASH_READ_DATA_MINNUM 0
#define       MC_CMD_EFTEST_SPHINX_OUT_FLASH_READ_DATA_MAXNUM 252
#define       MC_CMD_EFTEST_SPHINX_OUT_FLASH_READ_DATA_MAXNUM_MCDI2 1020

/* MC_CMD_EFTEST_SPHINX_IN_FLASH_WRITE msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_FLASH_WRITE_LENMIN 12
#define    MC_CMD_EFTEST_SPHINX_IN_FLASH_WRITE_LENMAX 252
#define    MC_CMD_EFTEST_SPHINX_IN_FLASH_WRITE_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_SPHINX_IN_FLASH_WRITE_LEN(num) (12+1*(num))
#define    MC_CMD_EFTEST_SPHINX_IN_FLASH_WRITE_DATA_NUM(len) (((len)-12)/1)
#define       MC_CMD_EFTEST_SPHINX_IN_FLASH_WRITE_OFFSET_OFST 8
#define       MC_CMD_EFTEST_SPHINX_IN_FLASH_WRITE_OFFSET_LEN 4
#define       MC_CMD_EFTEST_SPHINX_IN_FLASH_WRITE_DATA_OFST 12
#define       MC_CMD_EFTEST_SPHINX_IN_FLASH_WRITE_DATA_LEN 1
#define       MC_CMD_EFTEST_SPHINX_IN_FLASH_WRITE_DATA_MINNUM 0
#define       MC_CMD_EFTEST_SPHINX_IN_FLASH_WRITE_DATA_MAXNUM 240
#define       MC_CMD_EFTEST_SPHINX_IN_FLASH_WRITE_DATA_MAXNUM_MCDI2 1008

/* MC_CMD_EFTEST_SPHINX_OUT_FLASH_WRITE msgresponse */
#define    MC_CMD_EFTEST_SPHINX_OUT_FLASH_WRITE_LEN 0

/* MC_CMD_EFTEST_SPHINX_IN_FLASH_ERASE msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_FLASH_ERASE_LEN 16
#define       MC_CMD_EFTEST_SPHINX_IN_FLASH_ERASE_OFFSET_OFST 8
#define       MC_CMD_EFTEST_SPHINX_IN_FLASH_ERASE_OFFSET_LEN 4
#define       MC_CMD_EFTEST_SPHINX_IN_FLASH_ERASE_LENGTH_OFST 12
#define       MC_CMD_EFTEST_SPHINX_IN_FLASH_ERASE_LENGTH_LEN 4

/* MC_CMD_EFTEST_SPHINX_OUT_FLASH_ERASE msgresponse */
#define    MC_CMD_EFTEST_SPHINX_OUT_FLASH_ERASE_LEN 0

/* MC_CMD_EFTEST_SPHINX_IN_SENSOR msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_SENSOR_LEN 8
#define       MC_CMD_EFTEST_SPHINX_IN_SENSOR_SPHINX_OP_OFST 4
#define       MC_CMD_EFTEST_SPHINX_IN_SENSOR_SPHINX_OP_LEN 4
#define          MC_CMD_EFTEST_SPHINX_IN_SENSOR_ADD 0x1 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_SENSOR_REMOVE 0x2 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_SENSOR_WRITE_VALUE 0x3 /* enum */

/* MC_CMD_EFTEST_SPHINX_IN_SENSOR_ADD msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_SENSOR_ADD_LEN 72
#define       MC_CMD_EFTEST_SPHINX_IN_SENSOR_ADD_ID_OFST 8
#define       MC_CMD_EFTEST_SPHINX_IN_SENSOR_ADD_ID_LEN 4
/* Zero-terminated string, max 32 bytes */
#define       MC_CMD_EFTEST_SPHINX_IN_SENSOR_ADD_NAME_OFST 12
#define       MC_CMD_EFTEST_SPHINX_IN_SENSOR_ADD_NAME_LEN 32
/* SPHINX_SENSOR_TYPE enum */
#define       MC_CMD_EFTEST_SPHINX_IN_SENSOR_ADD_TYPE_OFST 44
#define       MC_CMD_EFTEST_SPHINX_IN_SENSOR_ADD_TYPE_LEN 4
/* SPHINX_SENSOR_LIMITS structure */
#define       MC_CMD_EFTEST_SPHINX_IN_SENSOR_ADD_LIMITS_OFST 48
#define       MC_CMD_EFTEST_SPHINX_IN_SENSOR_ADD_LIMITS_LEN 24

/* MC_CMD_EFTEST_SPHINX_OUT_SENSOR_ADD msgresponse */
#define    MC_CMD_EFTEST_SPHINX_OUT_SENSOR_ADD_LEN 4
#define       MC_CMD_EFTEST_SPHINX_OUT_SENSOR_ADD_HANDLE_OFST 0
#define       MC_CMD_EFTEST_SPHINX_OUT_SENSOR_ADD_HANDLE_LEN 4

/* MC_CMD_EFTEST_SPHINX_IN_SENSOR_REMOVE msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_SENSOR_REMOVE_LEN 12
#define       MC_CMD_EFTEST_SPHINX_IN_SENSOR_REMOVE_HANDLE_OFST 8
#define       MC_CMD_EFTEST_SPHINX_IN_SENSOR_REMOVE_HANDLE_LEN 4

/* MC_CMD_EFTEST_SPHINX_OUT_SENSOR_REMOVE msgresponse */
#define    MC_CMD_EFTEST_SPHINX_OUT_SENSOR_REMOVE_LEN 0

/* MC_CMD_EFTEST_SPHINX_IN_SENSOR_WRITE_VALUE msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_SENSOR_WRITE_VALUE_LEN 20
/* SPHINX_SENSOR_READING structure */
#define       MC_CMD_EFTEST_SPHINX_IN_SENSOR_WRITE_VALUE_READING_OFST 8
#define       MC_CMD_EFTEST_SPHINX_IN_SENSOR_WRITE_VALUE_READING_LEN 12

/* MC_CMD_EFTEST_SPHINX_OUT_SENSOR_WRITE_VALUE msgresponse */
#define    MC_CMD_EFTEST_SPHINX_OUT_SENSOR_WRITE_VALUE_LEN 0

/* MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_LEN 8
#define       MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_SPHINX_OP_OFST 4
#define       MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_SPHINX_OP_LEN 4
#define          MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_READ_GPIOS 0x1 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_WRITE_GPIOS 0x2 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_GPIO_CHANGE 0x3 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_MODULE_READ 0x4 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_MODULE_WRITE 0x5 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_MODULE_PROBE 0x6 /* enum */
#define          MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_MODULE_RESET 0x7 /* enum */

/* MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_READ_GPIOS msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_READ_GPIOS_LEN 12
#define       MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_READ_GPIOS_CAGE_ID_OFST 8
#define       MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_READ_GPIOS_CAGE_ID_LEN 4

/* MC_CMD_EFTEST_SPHINX_OUT_CAGE_CONTROL_READ_GPIOS msgresponse */
#define    MC_CMD_EFTEST_SPHINX_OUT_CAGE_CONTROL_READ_GPIOS_LEN 4
/* The meaning of each bit is described by the SPHINX_CAGE_CONTROL_GPIO enum.
 */
#define       MC_CMD_EFTEST_SPHINX_OUT_CAGE_CONTROL_READ_GPIOS_GPIOS_OFST 0
#define       MC_CMD_EFTEST_SPHINX_OUT_CAGE_CONTROL_READ_GPIOS_GPIOS_LEN 1
#define       MC_CMD_EFTEST_SPHINX_OUT_CAGE_CONTROL_READ_GPIOS_PADDING_OFST 1
#define       MC_CMD_EFTEST_SPHINX_OUT_CAGE_CONTROL_READ_GPIOS_PADDING_LEN 3

/* MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_WRITE_GPIOS msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_WRITE_GPIOS_LEN 20
#define       MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_WRITE_GPIOS_CAGE_ID_OFST 8
#define       MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_WRITE_GPIOS_CAGE_ID_LEN 4
/* The meaning of each bit is described by the SPHINX_CAGE_CONTROL_GPIO enum.
 */
#define       MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_WRITE_GPIOS_MASK_OFST 12
#define       MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_WRITE_GPIOS_MASK_LEN 4
/* The meaning of each bit is described by the SPHINX_CAGE_CONTROL_GPIO enum.
 */
#define       MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_WRITE_GPIOS_GPIOS_OFST 16
#define       MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_WRITE_GPIOS_GPIOS_LEN 4

/* MC_CMD_EFTEST_SPHINX_OUT_CAGE_CONTROL_WRITE_GPIOS msgresponse */
#define    MC_CMD_EFTEST_SPHINX_OUT_CAGE_CONTROL_WRITE_GPIOS_LEN 0

/* MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_GPIO_CHANGE msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_GPIO_CHANGE_LEN 16
#define       MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_GPIO_CHANGE_CAGE_ID_OFST 8
#define       MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_GPIO_CHANGE_CAGE_ID_LEN 4
/* The meaning of each bit is described by the SPHINX_CAGE_CONTROL_GPIO enum.
 */
#define       MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_GPIO_CHANGE_GPIOS_OFST 12
#define       MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_GPIO_CHANGE_GPIOS_LEN 4

/* MC_CMD_EFTEST_SPHINX_OUT_CAGE_CONTROL_GPIO_CHANGE msgresponse */
#define    MC_CMD_EFTEST_SPHINX_OUT_CAGE_CONTROL_GPIO_CHANGE_LEN 0

/* MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_MODULE_READ msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_MODULE_READ_LEN 24
#define       MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_MODULE_READ_CAGE_ID_OFST 8
#define       MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_MODULE_READ_CAGE_ID_LEN 4
#define       MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_MODULE_READ_I2C_ADDR_OFST 12
#define       MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_MODULE_READ_I2C_ADDR_LEN 4
#define       MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_MODULE_READ_REG_ADDR_OFST 16
#define       MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_MODULE_READ_REG_ADDR_LEN 4
#define       MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_MODULE_READ_NUM_BYTES_OFST 20
#define       MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_MODULE_READ_NUM_BYTES_LEN 4

/* MC_CMD_EFTEST_SPHINX_OUT_CAGE_CONTROL_MODULE_READ msgresponse */
#define    MC_CMD_EFTEST_SPHINX_OUT_CAGE_CONTROL_MODULE_READ_LENMIN 0
#define    MC_CMD_EFTEST_SPHINX_OUT_CAGE_CONTROL_MODULE_READ_LENMAX 252
#define    MC_CMD_EFTEST_SPHINX_OUT_CAGE_CONTROL_MODULE_READ_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_SPHINX_OUT_CAGE_CONTROL_MODULE_READ_LEN(num) (0+1*(num))
#define    MC_CMD_EFTEST_SPHINX_OUT_CAGE_CONTROL_MODULE_READ_DATA_NUM(len) (((len)-0)/1)
#define       MC_CMD_EFTEST_SPHINX_OUT_CAGE_CONTROL_MODULE_READ_DATA_OFST 0
#define       MC_CMD_EFTEST_SPHINX_OUT_CAGE_CONTROL_MODULE_READ_DATA_LEN 1
#define       MC_CMD_EFTEST_SPHINX_OUT_CAGE_CONTROL_MODULE_READ_DATA_MINNUM 0
#define       MC_CMD_EFTEST_SPHINX_OUT_CAGE_CONTROL_MODULE_READ_DATA_MAXNUM 252
#define       MC_CMD_EFTEST_SPHINX_OUT_CAGE_CONTROL_MODULE_READ_DATA_MAXNUM_MCDI2 1020

/* MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_MODULE_WRITE msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_MODULE_WRITE_LENMIN 20
#define    MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_MODULE_WRITE_LENMAX 252
#define    MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_MODULE_WRITE_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_MODULE_WRITE_LEN(num) (20+1*(num))
#define    MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_MODULE_WRITE_DATA_NUM(len) (((len)-20)/1)
#define       MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_MODULE_WRITE_CAGE_ID_OFST 8
#define       MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_MODULE_WRITE_CAGE_ID_LEN 4
#define       MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_MODULE_WRITE_I2C_ADDR_OFST 12
#define       MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_MODULE_WRITE_I2C_ADDR_LEN 4
#define       MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_MODULE_WRITE_REG_ADDR_OFST 16
#define       MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_MODULE_WRITE_REG_ADDR_LEN 4
#define       MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_MODULE_WRITE_DATA_OFST 20
#define       MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_MODULE_WRITE_DATA_LEN 1
#define       MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_MODULE_WRITE_DATA_MINNUM 0
#define       MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_MODULE_WRITE_DATA_MAXNUM 232
#define       MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_MODULE_WRITE_DATA_MAXNUM_MCDI2 1000

/* MC_CMD_EFTEST_SPHINX_OUT_CAGE_CONTROL_MODULE_WRITE msgresponse */
#define    MC_CMD_EFTEST_SPHINX_OUT_CAGE_CONTROL_MODULE_WRITE_LEN 0

/* MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_MODULE_PROBE msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_MODULE_PROBE_LEN 16
#define       MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_MODULE_PROBE_CAGE_ID_OFST 8
#define       MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_MODULE_PROBE_CAGE_ID_LEN 4
#define       MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_MODULE_PROBE_I2C_ADDR_OFST 12
#define       MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_MODULE_PROBE_I2C_ADDR_LEN 4

/* MC_CMD_EFTEST_SPHINX_OUT_CAGE_CONTROL_MODULE_PROBE msgresponse */
#define    MC_CMD_EFTEST_SPHINX_OUT_CAGE_CONTROL_MODULE_PROBE_LEN 0

/* MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_MODULE_RESET msgrequest */
#define    MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_MODULE_RESET_LEN 12
#define       MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_MODULE_RESET_CAGE_ID_OFST 8
#define       MC_CMD_EFTEST_SPHINX_IN_CAGE_CONTROL_MODULE_RESET_CAGE_ID_LEN 4

/* MC_CMD_EFTEST_SPHINX_OUT_CAGE_CONTROL_MODULE_RESET msgresponse */
#define    MC_CMD_EFTEST_SPHINX_OUT_CAGE_CONTROL_MODULE_RESET_LEN 0

/* MC_CMD_EFTEST_EVENT_MERGE_IN msgrequest */
#define    MC_CMD_EFTEST_EVENT_MERGE_IN_LEN 4
/* Identifies the test. */
#define       MC_CMD_EFTEST_EVENT_MERGE_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_EVENT_MERGE_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_EVENT_MERGE_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_EVENT_MERGE_IN_EFTEST_OP_LEN 1
/* enum: Set event merging parameters */
#define          MC_CMD_EFTEST_EVENT_MERGE_IN_SET_PARAMS 0x0
/* enum: Restore all event merging parameters to the defaults. */
#define          MC_CMD_EFTEST_EVENT_MERGE_IN_RESTORE_DEFAULTS 0x1
/* Align the arguments to 32 bits. */
#define       MC_CMD_EFTEST_EVENT_MERGE_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_EVENT_MERGE_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_EVENT_MERGE_SET_PARAMS_IN msgrequest: Set the event merging
 * parameters which will be used when configuring new queues. Parameters for
 * existing queues are unaffected.
 */
#define    MC_CMD_EFTEST_EVENT_MERGE_SET_PARAMS_IN_LEN 20
/* Identifies the test. */
#define       MC_CMD_EFTEST_EVENT_MERGE_SET_PARAMS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_EVENT_MERGE_SET_PARAMS_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_EVENT_MERGE_SET_PARAMS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_EVENT_MERGE_SET_PARAMS_IN_EFTEST_OP_LEN 1
/* TX merge timeout to configure, in nanoseconds. Granularity is 256ns. Maximum
 * value is 16128. If 0, TX event merging is disabled and TX_MERGE_LOG2_COUNT
 * must also be 0.
 */
#define       MC_CMD_EFTEST_EVENT_MERGE_SET_PARAMS_IN_TX_MERGE_TIMEOUT_NS_OFST 4
#define       MC_CMD_EFTEST_EVENT_MERGE_SET_PARAMS_IN_TX_MERGE_TIMEOUT_NS_LEN 4
/* How many TX events to merge. Setting a value of N means 2^N - 1 events
 * merged. Valid values are 1 to 16. If 0, TX event merging is disabled and
 * TX_MERGE_TIMEOUT_NS must also be 0.
 */
#define       MC_CMD_EFTEST_EVENT_MERGE_SET_PARAMS_IN_TX_MERGE_LOG2_COUNT_OFST 8
#define       MC_CMD_EFTEST_EVENT_MERGE_SET_PARAMS_IN_TX_MERGE_LOG2_COUNT_LEN 4
/* TX merge timeout to configure, in nanoseconds. Granularity is 256ns. Maximum
 * value is 16128. If 0, RX event merging is disabled and RX_MERGE_LOG2_COUNT
 * must also be 0.
 */
#define       MC_CMD_EFTEST_EVENT_MERGE_SET_PARAMS_IN_RX_MERGE_TIMEOUT_NS_OFST 12
#define       MC_CMD_EFTEST_EVENT_MERGE_SET_PARAMS_IN_RX_MERGE_TIMEOUT_NS_LEN 4
/* How many RX events to merge. Setting a value of N means 2^N - 1 events
 * merged. Valid values are 1 to 16. If 0, RX event merging is disabled and
 * RX_MERGE_TIMEOUT_NS must also be 0.
 */
#define       MC_CMD_EFTEST_EVENT_MERGE_SET_PARAMS_IN_RX_MERGE_LOG2_COUNT_OFST 16
#define       MC_CMD_EFTEST_EVENT_MERGE_SET_PARAMS_IN_RX_MERGE_LOG2_COUNT_LEN 4

/* MC_CMD_EFTEST_EVENT_MERGE_RESTORE_DEFAULTS_IN msgrequest */
#define    MC_CMD_EFTEST_EVENT_MERGE_RESTORE_DEFAULTS_IN_LEN 2
/* Identifies the test. */
#define       MC_CMD_EFTEST_EVENT_MERGE_RESTORE_DEFAULTS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_EVENT_MERGE_RESTORE_DEFAULTS_IN_EFTEST_ID_LEN 1
#define       MC_CMD_EFTEST_EVENT_MERGE_RESTORE_DEFAULTS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_EVENT_MERGE_RESTORE_DEFAULTS_IN_EFTEST_OP_LEN 1

/* MC_CMD_EFTEST_MAC_DRAIN_IN msgrequest */
#define    MC_CMD_EFTEST_MAC_DRAIN_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_MAC_DRAIN_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_MAC_DRAIN_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_MAC_DRAIN_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_MAC_DRAIN_IN_EFTEST_OP_LEN 1
/* enum: Turn on MAC drain */
#define          MC_CMD_EFTEST_MAC_DRAIN_IN_MANUAL_ON 0x0
/* enum: Turn off MAC drain */
#define          MC_CMD_EFTEST_MAC_DRAIN_IN_MANUAL_OFF 0x1
/* enum: Start an MC thread for toggling MAC drain */
#define          MC_CMD_EFTEST_MAC_DRAIN_IN_START_TOGGLING 0x2
/* enum: Stop the MC thread that is toggling MAC drain */
#define          MC_CMD_EFTEST_MAC_DRAIN_IN_STOP_TOGGLING 0x3
#define       MC_CMD_EFTEST_MAC_DRAIN_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_MAC_DRAIN_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_MAC_DRAIN_OUT msgresponse */
#define    MC_CMD_EFTEST_MAC_DRAIN_OUT_LEN 0

/* MC_CMD_EFTEST_MAC_DRAIN_MANUAL_ON_IN msgrequest */
#define    MC_CMD_EFTEST_MAC_DRAIN_MANUAL_ON_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_MAC_DRAIN_MANUAL_ON_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_MAC_DRAIN_MANUAL_ON_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_MAC_DRAIN_MANUAL_ON_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_MAC_DRAIN_MANUAL_ON_IN_EFTEST_OP_LEN 1
/* enum: Turn on MAC drain */
#define          MC_CMD_EFTEST_MAC_DRAIN_MANUAL_ON_IN_MANUAL_ON 0x0
/* enum: Turn off MAC drain */
#define          MC_CMD_EFTEST_MAC_DRAIN_MANUAL_ON_IN_MANUAL_OFF 0x1
/* enum: Start an MC thread for toggling MAC drain */
#define          MC_CMD_EFTEST_MAC_DRAIN_MANUAL_ON_IN_START_TOGGLING 0x2
/* enum: Stop the MC thread that is toggling MAC drain */
#define          MC_CMD_EFTEST_MAC_DRAIN_MANUAL_ON_IN_STOP_TOGGLING 0x3
#define       MC_CMD_EFTEST_MAC_DRAIN_MANUAL_ON_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_MAC_DRAIN_MANUAL_ON_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_MAC_DRAIN_MANUAL_OFF_IN msgrequest */
#define    MC_CMD_EFTEST_MAC_DRAIN_MANUAL_OFF_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_MAC_DRAIN_MANUAL_OFF_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_MAC_DRAIN_MANUAL_OFF_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_MAC_DRAIN_MANUAL_OFF_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_MAC_DRAIN_MANUAL_OFF_IN_EFTEST_OP_LEN 1
/* enum: Turn on MAC drain */
#define          MC_CMD_EFTEST_MAC_DRAIN_MANUAL_OFF_IN_MANUAL_ON 0x0
/* enum: Turn off MAC drain */
#define          MC_CMD_EFTEST_MAC_DRAIN_MANUAL_OFF_IN_MANUAL_OFF 0x1
/* enum: Start an MC thread for toggling MAC drain */
#define          MC_CMD_EFTEST_MAC_DRAIN_MANUAL_OFF_IN_START_TOGGLING 0x2
/* enum: Stop the MC thread that is toggling MAC drain */
#define          MC_CMD_EFTEST_MAC_DRAIN_MANUAL_OFF_IN_STOP_TOGGLING 0x3
#define       MC_CMD_EFTEST_MAC_DRAIN_MANUAL_OFF_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_MAC_DRAIN_MANUAL_OFF_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_MAC_DRAIN_START_TOGGLING_IN msgrequest */
#define    MC_CMD_EFTEST_MAC_DRAIN_START_TOGGLING_IN_LEN 12
/* identifies the test */
#define       MC_CMD_EFTEST_MAC_DRAIN_START_TOGGLING_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_MAC_DRAIN_START_TOGGLING_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_MAC_DRAIN_START_TOGGLING_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_MAC_DRAIN_START_TOGGLING_IN_EFTEST_OP_LEN 1
/* enum: Turn on MAC drain */
#define          MC_CMD_EFTEST_MAC_DRAIN_START_TOGGLING_IN_MANUAL_ON 0x0
/* enum: Turn off MAC drain */
#define          MC_CMD_EFTEST_MAC_DRAIN_START_TOGGLING_IN_MANUAL_OFF 0x1
/* enum: Start an MC thread for toggling MAC drain */
#define          MC_CMD_EFTEST_MAC_DRAIN_START_TOGGLING_IN_START_TOGGLING 0x2
/* enum: Stop the MC thread that is toggling MAC drain */
#define          MC_CMD_EFTEST_MAC_DRAIN_START_TOGGLING_IN_STOP_TOGGLING 0x3
#define       MC_CMD_EFTEST_MAC_DRAIN_START_TOGGLING_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_MAC_DRAIN_START_TOGGLING_IN_EFTEST_OP_RSVD_LEN 2
/* Delay between toggling, microseconds. */
#define       MC_CMD_EFTEST_MAC_DRAIN_START_TOGGLING_IN_DELAY_US_OFST 8
#define       MC_CMD_EFTEST_MAC_DRAIN_START_TOGGLING_IN_DELAY_US_LEN 4

/* MC_CMD_EFTEST_MAC_DRAIN_STOP_TOGGLING_IN msgrequest */
#define    MC_CMD_EFTEST_MAC_DRAIN_STOP_TOGGLING_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_MAC_DRAIN_STOP_TOGGLING_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_MAC_DRAIN_STOP_TOGGLING_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_MAC_DRAIN_STOP_TOGGLING_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_MAC_DRAIN_STOP_TOGGLING_IN_EFTEST_OP_LEN 1
/* enum: Turn on MAC drain */
#define          MC_CMD_EFTEST_MAC_DRAIN_STOP_TOGGLING_IN_MANUAL_ON 0x0
/* enum: Turn off MAC drain */
#define          MC_CMD_EFTEST_MAC_DRAIN_STOP_TOGGLING_IN_MANUAL_OFF 0x1
/* enum: Start an MC thread for toggling MAC drain */
#define          MC_CMD_EFTEST_MAC_DRAIN_STOP_TOGGLING_IN_START_TOGGLING 0x2
/* enum: Stop the MC thread that is toggling MAC drain */
#define          MC_CMD_EFTEST_MAC_DRAIN_STOP_TOGGLING_IN_STOP_TOGGLING 0x3
#define       MC_CMD_EFTEST_MAC_DRAIN_STOP_TOGGLING_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_MAC_DRAIN_STOP_TOGGLING_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_MAC_DRAIN_RHEAD_IN msgrequest */
#define    MC_CMD_EFTEST_MAC_DRAIN_RHEAD_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_MAC_DRAIN_RHEAD_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_MAC_DRAIN_RHEAD_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_MAC_DRAIN_RHEAD_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_MAC_DRAIN_RHEAD_IN_EFTEST_OP_LEN 1
/* enum: Turn on MAC drain */
#define          MC_CMD_EFTEST_MAC_DRAIN_RHEAD_IN_MANUAL_ON 0x0
/* enum: Turn off MAC drain */
#define          MC_CMD_EFTEST_MAC_DRAIN_RHEAD_IN_MANUAL_OFF 0x1
/* enum: Start an MC thread for toggling MAC drain */
#define          MC_CMD_EFTEST_MAC_DRAIN_RHEAD_IN_START_TOGGLING 0x2
/* enum: Stop the MC thread that is toggling MAC drain */
#define          MC_CMD_EFTEST_MAC_DRAIN_RHEAD_IN_STOP_TOGGLING 0x3
#define       MC_CMD_EFTEST_MAC_DRAIN_RHEAD_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_MAC_DRAIN_RHEAD_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_MAC_DRAIN_RHEAD_OUT msgresponse */
#define    MC_CMD_EFTEST_MAC_DRAIN_RHEAD_OUT_LEN 0

/* MC_CMD_EFTEST_MAC_DRAIN_RHEAD_MANUAL_ON_IN msgrequest */
#define    MC_CMD_EFTEST_MAC_DRAIN_RHEAD_MANUAL_ON_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_MAC_DRAIN_RHEAD_MANUAL_ON_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_MAC_DRAIN_RHEAD_MANUAL_ON_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_MAC_DRAIN_RHEAD_MANUAL_ON_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_MAC_DRAIN_RHEAD_MANUAL_ON_IN_EFTEST_OP_LEN 1
/* enum: Turn on MAC drain */
#define          MC_CMD_EFTEST_MAC_DRAIN_RHEAD_MANUAL_ON_IN_MANUAL_ON 0x0
/* enum: Turn off MAC drain */
#define          MC_CMD_EFTEST_MAC_DRAIN_RHEAD_MANUAL_ON_IN_MANUAL_OFF 0x1
/* enum: Start an MC thread for toggling MAC drain */
#define          MC_CMD_EFTEST_MAC_DRAIN_RHEAD_MANUAL_ON_IN_START_TOGGLING 0x2
/* enum: Stop the MC thread that is toggling MAC drain */
#define          MC_CMD_EFTEST_MAC_DRAIN_RHEAD_MANUAL_ON_IN_STOP_TOGGLING 0x3
#define       MC_CMD_EFTEST_MAC_DRAIN_RHEAD_MANUAL_ON_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_MAC_DRAIN_RHEAD_MANUAL_ON_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_MAC_DRAIN_RHEAD_MANUAL_OFF_IN msgrequest */
#define    MC_CMD_EFTEST_MAC_DRAIN_RHEAD_MANUAL_OFF_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_MAC_DRAIN_RHEAD_MANUAL_OFF_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_MAC_DRAIN_RHEAD_MANUAL_OFF_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_MAC_DRAIN_RHEAD_MANUAL_OFF_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_MAC_DRAIN_RHEAD_MANUAL_OFF_IN_EFTEST_OP_LEN 1
/* enum: Turn on MAC drain */
#define          MC_CMD_EFTEST_MAC_DRAIN_RHEAD_MANUAL_OFF_IN_MANUAL_ON 0x0
/* enum: Turn off MAC drain */
#define          MC_CMD_EFTEST_MAC_DRAIN_RHEAD_MANUAL_OFF_IN_MANUAL_OFF 0x1
/* enum: Start an MC thread for toggling MAC drain */
#define          MC_CMD_EFTEST_MAC_DRAIN_RHEAD_MANUAL_OFF_IN_START_TOGGLING 0x2
/* enum: Stop the MC thread that is toggling MAC drain */
#define          MC_CMD_EFTEST_MAC_DRAIN_RHEAD_MANUAL_OFF_IN_STOP_TOGGLING 0x3
#define       MC_CMD_EFTEST_MAC_DRAIN_RHEAD_MANUAL_OFF_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_MAC_DRAIN_RHEAD_MANUAL_OFF_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_MAC_DRAIN_RHEAD_START_TOGGLING_IN msgrequest */
#define    MC_CMD_EFTEST_MAC_DRAIN_RHEAD_START_TOGGLING_IN_LEN 12
/* identifies the test */
#define       MC_CMD_EFTEST_MAC_DRAIN_RHEAD_START_TOGGLING_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_MAC_DRAIN_RHEAD_START_TOGGLING_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_MAC_DRAIN_RHEAD_START_TOGGLING_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_MAC_DRAIN_RHEAD_START_TOGGLING_IN_EFTEST_OP_LEN 1
/* enum: Turn on MAC drain */
#define          MC_CMD_EFTEST_MAC_DRAIN_RHEAD_START_TOGGLING_IN_MANUAL_ON 0x0
/* enum: Turn off MAC drain */
#define          MC_CMD_EFTEST_MAC_DRAIN_RHEAD_START_TOGGLING_IN_MANUAL_OFF 0x1
/* enum: Start an MC thread for toggling MAC drain */
#define          MC_CMD_EFTEST_MAC_DRAIN_RHEAD_START_TOGGLING_IN_START_TOGGLING 0x2
/* enum: Stop the MC thread that is toggling MAC drain */
#define          MC_CMD_EFTEST_MAC_DRAIN_RHEAD_START_TOGGLING_IN_STOP_TOGGLING 0x3
#define       MC_CMD_EFTEST_MAC_DRAIN_RHEAD_START_TOGGLING_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_MAC_DRAIN_RHEAD_START_TOGGLING_IN_EFTEST_OP_RSVD_LEN 2
/* Delay between toggling, microseconds. */
#define       MC_CMD_EFTEST_MAC_DRAIN_RHEAD_START_TOGGLING_IN_DELAY_US_OFST 8
#define       MC_CMD_EFTEST_MAC_DRAIN_RHEAD_START_TOGGLING_IN_DELAY_US_LEN 4

/* MC_CMD_EFTEST_MAC_DRAIN_RHEAD_STOP_TOGGLING_IN msgrequest */
#define    MC_CMD_EFTEST_MAC_DRAIN_RHEAD_STOP_TOGGLING_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_MAC_DRAIN_RHEAD_STOP_TOGGLING_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_MAC_DRAIN_RHEAD_STOP_TOGGLING_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_MAC_DRAIN_RHEAD_STOP_TOGGLING_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_MAC_DRAIN_RHEAD_STOP_TOGGLING_IN_EFTEST_OP_LEN 1
/* enum: Turn on MAC drain */
#define          MC_CMD_EFTEST_MAC_DRAIN_RHEAD_STOP_TOGGLING_IN_MANUAL_ON 0x0
/* enum: Turn off MAC drain */
#define          MC_CMD_EFTEST_MAC_DRAIN_RHEAD_STOP_TOGGLING_IN_MANUAL_OFF 0x1
/* enum: Start an MC thread for toggling MAC drain */
#define          MC_CMD_EFTEST_MAC_DRAIN_RHEAD_STOP_TOGGLING_IN_START_TOGGLING 0x2
/* enum: Stop the MC thread that is toggling MAC drain */
#define          MC_CMD_EFTEST_MAC_DRAIN_RHEAD_STOP_TOGGLING_IN_STOP_TOGGLING 0x3
#define       MC_CMD_EFTEST_MAC_DRAIN_RHEAD_STOP_TOGGLING_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_MAC_DRAIN_RHEAD_STOP_TOGGLING_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_CONF_TX_IN msgrequest */
#define    MC_CMD_EFTEST_CONF_TX_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_CONF_TX_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_CONF_TX_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_CONF_TX_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_CONF_TX_IN_EFTEST_OP_LEN 1
/* enum: Set the IPG value. */
#define          MC_CMD_EFTEST_CONF_TX_IN_IPG_SET 0x0
/* enum: Return the IPG value. */
#define          MC_CMD_EFTEST_CONF_TX_IN_IPG_GET 0x1
#define       MC_CMD_EFTEST_CONF_TX_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_CONF_TX_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_CONF_TX_OUT msgresponse */
#define    MC_CMD_EFTEST_CONF_TX_OUT_LEN 0

/* MC_CMD_EFTEST_CONF_TX_IPG_SET_IN msgrequest */
#define    MC_CMD_EFTEST_CONF_TX_IPG_SET_IN_LEN 12
/* identifies the test */
#define       MC_CMD_EFTEST_CONF_TX_IPG_SET_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_CONF_TX_IPG_SET_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_CONF_TX_IPG_SET_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_CONF_TX_IPG_SET_IN_EFTEST_OP_LEN 1
/* enum: Set the IPG value. */
#define          MC_CMD_EFTEST_CONF_TX_IPG_SET_IN_IPG_SET 0x0
/* enum: Return the IPG value. */
#define          MC_CMD_EFTEST_CONF_TX_IPG_SET_IN_IPG_GET 0x1
#define       MC_CMD_EFTEST_CONF_TX_IPG_SET_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_CONF_TX_IPG_SET_IN_EFTEST_OP_RSVD_LEN 2
/* Values are in bits [67:64]. */
#define       MC_CMD_EFTEST_CONF_TX_IPG_SET_IN_IPG_VALUE_OFST 8
#define       MC_CMD_EFTEST_CONF_TX_IPG_SET_IN_IPG_VALUE_LEN 4

/* MC_CMD_EFTEST_CONF_TX_IPG_GET_IN msgrequest */
#define    MC_CMD_EFTEST_CONF_TX_IPG_GET_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_CONF_TX_IPG_GET_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_CONF_TX_IPG_GET_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_CONF_TX_IPG_GET_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_CONF_TX_IPG_GET_IN_EFTEST_OP_LEN 1
/* enum: Set the IPG value. */
#define          MC_CMD_EFTEST_CONF_TX_IPG_GET_IN_IPG_SET 0x0
/* enum: Return the IPG value. */
#define          MC_CMD_EFTEST_CONF_TX_IPG_GET_IN_IPG_GET 0x1
#define       MC_CMD_EFTEST_CONF_TX_IPG_GET_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_CONF_TX_IPG_GET_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_CONF_TX_IPG_GET_OUT msgresponse */
#define    MC_CMD_EFTEST_CONF_TX_IPG_GET_OUT_LEN 4
/* Return the IPG value. */
#define       MC_CMD_EFTEST_CONF_TX_IPG_GET_OUT_IPG_VALUE_OFST 0
#define       MC_CMD_EFTEST_CONF_TX_IPG_GET_OUT_IPG_VALUE_LEN 4

/* MC_CMD_EFTEST_CONF_TX_RHEAD_IN msgrequest */
#define    MC_CMD_EFTEST_CONF_TX_RHEAD_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_CONF_TX_RHEAD_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_CONF_TX_RHEAD_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_CONF_TX_RHEAD_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_CONF_TX_RHEAD_IN_EFTEST_OP_LEN 1
/* enum: Set the IPG value. */
#define          MC_CMD_EFTEST_CONF_TX_RHEAD_IN_IPG_SET 0x0
/* enum: Return the IPG value. */
#define          MC_CMD_EFTEST_CONF_TX_RHEAD_IN_IPG_GET 0x1
#define       MC_CMD_EFTEST_CONF_TX_RHEAD_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_CONF_TX_RHEAD_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_CONF_TX_RHEAD_OUT msgresponse */
#define    MC_CMD_EFTEST_CONF_TX_RHEAD_OUT_LEN 0

/* MC_CMD_EFTEST_CONF_TX_RHEAD_IPG_SET_IN msgrequest */
#define    MC_CMD_EFTEST_CONF_TX_RHEAD_IPG_SET_IN_LEN 12
/* identifies the test */
#define       MC_CMD_EFTEST_CONF_TX_RHEAD_IPG_SET_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_CONF_TX_RHEAD_IPG_SET_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_CONF_TX_RHEAD_IPG_SET_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_CONF_TX_RHEAD_IPG_SET_IN_EFTEST_OP_LEN 1
/* enum: Set the IPG value. */
#define          MC_CMD_EFTEST_CONF_TX_RHEAD_IPG_SET_IN_IPG_SET 0x0
/* enum: Return the IPG value. */
#define          MC_CMD_EFTEST_CONF_TX_RHEAD_IPG_SET_IN_IPG_GET 0x1
#define       MC_CMD_EFTEST_CONF_TX_RHEAD_IPG_SET_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_CONF_TX_RHEAD_IPG_SET_IN_EFTEST_OP_RSVD_LEN 2
/* Values are in bits [67:64]. */
#define       MC_CMD_EFTEST_CONF_TX_RHEAD_IPG_SET_IN_IPG_VALUE_OFST 8
#define       MC_CMD_EFTEST_CONF_TX_RHEAD_IPG_SET_IN_IPG_VALUE_LEN 4

/* MC_CMD_EFTEST_CONF_TX_RHEAD_IPG_GET_IN msgrequest */
#define    MC_CMD_EFTEST_CONF_TX_RHEAD_IPG_GET_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_CONF_TX_RHEAD_IPG_GET_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_CONF_TX_RHEAD_IPG_GET_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_CONF_TX_RHEAD_IPG_GET_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_CONF_TX_RHEAD_IPG_GET_IN_EFTEST_OP_LEN 1
/* enum: Set the IPG value. */
#define          MC_CMD_EFTEST_CONF_TX_RHEAD_IPG_GET_IN_IPG_SET 0x0
/* enum: Return the IPG value. */
#define          MC_CMD_EFTEST_CONF_TX_RHEAD_IPG_GET_IN_IPG_GET 0x1
#define       MC_CMD_EFTEST_CONF_TX_RHEAD_IPG_GET_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_CONF_TX_RHEAD_IPG_GET_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_CONF_TX_RHEAD_IPG_GET_OUT msgresponse */
#define    MC_CMD_EFTEST_CONF_TX_RHEAD_IPG_GET_OUT_LEN 4
/* Return the IPG value. */
#define       MC_CMD_EFTEST_CONF_TX_RHEAD_IPG_GET_OUT_IPG_VALUE_OFST 0
#define       MC_CMD_EFTEST_CONF_TX_RHEAD_IPG_GET_OUT_IPG_VALUE_LEN 4

/* MC_CMD_EFTEST_SCHED_RHEAD_IN msgrequest */
#define    MC_CMD_EFTEST_SCHED_RHEAD_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_SCHED_RHEAD_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_SCHED_RHEAD_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_SCHED_RHEAD_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_SCHED_RHEAD_IN_EFTEST_OP_LEN 1
/* enum: Check that the scheduler has not leaked credits. Only valid when no
 * traffic is flowing.
 */
#define          MC_CMD_EFTEST_SCHED_RHEAD_IN_CREDIT_CHECK 0x0
#define       MC_CMD_EFTEST_SCHED_RHEAD_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_SCHED_RHEAD_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_SCHED_RHEAD_CREDIT_CHECK_GET_IN msgrequest */
#define    MC_CMD_EFTEST_SCHED_RHEAD_CREDIT_CHECK_GET_IN_LEN 8
/* identifies the test */
#define       MC_CMD_EFTEST_SCHED_RHEAD_CREDIT_CHECK_GET_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_SCHED_RHEAD_CREDIT_CHECK_GET_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_SCHED_RHEAD_CREDIT_CHECK_GET_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_SCHED_RHEAD_CREDIT_CHECK_GET_IN_EFTEST_OP_LEN 1
/* enum: Check that the scheduler has not leaked credits. Only valid when no
 * traffic is flowing.
 */
#define          MC_CMD_EFTEST_SCHED_RHEAD_CREDIT_CHECK_GET_IN_CREDIT_CHECK 0x0
#define       MC_CMD_EFTEST_SCHED_RHEAD_CREDIT_CHECK_GET_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_SCHED_RHEAD_CREDIT_CHECK_GET_IN_EFTEST_OP_RSVD_LEN 2
/* The scheduler instance to check */
#define       MC_CMD_EFTEST_SCHED_RHEAD_CREDIT_CHECK_GET_IN_INSTANCE_OFST 4
#define       MC_CMD_EFTEST_SCHED_RHEAD_CREDIT_CHECK_GET_IN_INSTANCE_LEN 4
/* enum: The DMAC scheduler */
#define          MC_CMD_EFTEST_SCHED_RHEAD_CREDIT_CHECK_GET_IN_DMAC 0x0

/* MC_CMD_EFTEST_SCHED_RHEAD_CREDIT_CHECK_GET_OUT msgresponse */
#define    MC_CMD_EFTEST_SCHED_RHEAD_CREDIT_CHECK_GET_OUT_LENMIN 4
#define    MC_CMD_EFTEST_SCHED_RHEAD_CREDIT_CHECK_GET_OUT_LENMAX 252
#define    MC_CMD_EFTEST_SCHED_RHEAD_CREDIT_CHECK_GET_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_SCHED_RHEAD_CREDIT_CHECK_GET_OUT_LEN(num) (4+8*(num))
#define    MC_CMD_EFTEST_SCHED_RHEAD_CREDIT_CHECK_GET_OUT_ERRORS_NUM(len) (((len)-4)/8)
/* The number of errors */
#define       MC_CMD_EFTEST_SCHED_RHEAD_CREDIT_CHECK_GET_OUT_ERROR_COUNT_OFST 0
#define       MC_CMD_EFTEST_SCHED_RHEAD_CREDIT_CHECK_GET_OUT_ERROR_COUNT_LEN 4
/* Errors encountered (error format as per EFTEST_SCHED_CREDIT_CHECK_ERROR) */
#define       MC_CMD_EFTEST_SCHED_RHEAD_CREDIT_CHECK_GET_OUT_ERRORS_OFST 4
#define       MC_CMD_EFTEST_SCHED_RHEAD_CREDIT_CHECK_GET_OUT_ERRORS_LEN 8
#define       MC_CMD_EFTEST_SCHED_RHEAD_CREDIT_CHECK_GET_OUT_ERRORS_LO_OFST 4
#define       MC_CMD_EFTEST_SCHED_RHEAD_CREDIT_CHECK_GET_OUT_ERRORS_LO_LEN 4
#define       MC_CMD_EFTEST_SCHED_RHEAD_CREDIT_CHECK_GET_OUT_ERRORS_LO_LBN 32
#define       MC_CMD_EFTEST_SCHED_RHEAD_CREDIT_CHECK_GET_OUT_ERRORS_LO_WIDTH 32
#define       MC_CMD_EFTEST_SCHED_RHEAD_CREDIT_CHECK_GET_OUT_ERRORS_HI_OFST 8
#define       MC_CMD_EFTEST_SCHED_RHEAD_CREDIT_CHECK_GET_OUT_ERRORS_HI_LEN 4
#define       MC_CMD_EFTEST_SCHED_RHEAD_CREDIT_CHECK_GET_OUT_ERRORS_HI_LBN 64
#define       MC_CMD_EFTEST_SCHED_RHEAD_CREDIT_CHECK_GET_OUT_ERRORS_HI_WIDTH 32
#define       MC_CMD_EFTEST_SCHED_RHEAD_CREDIT_CHECK_GET_OUT_ERRORS_MINNUM 0
#define       MC_CMD_EFTEST_SCHED_RHEAD_CREDIT_CHECK_GET_OUT_ERRORS_MAXNUM 31
#define       MC_CMD_EFTEST_SCHED_RHEAD_CREDIT_CHECK_GET_OUT_ERRORS_MAXNUM_MCDI2 127

/* MC_CMD_EFTEST_RHEAD_PKTGEN_IN msgrequest */
#define    MC_CMD_EFTEST_RHEAD_PKTGEN_IN_LEN 4
/* Identifies the test */
#define       MC_CMD_EFTEST_RHEAD_PKTGEN_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RHEAD_PKTGEN_IN_EFTEST_ID_LEN 1
#define       MC_CMD_EFTEST_RHEAD_PKTGEN_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RHEAD_PKTGEN_IN_EFTEST_OP_LEN 1
/* enum: Stop and reset packet generator */
#define          MC_CMD_EFTEST_RHEAD_PKTGEN_IN_RESET 0x0
/* enum: Add new packet */
#define          MC_CMD_EFTEST_RHEAD_PKTGEN_IN_ADD 0x1
/* enum: Start packet generator */
#define          MC_CMD_EFTEST_RHEAD_PKTGEN_IN_RUN 0x2
/* enum: Append more data to last packet */
#define          MC_CMD_EFTEST_RHEAD_PKTGEN_IN_APPEND 0x3
/* Align the arguments to 32 bits */
#define       MC_CMD_EFTEST_RHEAD_PKTGEN_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_RHEAD_PKTGEN_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_RHEAD_PKTGEN_OUT msgresponse */
#define    MC_CMD_EFTEST_RHEAD_PKTGEN_OUT_LEN 0

/* MC_CMD_EFTEST_RHEAD_PKTGEN_RESET_IN msgrequest */
#define    MC_CMD_EFTEST_RHEAD_PKTGEN_RESET_IN_LEN 5
/* Identifies the test */
#define       MC_CMD_EFTEST_RHEAD_PKTGEN_RESET_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RHEAD_PKTGEN_RESET_IN_EFTEST_ID_LEN 1
#define       MC_CMD_EFTEST_RHEAD_PKTGEN_RESET_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RHEAD_PKTGEN_RESET_IN_EFTEST_OP_LEN 1
/* enum: Stop and reset packet generator */
#define          MC_CMD_EFTEST_RHEAD_PKTGEN_RESET_IN_RESET 0x0
/* enum: Add new packet */
#define          MC_CMD_EFTEST_RHEAD_PKTGEN_RESET_IN_ADD 0x1
/* enum: Start packet generator */
#define          MC_CMD_EFTEST_RHEAD_PKTGEN_RESET_IN_RUN 0x2
/* enum: Append more data to last packet */
#define          MC_CMD_EFTEST_RHEAD_PKTGEN_RESET_IN_APPEND 0x3
/* Align the arguments to 32 bits */
#define       MC_CMD_EFTEST_RHEAD_PKTGEN_RESET_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_RHEAD_PKTGEN_RESET_IN_EFTEST_OP_RSVD_LEN 2
/* Disable firmware padding for runt frames sent via packet generator */
#define       MC_CMD_EFTEST_RHEAD_PKTGEN_RESET_IN_DISABLE_RUNT_PADDING_OFST 4
#define       MC_CMD_EFTEST_RHEAD_PKTGEN_RESET_IN_DISABLE_RUNT_PADDING_LEN 1

/* MC_CMD_EFTEST_RHEAD_PKTGEN_ADD_PACKET_IN msgrequest */
#define    MC_CMD_EFTEST_RHEAD_PKTGEN_ADD_PACKET_IN_LENMIN 5
#define    MC_CMD_EFTEST_RHEAD_PKTGEN_ADD_PACKET_IN_LENMAX 252
#define    MC_CMD_EFTEST_RHEAD_PKTGEN_ADD_PACKET_IN_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_RHEAD_PKTGEN_ADD_PACKET_IN_LEN(num) (4+1*(num))
#define    MC_CMD_EFTEST_RHEAD_PKTGEN_ADD_PACKET_IN_DATA_NUM(len) (((len)-4)/1)
/* Identifies the test */
#define       MC_CMD_EFTEST_RHEAD_PKTGEN_ADD_PACKET_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RHEAD_PKTGEN_ADD_PACKET_IN_EFTEST_ID_LEN 1
#define       MC_CMD_EFTEST_RHEAD_PKTGEN_ADD_PACKET_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RHEAD_PKTGEN_ADD_PACKET_IN_EFTEST_OP_LEN 1
/* enum: Stop and reset packet generator */
#define          MC_CMD_EFTEST_RHEAD_PKTGEN_ADD_PACKET_IN_RESET 0x0
/* enum: Add new packet */
#define          MC_CMD_EFTEST_RHEAD_PKTGEN_ADD_PACKET_IN_ADD 0x1
/* enum: Start packet generator */
#define          MC_CMD_EFTEST_RHEAD_PKTGEN_ADD_PACKET_IN_RUN 0x2
/* enum: Append more data to last packet */
#define          MC_CMD_EFTEST_RHEAD_PKTGEN_ADD_PACKET_IN_APPEND 0x3
/* Align the arguments to 32 bits */
#define       MC_CMD_EFTEST_RHEAD_PKTGEN_ADD_PACKET_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_RHEAD_PKTGEN_ADD_PACKET_IN_EFTEST_OP_RSVD_LEN 2
/* Packet data. Length calculated from (payloadlen - DATA_OFST) */
#define       MC_CMD_EFTEST_RHEAD_PKTGEN_ADD_PACKET_IN_DATA_OFST 4
#define       MC_CMD_EFTEST_RHEAD_PKTGEN_ADD_PACKET_IN_DATA_LEN 1
#define       MC_CMD_EFTEST_RHEAD_PKTGEN_ADD_PACKET_IN_DATA_MINNUM 1
#define       MC_CMD_EFTEST_RHEAD_PKTGEN_ADD_PACKET_IN_DATA_MAXNUM 248
#define       MC_CMD_EFTEST_RHEAD_PKTGEN_ADD_PACKET_IN_DATA_MAXNUM_MCDI2 1016

/* MC_CMD_EFTEST_RHEAD_PKTGEN_RUN_IN msgrequest */
#define    MC_CMD_EFTEST_RHEAD_PKTGEN_RUN_IN_LEN 5
/* Identifies the test */
#define       MC_CMD_EFTEST_RHEAD_PKTGEN_RUN_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RHEAD_PKTGEN_RUN_IN_EFTEST_ID_LEN 1
#define       MC_CMD_EFTEST_RHEAD_PKTGEN_RUN_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RHEAD_PKTGEN_RUN_IN_EFTEST_OP_LEN 1
/* enum: Stop and reset packet generator */
#define          MC_CMD_EFTEST_RHEAD_PKTGEN_RUN_IN_RESET 0x0
/* enum: Add new packet */
#define          MC_CMD_EFTEST_RHEAD_PKTGEN_RUN_IN_ADD 0x1
/* enum: Start packet generator */
#define          MC_CMD_EFTEST_RHEAD_PKTGEN_RUN_IN_RUN 0x2
/* enum: Append more data to last packet */
#define          MC_CMD_EFTEST_RHEAD_PKTGEN_RUN_IN_APPEND 0x3
/* Align the arguments to 32 bits */
#define       MC_CMD_EFTEST_RHEAD_PKTGEN_RUN_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_RHEAD_PKTGEN_RUN_IN_EFTEST_OP_RSVD_LEN 2
/* Send packets in loop */
#define       MC_CMD_EFTEST_RHEAD_PKTGEN_RUN_IN_CYCLIC_OFST 4
#define       MC_CMD_EFTEST_RHEAD_PKTGEN_RUN_IN_CYCLIC_LEN 1

/* MC_CMD_EFTEST_RHEAD_PKTGEN_APPEND_PACKET_IN msgrequest */
#define    MC_CMD_EFTEST_RHEAD_PKTGEN_APPEND_PACKET_IN_LENMIN 5
#define    MC_CMD_EFTEST_RHEAD_PKTGEN_APPEND_PACKET_IN_LENMAX 252
#define    MC_CMD_EFTEST_RHEAD_PKTGEN_APPEND_PACKET_IN_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_RHEAD_PKTGEN_APPEND_PACKET_IN_LEN(num) (4+1*(num))
#define    MC_CMD_EFTEST_RHEAD_PKTGEN_APPEND_PACKET_IN_DATA_NUM(len) (((len)-4)/1)
/* Identifies the test */
#define       MC_CMD_EFTEST_RHEAD_PKTGEN_APPEND_PACKET_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RHEAD_PKTGEN_APPEND_PACKET_IN_EFTEST_ID_LEN 1
#define       MC_CMD_EFTEST_RHEAD_PKTGEN_APPEND_PACKET_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RHEAD_PKTGEN_APPEND_PACKET_IN_EFTEST_OP_LEN 1
/* enum: Stop and reset packet generator */
#define          MC_CMD_EFTEST_RHEAD_PKTGEN_APPEND_PACKET_IN_RESET 0x0
/* enum: Add new packet */
#define          MC_CMD_EFTEST_RHEAD_PKTGEN_APPEND_PACKET_IN_ADD 0x1
/* enum: Start packet generator */
#define          MC_CMD_EFTEST_RHEAD_PKTGEN_APPEND_PACKET_IN_RUN 0x2
/* enum: Append more data to last packet */
#define          MC_CMD_EFTEST_RHEAD_PKTGEN_APPEND_PACKET_IN_APPEND 0x3
/* Align the arguments to 32 bits */
#define       MC_CMD_EFTEST_RHEAD_PKTGEN_APPEND_PACKET_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_RHEAD_PKTGEN_APPEND_PACKET_IN_EFTEST_OP_RSVD_LEN 2
/* Packet data. Length calculated from (payloadlen - DATA_OFST) */
#define       MC_CMD_EFTEST_RHEAD_PKTGEN_APPEND_PACKET_IN_DATA_OFST 4
#define       MC_CMD_EFTEST_RHEAD_PKTGEN_APPEND_PACKET_IN_DATA_LEN 1
#define       MC_CMD_EFTEST_RHEAD_PKTGEN_APPEND_PACKET_IN_DATA_MINNUM 1
#define       MC_CMD_EFTEST_RHEAD_PKTGEN_APPEND_PACKET_IN_DATA_MAXNUM 248
#define       MC_CMD_EFTEST_RHEAD_PKTGEN_APPEND_PACKET_IN_DATA_MAXNUM_MCDI2 1016

/* MC_CMD_EFTEST_RX_END_PADDING_IN msgrequest */
#define    MC_CMD_EFTEST_RX_END_PADDING_IN_LEN 4
/* Identifies the test */
#define       MC_CMD_EFTEST_RX_END_PADDING_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RX_END_PADDING_IN_EFTEST_ID_LEN 1
#define       MC_CMD_EFTEST_RX_END_PADDING_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RX_END_PADDING_IN_EFTEST_OP_LEN 1
/* enum: Set RX end padding parameters */
#define          MC_CMD_EFTEST_RX_END_PADDING_IN_SET 0x0
#define       MC_CMD_EFTEST_RX_END_PADDING_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_RX_END_PADDING_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_RX_END_PADDING_SET_IN msgrequest */
#define    MC_CMD_EFTEST_RX_END_PADDING_SET_IN_LEN 20
/* Identifies the test */
#define       MC_CMD_EFTEST_RX_END_PADDING_SET_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RX_END_PADDING_SET_IN_EFTEST_ID_LEN 1
#define       MC_CMD_EFTEST_RX_END_PADDING_SET_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RX_END_PADDING_SET_IN_EFTEST_OP_LEN 1
/* enum: Set RX end padding parameters */
#define          MC_CMD_EFTEST_RX_END_PADDING_SET_IN_SET 0x0
#define       MC_CMD_EFTEST_RX_END_PADDING_SET_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_RX_END_PADDING_SET_IN_EFTEST_OP_RSVD_LEN 2
/* Whether RX end padding should be enabled */
#define       MC_CMD_EFTEST_RX_END_PADDING_SET_IN_ENABLE_OFST 4
#define       MC_CMD_EFTEST_RX_END_PADDING_SET_IN_ENABLE_LEN 4
/* The maximum number padding bytes to add to a packet (0-127) */
#define       MC_CMD_EFTEST_RX_END_PADDING_SET_IN_PADDING_MAX_OFST 8
#define       MC_CMD_EFTEST_RX_END_PADDING_SET_IN_PADDING_MAX_LEN 4
/* The maximum size of a packet which will be padded (0-9200) */
#define       MC_CMD_EFTEST_RX_END_PADDING_SET_IN_PADDING_LEN_MAX_OFST 12
#define       MC_CMD_EFTEST_RX_END_PADDING_SET_IN_PADDING_LEN_MAX_LEN 4
/* What aligment to pad to */
#define       MC_CMD_EFTEST_RX_END_PADDING_SET_IN_ALIGN_OFST 16
#define       MC_CMD_EFTEST_RX_END_PADDING_SET_IN_ALIGN_LEN 4
/* enum: 64 byte alignment */
#define          MC_CMD_EFTEST_RX_END_PADDING_SET_IN_ALIGN_64B 0x0
/* enum: 128 byte alignment */
#define          MC_CMD_EFTEST_RX_END_PADDING_SET_IN_ALIGN_128B 0x1

/* MC_CMD_EFTEST_RX_END_PADDING_SET_OUT msgresponse */
#define    MC_CMD_EFTEST_RX_END_PADDING_SET_OUT_LEN 0

/* MC_CMD_EFTEST_TRGT_NW_PFVF2VI_TEST_RHEAD_IN msgrequest */
#define    MC_CMD_EFTEST_TRGT_NW_PFVF2VI_TEST_RHEAD_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_TRGT_NW_PFVF2VI_TEST_RHEAD_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_TRGT_NW_PFVF2VI_TEST_RHEAD_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_TRGT_NW_PFVF2VI_TEST_RHEAD_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_TRGT_NW_PFVF2VI_TEST_RHEAD_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_TRGT_NW_PFVF2VI_TEST_RHEAD_IN_AGITATOR_OFF 0x0 /* enum */
#define          MC_CMD_EFTEST_TRGT_NW_PFVF2VI_TEST_RHEAD_IN_AGITATOR_ON 0x1 /* enum */
#define       MC_CMD_EFTEST_TRGT_NW_PFVF2VI_TEST_RHEAD_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_TRGT_NW_PFVF2VI_TEST_RHEAD_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_TRGT_NW_PFVF2VI_TEST_RHEAD_OUT msgresponse */
#define    MC_CMD_EFTEST_TRGT_NW_PFVF2VI_TEST_RHEAD_OUT_LEN 0

/* MC_CMD_EFTEST_TRGT_NW_PFVF2VI_TEST_RHEAD_AGITATOR_ON_IN msgrequest */
#define    MC_CMD_EFTEST_TRGT_NW_PFVF2VI_TEST_RHEAD_AGITATOR_ON_IN_LEN 12
/* identifies the test */
#define       MC_CMD_EFTEST_TRGT_NW_PFVF2VI_TEST_RHEAD_AGITATOR_ON_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_TRGT_NW_PFVF2VI_TEST_RHEAD_AGITATOR_ON_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_TRGT_NW_PFVF2VI_TEST_RHEAD_AGITATOR_ON_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_TRGT_NW_PFVF2VI_TEST_RHEAD_AGITATOR_ON_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_TRGT_NW_PFVF2VI_TEST_RHEAD_AGITATOR_ON_IN_AGITATOR_OFF 0x0 /* enum */
#define          MC_CMD_EFTEST_TRGT_NW_PFVF2VI_TEST_RHEAD_AGITATOR_ON_IN_AGITATOR_ON 0x1 /* enum */
#define       MC_CMD_EFTEST_TRGT_NW_PFVF2VI_TEST_RHEAD_AGITATOR_ON_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_TRGT_NW_PFVF2VI_TEST_RHEAD_AGITATOR_ON_IN_EFTEST_OP_RSVD_LEN 2
#define       MC_CMD_EFTEST_TRGT_NW_PFVF2VI_TEST_RHEAD_AGITATOR_ON_IN_FLAGS_OFST 8
#define       MC_CMD_EFTEST_TRGT_NW_PFVF2VI_TEST_RHEAD_AGITATOR_ON_IN_FLAGS_LEN 4
#define        MC_CMD_EFTEST_TRGT_NW_PFVF2VI_TEST_RHEAD_AGITATOR_ON_IN_DO_WRITES_OFST 8
#define        MC_CMD_EFTEST_TRGT_NW_PFVF2VI_TEST_RHEAD_AGITATOR_ON_IN_DO_WRITES_LBN 0
#define        MC_CMD_EFTEST_TRGT_NW_PFVF2VI_TEST_RHEAD_AGITATOR_ON_IN_DO_WRITES_WIDTH 1

/* MC_CMD_EFTEST_TRGT_NW_PFVF2VI_TEST_RHEAD_AGITATOR_OFF_IN msgrequest */
#define    MC_CMD_EFTEST_TRGT_NW_PFVF2VI_TEST_RHEAD_AGITATOR_OFF_IN_LEN 4
/* identifies the test */
#define       MC_CMD_EFTEST_TRGT_NW_PFVF2VI_TEST_RHEAD_AGITATOR_OFF_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_TRGT_NW_PFVF2VI_TEST_RHEAD_AGITATOR_OFF_IN_EFTEST_ID_LEN 1
/* the operation requested */
#define       MC_CMD_EFTEST_TRGT_NW_PFVF2VI_TEST_RHEAD_AGITATOR_OFF_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_TRGT_NW_PFVF2VI_TEST_RHEAD_AGITATOR_OFF_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_TRGT_NW_PFVF2VI_TEST_RHEAD_AGITATOR_OFF_IN_AGITATOR_OFF 0x0 /* enum */
#define          MC_CMD_EFTEST_TRGT_NW_PFVF2VI_TEST_RHEAD_AGITATOR_OFF_IN_AGITATOR_ON 0x1 /* enum */
#define       MC_CMD_EFTEST_TRGT_NW_PFVF2VI_TEST_RHEAD_AGITATOR_OFF_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_TRGT_NW_PFVF2VI_TEST_RHEAD_AGITATOR_OFF_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_DC_SIZE_IN msgrequest */
#define    MC_CMD_EFTEST_DC_SIZE_IN_LEN 4
/* Identifies the test. */
#define       MC_CMD_EFTEST_DC_SIZE_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_DC_SIZE_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_DC_SIZE_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_DC_SIZE_IN_EFTEST_OP_LEN 1
/* enum: Set descriptor cache size parameters */
#define          MC_CMD_EFTEST_DC_SIZE_IN_SET_PARAMS 0x0
/* enum: Restore all descriptor cache size parameters to the defaults. */
#define          MC_CMD_EFTEST_DC_SIZE_IN_RESTORE_DEFAULTS 0x1
/* Align the arguments to 32 bits. */
#define       MC_CMD_EFTEST_DC_SIZE_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_DC_SIZE_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_DC_SIZE_SET_PARAMS_IN msgrequest: Set the tx descriptor cache
 * size and vi count. There must be no VIs allocated when this is called.
 */
#define    MC_CMD_EFTEST_DC_SIZE_SET_PARAMS_IN_LEN 12
/* Identifies the test. */
#define       MC_CMD_EFTEST_DC_SIZE_SET_PARAMS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_DC_SIZE_SET_PARAMS_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_DC_SIZE_SET_PARAMS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_DC_SIZE_SET_PARAMS_IN_EFTEST_OP_LEN 1
/* Maximum number of VIs to support. Up to 1024. */
#define       MC_CMD_EFTEST_DC_SIZE_SET_PARAMS_IN_VI_COUNT_OFST 4
#define       MC_CMD_EFTEST_DC_SIZE_SET_PARAMS_IN_VI_COUNT_LEN 4
/* Log2 of the tx descriptor cache size. Must satisfy constraint: dc_size *
 * vi_count <= 8 * 1024
 */
#define       MC_CMD_EFTEST_DC_SIZE_SET_PARAMS_IN_TX_DC_SIZE_LOG2_OFST 8
#define       MC_CMD_EFTEST_DC_SIZE_SET_PARAMS_IN_TX_DC_SIZE_LOG2_LEN 4

/* MC_CMD_EFTEST_DC_SIZE_RESTORE_DEFAULTS_IN msgrequest: Restore descriptor
 * size parameters to default values, as if SET_PARAMS had never been called.
 * There must be no VIs allocated when this is called.
 */
#define    MC_CMD_EFTEST_DC_SIZE_RESTORE_DEFAULTS_IN_LEN 2
/* Identifies the test. */
#define       MC_CMD_EFTEST_DC_SIZE_RESTORE_DEFAULTS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_DC_SIZE_RESTORE_DEFAULTS_IN_EFTEST_ID_LEN 1
#define       MC_CMD_EFTEST_DC_SIZE_RESTORE_DEFAULTS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_DC_SIZE_RESTORE_DEFAULTS_IN_EFTEST_OP_LEN 1

/* MC_CMD_EFTEST_RHL_IN msgrequest */
#define    MC_CMD_EFTEST_RHL_IN_LEN 4
/* Identifies the test. */
#define       MC_CMD_EFTEST_RHL_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RHL_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_RHL_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RHL_IN_EFTEST_OP_LEN 1
/* enum: Allocate some barriers. */
#define          MC_CMD_EFTEST_RHL_IN_BARRIERS_ALLOC 0x0
/* enum: Free some barriers. */
#define          MC_CMD_EFTEST_RHL_IN_BARRIERS_FREE 0x1
/* enum: Start the barrier test. */
#define          MC_CMD_EFTEST_RHL_IN_BARRIERS_TEST_START 0x2
/* enum: Poll for barrier test completion. */
#define          MC_CMD_EFTEST_RHL_IN_BARRIERS_TEST_POLL 0x3
/* Align the arguments to 32 bits. */
#define       MC_CMD_EFTEST_RHL_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_RHL_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_RHL_BARRIERS_ALLOC_IN msgrequest: Allocate some barriers for
 * use in the RHL barriers test. N. B. Barriers are pre-endpoint, and are
 * logically independent of barriers use by the SPHINX RHL endpoint.
 */
#define    MC_CMD_EFTEST_RHL_BARRIERS_ALLOC_IN_LEN 8
/* Identifies the test. */
#define       MC_CMD_EFTEST_RHL_BARRIERS_ALLOC_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RHL_BARRIERS_ALLOC_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_RHL_BARRIERS_ALLOC_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RHL_BARRIERS_ALLOC_IN_EFTEST_OP_LEN 1
/* Number of barriers to allocate */
#define       MC_CMD_EFTEST_RHL_BARRIERS_ALLOC_IN_COUNT_OFST 4
#define       MC_CMD_EFTEST_RHL_BARRIERS_ALLOC_IN_COUNT_LEN 4

/* MC_CMD_EFTEST_RHL_BARRIERS_ALLOC_OUT msgresponse */
#define    MC_CMD_EFTEST_RHL_BARRIERS_ALLOC_OUT_LEN 4
/* Barriers allocated */
#define       MC_CMD_EFTEST_RHL_BARRIERS_ALLOC_OUT_BARRIERS_OFST 0
#define       MC_CMD_EFTEST_RHL_BARRIERS_ALLOC_OUT_BARRIERS_LEN 4

/* MC_CMD_EFTEST_RHL_BARRIERS_FREE_IN msgrequest: Free previously allocated
 * barriers.
 */
#define    MC_CMD_EFTEST_RHL_BARRIERS_FREE_IN_LEN 8
/* Identifies the test. */
#define       MC_CMD_EFTEST_RHL_BARRIERS_FREE_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RHL_BARRIERS_FREE_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_RHL_BARRIERS_FREE_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RHL_BARRIERS_FREE_IN_EFTEST_OP_LEN 1
/* Barriers to free */
#define       MC_CMD_EFTEST_RHL_BARRIERS_FREE_IN_BARRIERS_OFST 4
#define       MC_CMD_EFTEST_RHL_BARRIERS_FREE_IN_BARRIERS_LEN 4

/* MC_CMD_EFTEST_RHL_BARRIERS_FREE_OUT msgresponse */
#define    MC_CMD_EFTEST_RHL_BARRIERS_FREE_OUT_LEN 0

/* MC_CMD_EFTEST_RHL_BARRIERS_TEST_START_IN msgrequest: Start a barrier test. A
 * barrier test is a sequence of actions executed asynchronously to the command
 * thread. Every action has an ID, which is given by its zero-based index into
 * the array of actions specified in this command. Results of actions are
 * written to a log. Those actions can be: * Send an RHL command that causes
 * the remote to sleep for a specified period, then respond. The command is
 * sent with a specified set of tags. It is sent asynchronously, and action
 * execution continues. When the command completes, the ID of the action is
 * appended to the log. If link_error was true, then this log entry will have
 * the LOG_LINK_ERR bit set. If the response is an error response, then the log
 * entry will have the LOG_RESP_ERR bit set, and LOG_RC will indicate the error
 * in the response. If allocating, then the ID will be added to the log
 * immediately, and the log entry will have the ALLOC_ERR bit set and the error
 * in the LOG_RC field. TODO: At present, the ID is not returned with the
 * LINK_ERR or RESP_ERR bits. This needs fixing. * Execute an RHL barrier over
 * a set of tags. This action blocks until the barrier completes. The ID of the
 * action is appended to the log when the barrier completes. * Sleep for a
 * specified period. The ID of the action is appended to the log when the sleep
 * completes.
 */
#define    MC_CMD_EFTEST_RHL_BARRIERS_TEST_START_IN_LENMIN 4
#define    MC_CMD_EFTEST_RHL_BARRIERS_TEST_START_IN_LENMAX 244
#define    MC_CMD_EFTEST_RHL_BARRIERS_TEST_START_IN_LENMAX_MCDI2 1012
#define    MC_CMD_EFTEST_RHL_BARRIERS_TEST_START_IN_LEN(num) (4+16*(num))
#define    MC_CMD_EFTEST_RHL_BARRIERS_TEST_START_IN_ACTIONS_NUM(len) (((len)-4)/16)
/* Identifies the test. */
#define       MC_CMD_EFTEST_RHL_BARRIERS_TEST_START_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RHL_BARRIERS_TEST_START_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_RHL_BARRIERS_TEST_START_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RHL_BARRIERS_TEST_START_IN_EFTEST_OP_LEN 1
/* Array of EFTEST_RHL_BARRIERS_TEST_ACTION */
#define       MC_CMD_EFTEST_RHL_BARRIERS_TEST_START_IN_ACTIONS_OFST 4
#define       MC_CMD_EFTEST_RHL_BARRIERS_TEST_START_IN_ACTIONS_LEN 16
#define       MC_CMD_EFTEST_RHL_BARRIERS_TEST_START_IN_ACTIONS_MINNUM 0
#define       MC_CMD_EFTEST_RHL_BARRIERS_TEST_START_IN_ACTIONS_MAXNUM 15
#define       MC_CMD_EFTEST_RHL_BARRIERS_TEST_START_IN_ACTIONS_MAXNUM_MCDI2 63

/* MC_CMD_EFTEST_RHL_BARRIERS_TEST_START_OUT msgrequest */
#define    MC_CMD_EFTEST_RHL_BARRIERS_TEST_START_OUT_LEN 4
/* Identifies the test; should be passed to POLL. */
#define       MC_CMD_EFTEST_RHL_BARRIERS_TEST_START_OUT_HANDLE_OFST 0
#define       MC_CMD_EFTEST_RHL_BARRIERS_TEST_START_OUT_HANDLE_LEN 4

/* MC_CMD_EFTEST_RHL_BARRIERS_TEST_POLL_IN msgrequest */
#define    MC_CMD_EFTEST_RHL_BARRIERS_TEST_POLL_IN_LEN 8
/* Identifies the test. */
#define       MC_CMD_EFTEST_RHL_BARRIERS_TEST_POLL_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RHL_BARRIERS_TEST_POLL_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_RHL_BARRIERS_TEST_POLL_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RHL_BARRIERS_TEST_POLL_IN_EFTEST_OP_LEN 1
#define       MC_CMD_EFTEST_RHL_BARRIERS_TEST_POLL_IN_HANDLE_OFST 4
#define       MC_CMD_EFTEST_RHL_BARRIERS_TEST_POLL_IN_HANDLE_LEN 4

/* MC_CMD_EFTEST_RHL_BARRIERS_TEST_POLL_OUT msgrequest: Poll for completion of
 * a barrier test. Returns EAGAIN if the barrier test is still running, or
 * success if completed.
 */
#define    MC_CMD_EFTEST_RHL_BARRIERS_TEST_POLL_OUT_LENMIN 4
#define    MC_CMD_EFTEST_RHL_BARRIERS_TEST_POLL_OUT_LENMAX 252
#define    MC_CMD_EFTEST_RHL_BARRIERS_TEST_POLL_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_RHL_BARRIERS_TEST_POLL_OUT_LEN(num) (0+4*(num))
#define    MC_CMD_EFTEST_RHL_BARRIERS_TEST_POLL_OUT_LOG_NUM(len) (((len)-0)/4)
/* Log, as described above. */
#define       MC_CMD_EFTEST_RHL_BARRIERS_TEST_POLL_OUT_LOG_OFST 0
#define       MC_CMD_EFTEST_RHL_BARRIERS_TEST_POLL_OUT_LOG_LEN 4
#define       MC_CMD_EFTEST_RHL_BARRIERS_TEST_POLL_OUT_LOG_MINNUM 0
#define       MC_CMD_EFTEST_RHL_BARRIERS_TEST_POLL_OUT_LOG_MAXNUM 63
#define       MC_CMD_EFTEST_RHL_BARRIERS_TEST_POLL_OUT_LOG_MAXNUM_MCDI2 255
#define        MC_CMD_EFTEST_RHL_BARRIERS_TEST_POLL_OUT_LOG_ID_OFST 0
#define        MC_CMD_EFTEST_RHL_BARRIERS_TEST_POLL_OUT_LOG_ID_LBN 0
#define        MC_CMD_EFTEST_RHL_BARRIERS_TEST_POLL_OUT_LOG_ID_WIDTH 8
#define        MC_CMD_EFTEST_RHL_BARRIERS_TEST_POLL_OUT_LOG_RC_OFST 0
#define        MC_CMD_EFTEST_RHL_BARRIERS_TEST_POLL_OUT_LOG_RC_LBN 8
#define        MC_CMD_EFTEST_RHL_BARRIERS_TEST_POLL_OUT_LOG_RC_WIDTH 16
#define        MC_CMD_EFTEST_RHL_BARRIERS_TEST_POLL_OUT_LOG_ALLOC_ERR_OFST 0
#define        MC_CMD_EFTEST_RHL_BARRIERS_TEST_POLL_OUT_LOG_ALLOC_ERR_LBN 29
#define        MC_CMD_EFTEST_RHL_BARRIERS_TEST_POLL_OUT_LOG_ALLOC_ERR_WIDTH 1
#define        MC_CMD_EFTEST_RHL_BARRIERS_TEST_POLL_OUT_LOG_LINK_ERR_OFST 0
#define        MC_CMD_EFTEST_RHL_BARRIERS_TEST_POLL_OUT_LOG_LINK_ERR_LBN 30
#define        MC_CMD_EFTEST_RHL_BARRIERS_TEST_POLL_OUT_LOG_LINK_ERR_WIDTH 1
#define        MC_CMD_EFTEST_RHL_BARRIERS_TEST_POLL_OUT_LOG_RESP_ERR_OFST 0
#define        MC_CMD_EFTEST_RHL_BARRIERS_TEST_POLL_OUT_LOG_RESP_ERR_LBN 31
#define        MC_CMD_EFTEST_RHL_BARRIERS_TEST_POLL_OUT_LOG_RESP_ERR_WIDTH 1

/* MC_CMD_EFTEST_PR_IN msgrequest */
#define    MC_CMD_EFTEST_PR_IN_LEN 4
/* Identifies the test. */
#define       MC_CMD_EFTEST_PR_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_PR_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_PR_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_PR_IN_EFTEST_OP_LEN 1
/* enum: Get the state of the plugin sockets */
#define          MC_CMD_EFTEST_PR_IN_SLICE_PLUGIN_SOCKETS_GET_STATE 0x0
/* enum: Set the state of the plugin sockets */
#define          MC_CMD_EFTEST_PR_IN_SLICE_PLUGIN_SOCKETS_SET_STATE 0x1
/* Align the arguments to 32 bits. */
#define       MC_CMD_EFTEST_PR_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_PR_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_PR_SLICE_PLUGIN_SOCKETS_GET_STATE_IN msgrequest: Get the state
 * of the plugin socketss.
 */
#define    MC_CMD_EFTEST_PR_SLICE_PLUGIN_SOCKETS_GET_STATE_IN_LEN 2
/* Identifies the test. */
#define       MC_CMD_EFTEST_PR_SLICE_PLUGIN_SOCKETS_GET_STATE_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_PR_SLICE_PLUGIN_SOCKETS_GET_STATE_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_PR_SLICE_PLUGIN_SOCKETS_GET_STATE_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_PR_SLICE_PLUGIN_SOCKETS_GET_STATE_IN_EFTEST_OP_LEN 1

/* MC_CMD_EFTEST_PR_SLICE_PLUGIN_SOCKETS_GET_STATE_OUT msgresponse */
#define    MC_CMD_EFTEST_PR_SLICE_PLUGIN_SOCKETS_GET_STATE_OUT_LEN 16
#define       MC_CMD_EFTEST_PR_SLICE_PLUGIN_SOCKETS_GET_STATE_OUT_RX_SLICE_TX2MAE_STATE_OFST 0
#define       MC_CMD_EFTEST_PR_SLICE_PLUGIN_SOCKETS_GET_STATE_OUT_RX_SLICE_TX2MAE_STATE_LEN 4
/* enum: Traffic bypasses the plugin */
#define          MC_CMD_EFTEST_PR_SLICE_PLUGIN_SOCKETS_GET_STATE_OUT_STOPPED 0x0
/* enum: Traffic flows through the plugin */
#define          MC_CMD_EFTEST_PR_SLICE_PLUGIN_SOCKETS_GET_STATE_OUT_STARTED 0x1
/* enum: This socket is not present in the current hardware */
#define          MC_CMD_EFTEST_PR_SLICE_PLUGIN_SOCKETS_GET_STATE_OUT_NOT_PRESENT 0xffffffff
#define       MC_CMD_EFTEST_PR_SLICE_PLUGIN_SOCKETS_GET_STATE_OUT_RX_SLICE_MAE2RX_STATE_OFST 4
#define       MC_CMD_EFTEST_PR_SLICE_PLUGIN_SOCKETS_GET_STATE_OUT_RX_SLICE_MAE2RX_STATE_LEN 4
/*            Enum values, see field(s): */
/*               MC_CMD_EFTEST_PR_SLICE_PLUGIN_SOCKETS_GET_STATE_OUT/RX_SLICE_TX2MAE_STATE */
#define       MC_CMD_EFTEST_PR_SLICE_PLUGIN_SOCKETS_GET_STATE_OUT_TX_SLICE_TX2MAE_STATE_OFST 8
#define       MC_CMD_EFTEST_PR_SLICE_PLUGIN_SOCKETS_GET_STATE_OUT_TX_SLICE_TX2MAE_STATE_LEN 4
/*            Enum values, see field(s): */
/*               MC_CMD_EFTEST_PR_SLICE_PLUGIN_SOCKETS_GET_STATE_OUT/RX_SLICE_TX2MAE_STATE */
#define       MC_CMD_EFTEST_PR_SLICE_PLUGIN_SOCKETS_GET_STATE_OUT_TX_SLICE_MAE2RX_STATE_OFST 12
#define       MC_CMD_EFTEST_PR_SLICE_PLUGIN_SOCKETS_GET_STATE_OUT_TX_SLICE_MAE2RX_STATE_LEN 4
/*            Enum values, see field(s): */
/*               MC_CMD_EFTEST_PR_SLICE_PLUGIN_SOCKETS_GET_STATE_OUT/RX_SLICE_TX2MAE_STATE */

/* MC_CMD_EFTEST_PR_SLICE_PLUGIN_SOCKETS_SET_STATE_IN msgrequest: Set the state
 * of the plugin socketss.
 */
#define    MC_CMD_EFTEST_PR_SLICE_PLUGIN_SOCKETS_SET_STATE_IN_LEN 20
/* Identifies the test. */
#define       MC_CMD_EFTEST_PR_SLICE_PLUGIN_SOCKETS_SET_STATE_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_PR_SLICE_PLUGIN_SOCKETS_SET_STATE_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_PR_SLICE_PLUGIN_SOCKETS_SET_STATE_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_PR_SLICE_PLUGIN_SOCKETS_SET_STATE_IN_EFTEST_OP_LEN 1
#define       MC_CMD_EFTEST_PR_SLICE_PLUGIN_SOCKETS_SET_STATE_IN_RX_SLICE_TX2MAE_STATE_OFST 4
#define       MC_CMD_EFTEST_PR_SLICE_PLUGIN_SOCKETS_SET_STATE_IN_RX_SLICE_TX2MAE_STATE_LEN 4
/* enum: Traffic bypasses the plugin */
#define          MC_CMD_EFTEST_PR_SLICE_PLUGIN_SOCKETS_SET_STATE_IN_STOPPED 0x0
/* enum: Traffic flows through the plugin */
#define          MC_CMD_EFTEST_PR_SLICE_PLUGIN_SOCKETS_SET_STATE_IN_STARTED 0x1
/* enum: Don't change the state of this socket */
#define          MC_CMD_EFTEST_PR_SLICE_PLUGIN_SOCKETS_SET_STATE_IN_DONT_CHANGE 0x2
#define       MC_CMD_EFTEST_PR_SLICE_PLUGIN_SOCKETS_SET_STATE_IN_RX_SLICE_MAE2RX_STATE_OFST 8
#define       MC_CMD_EFTEST_PR_SLICE_PLUGIN_SOCKETS_SET_STATE_IN_RX_SLICE_MAE2RX_STATE_LEN 4
/*            Enum values, see field(s): */
/*               MC_CMD_EFTEST_PR_SLICE_PLUGIN_SOCKETS_SET_STATE_IN/RX_SLICE_TX2MAE_STATE */
#define       MC_CMD_EFTEST_PR_SLICE_PLUGIN_SOCKETS_SET_STATE_IN_TX_SLICE_TX2MAE_STATE_OFST 12
#define       MC_CMD_EFTEST_PR_SLICE_PLUGIN_SOCKETS_SET_STATE_IN_TX_SLICE_TX2MAE_STATE_LEN 4
/*            Enum values, see field(s): */
/*               MC_CMD_EFTEST_PR_SLICE_PLUGIN_SOCKETS_SET_STATE_IN/RX_SLICE_TX2MAE_STATE */
#define       MC_CMD_EFTEST_PR_SLICE_PLUGIN_SOCKETS_SET_STATE_IN_TX_SLICE_MAE2RX_STATE_OFST 16
#define       MC_CMD_EFTEST_PR_SLICE_PLUGIN_SOCKETS_SET_STATE_IN_TX_SLICE_MAE2RX_STATE_LEN 4
/*            Enum values, see field(s): */
/*               MC_CMD_EFTEST_PR_SLICE_PLUGIN_SOCKETS_SET_STATE_IN/RX_SLICE_TX2MAE_STATE */

/* MC_CMD_EFTEST_PR_SLICE_PLUGIN_SOCKETS_SET_STATE_OUT msgresponse */
#define    MC_CMD_EFTEST_PR_SLICE_PLUGIN_SOCKETS_SET_STATE_OUT_LEN 0

/* MC_CMD_EFTEST_MAE_IN msgrequest */
#define    MC_CMD_EFTEST_MAE_IN_LEN 4
/* Identifies the test. */
#define       MC_CMD_EFTEST_MAE_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_MAE_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_MAE_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_MAE_IN_EFTEST_OP_LEN 1
/* enum: Force a synchronous update from all allocated counters. */
#define          MC_CMD_EFTEST_MAE_IN_COUNTERS_READ 0x0
/* Align the arguments to 32 bits. */
#define       MC_CMD_EFTEST_MAE_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_MAE_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_MAE_COUNTERS_READ_IN msgrequest: Read and clear counters. This
 * command is a thin wrapper around a packetisation request directed at the
 * debug FIFO. Note that the debug FIFO will not be present in production
 * hardware. Sensible configuration values are as follows COUNTER_SELECT 0
 * ZERO_SQUASH_ENABLE 1 COUNTER_STALL_ENABLE 0 STREAM_MODE 1 ENABLE 1
 * PACKET_SIZE MC_CMD_EFTEST_MAE_COUNTERS_READ_OUT_COUNTER_VALUE_MAXNUM_MCDI2
 * PACKET_COUNT 1 COLLECT_COUNT 128 The packetiser will attempt to read
 * counters REQUEST_COUNT counters starting from REQUEST_INDEX. The index of
 * the last counter read will be returned in RESPONSE_INDEX.
 */
#define    MC_CMD_EFTEST_MAE_COUNTERS_READ_IN_LEN 24
#define       MC_CMD_EFTEST_MAE_COUNTERS_READ_IN_CONFIGURATION_0_OFST 4
#define       MC_CMD_EFTEST_MAE_COUNTERS_READ_IN_CONFIGURATION_0_LEN 4
#define        MC_CMD_EFTEST_MAE_COUNTERS_READ_IN_COUNTER_SELECT_OFST 4
#define        MC_CMD_EFTEST_MAE_COUNTERS_READ_IN_COUNTER_SELECT_LBN 8
#define        MC_CMD_EFTEST_MAE_COUNTERS_READ_IN_COUNTER_SELECT_WIDTH 1
#define        MC_CMD_EFTEST_MAE_COUNTERS_READ_IN_ZERO_SQUASH_ENABLE_OFST 4
#define        MC_CMD_EFTEST_MAE_COUNTERS_READ_IN_ZERO_SQUASH_ENABLE_LBN 16
#define        MC_CMD_EFTEST_MAE_COUNTERS_READ_IN_ZERO_SQUASH_ENABLE_WIDTH 1
#define        MC_CMD_EFTEST_MAE_COUNTERS_READ_IN_COUNTER_STALL_ENABLE_OFST 4
#define        MC_CMD_EFTEST_MAE_COUNTERS_READ_IN_COUNTER_STALL_ENABLE_LBN 17
#define        MC_CMD_EFTEST_MAE_COUNTERS_READ_IN_COUNTER_STALL_ENABLE_WIDTH 1
#define        MC_CMD_EFTEST_MAE_COUNTERS_READ_IN_STREAM_MODE_OFST 4
#define        MC_CMD_EFTEST_MAE_COUNTERS_READ_IN_STREAM_MODE_LBN 30
#define        MC_CMD_EFTEST_MAE_COUNTERS_READ_IN_STREAM_MODE_WIDTH 1
#define        MC_CMD_EFTEST_MAE_COUNTERS_READ_IN_ENABLE_OFST 4
#define        MC_CMD_EFTEST_MAE_COUNTERS_READ_IN_ENABLE_LBN 31
#define        MC_CMD_EFTEST_MAE_COUNTERS_READ_IN_ENABLE_WIDTH 1
#define       MC_CMD_EFTEST_MAE_COUNTERS_READ_IN_CONFIGURATION_1_OFST 8
#define       MC_CMD_EFTEST_MAE_COUNTERS_READ_IN_CONFIGURATION_1_LEN 4
#define        MC_CMD_EFTEST_MAE_COUNTERS_READ_IN_PACKET_SIZE_OFST 8
#define        MC_CMD_EFTEST_MAE_COUNTERS_READ_IN_PACKET_SIZE_LBN 0
#define        MC_CMD_EFTEST_MAE_COUNTERS_READ_IN_PACKET_SIZE_WIDTH 16
#define        MC_CMD_EFTEST_MAE_COUNTERS_READ_IN_PACKET_COUNT_OFST 8
#define        MC_CMD_EFTEST_MAE_COUNTERS_READ_IN_PACKET_COUNT_LBN 16
#define        MC_CMD_EFTEST_MAE_COUNTERS_READ_IN_PACKET_COUNT_WIDTH 16
#define       MC_CMD_EFTEST_MAE_COUNTERS_READ_IN_CONFIGURATION_2_OFST 12
#define       MC_CMD_EFTEST_MAE_COUNTERS_READ_IN_CONFIGURATION_2_LEN 4
#define        MC_CMD_EFTEST_MAE_COUNTERS_READ_IN_COLLECT_COUNT_OFST 12
#define        MC_CMD_EFTEST_MAE_COUNTERS_READ_IN_COLLECT_COUNT_LBN 0
#define        MC_CMD_EFTEST_MAE_COUNTERS_READ_IN_COLLECT_COUNT_WIDTH 24
/* Software uses this register to specify the number of counters to be
 * collected in conjunction with the request index. The request index and count
 * specify the collection range for the request.
 */
#define       MC_CMD_EFTEST_MAE_COUNTERS_READ_IN_REQUEST_COUNT_OFST 16
#define       MC_CMD_EFTEST_MAE_COUNTERS_READ_IN_REQUEST_COUNT_LEN 4
/* Software uses this register to specify the index of the first counter to be
 * collected in the sequence when requests are made.
 */
#define       MC_CMD_EFTEST_MAE_COUNTERS_READ_IN_REQUEST_INDEX_OFST 20
#define       MC_CMD_EFTEST_MAE_COUNTERS_READ_IN_REQUEST_INDEX_LEN 4

/* MC_CMD_EFTEST_MAE_COUNTERS_READ_OUT msgresponse */
#define    MC_CMD_EFTEST_MAE_COUNTERS_READ_OUT_LENMIN 4
#define    MC_CMD_EFTEST_MAE_COUNTERS_READ_OUT_LENMAX 244
#define    MC_CMD_EFTEST_MAE_COUNTERS_READ_OUT_LENMAX_MCDI2 1012
#define    MC_CMD_EFTEST_MAE_COUNTERS_READ_OUT_LEN(num) (4+16*(num))
#define    MC_CMD_EFTEST_MAE_COUNTERS_READ_OUT_COUNTER_VALUE_NUM(len) (((len)-4)/16)
/* This register indicates how far the packetiser was able to progress the
 * collection given the number of non-zero counters collected and the packet
 * size and count constraints. The response index is the index of the last
 * counter collected by the packetiser, and thus indicates the position of
 * where software should make the next request to complete the sequence.
 */
#define       MC_CMD_EFTEST_MAE_COUNTERS_READ_OUT_RESPONSE_INDEX_OFST 0
#define       MC_CMD_EFTEST_MAE_COUNTERS_READ_OUT_RESPONSE_INDEX_LEN 4
/* Array of counter values of type <??? from hwdefs>. The number of counter
 * values read is given implicitly by the size of the response.
 */
#define       MC_CMD_EFTEST_MAE_COUNTERS_READ_OUT_COUNTER_VALUE_OFST 4
#define       MC_CMD_EFTEST_MAE_COUNTERS_READ_OUT_COUNTER_VALUE_LEN 16
#define       MC_CMD_EFTEST_MAE_COUNTERS_READ_OUT_COUNTER_VALUE_MINNUM 0
#define       MC_CMD_EFTEST_MAE_COUNTERS_READ_OUT_COUNTER_VALUE_MAXNUM 15
#define       MC_CMD_EFTEST_MAE_COUNTERS_READ_OUT_COUNTER_VALUE_MAXNUM_MCDI2 63

/* MC_CMD_EFTEST_FSDB_CTRL_IN msgrequest */
#define    MC_CMD_EFTEST_FSDB_CTRL_IN_LEN 4
/* Identifies the test. */
#define       MC_CMD_EFTEST_FSDB_CTRL_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_FSDB_CTRL_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_FSDB_CTRL_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_FSDB_CTRL_IN_EFTEST_OP_LEN 1
/* enum: Stop FSDB dumping if in progress */
#define          MC_CMD_EFTEST_FSDB_CTRL_IN_FSDB_DUMP_OFF 0x0
/* enum: Start or resume FSDB dumping */
#define          MC_CMD_EFTEST_FSDB_CTRL_IN_FSDB_DUMP_ON 0x1
/* Align the arguments to 32 bits. */
#define       MC_CMD_EFTEST_FSDB_CTRL_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_FSDB_CTRL_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_DDR_IN msgrequest */
#define    MC_CMD_EFTEST_DDR_IN_LEN 8
/* Identifies the test. */
#define       MC_CMD_EFTEST_DDR_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_DDR_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_DDR_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_DDR_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_DDR_IN_DDR_BUFFER_ALLOC 0x0 /* enum */
#define          MC_CMD_EFTEST_DDR_IN_DDR_BUFFER_FREE 0x1 /* enum */
/* align the arguments to 32 bits. */
#define       MC_CMD_EFTEST_DDR_IN_EFTEST_OP_RSVD1_OFST 2
#define       MC_CMD_EFTEST_DDR_IN_EFTEST_OP_RSVD1_LEN 2
/* align the arguments to 32 bits. */
#define       MC_CMD_EFTEST_DDR_IN_EFTEST_OP_RSVD2_OFST 4
#define       MC_CMD_EFTEST_DDR_IN_EFTEST_OP_RSVD2_LEN 4

/* MC_CMD_EFTEST_DDR_BUFFER_ALLOC_IN msgrequest: Allocate a DDR buffer for use
 * with m2m and txseg descriptors. The buffers are owned by the calling client
 * an will be freed when that function is reset. Any client with sufficient
 * privilege to use address space overrides can access these buffers.
 */
#define    MC_CMD_EFTEST_DDR_BUFFER_ALLOC_IN_LEN 16
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_IN_SIZE_OFST 8
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_IN_SIZE_LEN 8
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_IN_SIZE_LO_OFST 8
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_IN_SIZE_LO_LEN 4
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_IN_SIZE_LO_LBN 64
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_IN_SIZE_LO_WIDTH 32
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_IN_SIZE_HI_OFST 12
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_IN_SIZE_HI_LEN 4
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_IN_SIZE_HI_LBN 96
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_IN_SIZE_HI_WIDTH 32

/* MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT msgresponse */
#define    MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_LEN 40
/* Opaque value to use when freeding the buffer */
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_HANDLE_OFST 0
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_HANDLE_LEN 8
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_HANDLE_LO_OFST 0
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_HANDLE_LO_LEN 4
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_HANDLE_LO_LBN 0
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_HANDLE_LO_WIDTH 32
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_HANDLE_HI_OFST 4
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_HANDLE_HI_LEN 4
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_HANDLE_HI_LBN 32
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_HANDLE_HI_WIDTH 32
/* Address of the buffer in the MC's address space (accessible by e.g.
 * READ32/WRITE32)
 */
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_MC_ADDR_OFST 8
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_MC_ADDR_LEN 8
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_MC_ADDR_LO_OFST 8
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_MC_ADDR_LO_LEN 4
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_MC_ADDR_LO_LBN 64
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_MC_ADDR_LO_WIDTH 32
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_MC_ADDR_HI_OFST 12
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_MC_ADDR_HI_LEN 4
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_MC_ADDR_HI_LBN 96
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_MC_ADDR_HI_WIDTH 32
#define          MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_DDR_ADDR_NULL 0xffffffffffffffff /* enum */
/* Offset into DDR of the buffer. */
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_DDR_ADDR_OFST 16
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_DDR_ADDR_LEN 8
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_DDR_ADDR_LO_OFST 16
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_DDR_ADDR_LO_LEN 4
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_DDR_ADDR_LO_LBN 128
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_DDR_ADDR_LO_WIDTH 32
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_DDR_ADDR_HI_OFST 20
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_DDR_ADDR_HI_LEN 4
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_DDR_ADDR_HI_LBN 160
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_DDR_ADDR_HI_WIDTH 32
/* Address of the buffer for use within descriptors; must be used in conjection
 * with an address space override of ADDR_SPC
 */
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_NIC_ADDR_OFST 24
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_NIC_ADDR_LEN 8
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_NIC_ADDR_LO_OFST 24
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_NIC_ADDR_LO_LEN 4
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_NIC_ADDR_LO_LBN 192
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_NIC_ADDR_LO_WIDTH 32
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_NIC_ADDR_HI_OFST 28
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_NIC_ADDR_HI_LEN 4
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_NIC_ADDR_HI_LBN 224
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_NIC_ADDR_HI_WIDTH 32
/* Address space overide used to qualify NIC_ADDR */
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_ADDR_SPC_OFST 32
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_ADDR_SPC_LEN 8
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_ADDR_SPC_LO_OFST 32
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_ADDR_SPC_LO_LEN 4
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_ADDR_SPC_LO_LBN 256
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_ADDR_SPC_LO_WIDTH 32
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_ADDR_SPC_HI_OFST 36
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_ADDR_SPC_HI_LEN 4
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_ADDR_SPC_HI_LBN 288
#define       MC_CMD_EFTEST_DDR_BUFFER_ALLOC_OUT_ADDR_SPC_HI_WIDTH 32

/* MC_CMD_EFTEST_DDR_BUFFER_FREE_IN msgrequest */
#define    MC_CMD_EFTEST_DDR_BUFFER_FREE_IN_LEN 16
/* The buffer to free */
#define       MC_CMD_EFTEST_DDR_BUFFER_FREE_IN_HANDLE_OFST 8
#define       MC_CMD_EFTEST_DDR_BUFFER_FREE_IN_HANDLE_LEN 8
#define       MC_CMD_EFTEST_DDR_BUFFER_FREE_IN_HANDLE_LO_OFST 8
#define       MC_CMD_EFTEST_DDR_BUFFER_FREE_IN_HANDLE_LO_LEN 4
#define       MC_CMD_EFTEST_DDR_BUFFER_FREE_IN_HANDLE_LO_LBN 64
#define       MC_CMD_EFTEST_DDR_BUFFER_FREE_IN_HANDLE_LO_WIDTH 32
#define       MC_CMD_EFTEST_DDR_BUFFER_FREE_IN_HANDLE_HI_OFST 12
#define       MC_CMD_EFTEST_DDR_BUFFER_FREE_IN_HANDLE_HI_LEN 4
#define       MC_CMD_EFTEST_DDR_BUFFER_FREE_IN_HANDLE_HI_LBN 96
#define       MC_CMD_EFTEST_DDR_BUFFER_FREE_IN_HANDLE_HI_WIDTH 32

/* MC_CMD_EFTEST_DDR_BUFFER_FREE_OUT msgresponse */
#define    MC_CMD_EFTEST_DDR_BUFFER_FREE_OUT_LEN 0

/* MC_CMD_EFTEST_FPGA_CTRL_IN msgrequest */
#define    MC_CMD_EFTEST_FPGA_CTRL_IN_LEN 4
/* Identifies the test. */
#define       MC_CMD_EFTEST_FPGA_CTRL_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_FPGA_CTRL_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_FPGA_CTRL_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_FPGA_CTRL_IN_EFTEST_OP_LEN 1
/* enum: Get the FPGA voltage that the board is currently running at. */
#define          MC_CMD_EFTEST_FPGA_CTRL_IN_FPGA_VOLTAGE_GET 0x0
/* enum: Set the FPGA voltage for the next cold boot. */
#define          MC_CMD_EFTEST_FPGA_CTRL_IN_FPGA_VOLTAGE_SET 0x1
/* align the arguments to 32 bits. */
#define       MC_CMD_EFTEST_FPGA_CTRL_IN_EFTEST_OP_RSVD1_OFST 2
#define       MC_CMD_EFTEST_FPGA_CTRL_IN_EFTEST_OP_RSVD1_LEN 2

/* MC_CMD_EFTEST_FPGA_VOLTAGE_GET_IN msgrequest */
#define    MC_CMD_EFTEST_FPGA_VOLTAGE_GET_IN_LEN 4
/* Identifies the test. */
#define       MC_CMD_EFTEST_FPGA_VOLTAGE_GET_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_FPGA_VOLTAGE_GET_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_FPGA_VOLTAGE_GET_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_FPGA_VOLTAGE_GET_IN_EFTEST_OP_LEN 1
/* enum: Get the FPGA voltage that the board is currently running at. */
#define          MC_CMD_EFTEST_FPGA_VOLTAGE_GET_IN_FPGA_VOLTAGE_GET 0x0
/* enum: Set the FPGA voltage for the next cold boot. */
#define          MC_CMD_EFTEST_FPGA_VOLTAGE_GET_IN_FPGA_VOLTAGE_SET 0x1
/* align the arguments to 32 bits. */
#define       MC_CMD_EFTEST_FPGA_VOLTAGE_GET_IN_EFTEST_OP_RSVD1_OFST 2
#define       MC_CMD_EFTEST_FPGA_VOLTAGE_GET_IN_EFTEST_OP_RSVD1_LEN 2

/* MC_CMD_EFTEST_FPGA_VOLTAGE_GET_OUT msgresponse */
#define    MC_CMD_EFTEST_FPGA_VOLTAGE_GET_OUT_LEN 4
/* Bitfield representing voltage set. This uses the same format as
 * MC_CMD_GET_BOARD_ATTR_OUT_FPGA_VOLTAGES_SUPPORTED. Only one bit should be
 * set.
 */
#define       MC_CMD_EFTEST_FPGA_VOLTAGE_GET_OUT_VOLTAGE_OFST 0
#define       MC_CMD_EFTEST_FPGA_VOLTAGE_GET_OUT_VOLTAGE_LEN 1
/* Align the arguments to 32 bits. */
#define       MC_CMD_EFTEST_FPGA_VOLTAGE_GET_OUT_RSVD_OFST 1
#define       MC_CMD_EFTEST_FPGA_VOLTAGE_GET_OUT_RSVD_LEN 3

/* MC_CMD_EFTEST_FPGA_VOLTAGE_SET_IN msgrequest */
#define    MC_CMD_EFTEST_FPGA_VOLTAGE_SET_IN_LEN 8
/* Identifies the test. */
#define       MC_CMD_EFTEST_FPGA_VOLTAGE_SET_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_FPGA_VOLTAGE_SET_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_FPGA_VOLTAGE_SET_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_FPGA_VOLTAGE_SET_IN_EFTEST_OP_LEN 1
/* enum: Get the FPGA voltage that the board is currently running at. */
#define          MC_CMD_EFTEST_FPGA_VOLTAGE_SET_IN_FPGA_VOLTAGE_GET 0x0
/* enum: Set the FPGA voltage for the next cold boot. */
#define          MC_CMD_EFTEST_FPGA_VOLTAGE_SET_IN_FPGA_VOLTAGE_SET 0x1
/* align the arguments to 32 bits. */
#define       MC_CMD_EFTEST_FPGA_VOLTAGE_SET_IN_EFTEST_OP_RSVD1_OFST 2
#define       MC_CMD_EFTEST_FPGA_VOLTAGE_SET_IN_EFTEST_OP_RSVD1_LEN 2
/* Bitfield representing voltage to set. This uses the same format as
 * MC_CMD_GET_BOARD_ATTR_OUT_FPGA_VOLTAGES_SUPPORTED, which can be used to
 * determine valid bits to set. Only one bit should be set.
 */
#define       MC_CMD_EFTEST_FPGA_VOLTAGE_SET_IN_VOLTAGE_OFST 4
#define       MC_CMD_EFTEST_FPGA_VOLTAGE_SET_IN_VOLTAGE_LEN 1
/* Align the arguments to 32 bits. */
#define       MC_CMD_EFTEST_FPGA_VOLTAGE_SET_IN_RSVD_OFST 5
#define       MC_CMD_EFTEST_FPGA_VOLTAGE_SET_IN_RSVD_LEN 3

/* MC_CMD_EFTEST_MCDI_IN msgrequest */
#define    MC_CMD_EFTEST_MCDI_IN_LEN 8
/* Identifies the test. */
#define       MC_CMD_EFTEST_MCDI_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_MCDI_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_MCDI_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_MCDI_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_MCDI_IN_MCDI_ECHO 0x0 /* enum */
/* align the arguments to 32 bits. */
#define       MC_CMD_EFTEST_MCDI_IN_EFTEST_OP_RSVD1_OFST 2
#define       MC_CMD_EFTEST_MCDI_IN_EFTEST_OP_RSVD1_LEN 2
/* align the arguments to 32 bits. */
#define       MC_CMD_EFTEST_MCDI_IN_EFTEST_OP_RSVD2_OFST 4
#define       MC_CMD_EFTEST_MCDI_IN_EFTEST_OP_RSVD2_LEN 4

/* MC_CMD_EFTEST_MCDI_ECHO_IN msgrequest: Calculate a checksum/CRC/... over
 * some the argument; send a response with the requested amout of data and a
 * checksum over that data.
 */
#define    MC_CMD_EFTEST_MCDI_ECHO_IN_LENMIN 16
#define    MC_CMD_EFTEST_MCDI_ECHO_IN_LENMAX 252
#define    MC_CMD_EFTEST_MCDI_ECHO_IN_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_MCDI_ECHO_IN_LEN(num) (16+1*(num))
#define    MC_CMD_EFTEST_MCDI_ECHO_IN_DATA_IN_NUM(len) (((len)-16)/1)
#define       MC_CMD_EFTEST_MCDI_ECHO_IN_CSUM_TYPE_OFST 8
#define       MC_CMD_EFTEST_MCDI_ECHO_IN_CSUM_TYPE_LEN 4
#define          MC_CMD_EFTEST_MCDI_ECHO_IN_CRC32 0x1 /* enum */
#define       MC_CMD_EFTEST_MCDI_ECHO_IN_DATA_OUT_LEN_OFST 12
#define       MC_CMD_EFTEST_MCDI_ECHO_IN_DATA_OUT_LEN_LEN 4
/* Arbitrary data */
#define       MC_CMD_EFTEST_MCDI_ECHO_IN_DATA_IN_OFST 16
#define       MC_CMD_EFTEST_MCDI_ECHO_IN_DATA_IN_LEN 1
#define       MC_CMD_EFTEST_MCDI_ECHO_IN_DATA_IN_MINNUM 0
#define       MC_CMD_EFTEST_MCDI_ECHO_IN_DATA_IN_MAXNUM 236
#define       MC_CMD_EFTEST_MCDI_ECHO_IN_DATA_IN_MAXNUM_MCDI2 1004

/* MC_CMD_EFTEST_MCDI_ECHO_OUT msgresponse */
#define    MC_CMD_EFTEST_MCDI_ECHO_OUT_LENMIN 12
#define    MC_CMD_EFTEST_MCDI_ECHO_OUT_LENMAX 252
#define    MC_CMD_EFTEST_MCDI_ECHO_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_MCDI_ECHO_OUT_LEN(num) (12+1*(num))
#define    MC_CMD_EFTEST_MCDI_ECHO_OUT_DATA_OUT_NUM(len) (((len)-12)/1)
/* A checksum over the MCDI response payload (with this field populated with
 * zeroes).
 */
#define       MC_CMD_EFTEST_MCDI_ECHO_OUT_RESPONSE_CSUM_OFST 0
#define       MC_CMD_EFTEST_MCDI_ECHO_OUT_RESPONSE_CSUM_LEN 4
/* A handle for the client that received the request. In order to prevent
 * repeated data at the same location in the response buffer, this field
 * contains the client handle XORed with the contents of DATA_IN_CRC.
 */
#define       MC_CMD_EFTEST_MCDI_ECHO_OUT_CLIENT_HANDLE_OBFU_OFST 4
#define       MC_CMD_EFTEST_MCDI_ECHO_OUT_CLIENT_HANDLE_OBFU_LEN 4
/* A checksum over the MCDI request payload */
#define       MC_CMD_EFTEST_MCDI_ECHO_OUT_REQUEST_CSUM_OFST 8
#define       MC_CMD_EFTEST_MCDI_ECHO_OUT_REQUEST_CSUM_LEN 4
/* Psuedorandom data */
#define       MC_CMD_EFTEST_MCDI_ECHO_OUT_DATA_OUT_OFST 12
#define       MC_CMD_EFTEST_MCDI_ECHO_OUT_DATA_OUT_LEN 1
#define       MC_CMD_EFTEST_MCDI_ECHO_OUT_DATA_OUT_MINNUM 0
#define       MC_CMD_EFTEST_MCDI_ECHO_OUT_DATA_OUT_MAXNUM 240
#define       MC_CMD_EFTEST_MCDI_ECHO_OUT_DATA_OUT_MAXNUM_MCDI2 1008

/* MC_CMD_EFTEST_LOG_IN msgrequest */
#define    MC_CMD_EFTEST_LOG_IN_LEN 2
/* Identifies the test. */
#define       MC_CMD_EFTEST_LOG_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_LOG_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_LOG_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_LOG_IN_EFTEST_OP_LEN 1
#define          MC_CMD_EFTEST_LOG_IN_TEST 0x0 /* enum */

/* MC_CMD_EFTEST_LOG_TEST_IN msgrequest: Based on verbosity level at build
 * time, logs the test strings to appropriate sinks
 */
#define    MC_CMD_EFTEST_LOG_TEST_IN_LEN 0

/* MC_CMD_EFTEST_LOG_TEST_OUT msgresponse */
#define    MC_CMD_EFTEST_LOG_TEST_OUT_LEN 0

/* MC_CMD_EFTEST_RMDMAX_IN msgrequest */
#define    MC_CMD_EFTEST_RMDMAX_IN_LEN 4
/* Identifies the test. */
#define       MC_CMD_EFTEST_RMDMAX_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RMDMAX_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_RMDMAX_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RMDMAX_IN_EFTEST_OP_LEN 1
/* enum: Allocate a VI. */
#define          MC_CMD_EFTEST_RMDMAX_IN_VI_ALLOC 0x0
/* enum: Free a VI. */
#define          MC_CMD_EFTEST_RMDMAX_IN_VI_FREE 0x1
/* enum: Relative to absolute VI conversion. */
#define          MC_CMD_EFTEST_RMDMAX_IN_VI_REL_TO_ABS 0x2
/* enum: Absolute to relative VI conversion. */
#define          MC_CMD_EFTEST_RMDMAX_IN_VI_ABS_TO_REL 0x3
/* enum: Relative to absolute VI conversion. */
#define          MC_CMD_EFTEST_RMDMAX_IN_VI_GET_ALLOC_SIZE 0x4
/* align the arguments to 32 bits. */
#define       MC_CMD_EFTEST_RMDMAX_IN_EFTEST_OP_RSVD1_OFST 2
#define       MC_CMD_EFTEST_RMDMAX_IN_EFTEST_OP_RSVD1_LEN 2

/* MC_CMD_EFTEST_RMDMAX_FN_PARAMS msgrequest */
#define    MC_CMD_EFTEST_RMDMAX_FN_PARAMS_LEN 16
/* Indicates whether a physical or virtual function is desired. */
#define       MC_CMD_EFTEST_RMDMAX_FN_PARAMS_FN_TYPE_OFST 4
#define       MC_CMD_EFTEST_RMDMAX_FN_PARAMS_FN_TYPE_LEN 4
/* enum: Physical function, disregard VF_VAL. */
#define          MC_CMD_EFTEST_RMDMAX_FN_PARAMS_TYPE_PF 0x0
/* enum: Virtual function VF_VAL of the physical function PF_VAL */
#define          MC_CMD_EFTEST_RMDMAX_FN_PARAMS_TYPE_VF 0x1
/* PF value. */
#define       MC_CMD_EFTEST_RMDMAX_FN_PARAMS_PF_VAL_OFST 8
#define       MC_CMD_EFTEST_RMDMAX_FN_PARAMS_PF_VAL_LEN 4
/* VF value (if applicable). */
#define       MC_CMD_EFTEST_RMDMAX_FN_PARAMS_VF_VAL_OFST 12
#define       MC_CMD_EFTEST_RMDMAX_FN_PARAMS_VF_VAL_LEN 4

/* MC_CMD_EFTEST_RMDMAX_VI_ALLOC_IN msgrequest */
#define    MC_CMD_EFTEST_RMDMAX_VI_ALLOC_IN_LEN 24
/* Minimum VI count. */
#define       MC_CMD_EFTEST_RMDMAX_VI_ALLOC_IN_MIN_VI_OFST 16
#define       MC_CMD_EFTEST_RMDMAX_VI_ALLOC_IN_MIN_VI_LEN 4
/* Maximum VI count. */
#define       MC_CMD_EFTEST_RMDMAX_VI_ALLOC_IN_MAX_VI_OFST 20
#define       MC_CMD_EFTEST_RMDMAX_VI_ALLOC_IN_MAX_VI_LEN 4

/* MC_CMD_EFTEST_RMDMAX_VI_ALLOC_OUT msgresponse */
#define    MC_CMD_EFTEST_RMDMAX_VI_ALLOC_OUT_LEN 12
/* VI base address. */
#define       MC_CMD_EFTEST_RMDMAX_VI_ALLOC_OUT_RANGE_VI_BASE_OFST 4
#define       MC_CMD_EFTEST_RMDMAX_VI_ALLOC_OUT_RANGE_VI_BASE_LEN 4
/* Number of VIs assigned. */
#define       MC_CMD_EFTEST_RMDMAX_VI_ALLOC_OUT_RANGE_VI_COUNT_OFST 8
#define       MC_CMD_EFTEST_RMDMAX_VI_ALLOC_OUT_RANGE_VI_COUNT_LEN 4

/* MC_CMD_EFTEST_RMDMAX_VI_FREE_IN msgrequest */
#define    MC_CMD_EFTEST_RMDMAX_VI_FREE_IN_LEN 0

/* MC_CMD_EFTEST_RMDMAX_VI_FREE_OUT msgresponse */
#define    MC_CMD_EFTEST_RMDMAX_VI_FREE_OUT_LEN 0

/* MC_CMD_EFTEST_RMDMAX_VI_REL_TO_ABS_IN msgrequest */
#define    MC_CMD_EFTEST_RMDMAX_VI_REL_TO_ABS_IN_LEN 20
/* Relative VI value. */
#define       MC_CMD_EFTEST_RMDMAX_VI_REL_TO_ABS_IN_REL_VI_OFST 16
#define       MC_CMD_EFTEST_RMDMAX_VI_REL_TO_ABS_IN_REL_VI_LEN 4

/* MC_CMD_EFTEST_RMDMAX_VI_REL_TO_ABS_OUT msgresponse */
#define    MC_CMD_EFTEST_RMDMAX_VI_REL_TO_ABS_OUT_LEN 8
/* The converted absolute VI value. */
#define       MC_CMD_EFTEST_RMDMAX_VI_REL_TO_ABS_OUT_ABS_VI_OFST 4
#define       MC_CMD_EFTEST_RMDMAX_VI_REL_TO_ABS_OUT_ABS_VI_LEN 4

/* MC_CMD_EFTEST_RMDMAX_VI_ABS_TO_REL_IN msgrequest */
#define    MC_CMD_EFTEST_RMDMAX_VI_ABS_TO_REL_IN_LEN 8
/* Absolute VI value. */
#define       MC_CMD_EFTEST_RMDMAX_VI_ABS_TO_REL_IN_ABS_VI_OFST 4
#define       MC_CMD_EFTEST_RMDMAX_VI_ABS_TO_REL_IN_ABS_VI_LEN 4

/* MC_CMD_EFTEST_RMDMAX_VI_ABS_TO_REL_OUT msgresponse */
#define    MC_CMD_EFTEST_RMDMAX_VI_ABS_TO_REL_OUT_LEN 20
/* Toggle VF. */
#define       MC_CMD_EFTEST_RMDMAX_VI_ABS_TO_REL_OUT_FN_TYPE_OFST 4
#define       MC_CMD_EFTEST_RMDMAX_VI_ABS_TO_REL_OUT_FN_TYPE_LEN 4
/* enum: Physical function, disregard VF_VAL. */
#define          MC_CMD_EFTEST_RMDMAX_VI_ABS_TO_REL_OUT_TYPE_PF 0x0
/* enum: Virtual function VF_VAL of the physical function PF_VAL */
#define          MC_CMD_EFTEST_RMDMAX_VI_ABS_TO_REL_OUT_TYPE_VF 0x1
/* Converted relative PF value. */
#define       MC_CMD_EFTEST_RMDMAX_VI_ABS_TO_REL_OUT_REL_FN_PF_OFST 8
#define       MC_CMD_EFTEST_RMDMAX_VI_ABS_TO_REL_OUT_REL_FN_PF_LEN 4
/* Converted relative VF value (if applicable). */
#define       MC_CMD_EFTEST_RMDMAX_VI_ABS_TO_REL_OUT_REL_FN_VF_OFST 12
#define       MC_CMD_EFTEST_RMDMAX_VI_ABS_TO_REL_OUT_REL_FN_VF_LEN 4
/* Relative VI value. */
#define       MC_CMD_EFTEST_RMDMAX_VI_ABS_TO_REL_OUT_REL_VI_OFST 16
#define       MC_CMD_EFTEST_RMDMAX_VI_ABS_TO_REL_OUT_REL_VI_LEN 4

/* MC_CMD_EFTEST_RMDMAX_VI_GET_ALLOC_SIZE_IN msgrequest */
#define    MC_CMD_EFTEST_RMDMAX_VI_GET_ALLOC_SIZE_IN_LEN 0

/* MC_CMD_EFTEST_RMDMAX_VI_GET_ALLOC_SIZE_OUT msgresponse */
#define    MC_CMD_EFTEST_RMDMAX_VI_GET_ALLOC_SIZE_OUT_LEN 8
/* Number of VIs allocated to the function. */
#define       MC_CMD_EFTEST_RMDMAX_VI_GET_ALLOC_SIZE_OUT_VI_COUNT_OFST 4
#define       MC_CMD_EFTEST_RMDMAX_VI_GET_ALLOC_SIZE_OUT_VI_COUNT_LEN 4

/* MC_CMD_EFTEST_RHEAD_RM_IN msgrequest */
#define    MC_CMD_EFTEST_RHEAD_RM_IN_LEN 4
/* Identifies the test. */
#define       MC_CMD_EFTEST_RHEAD_RM_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RHEAD_RM_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_RHEAD_RM_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RHEAD_RM_IN_EFTEST_OP_LEN 1
/* enum: A test that allocates N (up to 8) given buffer sizes (in bytes). They
 * are then freed.
 */
#define          MC_CMD_EFTEST_RHEAD_RM_IN_ALLOC_FREE_BUFFER_SIZE 0x0
/* enum: A test that allocates N (up to 16) given DMAQ ring sizes (in bytes)
 * for a given descriptor fetch type. They are then freed.
 */
#define          MC_CMD_EFTEST_RHEAD_RM_IN_ALLOC_FREE_RING_SIZE_DMAQ 0x1
/* enum: A test that allocates N (up to 16) given completion queue ring sizes
 * (in bytes) for a given queue type. They are then freed.
 */
#define          MC_CMD_EFTEST_RHEAD_RM_IN_ALLOC_FREE_RING_SIZE_CMPLQ 0x2
/* enum: Run a sequence of buffer and ring alloc/free cycles for all host
 * platforms and a standard selection of sizes.
 */
#define          MC_CMD_EFTEST_RHEAD_RM_IN_SUPER_RUN 0x3
/* enum: Alloc a given buffer size, followed by a given dmaq ring size of
 * specified descriptor fetch type. They are then freed.
 */
#define          MC_CMD_EFTEST_RHEAD_RM_IN_BUF_RING_CASE 0x4
/* align the arguments to 32 bits. */
#define       MC_CMD_EFTEST_RHEAD_RM_IN_EFTEST_OP_RSVD1_OFST 2
#define       MC_CMD_EFTEST_RHEAD_RM_IN_EFTEST_OP_RSVD1_LEN 2

/* MC_CMD_EFTEST_RHEAD_RM_ALLOC_FREE_BUFFER_SIZE_IN msgrequest */
#define    MC_CMD_EFTEST_RHEAD_RM_ALLOC_FREE_BUFFER_SIZE_IN_LEN 40
/* Number of requested buffer sizes (up to 8). */
#define       MC_CMD_EFTEST_RHEAD_RM_ALLOC_FREE_BUFFER_SIZE_IN_SIZE_COUNT_OFST 4
#define       MC_CMD_EFTEST_RHEAD_RM_ALLOC_FREE_BUFFER_SIZE_IN_SIZE_COUNT_LEN 4
/* The array of buffer sizes to allocate. */
#define       MC_CMD_EFTEST_RHEAD_RM_ALLOC_FREE_BUFFER_SIZE_IN_BUFFER_SIZES_OFST 8
#define       MC_CMD_EFTEST_RHEAD_RM_ALLOC_FREE_BUFFER_SIZE_IN_BUFFER_SIZES_LEN 4
#define       MC_CMD_EFTEST_RHEAD_RM_ALLOC_FREE_BUFFER_SIZE_IN_BUFFER_SIZES_NUM 8

/* MC_CMD_EFTEST_RHEAD_RM_ALLOC_FREE_BUFFER_SIZE_OUT msgresponse */
#define    MC_CMD_EFTEST_RHEAD_RM_ALLOC_FREE_BUFFER_SIZE_OUT_LEN 0

/* MC_CMD_EFTEST_RHEAD_RM_ALLOC_FREE_RING_SIZE_IN msgrequest */
#define    MC_CMD_EFTEST_RHEAD_RM_ALLOC_FREE_RING_SIZE_IN_LEN 76
/* Determines descriptor fetch/queue type for DMAQ/CMPLQ rings respectively. */
#define       MC_CMD_EFTEST_RHEAD_RM_ALLOC_FREE_RING_SIZE_IN_HOST_INTERFACE_OFST 4
#define       MC_CMD_EFTEST_RHEAD_RM_ALLOC_FREE_RING_SIZE_IN_HOST_INTERFACE_LEN 4
#define          MC_CMD_EFTEST_RHEAD_RM_ALLOC_FREE_RING_SIZE_IN_EF100 0x0 /* enum */
#define          MC_CMD_EFTEST_RHEAD_RM_ALLOC_FREE_RING_SIZE_IN_VIRTIO 0x1 /* enum */
#define          MC_CMD_EFTEST_RHEAD_RM_ALLOC_FREE_RING_SIZE_IN_QDMA_NATIVE 0x2 /* enum */
/* Number of requested ring sizes (up to 16). */
#define       MC_CMD_EFTEST_RHEAD_RM_ALLOC_FREE_RING_SIZE_IN_SIZE_COUNT_OFST 8
#define       MC_CMD_EFTEST_RHEAD_RM_ALLOC_FREE_RING_SIZE_IN_SIZE_COUNT_LEN 4
/* The array of ring sizes to allocate. */
#define       MC_CMD_EFTEST_RHEAD_RM_ALLOC_FREE_RING_SIZE_IN_RING_SIZES_OFST 12
#define       MC_CMD_EFTEST_RHEAD_RM_ALLOC_FREE_RING_SIZE_IN_RING_SIZES_LEN 4
#define       MC_CMD_EFTEST_RHEAD_RM_ALLOC_FREE_RING_SIZE_IN_RING_SIZES_NUM 16

/* MC_CMD_EFTEST_RHEAD_RM_ALLOC_FREE_RING_SIZE_OUT msgresponse */
#define    MC_CMD_EFTEST_RHEAD_RM_ALLOC_FREE_RING_SIZE_OUT_LEN 0

/* MC_CMD_EFTEST_RHEAD_RM_ALLOC_FREE_RING_SIZE_DMAQ_IN msgrequest */
#define    MC_CMD_EFTEST_RHEAD_RM_ALLOC_FREE_RING_SIZE_DMAQ_IN_LEN 0

/* MC_CMD_EFTEST_RHEAD_RM_ALLOC_FREE_RING_SIZE_DMAQ_OUT msgresponse */
#define    MC_CMD_EFTEST_RHEAD_RM_ALLOC_FREE_RING_SIZE_DMAQ_OUT_LEN 0

/* MC_CMD_EFTEST_RHEAD_RM_ALLOC_FREE_RING_SIZE_CMPLQ_IN msgrequest */
#define    MC_CMD_EFTEST_RHEAD_RM_ALLOC_FREE_RING_SIZE_CMPLQ_IN_LEN 0

/* MC_CMD_EFTEST_RHEAD_RM_ALLOC_FREE_RING_SIZE_CMPLQ_OUT msgresponse */
#define    MC_CMD_EFTEST_RHEAD_RM_ALLOC_FREE_RING_SIZE_CMPLQ_OUT_LEN 0

/* MC_CMD_EFTEST_RHEAD_RM_SUPER_RUN_IN msgrequest */
#define    MC_CMD_EFTEST_RHEAD_RM_SUPER_RUN_IN_LEN 0

/* MC_CMD_EFTEST_RHEAD_RM_SUPER_RUN_OUT msgresponse */
#define    MC_CMD_EFTEST_RHEAD_RM_SUPER_RUN_OUT_LEN 0

/* MC_CMD_EFTEST_RHEAD_RM_BUF_RING_CASE_IN msgrequest */
#define    MC_CMD_EFTEST_RHEAD_RM_BUF_RING_CASE_IN_LEN 20
/* Determines descriptor fetch type for DMAQ ring. */
#define       MC_CMD_EFTEST_RHEAD_RM_BUF_RING_CASE_IN_HOST_INTERFACE_OFST 4
#define       MC_CMD_EFTEST_RHEAD_RM_BUF_RING_CASE_IN_HOST_INTERFACE_LEN 4
#define          MC_CMD_EFTEST_RHEAD_RM_BUF_RING_CASE_IN_EF100 0x0 /* enum */
#define          MC_CMD_EFTEST_RHEAD_RM_BUF_RING_CASE_IN_VIRTIO 0x1 /* enum */
#define          MC_CMD_EFTEST_RHEAD_RM_BUF_RING_CASE_IN_QDMA_NATIVE 0x2 /* enum */
/* Ring size to allocate. */
#define       MC_CMD_EFTEST_RHEAD_RM_BUF_RING_CASE_IN_RING_SIZE_OFST 12
#define       MC_CMD_EFTEST_RHEAD_RM_BUF_RING_CASE_IN_RING_SIZE_LEN 4
/* Buffer size to allocate. */
#define       MC_CMD_EFTEST_RHEAD_RM_BUF_RING_CASE_IN_BUFFER_SIZE_OFST 16
#define       MC_CMD_EFTEST_RHEAD_RM_BUF_RING_CASE_IN_BUFFER_SIZE_LEN 4

/* MC_CMD_EFTEST_RHEAD_RM_BUF_RING_CASE_OUT msgresponse */
#define    MC_CMD_EFTEST_RHEAD_RM_BUF_RING_CASE_OUT_LEN 0

/* MC_CMD_EFTEST_DMAQX_IN msgrequest */
#define    MC_CMD_EFTEST_DMAQX_IN_LEN 4
/* Identifies the test. */
#define       MC_CMD_EFTEST_DMAQX_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_DMAQX_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_DMAQX_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_DMAQX_IN_EFTEST_OP_LEN 1
/* enum: Runs several APIs as indicated by the arguments below. */
#define          MC_CMD_EFTEST_DMAQX_IN_MAIN 0x0
/* align the arguments to 32 bits. */
#define       MC_CMD_EFTEST_DMAQX_IN_EFTEST_OP_RSVD1_OFST 2
#define       MC_CMD_EFTEST_DMAQX_IN_EFTEST_OP_RSVD1_LEN 2

/* MC_CMD_EFTEST_DMAQX_MAIN_IN msgrequest */
#define    MC_CMD_EFTEST_DMAQX_MAIN_IN_LEN 24
/* Controls whether this is a transmit or recieve DMAQ. */
#define       MC_CMD_EFTEST_DMAQX_MAIN_IN_DIRECTION_OFST 4
#define       MC_CMD_EFTEST_DMAQX_MAIN_IN_DIRECTION_LEN 4
#define          MC_CMD_EFTEST_DMAQX_MAIN_IN_TXQ 0x0 /* enum */
#define          MC_CMD_EFTEST_DMAQX_MAIN_IN_RXQ 0x1 /* enum */
/* The index to use for the DMAQ. */
#define       MC_CMD_EFTEST_DMAQX_MAIN_IN_DQ_IDX_OFST 8
#define       MC_CMD_EFTEST_DMAQX_MAIN_IN_DQ_IDX_LEN 4
/* The index to use for the CMPLQ. */
#define       MC_CMD_EFTEST_DMAQX_MAIN_IN_CQ_IDX_OFST 8
#define       MC_CMD_EFTEST_DMAQX_MAIN_IN_CQ_IDX_LEN 4
/* Controls which APIs to exercise */
#define       MC_CMD_EFTEST_DMAQX_MAIN_IN_DEPTH_OFST 12
#define       MC_CMD_EFTEST_DMAQX_MAIN_IN_DEPTH_LEN 4
/* enum: Alloc VIs and ring sizes only. */
#define          MC_CMD_EFTEST_DMAQX_MAIN_IN_L0 0x0
/* enum: L0 + alloc CMPLQ/DMAQ. */
#define          MC_CMD_EFTEST_DMAQX_MAIN_IN_L1 0x1
/* enum: L1 + init CMPLQ/DMAQ. */
#define          MC_CMD_EFTEST_DMAQX_MAIN_IN_L2 0x2
/* Whether or not to fini/free VIs, ring sizes, CMPLQ and DMAQ. */
#define       MC_CMD_EFTEST_DMAQX_MAIN_IN_CLOSE_OFST 16
#define       MC_CMD_EFTEST_DMAQX_MAIN_IN_CLOSE_LEN 4
/* Whether or not to setup for interrupts with the CMPLQ. */
#define       MC_CMD_EFTEST_DMAQX_MAIN_IN_USE_INTERRUPTS_OFST 20
#define       MC_CMD_EFTEST_DMAQX_MAIN_IN_USE_INTERRUPTS_LEN 4

/* MC_CMD_EFTEST_DMAQX_MAIN_OUT msgresponse */
#define    MC_CMD_EFTEST_DMAQX_MAIN_OUT_LEN 0

/* MC_CMD_EFTEST_RMQS_IN msgrequest */
#define    MC_CMD_EFTEST_RMQS_IN_LEN 4
/* Identifies the test. */
#define       MC_CMD_EFTEST_RMQS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RMQS_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_RMQS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RMQS_IN_EFTEST_OP_LEN 1
/* enum: Runs several APIs as indicated by the arguments below. */
#define          MC_CMD_EFTEST_RMQS_IN_MAIN 0x0
/* align the arguments to 32 bits. */
#define       MC_CMD_EFTEST_RMQS_IN_EFTEST_OP_RSVD1_OFST 2
#define       MC_CMD_EFTEST_RMQS_IN_EFTEST_OP_RSVD1_LEN 2

/* MC_CMD_EFTEST_RMQS_MAIN_IN msgrequest */
#define    MC_CMD_EFTEST_RMQS_MAIN_IN_LEN 12
/* Controls which APIs to exercise */
#define       MC_CMD_EFTEST_RMQS_MAIN_IN_DEPTH_OFST 4
#define       MC_CMD_EFTEST_RMQS_MAIN_IN_DEPTH_LEN 4
/* enum: Alloc VIs and init EVQ only. */
#define          MC_CMD_EFTEST_RMQS_MAIN_IN_L0 0x0
/* enum: L0 + init TXQ. */
#define          MC_CMD_EFTEST_RMQS_MAIN_IN_L1 0x1
/* enum: L1 + init RXQ. */
#define          MC_CMD_EFTEST_RMQS_MAIN_IN_L2 0x2
/* Whether to fini the queues and free the VIs. */
#define       MC_CMD_EFTEST_RMQS_MAIN_IN_CLOSE_OFST 8
#define       MC_CMD_EFTEST_RMQS_MAIN_IN_CLOSE_LEN 4

/* MC_CMD_EFTEST_RMQS_MAIN_OUT msgresponse */
#define    MC_CMD_EFTEST_RMQS_MAIN_OUT_LEN 0

/* MC_CMD_EFTEST_RVIQID_IN msgrequest */
#define    MC_CMD_EFTEST_RVIQID_IN_LEN 4
/* Identifies the test. */
#define       MC_CMD_EFTEST_RVIQID_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RVIQID_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_RVIQID_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RVIQID_IN_EFTEST_OP_LEN 1
/* enum: Relative VI to QID conversion. */
#define          MC_CMD_EFTEST_RVIQID_IN_MAIN 0x0
/* align the arguments to 32 bits. */
#define       MC_CMD_EFTEST_RVIQID_IN_EFTEST_OP_RSVD1_OFST 2
#define       MC_CMD_EFTEST_RVIQID_IN_EFTEST_OP_RSVD1_LEN 2

/* MC_CMD_EFTEST_RVIQID_MAIN_IN msgrequest */
#define    MC_CMD_EFTEST_RVIQID_MAIN_IN_LEN 28
/* The handle that determines requested PCI function. */
#define       MC_CMD_EFTEST_RVIQID_MAIN_IN_CLIENT_HANDLE_OFST 4
#define       MC_CMD_EFTEST_RVIQID_MAIN_IN_CLIENT_HANDLE_LEN 4
/* Type of queue. */
#define       MC_CMD_EFTEST_RVIQID_MAIN_IN_QTYPE_OFST 8
#define       MC_CMD_EFTEST_RVIQID_MAIN_IN_QTYPE_LEN 4
#define          MC_CMD_EFTEST_RVIQID_MAIN_IN_EF100 0x0 /* enum */
#define          MC_CMD_EFTEST_RVIQID_MAIN_IN_VIRTIO 0x1 /* enum */
/* The VI number relative to the given function. */
#define       MC_CMD_EFTEST_RVIQID_MAIN_IN_REL_VI_OFST 12
#define       MC_CMD_EFTEST_RVIQID_MAIN_IN_REL_VI_LEN 4
/* Determines TXQ vs RXQ on EF100; ignored for VIRTIO. */
#define       MC_CMD_EFTEST_RVIQID_MAIN_IN_EF100_DIRECTION_OFST 16
#define       MC_CMD_EFTEST_RVIQID_MAIN_IN_EF100_DIRECTION_LEN 4
#define          MC_CMD_EFTEST_RVIQID_MAIN_IN_RX 0x0 /* enum */
#define          MC_CMD_EFTEST_RVIQID_MAIN_IN_TX 0x1 /* enum */
/* Determines C2H vs H2C on VIRTIO; ignored for EF100. */
#define       MC_CMD_EFTEST_RVIQID_MAIN_IN_VIRTIO_DIRECTION_OFST 20
#define       MC_CMD_EFTEST_RVIQID_MAIN_IN_VIRTIO_DIRECTION_LEN 4
#define          MC_CMD_EFTEST_RVIQID_MAIN_IN_H2C 0x0 /* enum */
#define          MC_CMD_EFTEST_RVIQID_MAIN_IN_C2H 0x1 /* enum */
/* VI-relative QID; ignored for EF100. */
#define       MC_CMD_EFTEST_RVIQID_MAIN_IN_REL_QID_OFST 24
#define       MC_CMD_EFTEST_RVIQID_MAIN_IN_REL_QID_LEN 4

/* MC_CMD_EFTEST_RVIQID_MAIN_OUT msgresponse */
#define    MC_CMD_EFTEST_RVIQID_MAIN_OUT_LEN 8
/* The converted qid value. */
#define       MC_CMD_EFTEST_RVIQID_MAIN_OUT_QID_OFST 4
#define       MC_CMD_EFTEST_RVIQID_MAIN_OUT_QID_LEN 4

/* MC_CMD_CDX_OP_IN msgrequest: Perform CDX Proto Tests */
#define    MC_CMD_CDX_OP_IN_LEN 16
/* Identifies the test. */
#define       MC_CMD_CDX_OP_IN_EFTEST_ID_OFST 0
#define       MC_CMD_CDX_OP_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_CDX_OP_IN_EFTEST_OP_OFST 1
#define       MC_CMD_CDX_OP_IN_EFTEST_OP_LEN 1
#define          MC_CMD_CDX_OP_IN_CDX_CSR_PROXY_BAR_READ 0x0 /* enum */
#define          MC_CMD_CDX_OP_IN_CDX_CSR_PROXY_BAR_WRITE 0x1 /* enum */
/* Alignment */
#define       MC_CMD_CDX_OP_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_CDX_OP_IN_EFTEST_OP_RSVD_LEN 2
/* Word aligned address offset */
#define       MC_CMD_CDX_OP_IN_ADDRESS_OFST 4
#define       MC_CMD_CDX_OP_IN_ADDRESS_LEN 4
/* 64-bit data, upper 32 bits can be 0s in case of single word */
#define       MC_CMD_CDX_OP_IN_DATA_OFST 8
#define       MC_CMD_CDX_OP_IN_DATA_LEN 8
#define       MC_CMD_CDX_OP_IN_DATA_LO_OFST 8
#define       MC_CMD_CDX_OP_IN_DATA_LO_LEN 4
#define       MC_CMD_CDX_OP_IN_DATA_LO_LBN 64
#define       MC_CMD_CDX_OP_IN_DATA_LO_WIDTH 32
#define       MC_CMD_CDX_OP_IN_DATA_HI_OFST 12
#define       MC_CMD_CDX_OP_IN_DATA_HI_LEN 4
#define       MC_CMD_CDX_OP_IN_DATA_HI_LBN 96
#define       MC_CMD_CDX_OP_IN_DATA_HI_WIDTH 32

/* MC_CMD_CDX_OP_OUT msgresponse */
#define    MC_CMD_CDX_OP_OUT_LEN 8
#define       MC_CMD_CDX_OP_OUT_DATA_OFST 0
#define       MC_CMD_CDX_OP_OUT_DATA_LEN 8
#define       MC_CMD_CDX_OP_OUT_DATA_LO_OFST 0
#define       MC_CMD_CDX_OP_OUT_DATA_LO_LEN 4
#define       MC_CMD_CDX_OP_OUT_DATA_LO_LBN 0
#define       MC_CMD_CDX_OP_OUT_DATA_LO_WIDTH 32
#define       MC_CMD_CDX_OP_OUT_DATA_HI_OFST 4
#define       MC_CMD_CDX_OP_OUT_DATA_HI_LEN 4
#define       MC_CMD_CDX_OP_OUT_DATA_HI_LBN 32
#define       MC_CMD_CDX_OP_OUT_DATA_HI_WIDTH 32

/* MC_CMD_EFTEST_BOARD_MODE_IN msgrequest */
#define    MC_CMD_EFTEST_BOARD_MODE_IN_LEN 4
/* Identifies the test. */
#define       MC_CMD_EFTEST_BOARD_MODE_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_BOARD_MODE_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_BOARD_MODE_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_BOARD_MODE_IN_EFTEST_OP_LEN 1
/* enum: Get the FPGA voltage that the board is currently running at. */
#define          MC_CMD_EFTEST_BOARD_MODE_IN_BOARD_MODE_GET 0x0
/* align the arguments to 32 bits. */
#define       MC_CMD_EFTEST_BOARD_MODE_IN_EFTEST_OP_RSVD1_OFST 2
#define       MC_CMD_EFTEST_BOARD_MODE_IN_EFTEST_OP_RSVD1_LEN 2

/* MC_CMD_EFTEST_BOARD_MODE_GET_IN msgrequest: Get current board mode and sub-
 * mode of the device
 */
#define    MC_CMD_EFTEST_BOARD_MODE_GET_IN_LEN 4
/* Identifies the test. */
#define       MC_CMD_EFTEST_BOARD_MODE_GET_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_BOARD_MODE_GET_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_BOARD_MODE_GET_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_BOARD_MODE_GET_IN_EFTEST_OP_LEN 1
/* enum: Get the FPGA voltage that the board is currently running at. */
#define          MC_CMD_EFTEST_BOARD_MODE_GET_IN_FPGA_VOLTAGE_GET 0x0
/* enum: Set the FPGA voltage for the next cold boot. */
#define          MC_CMD_EFTEST_BOARD_MODE_GET_IN_FPGA_VOLTAGE_SET 0x1
/* align the arguments to 32 bits. */
#define       MC_CMD_EFTEST_BOARD_MODE_GET_IN_EFTEST_OP_RSVD1_OFST 2
#define       MC_CMD_EFTEST_BOARD_MODE_GET_IN_EFTEST_OP_RSVD1_LEN 2

/* MC_CMD_EFTEST_BOARD_MODE_GET_OUT msgresponse */
#define    MC_CMD_EFTEST_BOARD_MODE_GET_OUT_LEN 8
/* Current board mode. Values are equivalent to the modes defined in the
 * SUC_TAG_OPERATION_MODE configuration tag.
 */
#define       MC_CMD_EFTEST_BOARD_MODE_GET_OUT_BOARD_MODE_OFST 0
#define       MC_CMD_EFTEST_BOARD_MODE_GET_OUT_BOARD_MODE_LEN 4
/* enum: Default/Internal */
#define          MC_CMD_EFTEST_BOARD_MODE_GET_OUT_DEFAULT 0x0
/* enum: Bare board */
#define          MC_CMD_EFTEST_BOARD_MODE_GET_OUT_BARE 0x1
/* enum: Compute Platform board */
#define          MC_CMD_EFTEST_BOARD_MODE_GET_OUT_COMPUTESHELL 0x2
/* enum: SmartNIC Platform board */
#define          MC_CMD_EFTEST_BOARD_MODE_GET_OUT_SMARTNIC 0x3
/* enum: Storage Platform board */
#define          MC_CMD_EFTEST_BOARD_MODE_GET_OUT_STORAGE 0x4
/* Current board sub-mode */
#define       MC_CMD_EFTEST_BOARD_MODE_GET_OUT_BOARD_SUB_MODE_OFST 4
#define       MC_CMD_EFTEST_BOARD_MODE_GET_OUT_BOARD_SUB_MODE_LEN 4

/* MC_CMD_EFTEST_CDMA_LB_IN msgrequest */
#define    MC_CMD_EFTEST_CDMA_LB_IN_LEN 4
/* Identifies the test. */
#define       MC_CMD_EFTEST_CDMA_LB_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_CDMA_LB_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_CDMA_LB_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_CDMA_LB_IN_EFTEST_OP_LEN 1
/* enum: Get the main loopback control flags */
#define          MC_CMD_EFTEST_CDMA_LB_IN_CDMA_LB_CONTROL_GET 0x0
/* enum: Set the main loopback control flags */
#define          MC_CMD_EFTEST_CDMA_LB_IN_CDMA_LB_CONTROL_SET 0x1
/* enum: Get a block of 32 packet drop flags */
#define          MC_CMD_EFTEST_CDMA_LB_IN_CDMA_LB_DROP_GET 0x2
/* enum: Set a block of 1-32 packet drop flags */
#define          MC_CMD_EFTEST_CDMA_LB_IN_CDMA_LB_DROP_SET 0x3
/* Align the arguments to 32 bits. */
#define       MC_CMD_EFTEST_CDMA_LB_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_CDMA_LB_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_CDMA_LB_CONTROL_GET_IN msgrequest: Get the main control flags
 * of the CDMA loopback
 */
#define    MC_CMD_EFTEST_CDMA_LB_CONTROL_GET_IN_LEN 2
/* Identifies the test. */
#define       MC_CMD_EFTEST_CDMA_LB_CONTROL_GET_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_CDMA_LB_CONTROL_GET_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_CDMA_LB_CONTROL_GET_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_CDMA_LB_CONTROL_GET_IN_EFTEST_OP_LEN 1

/* MC_CMD_EFTEST_CDMA_LB_CONTROL_GET_OUT msgresponse */
#define    MC_CMD_EFTEST_CDMA_LB_CONTROL_GET_OUT_LEN 4
/* Control flags (see below) */
#define       MC_CMD_EFTEST_CDMA_LB_CONTROL_GET_OUT_FLAGS_OFST 0
#define       MC_CMD_EFTEST_CDMA_LB_CONTROL_GET_OUT_FLAGS_LEN 4
#define        MC_CMD_EFTEST_CDMA_LB_CONTROL_GET_OUT_LOOPBACK_ENABLE_OFST 0
#define        MC_CMD_EFTEST_CDMA_LB_CONTROL_GET_OUT_LOOPBACK_ENABLE_LBN 0
#define        MC_CMD_EFTEST_CDMA_LB_CONTROL_GET_OUT_LOOPBACK_ENABLE_WIDTH 1
#define        MC_CMD_EFTEST_CDMA_LB_CONTROL_GET_OUT_EGRESS_ENABLE_OFST 0
#define        MC_CMD_EFTEST_CDMA_LB_CONTROL_GET_OUT_EGRESS_ENABLE_LBN 1
#define        MC_CMD_EFTEST_CDMA_LB_CONTROL_GET_OUT_EGRESS_ENABLE_WIDTH 1

/* MC_CMD_EFTEST_CDMA_LB_CONTROL_SET_IN msgrequest: Set the main control flags
 * of the CDMA loopback
 */
#define    MC_CMD_EFTEST_CDMA_LB_CONTROL_SET_IN_LEN 8
/* Identifies the test. */
#define       MC_CMD_EFTEST_CDMA_LB_CONTROL_SET_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_CDMA_LB_CONTROL_SET_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_CDMA_LB_CONTROL_SET_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_CDMA_LB_CONTROL_SET_IN_EFTEST_OP_LEN 1
/* Control flags (see below) */
#define       MC_CMD_EFTEST_CDMA_LB_CONTROL_SET_IN_FLAGS_OFST 4
#define       MC_CMD_EFTEST_CDMA_LB_CONTROL_SET_IN_FLAGS_LEN 4
#define        MC_CMD_EFTEST_CDMA_LB_CONTROL_SET_IN_LOOPBACK_ENABLE_OFST 4
#define        MC_CMD_EFTEST_CDMA_LB_CONTROL_SET_IN_LOOPBACK_ENABLE_LBN 0
#define        MC_CMD_EFTEST_CDMA_LB_CONTROL_SET_IN_LOOPBACK_ENABLE_WIDTH 1
#define        MC_CMD_EFTEST_CDMA_LB_CONTROL_SET_IN_EGRESS_ENABLE_OFST 4
#define        MC_CMD_EFTEST_CDMA_LB_CONTROL_SET_IN_EGRESS_ENABLE_LBN 1
#define        MC_CMD_EFTEST_CDMA_LB_CONTROL_SET_IN_EGRESS_ENABLE_WIDTH 1

/* MC_CMD_EFTEST_CDMA_LB_CONTROL_SET_OUT msgresponse */
#define    MC_CMD_EFTEST_CDMA_LB_CONTROL_SET_OUT_LEN 0

/* MC_CMD_EFTEST_CDMA_LB_DROP_GET_IN msgrequest: Get a block of (32) packet
 * drop flags of the CDMA loopback
 */
#define    MC_CMD_EFTEST_CDMA_LB_DROP_GET_IN_LEN 8
/* Identifies the test. */
#define       MC_CMD_EFTEST_CDMA_LB_DROP_GET_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_CDMA_LB_DROP_GET_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_CDMA_LB_DROP_GET_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_CDMA_LB_DROP_GET_IN_EFTEST_OP_LEN 1
/* The index of the first entry to get from. Although 16 bits has been
 * allocated for this index, currently only 12 bits are used (indexing 4096
 * entries) - covering only settings for the mport_ID part of the mport tag.
 */
#define       MC_CMD_EFTEST_CDMA_LB_DROP_GET_IN_START_MPORT_OFST 4
#define       MC_CMD_EFTEST_CDMA_LB_DROP_GET_IN_START_MPORT_LEN 2
/* Number of entries to get. In case the START_MPORT + NUM_ENTRIES is greater
 * than the implemented table size, the command will return ERANGE.
 */
#define       MC_CMD_EFTEST_CDMA_LB_DROP_GET_IN_NUM_ENTRIES_OFST 6
#define       MC_CMD_EFTEST_CDMA_LB_DROP_GET_IN_NUM_ENTRIES_LEN 2

/* MC_CMD_EFTEST_CDMA_LB_DROP_GET_OUT msgresponse */
#define    MC_CMD_EFTEST_CDMA_LB_DROP_GET_OUT_LENMIN 4
#define    MC_CMD_EFTEST_CDMA_LB_DROP_GET_OUT_LENMAX 252
#define    MC_CMD_EFTEST_CDMA_LB_DROP_GET_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_CDMA_LB_DROP_GET_OUT_LEN(num) (0+4*(num))
#define    MC_CMD_EFTEST_CDMA_LB_DROP_GET_OUT_DROP_FLAGS_NUM(len) (((len)-0)/4)
/* 32 drop flags where LSB is the drop flag for the mport was indexed by
 * START_MPORT. The bit DROP_FLAGS[N] contains the setting for START_MPORT + N
 * so the MSB is the drop flag with the index of START_MPORT + 31. Any bits
 * with out of range table indexes will be 0 filled.
 */
#define       MC_CMD_EFTEST_CDMA_LB_DROP_GET_OUT_DROP_FLAGS_OFST 0
#define       MC_CMD_EFTEST_CDMA_LB_DROP_GET_OUT_DROP_FLAGS_LEN 4
#define       MC_CMD_EFTEST_CDMA_LB_DROP_GET_OUT_DROP_FLAGS_MINNUM 1
#define       MC_CMD_EFTEST_CDMA_LB_DROP_GET_OUT_DROP_FLAGS_MAXNUM 63
#define       MC_CMD_EFTEST_CDMA_LB_DROP_GET_OUT_DROP_FLAGS_MAXNUM_MCDI2 255

/* MC_CMD_EFTEST_CDMA_LB_DROP_SET_IN msgrequest: A packet drop flag belongs to
 * each mport that is stored in the CDMA loopback. Set 1-MAX drop flags of the
 * CDMA loopback from the given mport index. Depending on NUM_ENTRIES, 1 to MAX
 * entries with consecutive index can be set with one command.
 */
#define    MC_CMD_EFTEST_CDMA_LB_DROP_SET_IN_LENMIN 12
#define    MC_CMD_EFTEST_CDMA_LB_DROP_SET_IN_LENMAX 252
#define    MC_CMD_EFTEST_CDMA_LB_DROP_SET_IN_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_CDMA_LB_DROP_SET_IN_LEN(num) (8+4*(num))
#define    MC_CMD_EFTEST_CDMA_LB_DROP_SET_IN_DROP_FLAGS_NUM(len) (((len)-8)/4)
/* Identifies the test. */
#define       MC_CMD_EFTEST_CDMA_LB_DROP_SET_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_CDMA_LB_DROP_SET_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_CDMA_LB_DROP_SET_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_CDMA_LB_DROP_SET_IN_EFTEST_OP_LEN 1
/* The index of the first entry to set from. Although 16 bits has been
 * allocated for this index, currently only 12 bits are used (indexing 4096
 * entries) - covering only settings for the mport_ID part of the mport tag.
 */
#define       MC_CMD_EFTEST_CDMA_LB_DROP_SET_IN_START_MPORT_OFST 4
#define       MC_CMD_EFTEST_CDMA_LB_DROP_SET_IN_START_MPORT_LEN 2
/* Number of entries to set. In case the START_MPORT + NUM_ENTRIES is greater
 * than the implemented table size, the command will return ERANGE.
 */
#define       MC_CMD_EFTEST_CDMA_LB_DROP_SET_IN_NUM_ENTRIES_OFST 6
#define       MC_CMD_EFTEST_CDMA_LB_DROP_SET_IN_NUM_ENTRIES_LEN 2
/* 32 bit values that represent 32 drop flag bits each, one for every mport
 * table entry, starting from the entry indexed by START_MPORT which has the
 * setting coming from the LSB of the first DROP_FLAGS dword. The bit
 * DROP_FLAGS[N] in the first dword is to set the entry for START_MPORT + N so
 * the MSB is the drop flag with the index of START_MPORT + 31. The next dword
 * (if required) represents bits from START_MPORT + 32 to 63. The table entry
 * with the highest index being set is START_MPORT + NUM_ENTRIES - 1. At least
 * (NUM_ENTRIES + 31) / 32 dwords must be supplied.
 */
#define       MC_CMD_EFTEST_CDMA_LB_DROP_SET_IN_DROP_FLAGS_OFST 8
#define       MC_CMD_EFTEST_CDMA_LB_DROP_SET_IN_DROP_FLAGS_LEN 4
#define       MC_CMD_EFTEST_CDMA_LB_DROP_SET_IN_DROP_FLAGS_MINNUM 1
#define       MC_CMD_EFTEST_CDMA_LB_DROP_SET_IN_DROP_FLAGS_MAXNUM 61
#define       MC_CMD_EFTEST_CDMA_LB_DROP_SET_IN_DROP_FLAGS_MAXNUM_MCDI2 253

/* MC_CMD_EFTEST_CDMA_LB_DROP_SET_OUT msgresponse */
#define    MC_CMD_EFTEST_CDMA_LB_DROP_SET_OUT_LEN 0

/* MC_CMD_EFTEST_RX_PORT_PCIE_RQ_CTL_IN msgrequest */
#define    MC_CMD_EFTEST_RX_PORT_PCIE_RQ_CTL_IN_LEN 8
/* Identifies the test. */
#define       MC_CMD_EFTEST_RX_PORT_PCIE_RQ_CTL_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_RX_PORT_PCIE_RQ_CTL_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_RX_PORT_PCIE_RQ_CTL_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_RX_PORT_PCIE_RQ_CTL_IN_EFTEST_OP_LEN 1
/* enum: Disable RX packet and event delivery to the PCIe Initiator block. */
#define          MC_CMD_EFTEST_RX_PORT_PCIE_RQ_CTL_IN_RX_PORT_DISABLE 0x0
/* enum: Enable RX packet and event delivery to the PCIe Initiator block. */
#define          MC_CMD_EFTEST_RX_PORT_PCIE_RQ_CTL_IN_RX_PORT_ENABLE 0x1
/* Align the arguments to 32 bits. */
#define       MC_CMD_EFTEST_RX_PORT_PCIE_RQ_CTL_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_RX_PORT_PCIE_RQ_CTL_IN_EFTEST_OP_RSVD_LEN 2
/* The requested port. */
#define       MC_CMD_EFTEST_RX_PORT_PCIE_RQ_CTL_IN_PORT_OFST 4
#define       MC_CMD_EFTEST_RX_PORT_PCIE_RQ_CTL_IN_PORT_LEN 4

/* MC_CMD_EFTEST_RX_PORT_PCIE_RQ_CTL_OUT msgresponse */
#define    MC_CMD_EFTEST_RX_PORT_PCIE_RQ_CTL_OUT_LEN 0

/* MC_CMD_EFTEST_FUNC_SET_MMIO_PROXY_MODE msgrequest */
#define    MC_CMD_EFTEST_FUNC_SET_MMIO_PROXY_MODE_LEN 20
/* Indicates whether a physical or virtual function is desired. */
#define       MC_CMD_EFTEST_FUNC_SET_MMIO_PROXY_MODE_FN_TYPE_OFST 4
#define       MC_CMD_EFTEST_FUNC_SET_MMIO_PROXY_MODE_FN_TYPE_LEN 4
/* enum: Physical function, disregard VF_VAL. */
#define          MC_CMD_EFTEST_FUNC_SET_MMIO_PROXY_MODE_TYPE_PF 0x0
/* enum: Virtual function VF_VAL of the physical function PF_VAL */
#define          MC_CMD_EFTEST_FUNC_SET_MMIO_PROXY_MODE_TYPE_VF 0x1
/* PF value. */
#define       MC_CMD_EFTEST_FUNC_SET_MMIO_PROXY_MODE_PF_VAL_OFST 8
#define       MC_CMD_EFTEST_FUNC_SET_MMIO_PROXY_MODE_PF_VAL_LEN 4
/* VF value (if applicable). */
#define       MC_CMD_EFTEST_FUNC_SET_MMIO_PROXY_MODE_VF_VAL_OFST 12
#define       MC_CMD_EFTEST_FUNC_SET_MMIO_PROXY_MODE_VF_VAL_LEN 4
/* MMIO-proxy mode for function. */
#define       MC_CMD_EFTEST_FUNC_SET_MMIO_PROXY_MODE_PROXY_MODE_OFST 16
#define       MC_CMD_EFTEST_FUNC_SET_MMIO_PROXY_MODE_PROXY_MODE_LEN 4
/* enum: BAR accesses route to fabric. */
#define          MC_CMD_EFTEST_FUNC_SET_MMIO_PROXY_MODE_FABRIC 0x0
/* enum: BAR accesses route to firmware. */
#define          MC_CMD_EFTEST_FUNC_SET_MMIO_PROXY_MODE_FIRMWARE 0x1

/* MC_CMD_EFTEST_FUNC_SET_MMIO_PROXY_MODE_OUT msgresponse */
#define    MC_CMD_EFTEST_FUNC_SET_MMIO_PROXY_MODE_OUT_LEN 0

/* MC_CMD_EFTEST_DPU_BUFSS_POOL_CONFIG msgrequest */
#define    MC_CMD_EFTEST_DPU_BUFSS_POOL_CONFIG_LEN 16
/* Identifies the test. */
#define       MC_CMD_EFTEST_DPU_BUFSS_POOL_CONFIG_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_DPU_BUFSS_POOL_CONFIG_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_DPU_BUFSS_POOL_CONFIG_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_DPU_BUFSS_POOL_CONFIG_EFTEST_OP_LEN 1
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_DPU_BUFSS_POOL_CONFIG_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_DPU_BUFSS_POOL_CONFIG_EFTEST_OP_RSVD_LEN 2
/* Identifies the DPU instance (Host/Net). */
#define       MC_CMD_EFTEST_DPU_BUFSS_POOL_CONFIG_DPU_TYPE_OFST 4
#define       MC_CMD_EFTEST_DPU_BUFSS_POOL_CONFIG_DPU_TYPE_LEN 2
/* enum: DPU.host instance. */
#define          MC_CMD_EFTEST_DPU_BUFSS_POOL_CONFIG_DPU_HOST 0x0
/* enum: DPU.net instance. */
#define          MC_CMD_EFTEST_DPU_BUFSS_POOL_CONFIG_DPU_NET 0x1
/* Identifies the general pool ID to configure. */
#define       MC_CMD_EFTEST_DPU_BUFSS_POOL_CONFIG_POOL_ID_OFST 6
#define       MC_CMD_EFTEST_DPU_BUFSS_POOL_CONFIG_POOL_ID_LEN 2
/* Reservation value for the pool. It represents the pool's size lower bound.
 * It's expressed in bytes.
 */
#define       MC_CMD_EFTEST_DPU_BUFSS_POOL_CONFIG_RESERVATION_OFST 8
#define       MC_CMD_EFTEST_DPU_BUFSS_POOL_CONFIG_RESERVATION_LEN 4
/* Limit value for the pool. It represents the pool's size upper bound. It's
 * expressed in bytes.
 */
#define       MC_CMD_EFTEST_DPU_BUFSS_POOL_CONFIG_LIMIT_OFST 12
#define       MC_CMD_EFTEST_DPU_BUFSS_POOL_CONFIG_LIMIT_LEN 4

/* MC_CMD_EFTEST_DPU_BUFSS_POOL_CONFIG_OUT msgresponse */
#define    MC_CMD_EFTEST_DPU_BUFSS_POOL_CONFIG_OUT_LEN 0

/* MC_CMD_EFTEST_CONFIG_SSS_IN msgrequest */
#define    MC_CMD_EFTEST_CONFIG_SSS_IN_LEN 2
/* The operation requested. */
#define       MC_CMD_EFTEST_CONFIG_SSS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_CONFIG_SSS_IN_EFTEST_OP_LEN 1
/* enum: Set the number and distribution of FIFOs in a specified hub. */
#define          MC_CMD_EFTEST_CONFIG_SSS_IN_SET_HUB_FIFO_CONFIG 0x0
/* enum: Set per-port NETRX config. */
#define          MC_CMD_EFTEST_CONFIG_SSS_IN_SET_NETRX_CONFIG 0x1
/* enum: Set per-pcp config for routing through DPU-mode SSS. */
#define          MC_CMD_EFTEST_CONFIG_SSS_IN_SET_NETRX_DPU_ROUTE 0x2
/* enum: Set per-pcp config for routing through HNIC-mode SSS. */
#define          MC_CMD_EFTEST_CONFIG_SSS_IN_SET_NETRX_HNIC_ROUTE 0x3
/* enum: Set per-port mapping from DSCP value to PCP value. */
#define          MC_CMD_EFTEST_CONFIG_SSS_IN_SET_DSCP_TO_PCP_MAP 0x4
/* enum: Set DPU-mode specific parameters in the hub NA. */
#define          MC_CMD_EFTEST_CONFIG_SSS_IN_SET_HUB_NA_DPU_CONFIG 0x5
/* enum: Set bitmask of which hub NA FIFOs should be set to drop all packets.
 */
#define          MC_CMD_EFTEST_CONFIG_SSS_IN_SET_HUB_NA_DPU_DROP_MASK 0x6
/* enum: Set the top level mode of the SSS. */
#define          MC_CMD_EFTEST_CONFIG_SSS_IN_SET_SSS_MODE 0x7

/* MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_FIFO_CONFIG_IN msgrequest: Set the number
 * and distribution of FIFOs in a specified hub.
 */
#define    MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_FIFO_CONFIG_IN_LENMIN 12
#define    MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_FIFO_CONFIG_IN_LENMAX 252
#define    MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_FIFO_CONFIG_IN_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_FIFO_CONFIG_IN_LEN(num) (8+4*(num))
#define    MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_FIFO_CONFIG_IN_FIFO_ENTRIES_NUM(len) (((len)-8)/4)
/* The operation requested. */
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_FIFO_CONFIG_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_FIFO_CONFIG_IN_EFTEST_OP_LEN 1
/* enum: Set the number and distribution of FIFOs in a specified hub. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_FIFO_CONFIG_IN_SET_HUB_FIFO_CONFIG 0x0
/* enum: Set per-port NETRX config. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_FIFO_CONFIG_IN_SET_NETRX_CONFIG 0x1
/* enum: Set per-pcp config for routing through DPU-mode SSS. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_FIFO_CONFIG_IN_SET_NETRX_DPU_ROUTE 0x2
/* enum: Set per-pcp config for routing through HNIC-mode SSS. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_FIFO_CONFIG_IN_SET_NETRX_HNIC_ROUTE 0x3
/* enum: Set per-port mapping from DSCP value to PCP value. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_FIFO_CONFIG_IN_SET_DSCP_TO_PCP_MAP 0x4
/* enum: Set DPU-mode specific parameters in the hub NA. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_FIFO_CONFIG_IN_SET_HUB_NA_DPU_CONFIG 0x5
/* enum: Set bitmask of which hub NA FIFOs should be set to drop all packets.
 */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_FIFO_CONFIG_IN_SET_HUB_NA_DPU_DROP_MASK 0x6
/* enum: Set the top level mode of the SSS. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_FIFO_CONFIG_IN_SET_SSS_MODE 0x7
/* The type of hub to apply the fifo config to */
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_FIFO_CONFIG_IN_HUB_TYPE_OFST 4
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_FIFO_CONFIG_IN_HUB_TYPE_LEN 1
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_FIFO_CONFIG_IN_HUB_NA 0x0 /* enum */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_FIFO_CONFIG_IN_HUB_NC 0x1 /* enum */
/* The number of fifos to be configured. */
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_FIFO_CONFIG_IN_FIFO_COUNT_OFST 5
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_FIFO_CONFIG_IN_FIFO_COUNT_LEN 1
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_FIFO_CONFIG_IN_FIFO_ENTRIES_OFST 8
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_FIFO_CONFIG_IN_FIFO_ENTRIES_LEN 4
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_FIFO_CONFIG_IN_FIFO_ENTRIES_MINNUM 1
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_FIFO_CONFIG_IN_FIFO_ENTRIES_MAXNUM 61
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_FIFO_CONFIG_IN_FIFO_ENTRIES_MAXNUM_MCDI2 253
#define        MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_FIFO_CONFIG_IN_FIFO_SIZE_OFST 8
#define        MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_FIFO_CONFIG_IN_FIFO_SIZE_LBN 0
#define        MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_FIFO_CONFIG_IN_FIFO_SIZE_WIDTH 16
#define        MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_FIFO_CONFIG_IN_FIFO_DEST_ID_OFST 8
#define        MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_FIFO_CONFIG_IN_FIFO_DEST_ID_LBN 16
#define        MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_FIFO_CONFIG_IN_FIFO_DEST_ID_WIDTH 8

/* MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_CONFIG_IN msgrequest: Set per-port NETRX
 * config.
 */
#define    MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_CONFIG_IN_LEN 12
/* The operation requested. */
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_CONFIG_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_CONFIG_IN_EFTEST_OP_LEN 1
/* enum: Set the number and distribution of FIFOs in a specified hub. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_CONFIG_IN_SET_HUB_FIFO_CONFIG 0x0
/* enum: Set per-port NETRX config. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_CONFIG_IN_SET_NETRX_CONFIG 0x1
/* enum: Set per-pcp config for routing through DPU-mode SSS. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_CONFIG_IN_SET_NETRX_DPU_ROUTE 0x2
/* enum: Set per-pcp config for routing through HNIC-mode SSS. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_CONFIG_IN_SET_NETRX_HNIC_ROUTE 0x3
/* enum: Set per-port mapping from DSCP value to PCP value. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_CONFIG_IN_SET_DSCP_TO_PCP_MAP 0x4
/* enum: Set DPU-mode specific parameters in the hub NA. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_CONFIG_IN_SET_HUB_NA_DPU_CONFIG 0x5
/* enum: Set bitmask of which hub NA FIFOs should be set to drop all packets.
 */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_CONFIG_IN_SET_HUB_NA_DPU_DROP_MASK 0x6
/* enum: Set the top level mode of the SSS. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_CONFIG_IN_SET_SSS_MODE 0x7
/* The hw port to be configured */
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_CONFIG_IN_HW_PORT_IDX_OFST 4
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_CONFIG_IN_HW_PORT_IDX_LEN 1
/* Mask of TPIDs that should be used for extracting PCP values. Bit[0] Custom;
 * Bit[1] 0x9100; Bit[2] 0x9200; Bit[3] 0x9300; Bit[4] 0x88A8; Bit[5] 0x8100.
 */
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_CONFIG_IN_PCP_TPID_MASK_OFST 5
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_CONFIG_IN_PCP_TPID_MASK_LEN 1
/* Mask of outer TPIDs that should be ignored when extracting PCP values. */
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_CONFIG_IN_SKIP_OUTER_TPID_MASK_OFST 6
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_CONFIG_IN_SKIP_OUTER_TPID_MASK_LEN 1
/* Mask of inner TPIDs that should be ignored when extracting PCP values. */
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_CONFIG_IN_SKIP_INNER_TPID_MASK_OFST 7
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_CONFIG_IN_SKIP_INNER_TPID_MASK_LEN 1
/* Define a custom TPID used when Bit[0] of TPID mask is set. */
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_CONFIG_IN_CUSTOM_TPID_OFST 8
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_CONFIG_IN_CUSTOM_TPID_LEN 2
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_CONFIG_IN_FLAGS_OFST 10
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_CONFIG_IN_FLAGS_LEN 2
#define        MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_CONFIG_IN_FCS_STRIPPED_OFST 10
#define        MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_CONFIG_IN_FCS_STRIPPED_LBN 0
#define        MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_CONFIG_IN_FCS_STRIPPED_WIDTH 1
#define        MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_CONFIG_IN_PCP_FROM_DSCP_EN_OFST 10
#define        MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_CONFIG_IN_PCP_FROM_DSCP_EN_LBN 1
#define        MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_CONFIG_IN_PCP_FROM_DSCP_EN_WIDTH 1

/* MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_DPU_ROUTE_IN msgrequest: Set per-pcp
 * config for routing through DPU-mode SSS.
 */
#define    MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_DPU_ROUTE_IN_LEN 40
/* The operation requested. */
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_DPU_ROUTE_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_DPU_ROUTE_IN_EFTEST_OP_LEN 1
/* enum: Set the number and distribution of FIFOs in a specified hub. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_DPU_ROUTE_IN_SET_HUB_FIFO_CONFIG 0x0
/* enum: Set per-port NETRX config. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_DPU_ROUTE_IN_SET_NETRX_CONFIG 0x1
/* enum: Set per-pcp config for routing through DPU-mode SSS. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_DPU_ROUTE_IN_SET_NETRX_DPU_ROUTE 0x2
/* enum: Set per-pcp config for routing through HNIC-mode SSS. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_DPU_ROUTE_IN_SET_NETRX_HNIC_ROUTE 0x3
/* enum: Set per-port mapping from DSCP value to PCP value. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_DPU_ROUTE_IN_SET_DSCP_TO_PCP_MAP 0x4
/* enum: Set DPU-mode specific parameters in the hub NA. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_DPU_ROUTE_IN_SET_HUB_NA_DPU_CONFIG 0x5
/* enum: Set bitmask of which hub NA FIFOs should be set to drop all packets.
 */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_DPU_ROUTE_IN_SET_HUB_NA_DPU_DROP_MASK 0x6
/* enum: Set the top level mode of the SSS. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_DPU_ROUTE_IN_SET_SSS_MODE 0x7
/* The hw port to be configured */
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_DPU_ROUTE_IN_HW_PORT_IDX_OFST 4
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_DPU_ROUTE_IN_HW_PORT_IDX_LEN 1
/* Array of DPU_SSS_ROUTE, one per PCP value. */
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_DPU_ROUTE_IN_PER_PCP_ROUTE_OFST 8
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_DPU_ROUTE_IN_PER_PCP_ROUTE_LEN 4
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_DPU_ROUTE_IN_PER_PCP_ROUTE_NUM 8

/* MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_HNIC_ROUTE_IN msgrequest: Set per-pcp
 * config for routing through HNIC-mode SSS.
 */
#define    MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_HNIC_ROUTE_IN_LEN 40
/* The operation requested. */
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_HNIC_ROUTE_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_HNIC_ROUTE_IN_EFTEST_OP_LEN 1
/* enum: Set the number and distribution of FIFOs in a specified hub. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_HNIC_ROUTE_IN_SET_HUB_FIFO_CONFIG 0x0
/* enum: Set per-port NETRX config. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_HNIC_ROUTE_IN_SET_NETRX_CONFIG 0x1
/* enum: Set per-pcp config for routing through DPU-mode SSS. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_HNIC_ROUTE_IN_SET_NETRX_DPU_ROUTE 0x2
/* enum: Set per-pcp config for routing through HNIC-mode SSS. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_HNIC_ROUTE_IN_SET_NETRX_HNIC_ROUTE 0x3
/* enum: Set per-port mapping from DSCP value to PCP value. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_HNIC_ROUTE_IN_SET_DSCP_TO_PCP_MAP 0x4
/* enum: Set DPU-mode specific parameters in the hub NA. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_HNIC_ROUTE_IN_SET_HUB_NA_DPU_CONFIG 0x5
/* enum: Set bitmask of which hub NA FIFOs should be set to drop all packets.
 */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_HNIC_ROUTE_IN_SET_HUB_NA_DPU_DROP_MASK 0x6
/* enum: Set the top level mode of the SSS. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_HNIC_ROUTE_IN_SET_SSS_MODE 0x7
/* The hw port to be configured */
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_HNIC_ROUTE_IN_HW_PORT_IDX_OFST 4
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_HNIC_ROUTE_IN_HW_PORT_IDX_LEN 1
/* Array of HNIC_SSS_ROUTE, one per PCP value. */
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_HNIC_ROUTE_IN_PER_PCP_ROUTE_OFST 8
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_HNIC_ROUTE_IN_PER_PCP_ROUTE_LEN 4
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_NETRX_HNIC_ROUTE_IN_PER_PCP_ROUTE_NUM 8

/* MC_CMD_EFTEST_CONFIG_SSS_SET_DSCP_TO_PCP_MAP_IN msgrequest: Set per-port
 * mapping from DSCP to PCP.
 */
#define    MC_CMD_EFTEST_CONFIG_SSS_SET_DSCP_TO_PCP_MAP_IN_LEN 72
/* The operation requested. */
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_DSCP_TO_PCP_MAP_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_DSCP_TO_PCP_MAP_IN_EFTEST_OP_LEN 1
/* enum: Set the number and distribution of FIFOs in a specified hub. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_DSCP_TO_PCP_MAP_IN_SET_HUB_FIFO_CONFIG 0x0
/* enum: Set per-port NETRX config. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_DSCP_TO_PCP_MAP_IN_SET_NETRX_CONFIG 0x1
/* enum: Set per-pcp config for routing through DPU-mode SSS. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_DSCP_TO_PCP_MAP_IN_SET_NETRX_DPU_ROUTE 0x2
/* enum: Set per-pcp config for routing through HNIC-mode SSS. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_DSCP_TO_PCP_MAP_IN_SET_NETRX_HNIC_ROUTE 0x3
/* enum: Set per-port mapping from DSCP value to PCP value. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_DSCP_TO_PCP_MAP_IN_SET_DSCP_TO_PCP_MAP 0x4
/* enum: Set DPU-mode specific parameters in the hub NA. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_DSCP_TO_PCP_MAP_IN_SET_HUB_NA_DPU_CONFIG 0x5
/* enum: Set bitmask of which hub NA FIFOs should be set to drop all packets.
 */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_DSCP_TO_PCP_MAP_IN_SET_HUB_NA_DPU_DROP_MASK 0x6
/* enum: Set the top level mode of the SSS. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_DSCP_TO_PCP_MAP_IN_SET_SSS_MODE 0x7
/* The hw port to be configured */
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_DSCP_TO_PCP_MAP_IN_HW_PORT_IDX_OFST 4
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_DSCP_TO_PCP_MAP_IN_HW_PORT_IDX_LEN 1
/* Table PCP values indexed by DSCP value. */
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_DSCP_TO_PCP_MAP_IN_PCP_OFST 8
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_DSCP_TO_PCP_MAP_IN_PCP_LEN 1
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_DSCP_TO_PCP_MAP_IN_PCP_NUM 64

/* MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_NA_DPU_CONFIG_IN msgrequest: Set DPU-mode
 * specific parameters in the hub NA.
 */
#define    MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_NA_DPU_CONFIG_IN_LEN 38
/* The operation requested. */
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_NA_DPU_CONFIG_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_NA_DPU_CONFIG_IN_EFTEST_OP_LEN 1
/* enum: Set the number and distribution of FIFOs in a specified hub. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_NA_DPU_CONFIG_IN_SET_HUB_FIFO_CONFIG 0x0
/* enum: Set per-port NETRX config. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_NA_DPU_CONFIG_IN_SET_NETRX_CONFIG 0x1
/* enum: Set per-pcp config for routing through DPU-mode SSS. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_NA_DPU_CONFIG_IN_SET_NETRX_DPU_ROUTE 0x2
/* enum: Set per-pcp config for routing through HNIC-mode SSS. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_NA_DPU_CONFIG_IN_SET_NETRX_HNIC_ROUTE 0x3
/* enum: Set per-port mapping from DSCP value to PCP value. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_NA_DPU_CONFIG_IN_SET_DSCP_TO_PCP_MAP 0x4
/* enum: Set DPU-mode specific parameters in the hub NA. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_NA_DPU_CONFIG_IN_SET_HUB_NA_DPU_CONFIG 0x5
/* enum: Set bitmask of which hub NA FIFOs should be set to drop all packets.
 */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_NA_DPU_CONFIG_IN_SET_HUB_NA_DPU_DROP_MASK 0x6
/* enum: Set the top level mode of the SSS. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_NA_DPU_CONFIG_IN_SET_SSS_MODE 0x7
/* Units of the pkt_fill field in the RX notify message. Must be a power of 2
 * in the range 1-1024.
 */
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_NA_DPU_CONFIG_IN_FIFO_FILL_UNIT_OFST 4
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_NA_DPU_CONFIG_IN_FIFO_FILL_UNIT_LEN 2
/* Length of packet data in RX notify message in 64bit words. 1 value per RX
 * notification channel.
 */
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_NA_DPU_CONFIG_IN_SNAP_LENGTH_OFST 6
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_NA_DPU_CONFIG_IN_SNAP_LENGTH_LEN 2
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_NA_DPU_CONFIG_IN_SNAP_LENGTH_NUM 8
/* Initial destination credits for each RX notification channel. */
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_NA_DPU_CONFIG_IN_DEST_CREDITS_OFST 22
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_NA_DPU_CONFIG_IN_DEST_CREDITS_LEN 2
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_NA_DPU_CONFIG_IN_DEST_CREDITS_NUM 8

/* MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_NA_DPU_DROP_MASK_IN msgrequest: Set bitmask
 * of which hub NA FIFOs should be set to drop all packets.
 */
#define    MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_NA_DPU_DROP_MASK_IN_LEN 6
/* The operation requested. */
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_NA_DPU_DROP_MASK_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_NA_DPU_DROP_MASK_IN_EFTEST_OP_LEN 1
/* enum: Set the number and distribution of FIFOs in a specified hub. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_NA_DPU_DROP_MASK_IN_SET_HUB_FIFO_CONFIG 0x0
/* enum: Set per-port NETRX config. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_NA_DPU_DROP_MASK_IN_SET_NETRX_CONFIG 0x1
/* enum: Set per-pcp config for routing through DPU-mode SSS. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_NA_DPU_DROP_MASK_IN_SET_NETRX_DPU_ROUTE 0x2
/* enum: Set per-pcp config for routing through HNIC-mode SSS. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_NA_DPU_DROP_MASK_IN_SET_NETRX_HNIC_ROUTE 0x3
/* enum: Set per-port mapping from DSCP value to PCP value. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_NA_DPU_DROP_MASK_IN_SET_DSCP_TO_PCP_MAP 0x4
/* enum: Set DPU-mode specific parameters in the hub NA. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_NA_DPU_DROP_MASK_IN_SET_HUB_NA_DPU_CONFIG 0x5
/* enum: Set bitmask of which hub NA FIFOs should be set to drop all packets.
 */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_NA_DPU_DROP_MASK_IN_SET_HUB_NA_DPU_DROP_MASK 0x6
/* enum: Set the top level mode of the SSS. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_NA_DPU_DROP_MASK_IN_SET_SSS_MODE 0x7
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_NA_DPU_DROP_MASK_IN_DROP_MASK_OFST 4
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_HUB_NA_DPU_DROP_MASK_IN_DROP_MASK_LEN 2

/* MC_CMD_EFTEST_CONFIG_SSS_SET_SSS_MODE_IN msgrequest: Set the top level mode
 * of the SSS. Requires SSS_RESET to take effect.
 */
#define    MC_CMD_EFTEST_CONFIG_SSS_SET_SSS_MODE_IN_LEN 5
/* The operation requested. */
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_SSS_MODE_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_SSS_MODE_IN_EFTEST_OP_LEN 1
/* enum: Set the number and distribution of FIFOs in a specified hub. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_SSS_MODE_IN_SET_HUB_FIFO_CONFIG 0x0
/* enum: Set per-port NETRX config. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_SSS_MODE_IN_SET_NETRX_CONFIG 0x1
/* enum: Set per-pcp config for routing through DPU-mode SSS. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_SSS_MODE_IN_SET_NETRX_DPU_ROUTE 0x2
/* enum: Set per-pcp config for routing through HNIC-mode SSS. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_SSS_MODE_IN_SET_NETRX_HNIC_ROUTE 0x3
/* enum: Set per-port mapping from DSCP value to PCP value. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_SSS_MODE_IN_SET_DSCP_TO_PCP_MAP 0x4
/* enum: Set DPU-mode specific parameters in the hub NA. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_SSS_MODE_IN_SET_HUB_NA_DPU_CONFIG 0x5
/* enum: Set bitmask of which hub NA FIFOs should be set to drop all packets.
 */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_SSS_MODE_IN_SET_HUB_NA_DPU_DROP_MASK 0x6
/* enum: Set the top level mode of the SSS. */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_SSS_MODE_IN_SET_SSS_MODE 0x7
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_SSS_MODE_IN_SSS_MODE_OFST 4
#define       MC_CMD_EFTEST_CONFIG_SSS_SET_SSS_MODE_IN_SSS_MODE_LEN 1
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_SSS_MODE_IN_HNIC_MODE 0x0 /* enum */
#define          MC_CMD_EFTEST_CONFIG_SSS_SET_SSS_MODE_IN_DPU_MODE 0x1 /* enum */

/* MC_CMD_EFTEST_CONFIG_SSS_OUT msgresponse */
#define    MC_CMD_EFTEST_CONFIG_SSS_OUT_LEN 0

/* MC_CMD_EFTEST_MC_MEM_WIN_IN msgrequest */
#define    MC_CMD_EFTEST_MC_MEM_WIN_IN_LEN 4
/* Identifies the test. */
#define       MC_CMD_EFTEST_MC_MEM_WIN_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_MC_MEM_WIN_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_MC_MEM_WIN_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_MC_MEM_WIN_IN_EFTEST_OP_LEN 1
/* enum: Query the firmware for the current state of the MMIO window */
#define          MC_CMD_EFTEST_MC_MEM_WIN_IN_QUERY 0x0
/* enum: Move the window offset within the MC buffer */
#define          MC_CMD_EFTEST_MC_MEM_WIN_IN_MOVE 0x1
/* Align the arguments to 32 bits. */
#define       MC_CMD_EFTEST_MC_MEM_WIN_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_MC_MEM_WIN_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_MC_MEM_WIN_OUT msgresponse */
#define    MC_CMD_EFTEST_MC_MEM_WIN_OUT_LEN 0

/* MC_CMD_EFTEST_MC_MEM_WIN_QUERY_OUT msgrequest: Query the properties of the
 * memory MMIO memory window. The values of SIZE, BAR and OFFSET are expected
 * to match those in https://confluence.xilinx.com/display/CNS/Host+x86+and+APU
 * +Memmapped+Control+and+Test+Interfaces+Spec but the host should use this
 * command to discover them.
 */
#define    MC_CMD_EFTEST_MC_MEM_WIN_QUERY_OUT_LEN 20
/* the size of the MMIO window in 4k pages */
#define       MC_CMD_EFTEST_MC_MEM_WIN_QUERY_OUT_WIN_SIZE_OFST 0
#define       MC_CMD_EFTEST_MC_MEM_WIN_QUERY_OUT_WIN_SIZE_LEN 4
/* the BAR which maps the MMIO window */
#define       MC_CMD_EFTEST_MC_MEM_WIN_QUERY_OUT_WIN_BAR_OFST 4
#define       MC_CMD_EFTEST_MC_MEM_WIN_QUERY_OUT_WIN_BAR_LEN 4
/* the offset into the BAR mapping at which the window starts */
#define       MC_CMD_EFTEST_MC_MEM_WIN_QUERY_OUT_WIN_OFFSET_OFST 8
#define       MC_CMD_EFTEST_MC_MEM_WIN_QUERY_OUT_WIN_OFFSET_LEN 4
/* the total size, in 4k pages, of the memory area behind the window. */
#define       MC_CMD_EFTEST_MC_MEM_WIN_QUERY_OUT_TOTAL_MEM_SIZE_OFST 12
#define       MC_CMD_EFTEST_MC_MEM_WIN_QUERY_OUT_TOTAL_MEM_SIZE_LEN 4
/* the position, in 4k pages, of the window start relative to the memory area
 */
#define       MC_CMD_EFTEST_MC_MEM_WIN_QUERY_OUT_WIN_MEM_POS_OFST 16
#define       MC_CMD_EFTEST_MC_MEM_WIN_QUERY_OUT_WIN_MEM_POS_LEN 4

/* MC_CMD_EFTEST_MC_MEM_WIN_MOVE_IN msgrequest: Move the MMIO memory window
 * relative to the memory region it gives access to.
 */
#define    MC_CMD_EFTEST_MC_MEM_WIN_MOVE_IN_LEN 8
/* Identifies the test. */
#define       MC_CMD_EFTEST_MC_MEM_WIN_MOVE_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_MC_MEM_WIN_MOVE_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_MC_MEM_WIN_MOVE_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_MC_MEM_WIN_MOVE_IN_EFTEST_OP_LEN 1
/* Align the arguments to 32 bits. */
#define       MC_CMD_EFTEST_MC_MEM_WIN_MOVE_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_MC_MEM_WIN_MOVE_IN_EFTEST_OP_RSVD_LEN 2
/* The new position, in 4k pages, of the MMIO window relative to the memory
 * region.
 */
#define       MC_CMD_EFTEST_MC_MEM_WIN_MOVE_IN_NEW_WIN_POS_OFST 4
#define       MC_CMD_EFTEST_MC_MEM_WIN_MOVE_IN_NEW_WIN_POS_LEN 4

/* MC_CMD_EFTEST_QBB_SSS_IN msgrequest */
#define    MC_CMD_EFTEST_QBB_SSS_IN_LEN 4
/* Identifies the test. */
#define       MC_CMD_EFTEST_QBB_SSS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_QBB_SSS_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_QBB_SSS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_QBB_SSS_IN_EFTEST_OP_LEN 1
/* enum: Get the port and priority maps indexed by the IMPL_PRIO_CHAN_FIFO
 * field.
 */
#define          MC_CMD_EFTEST_QBB_SSS_IN_GET_PORT_PRIO_MAP 0x0
/* align the arguments to 32 bits */
#define       MC_CMD_EFTEST_QBB_SSS_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_QBB_SSS_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_QBB_SSS_GET_PORT_PRIO_MAP_OUT msgresponse */
#define    MC_CMD_EFTEST_QBB_SSS_GET_PORT_PRIO_MAP_OUT_LEN 132
/* Current mode of operation SmartNIC or DPU mode. */
#define       MC_CMD_EFTEST_QBB_SSS_GET_PORT_PRIO_MAP_OUT_SSS_MODE_OFST 0
#define       MC_CMD_EFTEST_QBB_SSS_GET_PORT_PRIO_MAP_OUT_SSS_MODE_LEN 1
/* enum: SmartNIC mode */
#define          MC_CMD_EFTEST_QBB_SSS_GET_PORT_PRIO_MAP_OUT_HNIC 0x0
/* enum: DPU mode */
#define          MC_CMD_EFTEST_QBB_SSS_GET_PORT_PRIO_MAP_OUT_DPU 0x1
/* Number of active ports. */
#define       MC_CMD_EFTEST_QBB_SSS_GET_PORT_PRIO_MAP_OUT_NUM_PORTS_USED_OFST 1
#define       MC_CMD_EFTEST_QBB_SSS_GET_PORT_PRIO_MAP_OUT_NUM_PORTS_USED_LEN 1
/* Number of max QBB levels possible for current configuration. */
#define       MC_CMD_EFTEST_QBB_SSS_GET_PORT_PRIO_MAP_OUT_NUM_PRIO_LEVELS_OFST 2
#define       MC_CMD_EFTEST_QBB_SSS_GET_PORT_PRIO_MAP_OUT_NUM_PRIO_LEVELS_LEN 1
#define       MC_CMD_EFTEST_QBB_SSS_GET_PORT_PRIO_MAP_OUT_PADDING_OFST 3
#define       MC_CMD_EFTEST_QBB_SSS_GET_PORT_PRIO_MAP_OUT_PADDING_LEN 1
/* Map of FIFO to port ID. Array of 16 indexed by IMPL_PRIO_CHAN_FIFO. */
#define       MC_CMD_EFTEST_QBB_SSS_GET_PORT_PRIO_MAP_OUT_FIFO_PORT_MAP_OFST 4
#define       MC_CMD_EFTEST_QBB_SSS_GET_PORT_PRIO_MAP_OUT_FIFO_PORT_MAP_LEN 4
#define       MC_CMD_EFTEST_QBB_SSS_GET_PORT_PRIO_MAP_OUT_FIFO_PORT_MAP_NUM 16
/* Map of FIFO to QBB priority ID. Array of 16 indexed by IMPL_PRIO_CHAN_FIFO.
 */
#define       MC_CMD_EFTEST_QBB_SSS_GET_PORT_PRIO_MAP_OUT_FIFO_PRIO_MAP_OFST 68
#define       MC_CMD_EFTEST_QBB_SSS_GET_PORT_PRIO_MAP_OUT_FIFO_PRIO_MAP_LEN 4
#define       MC_CMD_EFTEST_QBB_SSS_GET_PORT_PRIO_MAP_OUT_FIFO_PRIO_MAP_NUM 16

/* MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_IN msgrequest */
#define    MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_IN_LEN 12
/* Identifies the test. */
#define       MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_IN_EFTEST_OP_LEN 1
/* enum: Expand the address space fields. */
#define          MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_IN_EXPAND_ADDR_SPC 0x1
/* align the arguments to 32 bits. */
#define       MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_IN_EFTEST_OP_RSVD_LEN 2
/* Address Space ID for the requested target. Only the lower 36 bits are valid
 * in the current SmartNIC implementation.
 */
#define       MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_IN_ADDR_SPC_ID_OFST 4
#define       MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_IN_ADDR_SPC_ID_LEN 8
#define       MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_IN_ADDR_SPC_ID_LO_OFST 4
#define       MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_IN_ADDR_SPC_ID_LO_LEN 4
#define       MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_IN_ADDR_SPC_ID_LO_LBN 32
#define       MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_IN_ADDR_SPC_ID_LO_WIDTH 32
#define       MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_IN_ADDR_SPC_ID_HI_OFST 8
#define       MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_IN_ADDR_SPC_ID_HI_LEN 4
#define       MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_IN_ADDR_SPC_ID_HI_LBN 64
#define       MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_IN_ADDR_SPC_ID_HI_WIDTH 32

/* MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_OUT msgresponse */
#define    MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_OUT_LEN 20
/* Address Space ID for the requested target. Only the lower 36 bits are valid
 * in the current SmartNIC implementation.
 */
#define       MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_OUT_DPU_ADDR_SPC_ID_OFST 0
#define       MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_OUT_DPU_ADDR_SPC_ID_LEN 8
#define       MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_OUT_DPU_ADDR_SPC_ID_LO_OFST 0
#define       MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_OUT_DPU_ADDR_SPC_ID_LO_LEN 4
#define       MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_OUT_DPU_ADDR_SPC_ID_LO_LBN 0
#define       MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_OUT_DPU_ADDR_SPC_ID_LO_WIDTH 32
#define       MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_OUT_DPU_ADDR_SPC_ID_HI_OFST 4
#define       MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_OUT_DPU_ADDR_SPC_ID_HI_LEN 4
#define       MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_OUT_DPU_ADDR_SPC_ID_HI_LBN 32
#define       MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_OUT_DPU_ADDR_SPC_ID_HI_WIDTH 32
/* the cSI destination. */
#define       MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_OUT_CSI_DST_OFST 8
#define       MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_OUT_CSI_DST_LEN 1
/* the cSI destination FIFO. */
#define       MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_OUT_CSI_DST_FIFO_OFST 9
#define       MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_OUT_CSI_DST_FIFO_LEN 1
/* the cSI destination programmed in the DPU.Host table */
#define       MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_OUT_DPU_DST_ID_OFST 10
#define       MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_OUT_DPU_DST_ID_LEN 1
/* the cSI destination programmed in the DMAC table */
#define       MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_OUT_DMAC_DEST_ID_OFST 11
#define       MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_OUT_DMAC_DEST_ID_LEN 1
/* The requester function ID. */
#define       MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_OUT_REQUESTER_ID_OFST 12
#define       MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_OUT_REQUESTER_ID_LEN 2
/* PASID enable bit */
#define       MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_OUT_PASID_EN_OFST 14
#define       MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_OUT_PASID_EN_LEN 1
/* the PASID ID */
#define       MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_OUT_PASID_OFST 15
#define       MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_OUT_PASID_LEN 2
#define       MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_OUT_PASID_FLAGS_OFST 17
#define       MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_OUT_PASID_FLAGS_LEN 1
#define        MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_OUT_PASID_EXECUTE_RQ_OFST 17
#define        MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_OUT_PASID_EXECUTE_RQ_LBN 0
#define        MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_OUT_PASID_EXECUTE_RQ_WIDTH 1
#define        MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_OUT_PASID_PRIVILEGED_MODE_RQ_OFST 17
#define        MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_OUT_PASID_PRIVILEGED_MODE_RQ_LBN 1
#define        MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_OUT_PASID_PRIVILEGED_MODE_RQ_WIDTH 1
/* ID of the dest set to which this address space belongs. */
#define       MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_OUT_DEST_SET_ID_OFST 18
#define       MC_CMD_EFTEST_EXPAND_ADDR_SPC_FIELDS_OUT_DEST_SET_ID_LEN 2

/* MC_CMD_EFTEST_DPU_IN msgrequest */
#define    MC_CMD_EFTEST_DPU_IN_LEN 4
/* Identifies the test. */
#define       MC_CMD_EFTEST_DPU_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_DPU_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_DPU_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_DPU_IN_EFTEST_OP_LEN 1
/* enum: Query the firmware for the current state and attributes of bufss
 * memory consumers.
 */
#define          MC_CMD_EFTEST_DPU_IN_BUFSS_QUERY_MEM 0x0
/* enum: Modify how the memory in bufss is distributed amongst consumers. */
#define          MC_CMD_EFTEST_DPU_IN_BUFSS_CONFIG_MEM 0x1
/* enum: Query the hardware properties of one of the DPU fabric interfaces. */
#define          MC_CMD_EFTEST_DPU_IN_GET_CHANNEL_INFO 0x2
/* enum: Ask FW to listen and capture DPU fatal events. */
#define          MC_CMD_EFTEST_DPU_IN_CAPTURE_FATAL_ERRORS 0x3
/* enum: Send a dump of the DPUs' error registers content. */
#define          MC_CMD_EFTEST_DPU_IN_EXTRACT_FATAL_ERRORS 0x4
/* Align the arguments to 32 bits. */
#define       MC_CMD_EFTEST_DPU_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_DPU_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_DPU_OUT msgresponse */
#define    MC_CMD_EFTEST_DPU_OUT_LEN 0

/* MC_CMD_EFTEST_DPU_BUFSS_QUERY_MEM_IN msgrequest: Query the firmware for the
 * current state and attributes of bufss memory consumers.
 */
#define    MC_CMD_EFTEST_DPU_BUFSS_QUERY_MEM_IN_LEN 8
/* Identifies the test. */
#define       MC_CMD_EFTEST_DPU_BUFSS_QUERY_MEM_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_DPU_BUFSS_QUERY_MEM_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_DPU_BUFSS_QUERY_MEM_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_DPU_BUFSS_QUERY_MEM_IN_EFTEST_OP_LEN 1
/* Which memory to query. The definition of a 'device' is a single pool of
 * memory which is competitively shared between multiple consumers. The memory
 * consumers within one device do not affect any consumers on a different
 * device, whereas they do affect other consumers on the same device.
 */
#define       MC_CMD_EFTEST_DPU_BUFSS_QUERY_MEM_IN_DEVICE_OFST 2
#define       MC_CMD_EFTEST_DPU_BUFSS_QUERY_MEM_IN_DEVICE_LEN 1
/* enum: Return information about the bufss in DPU.host */
#define          MC_CMD_EFTEST_DPU_BUFSS_QUERY_MEM_IN_DPU_HOST 0x0
/* enum: Return information about the bufss in DPU.net */
#define          MC_CMD_EFTEST_DPU_BUFSS_QUERY_MEM_IN_DPU_NET 0x1
#define       MC_CMD_EFTEST_DPU_BUFSS_QUERY_MEM_IN_RESERVED_OFST 3
#define       MC_CMD_EFTEST_DPU_BUFSS_QUERY_MEM_IN_RESERVED_LEN 1
/* Offset within the array of memories for which to return results. */
#define       MC_CMD_EFTEST_DPU_BUFSS_QUERY_MEM_IN_INDEX_OFST 4
#define       MC_CMD_EFTEST_DPU_BUFSS_QUERY_MEM_IN_INDEX_LEN 4

/* MC_CMD_EFTEST_DPU_BUFSS_QUERY_MEM_OUT msgresponse: Returns the current state
 * and attributes of bufss memory consumers.
 */
#define    MC_CMD_EFTEST_DPU_BUFSS_QUERY_MEM_OUT_LENMIN 24
#define    MC_CMD_EFTEST_DPU_BUFSS_QUERY_MEM_OUT_LENMAX 248
#define    MC_CMD_EFTEST_DPU_BUFSS_QUERY_MEM_OUT_LENMAX_MCDI2 1016
#define    MC_CMD_EFTEST_DPU_BUFSS_QUERY_MEM_OUT_LEN(num) (8+16*(num))
#define    MC_CMD_EFTEST_DPU_BUFSS_QUERY_MEM_OUT_DATA_NUM(len) (((len)-8)/16)
/* Whether DPU.host or DPU.net is being described. */
#define       MC_CMD_EFTEST_DPU_BUFSS_QUERY_MEM_OUT_DEVICE_OFST 0
#define       MC_CMD_EFTEST_DPU_BUFSS_QUERY_MEM_OUT_DEVICE_LEN 1
#define       MC_CMD_EFTEST_DPU_BUFSS_QUERY_MEM_OUT_RESERVED_OFST 1
#define       MC_CMD_EFTEST_DPU_BUFSS_QUERY_MEM_OUT_RESERVED_LEN 1
/* Total number of entries in the conceptual array of memory consumers being
 * returned. Callers should increment INDEX in
 * MC_CMD_EFTEST_DPU_BUFSS_QUERY_MEM_IN until they have seen this many entries.
 * The list of memory consumers is a constant for a given piece of hardware
 * (although their configuration is not), so callers do not need to worry about
 * entries in the list reordering themselves across calls.
 */
#define       MC_CMD_EFTEST_DPU_BUFSS_QUERY_MEM_OUT_NUM_ENTRIES_OFST 2
#define       MC_CMD_EFTEST_DPU_BUFSS_QUERY_MEM_OUT_NUM_ENTRIES_LEN 2
/* Number of bytes in each allocation quantum within this device. This is the
 * unit of the sizes in the following array.
 */
#define       MC_CMD_EFTEST_DPU_BUFSS_QUERY_MEM_OUT_BLOCK_BYTES_OFST 4
#define       MC_CMD_EFTEST_DPU_BUFSS_QUERY_MEM_OUT_BLOCK_BYTES_LEN 4
/* Array of BUFSS_MEM_INFO structures. */
#define       MC_CMD_EFTEST_DPU_BUFSS_QUERY_MEM_OUT_DATA_OFST 8
#define       MC_CMD_EFTEST_DPU_BUFSS_QUERY_MEM_OUT_DATA_LEN 16
#define       MC_CMD_EFTEST_DPU_BUFSS_QUERY_MEM_OUT_DATA_MINNUM 1
#define       MC_CMD_EFTEST_DPU_BUFSS_QUERY_MEM_OUT_DATA_MAXNUM 15
#define       MC_CMD_EFTEST_DPU_BUFSS_QUERY_MEM_OUT_DATA_MAXNUM_MCDI2 63

/* MC_CMD_EFTEST_DPU_BUFSS_CONFIG_MEM_IN msgrequest: Modify the current memory
 * allocation of the various bufss consumers. This command may modify an
 * arbitrary number of allocations at once; those modifications are atomic -
 * either all are applied or none.
 */
#define    MC_CMD_EFTEST_DPU_BUFSS_CONFIG_MEM_IN_LENMIN 12
#define    MC_CMD_EFTEST_DPU_BUFSS_CONFIG_MEM_IN_LENMAX 252
#define    MC_CMD_EFTEST_DPU_BUFSS_CONFIG_MEM_IN_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_DPU_BUFSS_CONFIG_MEM_IN_LEN(num) (4+8*(num))
#define    MC_CMD_EFTEST_DPU_BUFSS_CONFIG_MEM_IN_DATA_NUM(len) (((len)-4)/8)
/* Identifies the test. */
#define       MC_CMD_EFTEST_DPU_BUFSS_CONFIG_MEM_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_DPU_BUFSS_CONFIG_MEM_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_DPU_BUFSS_CONFIG_MEM_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_DPU_BUFSS_CONFIG_MEM_IN_EFTEST_OP_LEN 1
/* Which memory to modify. See DEVICE parameter of
 * MC_CMD_EFTEST_DPU_BUFSS_QUERY_MEM_IN.
 */
#define       MC_CMD_EFTEST_DPU_BUFSS_CONFIG_MEM_IN_DEVICE_OFST 2
#define       MC_CMD_EFTEST_DPU_BUFSS_CONFIG_MEM_IN_DEVICE_LEN 1
#define       MC_CMD_EFTEST_DPU_BUFSS_CONFIG_MEM_IN_RESERVED_OFST 3
#define       MC_CMD_EFTEST_DPU_BUFSS_CONFIG_MEM_IN_RESERVED_LEN 1
/* Array of BUFSS_MEM_HEADER instances containing the new allocations. Memory
 * consumers not in this list keep their former allocations. If there is more
 * than one entry in this list with the same KIND,INDEX tuple then the result
 * is unspecified.
 */
#define       MC_CMD_EFTEST_DPU_BUFSS_CONFIG_MEM_IN_DATA_OFST 4
#define       MC_CMD_EFTEST_DPU_BUFSS_CONFIG_MEM_IN_DATA_LEN 8
#define       MC_CMD_EFTEST_DPU_BUFSS_CONFIG_MEM_IN_DATA_LO_OFST 4
#define       MC_CMD_EFTEST_DPU_BUFSS_CONFIG_MEM_IN_DATA_LO_LEN 4
#define       MC_CMD_EFTEST_DPU_BUFSS_CONFIG_MEM_IN_DATA_LO_LBN 32
#define       MC_CMD_EFTEST_DPU_BUFSS_CONFIG_MEM_IN_DATA_LO_WIDTH 32
#define       MC_CMD_EFTEST_DPU_BUFSS_CONFIG_MEM_IN_DATA_HI_OFST 8
#define       MC_CMD_EFTEST_DPU_BUFSS_CONFIG_MEM_IN_DATA_HI_LEN 4
#define       MC_CMD_EFTEST_DPU_BUFSS_CONFIG_MEM_IN_DATA_HI_LBN 64
#define       MC_CMD_EFTEST_DPU_BUFSS_CONFIG_MEM_IN_DATA_HI_WIDTH 32
#define       MC_CMD_EFTEST_DPU_BUFSS_CONFIG_MEM_IN_DATA_MINNUM 1
#define       MC_CMD_EFTEST_DPU_BUFSS_CONFIG_MEM_IN_DATA_MAXNUM 31
#define       MC_CMD_EFTEST_DPU_BUFSS_CONFIG_MEM_IN_DATA_MAXNUM_MCDI2 127

/* MC_CMD_EFTEST_DPU_BUFSS_CONFIG_MEM_OUT msgresponse */
#define    MC_CMD_EFTEST_DPU_BUFSS_CONFIG_MEM_OUT_LEN 0

/* MC_CMD_EFTEST_DPU_GET_CHANNEL_INFO_IN msgrequest: Queries the current
 * properties and state of the various input/output channels of the DPU.
 */
#define    MC_CMD_EFTEST_DPU_GET_CHANNEL_INFO_IN_LEN 8
/* Identifies the test. */
#define       MC_CMD_EFTEST_DPU_GET_CHANNEL_INFO_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_DPU_GET_CHANNEL_INFO_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_DPU_GET_CHANNEL_INFO_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_DPU_GET_CHANNEL_INFO_IN_EFTEST_OP_LEN 1
/* Which DPU to query. See DEVICE parameter of
 * MC_CMD_EFTEST_DPU_BUFSS_QUERY_MEM_IN.
 */
#define       MC_CMD_EFTEST_DPU_GET_CHANNEL_INFO_IN_DEVICE_OFST 2
#define       MC_CMD_EFTEST_DPU_GET_CHANNEL_INFO_IN_DEVICE_LEN 1
/* The type of channel to query. */
#define       MC_CMD_EFTEST_DPU_GET_CHANNEL_INFO_IN_KIND_OFST 3
#define       MC_CMD_EFTEST_DPU_GET_CHANNEL_INFO_IN_KIND_LEN 1
#define          MC_CMD_EFTEST_DPU_GET_CHANNEL_INFO_IN_COMMAND 0x0 /* enum */
#define          MC_CMD_EFTEST_DPU_GET_CHANNEL_INFO_IN_EVENT 0x1 /* enum */
#define          MC_CMD_EFTEST_DPU_GET_CHANNEL_INFO_IN_U2D_INGRESS 0x2 /* enum */
#define          MC_CMD_EFTEST_DPU_GET_CHANNEL_INFO_IN_D2U_EGRESS 0x3 /* enum */
#define          MC_CMD_EFTEST_DPU_GET_CHANNEL_INFO_IN_RX_NOTIFY 0x4 /* enum */
/* Channel number (of type KIND) to query. */
#define       MC_CMD_EFTEST_DPU_GET_CHANNEL_INFO_IN_INDEX_OFST 4
#define       MC_CMD_EFTEST_DPU_GET_CHANNEL_INFO_IN_INDEX_LEN 4

/* MC_CMD_EFTEST_DPU_GET_CHANNEL_INFO_OUT msgresponse: Returns information
 * about the DPU channel which was queried.
 */
#define    MC_CMD_EFTEST_DPU_GET_CHANNEL_INFO_OUT_LEN 4
/* If set, this channel exists and is potentially usable by fabric (it does not
 * necessarily mean that there actually is anything currently in fabric which
 * uses it). If clear, this channel is blocked for some reason. If the channel
 * INDEX in MC_CMD_EFTEST_DPU_GET_CHANNEL_INFO_IN is beyond that which the
 * hardware contains in its most capable configuration then the command will
 * fail with ENOENT.
 */
#define       MC_CMD_EFTEST_DPU_GET_CHANNEL_INFO_OUT_ENABLED_LBN 0
#define       MC_CMD_EFTEST_DPU_GET_CHANNEL_INFO_OUT_ENABLED_WIDTH 1
/* If set, this channel is accessed by fabric communicating across the NoC. If
 * cleared, there is a direct hardware interface to fabric.
 */
#define       MC_CMD_EFTEST_DPU_GET_CHANNEL_INFO_OUT_NOC_ROUTED_LBN 1
#define       MC_CMD_EFTEST_DPU_GET_CHANNEL_INFO_OUT_NOC_ROUTED_WIDTH 1
#define       MC_CMD_EFTEST_DPU_GET_CHANNEL_INFO_OUT_RESERVED_LBN 2
#define       MC_CMD_EFTEST_DPU_GET_CHANNEL_INFO_OUT_RESERVED_WIDTH 22
/* Log2 of the data width multiplier applying to this channel. Channels are
 * counted in their most granular configuration by this command so if, for
 * example, there are 2 channel groups which are each 4-way furcatable then 8
 * channels would be reported. If, in that same example, both channel groups
 * were fully furcated then each of those 8 results would report FURCATION=0,
 * i.e. 1x width. When a channel is wider than 1x it will mean that the
 * subsequent channels are blocked-off; this will be represented by them having
 * ENABLED=0 and FURCATION of the same value as the operational channel.
 * Continuing the earlier example, if the second channel group is running full
 * width, that'd be channel 4 ENABLED=1 FURCATION=2, and channels 5, 6 and 7
 * ENABLED=0 FURCATION=2.
 */
#define       MC_CMD_EFTEST_DPU_GET_CHANNEL_INFO_OUT_FURCATION_OFST 3
#define       MC_CMD_EFTEST_DPU_GET_CHANNEL_INFO_OUT_FURCATION_LEN 1

/* MC_CMD_EFTEST_DPU_CAPTURE_FATAL_ERRORS_IN msgrequest */
#define    MC_CMD_EFTEST_DPU_CAPTURE_FATAL_ERRORS_IN_LEN 0

/* MC_CMD_EFTEST_DPU_CAPTURE_FATAL_ERRORS_OUT msgresponse */
#define    MC_CMD_EFTEST_DPU_CAPTURE_FATAL_ERRORS_OUT_LEN 4
/* Opaque value to use when calling EXTRACT. */
#define       MC_CMD_EFTEST_DPU_CAPTURE_FATAL_ERRORS_OUT_HANDLE_OFST 0
#define       MC_CMD_EFTEST_DPU_CAPTURE_FATAL_ERRORS_OUT_HANDLE_LEN 4

/* MC_CMD_EFTEST_DPU_EXTRACT_FATAL_ERRORS_IN msgrequest */
#define    MC_CMD_EFTEST_DPU_EXTRACT_FATAL_ERRORS_IN_LEN 8
/* The HANDLE obtained from CAPTURE_FATAL_ERRORS. */
#define       MC_CMD_EFTEST_DPU_EXTRACT_FATAL_ERRORS_IN_HANDLE_OFST 4
#define       MC_CMD_EFTEST_DPU_EXTRACT_FATAL_ERRORS_IN_HANDLE_LEN 4

/* MC_CMD_EFEST_DPU_FATAL_ERRORS_EXTRACT_OUT msgresponse */
#define    MC_CMD_EFEST_DPU_FATAL_ERRORS_EXTRACT_OUT_LEN 128
/* The DPU.Host fatal errors, formatted as a DPU_FATAL_ERRORS struct. */
#define       MC_CMD_EFEST_DPU_FATAL_ERRORS_EXTRACT_OUT_HOST_OFST 0
#define       MC_CMD_EFEST_DPU_FATAL_ERRORS_EXTRACT_OUT_HOST_LEN 64
/* The DPU.Net fatal errors, formatted as a DPU_FATAL_ERRORS struct. */
#define       MC_CMD_EFEST_DPU_FATAL_ERRORS_EXTRACT_OUT_NET_OFST 64
#define       MC_CMD_EFEST_DPU_FATAL_ERRORS_EXTRACT_OUT_NET_LEN 64

/* MC_CMD_EFTEST_DPU_NET_IN msgrequest */
#define    MC_CMD_EFTEST_DPU_NET_IN_LEN 4
/* Identifies the test. */
#define       MC_CMD_EFTEST_DPU_NET_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_DPU_NET_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_DPU_NET_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_DPU_NET_IN_EFTEST_OP_LEN 1
/* enum: Configure DPU BufSS NET pool to RX Notification channel mapping. */
#define          MC_CMD_EFTEST_DPU_NET_IN_BUF_POOL_RX_NOTIFICATION_MAPPING 0x0
/* enum: Configure RX Furcation mode for each group of 4 Rx Notification
 * channels.
 */
#define          MC_CMD_EFTEST_DPU_NET_IN_CONFIG_RX_FURCATION 0x1
/* enum: Configure (port, pcp) to BufSS Net pool mapping which will be used to
 * populate fields in the RX Notification message. This configuration is per
 * port.
 */
#define          MC_CMD_EFTEST_DPU_NET_IN_PORT_PCP_NET_POOL_MAPPING 0x2
/* Align the arguments to 32 bits. */
#define       MC_CMD_EFTEST_DPU_NET_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_DPU_NET_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_DPU_NET_BUF_POOL_RX_NOTIFICATION_MAPPING_IN msgrequest:
 * Configure DPU BufSS NET pool to RX Notification channel mapping.
 */
#define    MC_CMD_EFTEST_DPU_NET_BUF_POOL_RX_NOTIFICATION_MAPPING_IN_LEN 12
/* Mapping of DPU BufSS net pool id to Rx Notification channel. */
#define       MC_CMD_EFTEST_DPU_NET_BUF_POOL_RX_NOTIFICATION_MAPPING_IN_NET_POOL_MAPPING_OFST 4
#define       MC_CMD_EFTEST_DPU_NET_BUF_POOL_RX_NOTIFICATION_MAPPING_IN_NET_POOL_MAPPING_LEN 1
#define       MC_CMD_EFTEST_DPU_NET_BUF_POOL_RX_NOTIFICATION_MAPPING_IN_NET_POOL_MAPPING_NUM 8

/* MC_CMD_EFTEST_DPU_NET_BUF_POOL_RX_NOTIFICATION_MAPPING_OUT msgresponse */
#define    MC_CMD_EFTEST_DPU_NET_BUF_POOL_RX_NOTIFICATION_MAPPING_OUT_LEN 0

/* MC_CMD_EFTEST_DPU_NET_CONFIG_RX_FURCATION_IN msgrequest: Configure RX
 * Furcation mode for each group of 4 Rx Notification channels.
 */
#define    MC_CMD_EFTEST_DPU_NET_CONFIG_RX_FURCATION_IN_LEN 13
/* Represents the furcation for all the 8 rx notification channels which are
 * spread across as 2 groups of 4 channels each. Each group can have a
 * different furcation mode settings. This array represent if the given channel
 * is in use or not. For example, If the array is say {0, 0, 0, 0, 4, 4, 4, 4},
 * it implies that rx notification channel 0 and 4 are active and rest of the
 * channel are blocked-off. If we have a 1x furcation for both the hubs, the
 * array looks like {0, 1, 2, 3, 4, 5, 6, 7}, where all the channels are
 * active.
 */
#define       MC_CMD_EFTEST_DPU_NET_CONFIG_RX_FURCATION_IN_DPU_FURCATION_OFST 4
#define       MC_CMD_EFTEST_DPU_NET_CONFIG_RX_FURCATION_IN_DPU_FURCATION_LEN 1
#define       MC_CMD_EFTEST_DPU_NET_CONFIG_RX_FURCATION_IN_DPU_FURCATION_NUM 8
/* Scheduler message rate moderation for notify hubs. This value is applicable
 * for HUB 0 only.
 */
#define       MC_CMD_EFTEST_DPU_NET_CONFIG_RX_FURCATION_IN_MOD_CFG_TIMER_OFST 12
#define       MC_CMD_EFTEST_DPU_NET_CONFIG_RX_FURCATION_IN_MOD_CFG_TIMER_LEN 1

/* MC_CMD_EFTEST_DPU_NET_CONFIG_RX_FURCATION_OUT msgresponse */
#define    MC_CMD_EFTEST_DPU_NET_CONFIG_RX_FURCATION_OUT_LEN 0

/* MC_CMD_EFTEST_DPU_NET_PORT_PCP_NET_POOL_MAPPING_IN msgrequest: Configure
 * (port, pcp) to BufSS Net pool mapping which will be used to populate fields
 * in the RX Notification message. This is a per port configuration.
 */
#define    MC_CMD_EFTEST_DPU_NET_PORT_PCP_NET_POOL_MAPPING_IN_LEN 13
/* The hw port to be configured. */
#define       MC_CMD_EFTEST_DPU_NET_PORT_PCP_NET_POOL_MAPPING_IN_HW_PORT_IDX_OFST 4
#define       MC_CMD_EFTEST_DPU_NET_PORT_PCP_NET_POOL_MAPPING_IN_HW_PORT_IDX_LEN 1
/* Mapping of per port PCP to DPU BufSS net pool id. */
#define       MC_CMD_EFTEST_DPU_NET_PORT_PCP_NET_POOL_MAPPING_IN_PCP_NET_POOL_MAPPING_OFST 5
#define       MC_CMD_EFTEST_DPU_NET_PORT_PCP_NET_POOL_MAPPING_IN_PCP_NET_POOL_MAPPING_LEN 1
#define       MC_CMD_EFTEST_DPU_NET_PORT_PCP_NET_POOL_MAPPING_IN_PCP_NET_POOL_MAPPING_NUM 8

/* MC_CMD_EFTEST_DPU_NET_PORT_PCP_NET_POOL_MAPPING_OUT msgresponse */
#define    MC_CMD_EFTEST_DPU_NET_PORT_PCP_NET_POOL_MAPPING_OUT_LEN 0

/* MC_CMD_EFTEST_GET_DEST_SET_DPU_CMD_CHANNELS_IN msgrequest: Get dpu channels
 * associated to specified dest set.
 */
#define    MC_CMD_EFTEST_GET_DEST_SET_DPU_CMD_CHANNELS_IN_LEN 8
/* Identifies the test. */
#define       MC_CMD_EFTEST_GET_DEST_SET_DPU_CMD_CHANNELS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_GET_DEST_SET_DPU_CMD_CHANNELS_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_GET_DEST_SET_DPU_CMD_CHANNELS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_GET_DEST_SET_DPU_CMD_CHANNELS_IN_EFTEST_OP_LEN 1
/* enum: Get a list of DPU cmd channels associated to a dest set. */
#define          MC_CMD_EFTEST_GET_DEST_SET_DPU_CMD_CHANNELS_IN_GET_DEST_SET_DPU_CMD_CHANNELS 0x1
/* align the arguments to 32 bits. */
#define       MC_CMD_EFTEST_GET_DEST_SET_DPU_CMD_CHANNELS_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_GET_DEST_SET_DPU_CMD_CHANNELS_IN_EFTEST_OP_RSVD_LEN 2
/* Destination set ID. */
#define       MC_CMD_EFTEST_GET_DEST_SET_DPU_CMD_CHANNELS_IN_DEST_SET_ID_OFST 4
#define       MC_CMD_EFTEST_GET_DEST_SET_DPU_CMD_CHANNELS_IN_DEST_SET_ID_LEN 4

/* MC_CMD_EFTEST_GET_DEST_SET_DPU_CMD_CHANNELS_OUT msgresponse */
#define    MC_CMD_EFTEST_GET_DEST_SET_DPU_CMD_CHANNELS_OUT_LENMIN 8
#define    MC_CMD_EFTEST_GET_DEST_SET_DPU_CMD_CHANNELS_OUT_LENMAX 252
#define    MC_CMD_EFTEST_GET_DEST_SET_DPU_CMD_CHANNELS_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_GET_DEST_SET_DPU_CMD_CHANNELS_OUT_LEN(num) (4+4*(num))
#define    MC_CMD_EFTEST_GET_DEST_SET_DPU_CMD_CHANNELS_OUT_ENTRY_NUM(len) (((len)-4)/4)
/* The number of DPU CMD channels in this dest set. */
#define       MC_CMD_EFTEST_GET_DEST_SET_DPU_CMD_CHANNELS_OUT_NUM_CHANNELS_OFST 0
#define       MC_CMD_EFTEST_GET_DEST_SET_DPU_CMD_CHANNELS_OUT_NUM_CHANNELS_LEN 4
/* List of dpuc command channels. */
#define       MC_CMD_EFTEST_GET_DEST_SET_DPU_CMD_CHANNELS_OUT_ENTRY_OFST 4
#define       MC_CMD_EFTEST_GET_DEST_SET_DPU_CMD_CHANNELS_OUT_ENTRY_LEN 4
#define       MC_CMD_EFTEST_GET_DEST_SET_DPU_CMD_CHANNELS_OUT_ENTRY_MINNUM 1
#define       MC_CMD_EFTEST_GET_DEST_SET_DPU_CMD_CHANNELS_OUT_ENTRY_MAXNUM 62
#define       MC_CMD_EFTEST_GET_DEST_SET_DPU_CMD_CHANNELS_OUT_ENTRY_MAXNUM_MCDI2 254
#define        MC_CMD_EFTEST_GET_DEST_SET_DPU_CMD_CHANNELS_OUT_DPU_ENGINE_OFST 4
#define        MC_CMD_EFTEST_GET_DEST_SET_DPU_CMD_CHANNELS_OUT_DPU_ENGINE_LBN 0
#define        MC_CMD_EFTEST_GET_DEST_SET_DPU_CMD_CHANNELS_OUT_DPU_ENGINE_WIDTH 8
/* enum: DPU engine 0 */
#define          MC_CMD_EFTEST_GET_DEST_SET_DPU_CMD_CHANNELS_OUT_DPU_ENGINE_0 0x0
/* enum: DPU engine 1 */
#define          MC_CMD_EFTEST_GET_DEST_SET_DPU_CMD_CHANNELS_OUT_DPU_ENGINE_1 0x1
#define        MC_CMD_EFTEST_GET_DEST_SET_DPU_CMD_CHANNELS_OUT_DIRECTION_OFST 4
#define        MC_CMD_EFTEST_GET_DEST_SET_DPU_CMD_CHANNELS_OUT_DIRECTION_LBN 8
#define        MC_CMD_EFTEST_GET_DEST_SET_DPU_CMD_CHANNELS_OUT_DIRECTION_WIDTH 8
/* enum: Current channel is a read channel. */
#define          MC_CMD_EFTEST_GET_DEST_SET_DPU_CMD_CHANNELS_OUT_DPU_CH_READ 0x0
/* enum: Current channel is a write channel. */
#define          MC_CMD_EFTEST_GET_DEST_SET_DPU_CMD_CHANNELS_OUT_DPU_CH_WRITE 0x1
#define        MC_CMD_EFTEST_GET_DEST_SET_DPU_CMD_CHANNELS_OUT_DPU_CHANNEL_NUM_OFST 4
#define        MC_CMD_EFTEST_GET_DEST_SET_DPU_CMD_CHANNELS_OUT_DPU_CHANNEL_NUM_LBN 16
#define        MC_CMD_EFTEST_GET_DEST_SET_DPU_CMD_CHANNELS_OUT_DPU_CHANNEL_NUM_WIDTH 16

/* MC_CMD_EFTEST_READ_MSI_MSG_IN msgrequest */
#define    MC_CMD_EFTEST_READ_MSI_MSG_IN_LEN 8
/* Identifies the test. */
#define       MC_CMD_EFTEST_READ_MSI_MSG_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_READ_MSI_MSG_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_READ_MSI_MSG_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_READ_MSI_MSG_IN_EFTEST_OP_LEN 1
/* enum: READ MSI Message Data. */
#define          MC_CMD_EFTEST_READ_MSI_MSG_IN_READ_MSI_MSG 0x1
/* align the arguments to 32 bits. */
#define       MC_CMD_EFTEST_READ_MSI_MSG_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_READ_MSI_MSG_IN_EFTEST_OP_RSVD_LEN 2
/* Device-relative MSI vector number. Must be < MSI_COUNT reported for the
 * device.
 */
#define       MC_CMD_EFTEST_READ_MSI_MSG_IN_MSI_VECTOR_OFST 4
#define       MC_CMD_EFTEST_READ_MSI_MSG_IN_MSI_VECTOR_LEN 4

/* MC_CMD_EFTEST_READ_MSI_MSG_OUT msgresponse */
#define    MC_CMD_EFTEST_READ_MSI_MSG_OUT_LEN 12
/* MSI address used by the hardware */
#define       MC_CMD_EFTEST_READ_MSI_MSG_OUT_MSI_ADDR_OFST 0
#define       MC_CMD_EFTEST_READ_MSI_MSG_OUT_MSI_ADDR_LEN 8
#define       MC_CMD_EFTEST_READ_MSI_MSG_OUT_MSI_ADDR_LO_OFST 0
#define       MC_CMD_EFTEST_READ_MSI_MSG_OUT_MSI_ADDR_LO_LEN 4
#define       MC_CMD_EFTEST_READ_MSI_MSG_OUT_MSI_ADDR_LO_LBN 0
#define       MC_CMD_EFTEST_READ_MSI_MSG_OUT_MSI_ADDR_LO_WIDTH 32
#define       MC_CMD_EFTEST_READ_MSI_MSG_OUT_MSI_ADDR_HI_OFST 4
#define       MC_CMD_EFTEST_READ_MSI_MSG_OUT_MSI_ADDR_HI_LEN 4
#define       MC_CMD_EFTEST_READ_MSI_MSG_OUT_MSI_ADDR_HI_LBN 32
#define       MC_CMD_EFTEST_READ_MSI_MSG_OUT_MSI_ADDR_HI_WIDTH 32
/* MSI data to be used by the hardware.. On Keystone-B, only the lower 16-bits
 * are used, the remaining bits are ignored and should be set to zero
 */
#define       MC_CMD_EFTEST_READ_MSI_MSG_OUT_MSI_DATA_OFST 8
#define       MC_CMD_EFTEST_READ_MSI_MSG_OUT_MSI_DATA_LEN 4

/* MC_CMD_EFTEST_DMA_MANAGER_RST_IF_IN msgrequest: Given a snapshot of the
 * reset state for the calling function and a reset operation since performed
 * on the function, check that the current reset state has changed in the
 * expected way in comparison to the snapshot, and fail if not. On success, a
 * new snapshot of the state is returned.
 */
#define    MC_CMD_EFTEST_DMA_MANAGER_RST_IF_IN_LENMIN 8
#define    MC_CMD_EFTEST_DMA_MANAGER_RST_IF_IN_LENMAX 252
#define    MC_CMD_EFTEST_DMA_MANAGER_RST_IF_IN_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_DMA_MANAGER_RST_IF_IN_LEN(num) (8+4*(num))
#define    MC_CMD_EFTEST_DMA_MANAGER_RST_IF_IN_RST_IF_STATE_NUM(len) (((len)-8)/4)
/* Identifies the test. */
#define       MC_CMD_EFTEST_DMA_MANAGER_RST_IF_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_DMA_MANAGER_RST_IF_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_DMA_MANAGER_RST_IF_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_DMA_MANAGER_RST_IF_IN_EFTEST_OP_LEN 1
/* Reset operation performed since the snapshot. */
#define       MC_CMD_EFTEST_DMA_MANAGER_RST_IF_IN_RST_OPERATION_OFST 4
#define       MC_CMD_EFTEST_DMA_MANAGER_RST_IF_IN_RST_OPERATION_LEN 4
/* enum: Perform no checks; just return current snapshot. */
#define          MC_CMD_EFTEST_DMA_MANAGER_RST_IF_IN_GET_STATE 0x0
#define          MC_CMD_EFTEST_DMA_MANAGER_RST_IF_IN_FLR 0x1 /* enum */
#define          MC_CMD_EFTEST_DMA_MANAGER_RST_IF_IN_BME_CLEAR 0x2 /* enum */
#define          MC_CMD_EFTEST_DMA_MANAGER_RST_IF_IN_BME_SET 0x3 /* enum */
#define          MC_CMD_EFTEST_DMA_MANAGER_RST_IF_IN_MSE_CLEAR 0x4 /* enum */
#define          MC_CMD_EFTEST_DMA_MANAGER_RST_IF_IN_MSE_SET 0x5 /* enum */
/* Snapshot of reset state taken before the reset operation was initiated, as
 * returned by a previous call to MC_CMD_EFTEST_DMA_MANAGER_RST_IF. The content
 * of this field is opaque to the MCDI client.
 */
#define       MC_CMD_EFTEST_DMA_MANAGER_RST_IF_IN_RST_IF_STATE_OFST 8
#define       MC_CMD_EFTEST_DMA_MANAGER_RST_IF_IN_RST_IF_STATE_LEN 4
#define       MC_CMD_EFTEST_DMA_MANAGER_RST_IF_IN_RST_IF_STATE_MINNUM 0
#define       MC_CMD_EFTEST_DMA_MANAGER_RST_IF_IN_RST_IF_STATE_MAXNUM 61
#define       MC_CMD_EFTEST_DMA_MANAGER_RST_IF_IN_RST_IF_STATE_MAXNUM_MCDI2 253

/* MC_CMD_EFTEST_DMA_MANAGER_RST_IF_OUT msgresponse */
#define    MC_CMD_EFTEST_DMA_MANAGER_RST_IF_OUT_LENMIN 8
#define    MC_CMD_EFTEST_DMA_MANAGER_RST_IF_OUT_LENMAX 252
#define    MC_CMD_EFTEST_DMA_MANAGER_RST_IF_OUT_LENMAX_MCDI2 1020
#define    MC_CMD_EFTEST_DMA_MANAGER_RST_IF_OUT_LEN(num) (8+4*(num))
#define    MC_CMD_EFTEST_DMA_MANAGER_RST_IF_OUT_RST_IF_STATE_NUM(len) (((len)-8)/4)
/* Reserved for compatibility with input layout. */
#define       MC_CMD_EFTEST_DMA_MANAGER_RST_IF_OUT_RESERVED_OFST 0
#define       MC_CMD_EFTEST_DMA_MANAGER_RST_IF_OUT_RESERVED_LEN 8
#define       MC_CMD_EFTEST_DMA_MANAGER_RST_IF_OUT_RESERVED_LO_OFST 0
#define       MC_CMD_EFTEST_DMA_MANAGER_RST_IF_OUT_RESERVED_LO_LEN 4
#define       MC_CMD_EFTEST_DMA_MANAGER_RST_IF_OUT_RESERVED_LO_LBN 0
#define       MC_CMD_EFTEST_DMA_MANAGER_RST_IF_OUT_RESERVED_LO_WIDTH 32
#define       MC_CMD_EFTEST_DMA_MANAGER_RST_IF_OUT_RESERVED_HI_OFST 4
#define       MC_CMD_EFTEST_DMA_MANAGER_RST_IF_OUT_RESERVED_HI_LEN 4
#define       MC_CMD_EFTEST_DMA_MANAGER_RST_IF_OUT_RESERVED_HI_LBN 32
#define       MC_CMD_EFTEST_DMA_MANAGER_RST_IF_OUT_RESERVED_HI_WIDTH 32
/* Reset state of the calling function. This is opaque to the caller, and is
 * intended to be passed to a subsequent call to
 * MC_CMD_EFTEST_DMA_MANAGER_RST_IF.
 */
#define       MC_CMD_EFTEST_DMA_MANAGER_RST_IF_OUT_RST_IF_STATE_OFST 8
#define       MC_CMD_EFTEST_DMA_MANAGER_RST_IF_OUT_RST_IF_STATE_LEN 4
#define       MC_CMD_EFTEST_DMA_MANAGER_RST_IF_OUT_RST_IF_STATE_MINNUM 0
#define       MC_CMD_EFTEST_DMA_MANAGER_RST_IF_OUT_RST_IF_STATE_MAXNUM 61
#define       MC_CMD_EFTEST_DMA_MANAGER_RST_IF_OUT_RST_IF_STATE_MAXNUM_MCDI2 253

/* MC_CMD_EFTEST_GET_ADDR_SPC_ID_EXT_IN msgrequest */
#define    MC_CMD_EFTEST_GET_ADDR_SPC_ID_EXT_IN_LEN 8
/* Identifies the test. */
#define       MC_CMD_EFTEST_GET_ADDR_SPC_ID_EXT_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_GET_ADDR_SPC_ID_EXT_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_GET_ADDR_SPC_ID_EXT_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_GET_ADDR_SPC_ID_EXT_IN_EFTEST_OP_LEN 1
/* enum: Get the address space for the given path and calling device/function.
 */
#define          MC_CMD_EFTEST_GET_ADDR_SPC_ID_EXT_IN_MAIN 0x0
/* align the arguments to 32 bits. */
#define       MC_CMD_EFTEST_GET_ADDR_SPC_ID_EXT_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_GET_ADDR_SPC_ID_EXT_IN_EFTEST_OP_RSVD_LEN 2
#define       MC_CMD_EFTEST_GET_ADDR_SPC_ID_EXT_IN_PATH_ID_OFST 4
#define       MC_CMD_EFTEST_GET_ADDR_SPC_ID_EXT_IN_PATH_ID_LEN 4
/* enum: Message load targets */
#define          MC_CMD_EFTEST_GET_ADDR_SPC_ID_EXT_IN_MSGLD 0x0
/* enum: All other targets */
#define          MC_CMD_EFTEST_GET_ADDR_SPC_ID_EXT_IN_DATA 0x1

/* MC_CMD_EFTEST_GET_ADDR_SPC_ID_EXT_OUT msgresponse */
#define    MC_CMD_EFTEST_GET_ADDR_SPC_ID_EXT_OUT_LEN 8
/* Address Space ID for the requested target. Only the lower 36 bits are valid
 * in the current SmartNIC implementation.
 */
#define       MC_CMD_EFTEST_GET_ADDR_SPC_ID_EXT_OUT_ADDR_SPC_ID_OFST 0
#define       MC_CMD_EFTEST_GET_ADDR_SPC_ID_EXT_OUT_ADDR_SPC_ID_LEN 8
#define       MC_CMD_EFTEST_GET_ADDR_SPC_ID_EXT_OUT_ADDR_SPC_ID_LO_OFST 0
#define       MC_CMD_EFTEST_GET_ADDR_SPC_ID_EXT_OUT_ADDR_SPC_ID_LO_LEN 4
#define       MC_CMD_EFTEST_GET_ADDR_SPC_ID_EXT_OUT_ADDR_SPC_ID_LO_LBN 0
#define       MC_CMD_EFTEST_GET_ADDR_SPC_ID_EXT_OUT_ADDR_SPC_ID_LO_WIDTH 32
#define       MC_CMD_EFTEST_GET_ADDR_SPC_ID_EXT_OUT_ADDR_SPC_ID_HI_OFST 4
#define       MC_CMD_EFTEST_GET_ADDR_SPC_ID_EXT_OUT_ADDR_SPC_ID_HI_LEN 4
#define       MC_CMD_EFTEST_GET_ADDR_SPC_ID_EXT_OUT_ADDR_SPC_ID_HI_LBN 32
#define       MC_CMD_EFTEST_GET_ADDR_SPC_ID_EXT_OUT_ADDR_SPC_ID_HI_WIDTH 32

/* MC_CMD_EFTEST_TLMSS_IN msgrequest */
#define    MC_CMD_EFTEST_TLMSS_IN_LEN 4
/* Identifies the test (EFTEST_TLMSS). */
#define       MC_CMD_EFTEST_TLMSS_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_TLMSS_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_TLMSS_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_TLMSS_IN_EFTEST_OP_LEN 1
/* enum: Build a telemeter qualifying event filter specification from a
 * collection of input bus signal and field filter specifications.
 */
#define          MC_CMD_EFTEST_TLMSS_IN_EFTEST_TLMSS_CONFIGURE_FILTER 0x0
/* enum: Configure a telemeter. */
#define          MC_CMD_EFTEST_TLMSS_IN_EFTEST_TLMSS_CONFIGURE 0x1
/* enum: Unconfigure telemeter, releasing any resources associated with its
 * configuration.
 */
#define          MC_CMD_EFTEST_TLMSS_IN_EFTEST_TLMSS_UNCONFIGURE 0x2
/* enum: Enable telemeters by taking them out of reset. */
#define          MC_CMD_EFTEST_TLMSS_IN_EFTEST_TLMSS_ENABLE 0x3
/* enum: Disable telemeters by putting them into reset. */
#define          MC_CMD_EFTEST_TLMSS_IN_EFTEST_TLMSS_DISABLE 0x4
/* enum: Manually trigger telemeters to start via their CSR interface. */
#define          MC_CMD_EFTEST_TLMSS_IN_EFTEST_TLMSS_START 0x5
/* enum: Manually trigger telemeters to stop via their CSR interface. */
#define          MC_CMD_EFTEST_TLMSS_IN_EFTEST_TLMSS_STOP 0x6
/* enum: Read state and counter values from telemeters. */
#define          MC_CMD_EFTEST_TLMSS_IN_EFTEST_TLMSS_READ 0x7
/* Padding. Reserved for future use, set to zero. */
#define       MC_CMD_EFTEST_TLMSS_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_TLMSS_IN_EFTEST_OP_RSVD_LEN 2

/* MC_CMD_EFTEST_TLMSS_OUT msgrequest */
#define    MC_CMD_EFTEST_TLMSS_OUT_LEN 4
/* Result (0 if ok, non-zero in case of failure). */
#define       MC_CMD_EFTEST_TLMSS_OUT_RESULT_OFST 0
#define       MC_CMD_EFTEST_TLMSS_OUT_RESULT_LEN 4

/* MC_CMD_EFTEST_TLMSS_CONFIGURE_FILTER_IN msgrequest: Build a telemeter
 * qualifying event filter specification from a collection of input bus signal
 * and field filter specifications.
 */
#define    MC_CMD_EFTEST_TLMSS_CONFIGURE_FILTER_IN_LENMIN 4
#define    MC_CMD_EFTEST_TLMSS_CONFIGURE_FILTER_IN_LENMAX 1156
#define    MC_CMD_EFTEST_TLMSS_CONFIGURE_FILTER_IN_LENMAX_MCDI2 1156
#define    MC_CMD_EFTEST_TLMSS_CONFIGURE_FILTER_IN_LEN(num) (4+24*(num))
#define    MC_CMD_EFTEST_TLMSS_CONFIGURE_FILTER_IN_FIELD_SPEC_NUM(len) (((len)-4)/24)
/* Identifies the test (EFTEST_TLMSS). */
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_FILTER_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_FILTER_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_FILTER_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_FILTER_IN_EFTEST_OP_LEN 1
/* enum: Build a telemeter qualifying event filter specification from a
 * collection of input bus signal and field filter specifications.
 */
#define          MC_CMD_EFTEST_TLMSS_CONFIGURE_FILTER_IN_EFTEST_TLMSS_CONFIGURE_FILTER 0x0
/* enum: Configure a telemeter. */
#define          MC_CMD_EFTEST_TLMSS_CONFIGURE_FILTER_IN_EFTEST_TLMSS_CONFIGURE 0x1
/* enum: Unconfigure telemeter, releasing any resources associated with its
 * configuration.
 */
#define          MC_CMD_EFTEST_TLMSS_CONFIGURE_FILTER_IN_EFTEST_TLMSS_UNCONFIGURE 0x2
/* enum: Enable telemeters by taking them out of reset. */
#define          MC_CMD_EFTEST_TLMSS_CONFIGURE_FILTER_IN_EFTEST_TLMSS_ENABLE 0x3
/* enum: Disable telemeters by putting them into reset. */
#define          MC_CMD_EFTEST_TLMSS_CONFIGURE_FILTER_IN_EFTEST_TLMSS_DISABLE 0x4
/* enum: Manually trigger telemeters to start via their CSR interface. */
#define          MC_CMD_EFTEST_TLMSS_CONFIGURE_FILTER_IN_EFTEST_TLMSS_START 0x5
/* enum: Manually trigger telemeters to stop via their CSR interface. */
#define          MC_CMD_EFTEST_TLMSS_CONFIGURE_FILTER_IN_EFTEST_TLMSS_STOP 0x6
/* enum: Read state and counter values from telemeters. */
#define          MC_CMD_EFTEST_TLMSS_CONFIGURE_FILTER_IN_EFTEST_TLMSS_READ 0x7
/* Padding. Reserved for future use, set to zero. */
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_FILTER_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_FILTER_IN_EFTEST_OP_RSVD_LEN 2
/* An array of TLMSS_FILTER_FIELD_SPEC structures. */
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_FILTER_IN_FIELD_SPEC_OFST 4
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_FILTER_IN_FIELD_SPEC_LEN 24
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_FILTER_IN_FIELD_SPEC_MINNUM 0
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_FILTER_IN_FIELD_SPEC_MAXNUM 48
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_FILTER_IN_FIELD_SPEC_MAXNUM_MCDI2 48

/* MC_CMD_EFTEST_TLMSS_CONFIGURE_FILTER_OUT msgresponse */
#define    MC_CMD_EFTEST_TLMSS_CONFIGURE_FILTER_OUT_LEN 24
/* Result (0 if ok, non-zero in case of failure). */
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_FILTER_OUT_RESULT_OFST 0
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_FILTER_OUT_RESULT_LEN 4
/* Resulting TLMSS_FILTER_SPEC structure. */
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_FILTER_OUT_FILTER_SPEC_OFST 4
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_FILTER_OUT_FILTER_SPEC_LEN 20

/* MC_CMD_EFTEST_TLMSS_CONFIGURE_IN msgrequest */
#define    MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_LEN 72
/* Identifies the test (EFTEST_TLMSS). */
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_EFTEST_OP_LEN 1
/* enum: Build a telemeter qualifying event filter specification from a
 * collection of input bus signal and field filter specifications.
 */
#define          MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_EFTEST_TLMSS_CONFIGURE_FILTER 0x0
/* enum: Configure a telemeter. */
#define          MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_EFTEST_TLMSS_CONFIGURE 0x1
/* enum: Unconfigure telemeter, releasing any resources associated with its
 * configuration.
 */
#define          MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_EFTEST_TLMSS_UNCONFIGURE 0x2
/* enum: Enable telemeters by taking them out of reset. */
#define          MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_EFTEST_TLMSS_ENABLE 0x3
/* enum: Disable telemeters by putting them into reset. */
#define          MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_EFTEST_TLMSS_DISABLE 0x4
/* enum: Manually trigger telemeters to start via their CSR interface. */
#define          MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_EFTEST_TLMSS_START 0x5
/* enum: Manually trigger telemeters to stop via their CSR interface. */
#define          MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_EFTEST_TLMSS_STOP 0x6
/* enum: Read state and counter values from telemeters. */
#define          MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_EFTEST_TLMSS_READ 0x7
/* Padding. Reserved for future use, set to zero. */
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_EFTEST_OP_RSVD_LEN 2
/* Telemeter type. */
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_TELEMETER_TYPE_OFST 4
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_TELEMETER_TYPE_LEN 1
/*            Enum values, see field(s): */
/*               TLMSS_TELEMETER_TYPE */
/* Telemeter identifier (0 to 63). */
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_TELEMETER_ID_OFST 5
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_TELEMETER_ID_LEN 1
/* identifier of source bus (within the TELEMTER_TYPE block) to connect to the
 * telemeter's input bus.
 */
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_SOURCE_BUS_ID_OFST 6
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_SOURCE_BUS_ID_LEN 1
/* If non-zero, the telemeter's counter value will increment by each qualifying
 * event's length value. If zero, the telemeter will count qualifying events.
 */
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_LENGTH_MODE_OFST 7
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_LENGTH_MODE_LEN 1
/* If non-zero, the telemeter's live state will be automatically cleared when
 * read (with the EFTEST_TLMSS_READ operation).
 */
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_AUTO_CLEAR_OFST 8
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_AUTO_CLEAR_LEN 1
/* If non-zero, telemeter will operate in one shot mode. If zero, the telemeter
 * will be restarted (after it has stopped) if its start conditions are
 * subsequently met.
 */
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_ONE_SHOT_OFST 9
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_ONE_SHOT_LEN 1
/* If non-zero, the telemeter will act as an inter-block trigger enabling
 * telemeters in other blocks to use stop events from this telemeter as a start
 * or stop condition.
 */
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_INTER_BLK_TRIG_ON_STOP_OFST 10
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_INTER_BLK_TRIG_ON_STOP_LEN 1
/* If non-zero, the telemeter will act as an inter-block trigger enabling
 * telemeters in other blocks to use qualifying events from this telemeter as a
 * start or stop condition.
 */
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_INTER_BLK_TRIG_ON_QUALIFYING_EVENT_OFST 11
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_INTER_BLK_TRIG_ON_QUALIFYING_EVENT_LEN 1
/* Telemeter streaming mode. */
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_STREAM_MODE_OFST 12
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_STREAM_MODE_LEN 1
/* Telemeter shadow mode. */
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_SHADOW_MODE_OFST 13
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_SHADOW_MODE_LEN 1
/* Set of conditions that will trigger the telemeter to start. */
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_START_FLAGS_OFST 14
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_START_FLAGS_LEN 2
/* enum property: bitshift */
/* enum: Start on a qualifying event from another telemeter. */
#define          MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_START_ON_QUALIFYING_EVENT 0x0
/* enum: Start on a _stop_ event from another telemeter. */
#define          MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_START_ON_STOP_EVENT 0x1
/* enum: Start on external trigger input signal 0. */
#define          MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_START_ON_EXTERNAL_TRIGGER_0 0x2
/* enum: Start on external trigger input signal 1. */
#define          MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_START_ON_EXTERNAL_TRIGGER_1 0x3
/* enum: Start on external trigger input signal 2. */
#define          MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_START_ON_EXTERNAL_TRIGGER_2 0x4
/* enum: Start on external trigger input signal 3. */
#define          MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_START_ON_EXTERNAL_TRIGGER_3 0x5
/* enum: Start when START_ON_TOD value is reached. */
#define          MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_START_ON_TOD 0x6
/* enum: Start when manually triggered via the EFTEST_TLMSS_START operation. */
#define          MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_START_ON_MANUAL 0x7
/* Id of telemeter to watch for qualifying events to start the telemeter. Valid
 * when START_ON_QUALIFYING_EVENT bit set in START_FLAGS.
 */
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_START_ON_QUALIFYING_EVENT_ID_OFST 16
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_START_ON_QUALIFYING_EVENT_ID_LEN 1
/* When non-zero, START_ON_QUALIFYING_EVENT_ID represents an external 'inter-
 * block' telemeter. When zero, START_ON_QUALIFYING_EVENT_ID represents an
 * internal 'intra-block' telemeter. Valid when START_ON_QUALIFYING_EVENT bit
 * set in START_FLAGS.
 */
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_START_ON_EXTERNAL_QUALIFYING_EVENT_OFST 17
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_START_ON_EXTERNAL_QUALIFYING_EVENT_LEN 1
/* Id of telemeter to watch for stop events to start the telemeter. Valid when
 * START_ON_STOP_EVENT bit set in START_FLAGS.
 */
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_START_ON_STOP_EVENT_ID_OFST 18
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_START_ON_STOP_EVENT_ID_LEN 1
/* When non-zero, START_ON_STOP_EVENT_ID represents an external 'inter-block'
 * telemeter. When zero, START_ON_STOP_EVENT_ID represents an internal 'intra-
 * block' telemeter. Valid when START_ON_STOP_EVENT bit set in START_FLAGS.
 */
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_START_STOP_EVENT_TRIGGER_EXTERNAL_OFST 19
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_START_STOP_EVENT_TRIGGER_EXTERNAL_LEN 1
/* ToD value that when reached will start the telemeter. Valid when
 * START_ON_TOD bit set in START_FLAGS.
 */
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_START_TOD_OFST 20
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_START_TOD_LEN 8
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_START_TOD_LO_OFST 20
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_START_TOD_LO_LEN 4
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_START_TOD_LO_LBN 160
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_START_TOD_LO_WIDTH 32
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_START_TOD_HI_OFST 24
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_START_TOD_HI_LEN 4
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_START_TOD_HI_LBN 192
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_START_TOD_HI_WIDTH 32
/* Set of conditions that will trigger the telemeter to stop. */
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_STOP_FLAGS_OFST 28
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_STOP_FLAGS_LEN 2
/* enum property: bitshift */
/* enum: Stop on a qualifying event from another telemeter. */
#define          MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_STOP_ON_QUALIFYING_EVENT 0x3
/* enum: Stop on a stop event from another telemeter. */
#define          MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_STOP_ON_STOP_EVENT 0x4
/* enum: Stop on external trigger input signal 0. */
#define          MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_STOP_ON_EXTERNAL_TRIGGER_0 0x5
/* enum: Stop on external trigger input signal 1. */
#define          MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_STOP_ON_EXTERNAL_TRIGGER_1 0x6
/* enum: Stop on external trigger input signal 2. */
#define          MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_STOP_ON_EXTERNAL_TRIGGER_2 0x7
/* enum: Stop on external trigger input signal 3. */
#define          MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_STOP_ON_EXTERNAL_TRIGGER_3 0x8
/* enum: Stop when STOP_DURATION value reached. */
#define          MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_STOP_ON_TOD 0x9
/* enum: Stop on error signal on the telemeter's input bus. */
#define          MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_STOP_ON_ERROR 0xa
/* enum: Stop when counter value reaches STOP_THRESHOLD value. */
#define          MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_STOP_ON_COUNTER_THRESHOLD 0xb
/* enum: Stop when manually triggered via the EFTEST_TLMSS_STOP operation. */
#define          MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_STOP_ON_MANUAL 0xc
/* Padding. Reserved for future use, set to zero. */
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_RESERVED_OFST 30
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_RESERVED_LEN 2
/* Id of telemeter to watch for qualifying events to stop the telemeter. Valid
 * when STOP_ON_QUALIFYING_EVENT bit set in STOP_FLAGS.
 */
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_STOP_ON_QUALIFYING_EVENT_ID_OFST 32
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_STOP_ON_QUALIFYING_EVENT_ID_LEN 1
/* When non-zero, STOP_ON_QUALIFYING_EVENT_ID represents an external 'inter-
 * block' telemeter. When zero, STOP_ON_QUALIFYING_EVENT_ID represents an
 * internal 'intra-block' telemeter. Valid when STOP_ON_QUALIFYING_EVENT bit
 * set in STOP_FLAGS.
 */
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_STOP_ON_EXTERNAL_QUALIFYING_EVENT_OFST 33
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_STOP_ON_EXTERNAL_QUALIFYING_EVENT_LEN 1
/* Id of telemeter to watch for stop events to stop the telemeter. Valid when
 * STOP_ON_STOP_EVENT bit set in STOP_FLAGS.
 */
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_STOP_ON_STOP_EVENT_ID_OFST 34
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_STOP_ON_STOP_EVENT_ID_LEN 1
/* When non-zero, STOP_ON_STOP_EVENT_ID represents an external 'inter-block'
 * telemeter. When zero, STOP_ON_STOP_EVENT_ID represents an internal 'intra-
 * block' telemeter. Valid when STOP_ON_STOP_EVENT bit set in STOP_FLAGS.
 */
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_STOP_ON_EXTERNAL_STOP_EVENT_OFST 35
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_STOP_ON_EXTERNAL_STOP_EVENT_LEN 1
/* ToD duration that when elapsed will stop the telemeter. Valid when
 * STOP_ON_TOD bit set in STOP_FLAGS.
 */
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_STOP_DURATION_OFST 36
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_STOP_DURATION_LEN 8
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_STOP_DURATION_LO_OFST 36
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_STOP_DURATION_LO_LEN 4
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_STOP_DURATION_LO_LBN 288
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_STOP_DURATION_LO_WIDTH 32
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_STOP_DURATION_HI_OFST 40
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_STOP_DURATION_HI_LEN 4
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_STOP_DURATION_HI_LBN 320
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_STOP_DURATION_HI_WIDTH 32
/* Counter threshold which when reached will stop the telemeter. Valid when
 * STOP_ON_COUNTER_THRESHOLD bit set in STOP_FLAGS.
 */
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_STOP_THRESHOLD_OFST 44
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_STOP_THRESHOLD_LEN 8
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_STOP_THRESHOLD_LO_OFST 44
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_STOP_THRESHOLD_LO_LEN 4
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_STOP_THRESHOLD_LO_LBN 352
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_STOP_THRESHOLD_LO_WIDTH 32
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_STOP_THRESHOLD_HI_OFST 48
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_STOP_THRESHOLD_HI_LEN 4
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_STOP_THRESHOLD_HI_LBN 384
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_STOP_THRESHOLD_HI_WIDTH 32
/* TLMSS_FILTER_SPEC structure describing the telemeter's qualifying event
 * filter.
 */
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_FILTER_SPEC_OFST 52
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_IN_FILTER_SPEC_LEN 20

/* MC_CMD_EFTEST_TLMSS_CONFIGURE_OUT msgresponse */
#define    MC_CMD_EFTEST_TLMSS_CONFIGURE_OUT_LEN 4
/* Result (0 if ok, non-zero in case of failure). */
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_OUT_RESULT_OFST 0
#define       MC_CMD_EFTEST_TLMSS_CONFIGURE_OUT_RESULT_LEN 4

/* MC_CMD_EFTEST_TLMSS_UNCONFIGURE_IN msgrequest: Unconfigure telemeter,
 * releasing any resources associated with its configuration.
 */
#define    MC_CMD_EFTEST_TLMSS_UNCONFIGURE_IN_LEN 8
/* Identifies the test (EFTEST_TLMSS). */
#define       MC_CMD_EFTEST_TLMSS_UNCONFIGURE_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_TLMSS_UNCONFIGURE_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_TLMSS_UNCONFIGURE_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_TLMSS_UNCONFIGURE_IN_EFTEST_OP_LEN 1
/* enum: Build a telemeter qualifying event filter specification from a
 * collection of input bus signal and field filter specifications.
 */
#define          MC_CMD_EFTEST_TLMSS_UNCONFIGURE_IN_EFTEST_TLMSS_CONFIGURE_FILTER 0x0
/* enum: Configure a telemeter. */
#define          MC_CMD_EFTEST_TLMSS_UNCONFIGURE_IN_EFTEST_TLMSS_CONFIGURE 0x1
/* enum: Unconfigure telemeter, releasing any resources associated with its
 * configuration.
 */
#define          MC_CMD_EFTEST_TLMSS_UNCONFIGURE_IN_EFTEST_TLMSS_UNCONFIGURE 0x2
/* enum: Enable telemeters by taking them out of reset. */
#define          MC_CMD_EFTEST_TLMSS_UNCONFIGURE_IN_EFTEST_TLMSS_ENABLE 0x3
/* enum: Disable telemeters by putting them into reset. */
#define          MC_CMD_EFTEST_TLMSS_UNCONFIGURE_IN_EFTEST_TLMSS_DISABLE 0x4
/* enum: Manually trigger telemeters to start via their CSR interface. */
#define          MC_CMD_EFTEST_TLMSS_UNCONFIGURE_IN_EFTEST_TLMSS_START 0x5
/* enum: Manually trigger telemeters to stop via their CSR interface. */
#define          MC_CMD_EFTEST_TLMSS_UNCONFIGURE_IN_EFTEST_TLMSS_STOP 0x6
/* enum: Read state and counter values from telemeters. */
#define          MC_CMD_EFTEST_TLMSS_UNCONFIGURE_IN_EFTEST_TLMSS_READ 0x7
/* Padding. Reserved for future use, set to zero. */
#define       MC_CMD_EFTEST_TLMSS_UNCONFIGURE_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_TLMSS_UNCONFIGURE_IN_EFTEST_OP_RSVD_LEN 2
/* Telemeter type. */
#define       MC_CMD_EFTEST_TLMSS_UNCONFIGURE_IN_TELEMETER_TYPE_OFST 4
#define       MC_CMD_EFTEST_TLMSS_UNCONFIGURE_IN_TELEMETER_TYPE_LEN 1
/*            Enum values, see field(s): */
/*               TLMSS_TELEMETER_TYPE */
/* Telemeter identifier (0 to 63). */
#define       MC_CMD_EFTEST_TLMSS_UNCONFIGURE_IN_TELEMETER_ID_OFST 5
#define       MC_CMD_EFTEST_TLMSS_UNCONFIGURE_IN_TELEMETER_ID_LEN 1
/* Padding. Reserved for future use, set to zero. */
#define       MC_CMD_EFTEST_TLMSS_UNCONFIGURE_IN_RESERVED_OFST 6
#define       MC_CMD_EFTEST_TLMSS_UNCONFIGURE_IN_RESERVED_LEN 2

/* MC_CMD_EFTEST_TLMSS_UNCONFIGURE_OUT msgresponse */
#define    MC_CMD_EFTEST_TLMSS_UNCONFIGURE_OUT_LEN 4
/* Result (0 if ok, non-zero in case of failure). */
#define       MC_CMD_EFTEST_TLMSS_UNCONFIGURE_OUT_RESULT_OFST 0
#define       MC_CMD_EFTEST_TLMSS_UNCONFIGURE_OUT_RESULT_LEN 4

/* MC_CMD_EFTEST_TLMSS_ENABLE_IN msgrequest */
#define    MC_CMD_EFTEST_TLMSS_ENABLE_IN_LEN 16
/* Identifies the test (EFTEST_TLMSS). */
#define       MC_CMD_EFTEST_TLMSS_ENABLE_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_TLMSS_ENABLE_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_TLMSS_ENABLE_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_TLMSS_ENABLE_IN_EFTEST_OP_LEN 1
/* enum: Build a telemeter qualifying event filter specification from a
 * collection of input bus signal and field filter specifications.
 */
#define          MC_CMD_EFTEST_TLMSS_ENABLE_IN_EFTEST_TLMSS_CONFIGURE_FILTER 0x0
/* enum: Configure a telemeter. */
#define          MC_CMD_EFTEST_TLMSS_ENABLE_IN_EFTEST_TLMSS_CONFIGURE 0x1
/* enum: Unconfigure telemeter, releasing any resources associated with its
 * configuration.
 */
#define          MC_CMD_EFTEST_TLMSS_ENABLE_IN_EFTEST_TLMSS_UNCONFIGURE 0x2
/* enum: Enable telemeters by taking them out of reset. */
#define          MC_CMD_EFTEST_TLMSS_ENABLE_IN_EFTEST_TLMSS_ENABLE 0x3
/* enum: Disable telemeters by putting them into reset. */
#define          MC_CMD_EFTEST_TLMSS_ENABLE_IN_EFTEST_TLMSS_DISABLE 0x4
/* enum: Manually trigger telemeters to start via their CSR interface. */
#define          MC_CMD_EFTEST_TLMSS_ENABLE_IN_EFTEST_TLMSS_START 0x5
/* enum: Manually trigger telemeters to stop via their CSR interface. */
#define          MC_CMD_EFTEST_TLMSS_ENABLE_IN_EFTEST_TLMSS_STOP 0x6
/* enum: Read state and counter values from telemeters. */
#define          MC_CMD_EFTEST_TLMSS_ENABLE_IN_EFTEST_TLMSS_READ 0x7
/* Padding. Reserved for future use, set to zero. */
#define       MC_CMD_EFTEST_TLMSS_ENABLE_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_TLMSS_ENABLE_IN_EFTEST_OP_RSVD_LEN 2
/* Telemeter type. */
#define       MC_CMD_EFTEST_TLMSS_ENABLE_IN_TELEMETER_TYPE_OFST 4
#define       MC_CMD_EFTEST_TLMSS_ENABLE_IN_TELEMETER_TYPE_LEN 1
/*            Enum values, see field(s): */
/*               TLMSS_TELEMETER_TYPE */
/* Padding. Reserved for future use, set to zero. */
#define       MC_CMD_EFTEST_TLMSS_ENABLE_IN_RESERVED_OFST 5
#define       MC_CMD_EFTEST_TLMSS_ENABLE_IN_RESERVED_LEN 3
/* The set of telemeters to be enabled, one bit per telemeter. Set bit 0 to
 * enable telemter id 0, bit 1 to enable telemeter id 1, etc.
 */
#define       MC_CMD_EFTEST_TLMSS_ENABLE_IN_TELEMETER_MASK_OFST 8
#define       MC_CMD_EFTEST_TLMSS_ENABLE_IN_TELEMETER_MASK_LEN 8
#define       MC_CMD_EFTEST_TLMSS_ENABLE_IN_TELEMETER_MASK_LO_OFST 8
#define       MC_CMD_EFTEST_TLMSS_ENABLE_IN_TELEMETER_MASK_LO_LEN 4
#define       MC_CMD_EFTEST_TLMSS_ENABLE_IN_TELEMETER_MASK_LO_LBN 64
#define       MC_CMD_EFTEST_TLMSS_ENABLE_IN_TELEMETER_MASK_LO_WIDTH 32
#define       MC_CMD_EFTEST_TLMSS_ENABLE_IN_TELEMETER_MASK_HI_OFST 12
#define       MC_CMD_EFTEST_TLMSS_ENABLE_IN_TELEMETER_MASK_HI_LEN 4
#define       MC_CMD_EFTEST_TLMSS_ENABLE_IN_TELEMETER_MASK_HI_LBN 96
#define       MC_CMD_EFTEST_TLMSS_ENABLE_IN_TELEMETER_MASK_HI_WIDTH 32

/* MC_CMD_EFTEST_TLMSS_ENABLE_OUT msgresponse */
#define    MC_CMD_EFTEST_TLMSS_ENABLE_OUT_LEN 4
/* Result (0 if ok, non-zero in case of failure). */
#define       MC_CMD_EFTEST_TLMSS_ENABLE_OUT_RESULT_OFST 0
#define       MC_CMD_EFTEST_TLMSS_ENABLE_OUT_RESULT_LEN 4

/* MC_CMD_EFTEST_TLMSS_DISABLE_IN msgrequest */
#define    MC_CMD_EFTEST_TLMSS_DISABLE_IN_LEN 16
/* Identifies the test (EFTEST_TLMSS). */
#define       MC_CMD_EFTEST_TLMSS_DISABLE_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_TLMSS_DISABLE_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_TLMSS_DISABLE_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_TLMSS_DISABLE_IN_EFTEST_OP_LEN 1
/* enum: Build a telemeter qualifying event filter specification from a
 * collection of input bus signal and field filter specifications.
 */
#define          MC_CMD_EFTEST_TLMSS_DISABLE_IN_EFTEST_TLMSS_CONFIGURE_FILTER 0x0
/* enum: Configure a telemeter. */
#define          MC_CMD_EFTEST_TLMSS_DISABLE_IN_EFTEST_TLMSS_CONFIGURE 0x1
/* enum: Unconfigure telemeter, releasing any resources associated with its
 * configuration.
 */
#define          MC_CMD_EFTEST_TLMSS_DISABLE_IN_EFTEST_TLMSS_UNCONFIGURE 0x2
/* enum: Enable telemeters by taking them out of reset. */
#define          MC_CMD_EFTEST_TLMSS_DISABLE_IN_EFTEST_TLMSS_ENABLE 0x3
/* enum: Disable telemeters by putting them into reset. */
#define          MC_CMD_EFTEST_TLMSS_DISABLE_IN_EFTEST_TLMSS_DISABLE 0x4
/* enum: Manually trigger telemeters to start via their CSR interface. */
#define          MC_CMD_EFTEST_TLMSS_DISABLE_IN_EFTEST_TLMSS_START 0x5
/* enum: Manually trigger telemeters to stop via their CSR interface. */
#define          MC_CMD_EFTEST_TLMSS_DISABLE_IN_EFTEST_TLMSS_STOP 0x6
/* enum: Read state and counter values from telemeters. */
#define          MC_CMD_EFTEST_TLMSS_DISABLE_IN_EFTEST_TLMSS_READ 0x7
/* Padding. Reserved for future use, set to zero. */
#define       MC_CMD_EFTEST_TLMSS_DISABLE_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_TLMSS_DISABLE_IN_EFTEST_OP_RSVD_LEN 2
/* Telemeter type. */
#define       MC_CMD_EFTEST_TLMSS_DISABLE_IN_TELEMETER_TYPE_OFST 4
#define       MC_CMD_EFTEST_TLMSS_DISABLE_IN_TELEMETER_TYPE_LEN 1
/*            Enum values, see field(s): */
/*               TLMSS_TELEMETER_TYPE */
/* Padding. Reserved for future use, set to zero. */
#define       MC_CMD_EFTEST_TLMSS_DISABLE_IN_RESERVED_OFST 5
#define       MC_CMD_EFTEST_TLMSS_DISABLE_IN_RESERVED_LEN 3
/* The set of telemeters to be disabled, one bit per telemeter. Set bit 0 to
 * disable telemter id 0, bit 1 to disable telemeter id 1, etc.
 */
#define       MC_CMD_EFTEST_TLMSS_DISABLE_IN_TELEMETER_MASK_OFST 8
#define       MC_CMD_EFTEST_TLMSS_DISABLE_IN_TELEMETER_MASK_LEN 8
#define       MC_CMD_EFTEST_TLMSS_DISABLE_IN_TELEMETER_MASK_LO_OFST 8
#define       MC_CMD_EFTEST_TLMSS_DISABLE_IN_TELEMETER_MASK_LO_LEN 4
#define       MC_CMD_EFTEST_TLMSS_DISABLE_IN_TELEMETER_MASK_LO_LBN 64
#define       MC_CMD_EFTEST_TLMSS_DISABLE_IN_TELEMETER_MASK_LO_WIDTH 32
#define       MC_CMD_EFTEST_TLMSS_DISABLE_IN_TELEMETER_MASK_HI_OFST 12
#define       MC_CMD_EFTEST_TLMSS_DISABLE_IN_TELEMETER_MASK_HI_LEN 4
#define       MC_CMD_EFTEST_TLMSS_DISABLE_IN_TELEMETER_MASK_HI_LBN 96
#define       MC_CMD_EFTEST_TLMSS_DISABLE_IN_TELEMETER_MASK_HI_WIDTH 32

/* MC_CMD_EFTEST_TLMSS_DISABLE_OUT msgresponse */
#define    MC_CMD_EFTEST_TLMSS_DISABLE_OUT_LEN 4
/* Result (0 if ok, non-zero in case of failure). */
#define       MC_CMD_EFTEST_TLMSS_DISABLE_OUT_RESULT_OFST 0
#define       MC_CMD_EFTEST_TLMSS_DISABLE_OUT_RESULT_LEN 4

/* MC_CMD_EFTEST_TLMSS_START_IN msgrequest */
#define    MC_CMD_EFTEST_TLMSS_START_IN_LEN 16
/* Identifies the test (EFTEST_TLMSS). */
#define       MC_CMD_EFTEST_TLMSS_START_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_TLMSS_START_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_TLMSS_START_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_TLMSS_START_IN_EFTEST_OP_LEN 1
/* enum: Build a telemeter qualifying event filter specification from a
 * collection of input bus signal and field filter specifications.
 */
#define          MC_CMD_EFTEST_TLMSS_START_IN_EFTEST_TLMSS_CONFIGURE_FILTER 0x0
/* enum: Configure a telemeter. */
#define          MC_CMD_EFTEST_TLMSS_START_IN_EFTEST_TLMSS_CONFIGURE 0x1
/* enum: Unconfigure telemeter, releasing any resources associated with its
 * configuration.
 */
#define          MC_CMD_EFTEST_TLMSS_START_IN_EFTEST_TLMSS_UNCONFIGURE 0x2
/* enum: Enable telemeters by taking them out of reset. */
#define          MC_CMD_EFTEST_TLMSS_START_IN_EFTEST_TLMSS_ENABLE 0x3
/* enum: Disable telemeters by putting them into reset. */
#define          MC_CMD_EFTEST_TLMSS_START_IN_EFTEST_TLMSS_DISABLE 0x4
/* enum: Manually trigger telemeters to start via their CSR interface. */
#define          MC_CMD_EFTEST_TLMSS_START_IN_EFTEST_TLMSS_START 0x5
/* enum: Manually trigger telemeters to stop via their CSR interface. */
#define          MC_CMD_EFTEST_TLMSS_START_IN_EFTEST_TLMSS_STOP 0x6
/* enum: Read state and counter values from telemeters. */
#define          MC_CMD_EFTEST_TLMSS_START_IN_EFTEST_TLMSS_READ 0x7
/* Padding. Reserved for future use, set to zero. */
#define       MC_CMD_EFTEST_TLMSS_START_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_TLMSS_START_IN_EFTEST_OP_RSVD_LEN 2
/* Telemeter type. */
#define       MC_CMD_EFTEST_TLMSS_START_IN_TELEMETER_TYPE_OFST 4
#define       MC_CMD_EFTEST_TLMSS_START_IN_TELEMETER_TYPE_LEN 1
/*            Enum values, see field(s): */
/*               TLMSS_TELEMETER_TYPE */
/* Padding. Reserved for future use, set to zero. */
#define       MC_CMD_EFTEST_TLMSS_START_IN_RESERVED_OFST 5
#define       MC_CMD_EFTEST_TLMSS_START_IN_RESERVED_LEN 3
/* The set of telemeters to be started, one bit per telemeter. Set bit 0 to
 * start telemter id 0, bit 1 to start telemeter id 1, etc.
 */
#define       MC_CMD_EFTEST_TLMSS_START_IN_TELEMETER_MASK_OFST 8
#define       MC_CMD_EFTEST_TLMSS_START_IN_TELEMETER_MASK_LEN 8
#define       MC_CMD_EFTEST_TLMSS_START_IN_TELEMETER_MASK_LO_OFST 8
#define       MC_CMD_EFTEST_TLMSS_START_IN_TELEMETER_MASK_LO_LEN 4
#define       MC_CMD_EFTEST_TLMSS_START_IN_TELEMETER_MASK_LO_LBN 64
#define       MC_CMD_EFTEST_TLMSS_START_IN_TELEMETER_MASK_LO_WIDTH 32
#define       MC_CMD_EFTEST_TLMSS_START_IN_TELEMETER_MASK_HI_OFST 12
#define       MC_CMD_EFTEST_TLMSS_START_IN_TELEMETER_MASK_HI_LEN 4
#define       MC_CMD_EFTEST_TLMSS_START_IN_TELEMETER_MASK_HI_LBN 96
#define       MC_CMD_EFTEST_TLMSS_START_IN_TELEMETER_MASK_HI_WIDTH 32

/* MC_CMD_EFTEST_TLMSS_START_OUT msgresponse */
#define    MC_CMD_EFTEST_TLMSS_START_OUT_LEN 4
/* Result (0 if ok, non-zero in case of failure). */
#define       MC_CMD_EFTEST_TLMSS_START_OUT_RESULT_OFST 0
#define       MC_CMD_EFTEST_TLMSS_START_OUT_RESULT_LEN 4

/* MC_CMD_EFTEST_TLMSS_STOP_IN msgrequest */
#define    MC_CMD_EFTEST_TLMSS_STOP_IN_LEN 16
/* Identifies the test (EFTEST_TLMSS). */
#define       MC_CMD_EFTEST_TLMSS_STOP_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_TLMSS_STOP_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_TLMSS_STOP_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_TLMSS_STOP_IN_EFTEST_OP_LEN 1
/* enum: Build a telemeter qualifying event filter specification from a
 * collection of input bus signal and field filter specifications.
 */
#define          MC_CMD_EFTEST_TLMSS_STOP_IN_EFTEST_TLMSS_CONFIGURE_FILTER 0x0
/* enum: Configure a telemeter. */
#define          MC_CMD_EFTEST_TLMSS_STOP_IN_EFTEST_TLMSS_CONFIGURE 0x1
/* enum: Unconfigure telemeter, releasing any resources associated with its
 * configuration.
 */
#define          MC_CMD_EFTEST_TLMSS_STOP_IN_EFTEST_TLMSS_UNCONFIGURE 0x2
/* enum: Enable telemeters by taking them out of reset. */
#define          MC_CMD_EFTEST_TLMSS_STOP_IN_EFTEST_TLMSS_ENABLE 0x3
/* enum: Disable telemeters by putting them into reset. */
#define          MC_CMD_EFTEST_TLMSS_STOP_IN_EFTEST_TLMSS_DISABLE 0x4
/* enum: Manually trigger telemeters to start via their CSR interface. */
#define          MC_CMD_EFTEST_TLMSS_STOP_IN_EFTEST_TLMSS_START 0x5
/* enum: Manually trigger telemeters to stop via their CSR interface. */
#define          MC_CMD_EFTEST_TLMSS_STOP_IN_EFTEST_TLMSS_STOP 0x6
/* enum: Read state and counter values from telemeters. */
#define          MC_CMD_EFTEST_TLMSS_STOP_IN_EFTEST_TLMSS_READ 0x7
/* Padding. Reserved for future use, set to zero. */
#define       MC_CMD_EFTEST_TLMSS_STOP_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_TLMSS_STOP_IN_EFTEST_OP_RSVD_LEN 2
/* Telemeter type. */
#define       MC_CMD_EFTEST_TLMSS_STOP_IN_TELEMETER_TYPE_OFST 4
#define       MC_CMD_EFTEST_TLMSS_STOP_IN_TELEMETER_TYPE_LEN 1
/*            Enum values, see field(s): */
/*               TLMSS_TELEMETER_TYPE */
/* Padding. Reserved for future use, set to zero. */
#define       MC_CMD_EFTEST_TLMSS_STOP_IN_RESERVED_OFST 5
#define       MC_CMD_EFTEST_TLMSS_STOP_IN_RESERVED_LEN 3
/* The set of telemeters to be stopped, one bit per telemeter. Set bit 0 to
 * stop telemter id 0, bit 1 to stop telemeter id 1, etc.
 */
#define       MC_CMD_EFTEST_TLMSS_STOP_IN_TELEMETER_MASK_OFST 8
#define       MC_CMD_EFTEST_TLMSS_STOP_IN_TELEMETER_MASK_LEN 8
#define       MC_CMD_EFTEST_TLMSS_STOP_IN_TELEMETER_MASK_LO_OFST 8
#define       MC_CMD_EFTEST_TLMSS_STOP_IN_TELEMETER_MASK_LO_LEN 4
#define       MC_CMD_EFTEST_TLMSS_STOP_IN_TELEMETER_MASK_LO_LBN 64
#define       MC_CMD_EFTEST_TLMSS_STOP_IN_TELEMETER_MASK_LO_WIDTH 32
#define       MC_CMD_EFTEST_TLMSS_STOP_IN_TELEMETER_MASK_HI_OFST 12
#define       MC_CMD_EFTEST_TLMSS_STOP_IN_TELEMETER_MASK_HI_LEN 4
#define       MC_CMD_EFTEST_TLMSS_STOP_IN_TELEMETER_MASK_HI_LBN 96
#define       MC_CMD_EFTEST_TLMSS_STOP_IN_TELEMETER_MASK_HI_WIDTH 32

/* MC_CMD_EFTEST_TLMSS_STOP_OUT msgresponse */
#define    MC_CMD_EFTEST_TLMSS_STOP_OUT_LEN 4
/* Result (0 if ok, non-zero in case of failure). */
#define       MC_CMD_EFTEST_TLMSS_STOP_OUT_RESULT_OFST 0
#define       MC_CMD_EFTEST_TLMSS_STOP_OUT_RESULT_LEN 4

/* MC_CMD_EFTEST_TLMSS_READ_IN msgrequest */
#define    MC_CMD_EFTEST_TLMSS_READ_IN_LEN 16
/* Identifies the test (EFTEST_TLMSS). */
#define       MC_CMD_EFTEST_TLMSS_READ_IN_EFTEST_ID_OFST 0
#define       MC_CMD_EFTEST_TLMSS_READ_IN_EFTEST_ID_LEN 1
/* The operation requested. */
#define       MC_CMD_EFTEST_TLMSS_READ_IN_EFTEST_OP_OFST 1
#define       MC_CMD_EFTEST_TLMSS_READ_IN_EFTEST_OP_LEN 1
/* enum: Build a telemeter qualifying event filter specification from a
 * collection of input bus signal and field filter specifications.
 */
#define          MC_CMD_EFTEST_TLMSS_READ_IN_EFTEST_TLMSS_CONFIGURE_FILTER 0x0
/* enum: Configure a telemeter. */
#define          MC_CMD_EFTEST_TLMSS_READ_IN_EFTEST_TLMSS_CONFIGURE 0x1
/* enum: Unconfigure telemeter, releasing any resources associated with its
 * configuration.
 */
#define          MC_CMD_EFTEST_TLMSS_READ_IN_EFTEST_TLMSS_UNCONFIGURE 0x2
/* enum: Enable telemeters by taking them out of reset. */
#define          MC_CMD_EFTEST_TLMSS_READ_IN_EFTEST_TLMSS_ENABLE 0x3
/* enum: Disable telemeters by putting them into reset. */
#define          MC_CMD_EFTEST_TLMSS_READ_IN_EFTEST_TLMSS_DISABLE 0x4
/* enum: Manually trigger telemeters to start via their CSR interface. */
#define          MC_CMD_EFTEST_TLMSS_READ_IN_EFTEST_TLMSS_START 0x5
/* enum: Manually trigger telemeters to stop via their CSR interface. */
#define          MC_CMD_EFTEST_TLMSS_READ_IN_EFTEST_TLMSS_STOP 0x6
/* enum: Read state and counter values from telemeters. */
#define          MC_CMD_EFTEST_TLMSS_READ_IN_EFTEST_TLMSS_READ 0x7
/* Padding. Reserved for future use, set to zero. */
#define       MC_CMD_EFTEST_TLMSS_READ_IN_EFTEST_OP_RSVD_OFST 2
#define       MC_CMD_EFTEST_TLMSS_READ_IN_EFTEST_OP_RSVD_LEN 2
/* Telemeter type. */
#define       MC_CMD_EFTEST_TLMSS_READ_IN_TELEMETER_TYPE_OFST 4
#define       MC_CMD_EFTEST_TLMSS_READ_IN_TELEMETER_TYPE_LEN 1
/*            Enum values, see field(s): */
/*               TLMSS_TELEMETER_TYPE */
/* Telemeter state read mode */
#define       MC_CMD_EFTEST_TLMSS_READ_IN_READ_MODE_OFST 5
#define       MC_CMD_EFTEST_TLMSS_READ_IN_READ_MODE_LEN 1
/* enum: Read the telemeter's Live state */
#define          MC_CMD_EFTEST_TLMSS_READ_IN_READ_MODE_LIVE 0x0
/* enum: Read the telemeter's shadow state */
#define          MC_CMD_EFTEST_TLMSS_READ_IN_READ_MODE_SHADOW 0x1
/* enum: Read and clear the telemeter's shadow state */
#define          MC_CMD_EFTEST_TLMSS_READ_IN_READ_MODE_SHADOW_AND_CLEAR 0x2
/* Padding. Reserved for future use, set to zero. */
#define       MC_CMD_EFTEST_TLMSS_READ_IN_RESERVED_OFST 6
#define       MC_CMD_EFTEST_TLMSS_READ_IN_RESERVED_LEN 2
/* The set of telemeters to be read, one bit per telemeter. Set bit 0 to read
 * telemter id 0, bit 1 to read telemeter id 1, etc. This operation allows upto
 * 31 telemeters to be read in a single request, which is a limit imposed by by
 * the maximum size of the MC_CMD_EFTEST_TLMSS_READ_OUT message response.
 */
#define       MC_CMD_EFTEST_TLMSS_READ_IN_TELEMETER_MASK_OFST 8
#define       MC_CMD_EFTEST_TLMSS_READ_IN_TELEMETER_MASK_LEN 8
#define       MC_CMD_EFTEST_TLMSS_READ_IN_TELEMETER_MASK_LO_OFST 8
#define       MC_CMD_EFTEST_TLMSS_READ_IN_TELEMETER_MASK_LO_LEN 4
#define       MC_CMD_EFTEST_TLMSS_READ_IN_TELEMETER_MASK_LO_LBN 64
#define       MC_CMD_EFTEST_TLMSS_READ_IN_TELEMETER_MASK_LO_WIDTH 32
#define       MC_CMD_EFTEST_TLMSS_READ_IN_TELEMETER_MASK_HI_OFST 12
#define       MC_CMD_EFTEST_TLMSS_READ_IN_TELEMETER_MASK_HI_LEN 4
#define       MC_CMD_EFTEST_TLMSS_READ_IN_TELEMETER_MASK_HI_LBN 96
#define       MC_CMD_EFTEST_TLMSS_READ_IN_TELEMETER_MASK_HI_WIDTH 32

/* MC_CMD_EFTEST_TLMSS_READ_OUT msgresponse */
#define    MC_CMD_EFTEST_TLMSS_READ_OUT_LENMIN 4
#define    MC_CMD_EFTEST_TLMSS_READ_OUT_LENMAX 228
#define    MC_CMD_EFTEST_TLMSS_READ_OUT_LENMAX_MCDI2 996
#define    MC_CMD_EFTEST_TLMSS_READ_OUT_LEN(num) (4+32*(num))
#define    MC_CMD_EFTEST_TLMSS_READ_OUT_STATE_NUM(len) (((len)-4)/32)
/* Result (0 if ok, non-zero in case of failure). */
#define       MC_CMD_EFTEST_TLMSS_READ_OUT_RESULT_OFST 0
#define       MC_CMD_EFTEST_TLMSS_READ_OUT_RESULT_LEN 4
/* Telemeter state, an array of TLMSS_TELEMETER_STATE structures. */
#define       MC_CMD_EFTEST_TLMSS_READ_OUT_STATE_OFST 4
#define       MC_CMD_EFTEST_TLMSS_READ_OUT_STATE_LEN 32
#define       MC_CMD_EFTEST_TLMSS_READ_OUT_STATE_MINNUM 0
#define       MC_CMD_EFTEST_TLMSS_READ_OUT_STATE_MAXNUM 7
#define       MC_CMD_EFTEST_TLMSS_READ_OUT_STATE_MAXNUM_MCDI2 31

/* Other enums */
/* enum: System-on-Chip partition map for flash memory (see XN-200467-PS) */
#define          NVRAM_PARTITION_TYPE_SUC_SOC_PARTITION_MAP 0x1f06
/* enum: System-on-Chip bootloader firmware. */
#define          NVRAM_PARTITION_TYPE_SOC_BOOTLOADER 0x2000
/* enum: System-on-Chip network firmware. */
#define          NVRAM_PARTITION_TYPE_SOC_FIRMWARE 0x2001
/* enum: System-on-Chip filing system including Linux kernel. */
#define          NVRAM_PARTITION_TYPE_SOC_KERNEL 0x2002
#define          NVRAM_PARTITION_TYPE_MC_USAGE_TLV 0xff00 /* enum */
#define          NVRAM_PARTITION_TYPE_MC_USAGE_BLOCK 0xff01 /* enum */
/* enum: TLV format configuration for trusted server adapter */
#define          NVRAM_PARTITION_TYPE_TSA_CONFIG 0xff02
/* enum: rules cache for trusted server adapter */
#define          NVRAM_PARTITION_TYPE_TSA_CACHE 0xff03
/* enum: Spare partition 6 */
#define          NVRAM_PARTITION_TYPE_SPARE_6 0xff06
/* enum: Spare partition 7 */
#define          NVRAM_PARTITION_TYPE_SPARE_7 0xff07
/* enum: Spare partition 8 */
#define          NVRAM_PARTITION_TYPE_SPARE_8 0xff08
/* enum: Spare partition 9 */
#define          NVRAM_PARTITION_TYPE_SPARE_9 0xff09
/* enum: Spare partition 10 */
#define          NVRAM_PARTITION_TYPE_SPARE_10 0xff0a
/* enum: Spare partition 11 */
#define          NVRAM_PARTITION_TYPE_SPARE_11 0xff0b
/* enum: Spare partition 12 */
#define          NVRAM_PARTITION_TYPE_SPARE_12 0xff0c
/* enum: This is a CTPIO TX completion, not a timestamp */
#define          TX_TIMESTAMP_EVENT_TX_CTPIO_COMPLETION 0x11
/* enum: Width of hardware LUE counter. Provided here for snapper tests; it's
 * not something that anything other than MC firmware internals should care
 * about in production.
 */
#define          EFTEST_TSA_HW_COUNTER_WIDTH 0x1d

/* MC_CMD_ERR_PRIV enum: Private MCDI error codes that should never be returned
 * by a NIC running production firmware. These are all in the reserved range
 * 0x2000 - 0x20ff
 */
/* enum: The inter-processor link is down */
#define          MC_CMD_ERR_PRIV_ENOIPCLINK 0x2000
/* enum: The voltage control loop is not stable */
#define          MC_CMD_ERR_PRIV_VCTRL_UNSTABLE 0x2001

#endif /* _SIENA_MC_DRIVER_PCOL_PRIVATE_H */
/*! \cidoxg_end */
